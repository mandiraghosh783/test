<!DOCTYPE html><html lang=en-US-x-hixie><title>HTML 5</title><link href=/style/specification rel=stylesheet><link href=/images/icon rel=icon><style type=text/css>
   h4 + .element, h4 + div + .element { margin-top: -2.5em; padding-top: 2em; }
   h4 + p + .element { margin-top: -5em; padding-top: 4em; }
   .element { background: #EEFFEE; color: black; margin: 0 0 1em -1em; padding: 0 1em 0.25em 0.75em; border-left: solid #99FF99 0.25em; }
   .proposal { border: blue solid; padding: 1em; }
   .bad, .bad *:not(.XXX) { color: gray; border-color: gray; background: transparent; }
   table.matrix, table.matrix td { border: none; text-align: right; }
   table.matrix { margin-left: 2em; }
   .applies th > * { display: block; white-space: nowrap; }
   #updatesStatus { display: none; }
   #updatesStatus.relevant { display: block; position: fixed; right: 1em; top: 1em; padding: 0.5em; font: bold small sans-serif; min-width: 25em; width: 30%; max-width: 40em; height: auto; border: ridge 4px gray; background: #EEEEEE; color: black; }
   #configUI { position: absolute; top: 10em; right: 1em; width: 11em; font-size: small; text-align: center; }
   #configUI p { padding: 0.3em; background: #EEEEEE; color: black; border: inset thin; }
   #configUI input[type=button] { display: block; margin: auto; }
   @media print { #configUI { display: none; } }
   .rfc2119 { font-variant: small-caps; text-shadow: 0 0 0.5em yellow; position: static; }
   .rfc2119::after { position: absolute; left: 0; width: 25px; text-align: center; color: yellow; text-shadow: 0.075em 0.075em 0.2em black; }
   .rfc2119.m\ust::after { content: '\2605'; }
   .rfc2119.s\hould::after { content: '\2606'; }
   [hidden] { display: none; }
  </style><link href=status.css rel=stylesheet><script>
   function load(script) {
     var e = document.createElement('script');
     e.setAttribute('src', script);
     document.body.appendChild(e);
   }
   function init() {
     load('status.js');
     load('dfn.js');
     load('toc.js');
   }
  </script><body class=draft onload=init()>

  <div class=head>
   <p><a class=logo href=http://www.whatwg.org/ rel=home><img alt=WHATWG src=/images/logo></a></p>
   <h1>HTML 5</h1>
   <h2 class="no-num no-toc" id=draft-recommendation-&mdash;-date:-01-jan-1901>Draft Recommendation &mdash; 11 February 2009</h2>
   <p>You can take part in this work. <a href=http://www.whatwg.org/mailing-list>Join the working group's discussion list.</a></p>
   <p><strong>Web designers!</strong> We have a <a href=http://blog.whatwg.org/faq/>FAQ</a>, a <a href=http://forums.whatwg.org/>forum</a>, and a <a href=http://www.whatwg.org/mailing-list#help>help mailing list</a> for you!</p>
   <dl><dt>Multiple-page version:</dt>
    <dd><strong><a href=http://www.whatwg.org/specs/web-apps/current-work/multipage/>http://whatwg.org/html5</a></strong></dd>
    <dt>One-page version:</dt>
    <dd><a href=http://www.whatwg.org/specs/web-apps/current-work/>http://www.whatwg.org/specs/web-apps/current-work/</a></dd>
    <dt>PDF print versions:</dt>
    <dd>A4: <a href=http://www.whatwg.org/specs/web-apps/current-work/html5-a4.pdf>http://www.whatwg.org/specs/web-apps/current-work/html5-a4.pdf</a></dd>
    <dd>Letter: <a href=http://www.whatwg.org/specs/web-apps/current-work/html5-letter.pdf>http://www.whatwg.org/specs/web-apps/current-work/html5-letter.pdf</a></dd>
    <dt>Version history:</dt>
    <dd>Twitter messages (non-editorial changes only): <a href=http://twitter.com/WHATWG>http://twitter.com/WHATWG</a></dd>
    <dd>Commit-Watchers mailing list: <a href=http://lists.whatwg.org/listinfo.cgi/commit-watchers-whatwg.org>http://lists.whatwg.org/listinfo.cgi/commit-watchers-whatwg.org</a></dd>
    <dd>Interactive Web interface: <a href=http://html5.org/tools/web-apps-tracker>http://html5.org/tools/web-apps-tracker</a></dd>
    <dd>Subversion interface: <a href=http://svn.whatwg.org/>http://svn.whatwg.org/</a></dd>
    <dd>HTML diff with the last version in Subversion: <a href=index-diff>http://whatwg.org/specs/web-apps/current-work/index-diff</a></dd>
    <dt>Issues:</dt>
    <dd>To send feedback: <a href=http://www.whatwg.org/mailing-list>whatwg@whatwg.org</a></dd>
    <dd>To view and vote on feedback: <a href=http://www.whatwg.org/issues/>http://www.whatwg.org/issues/</a></dd>
    <dt>Editor:</dt>
    <dd>Ian Hickson, Google, ian@hixie.ch</dd>
   </dl><p class=copyright>&copy; Copyright 2004-2008 Apple Computer, Inc.,
   Mozilla Foundation, and Opera Software ASA.</p>
   <p class=copyright>You are granted a license to use, reproduce
   and create derivative works of this document.</p>
  </div>

  <hr><h2 class="no-num no-toc" id=abstract>Abstract</h2>

  <p>This specification evolves HTML and its related APIs to ease the
  authoring of Web-based applications. Additions include context
  menus, a direct-mode graphics canvas, a full duplex client-server
  communication channel, more semantics, audio and video, various
  features for offline Web applications, sandboxed iframes, and scoped
  styling. Heavy emphasis is placed on keeping the language backwards
  compatible with existing legacy user agents and on keeping user
  agents backwards compatible with existing legacy documents.</p>


  <h2 class="no-num no-toc" id=status>Status of this document</h2>

  <p><strong>This is a work in progress!</strong> This document is
  changing on a daily if not hourly basis in response to comments and
  as a general part of its development process. Comments are very
  welcome, please send them to <a href=mailto:whatwg@whatwg.org>whatwg@whatwg.org</a>. Thank
  you.</p>

  <p>The current focus is in responding to the <a href=http://www.whatwg.org/issues/>outstanding
  feedback</a>. (There is <a href=http://www.whatwg.org/issues/data.html>a chart</a> showing
  current progress.)</p>

  <p>Implementors should be aware that this specification is not
  stable. <strong>Implementors who are not taking part in the
  discussions are likely to find the specification changing out from
  under them in incompatible ways.</strong> Vendors interested in
  implementing this specification before it eventually reaches the
  call for implementations should join the <a href=/mailing-list>WHATWG mailing list</a> and take part in the
  discussions.</p>

  <p>This specification is also being produced by the <a href=http://www.w3.org/html/wg>W3C HTML WG</a>. The two
  specifications are identical from the table of contents onwards.</p>

  <p>This specification is intended to replace (be the new version of)
  what was previously the HTML4, XHTML 1.x, and DOM2 HTML
  specifications.</p>


  <script>
   function getCookie(name) {
     var cookies = document.cookie.split("; ");
     for (var index = 0; index < cookies.length; index++) {
       var data = cookies[index].split("=");
       if (data[0] == name)
         return unescape(data[1]);
     }
     return null;
   }
   var current_revision = "r" + "$Revision$".substr(11);
   current_revision = current_revision.substr(0, current_revision.length - 2);
   var last_known_revision = current_revision;
   function getRemoteString(url, callback) {
     var x = new XMLHttpRequest();
     x.open('GET', url + "?" + new Date());
     x.onreadystatechange = function () {
       if (x.readyState == 4) {
         if (x.status == 200)
           callback(x.responseText);
         else
           throw 'network error ' + x.status + ': "' + x.statusText + '" while loading ' + url;
       }
     };
     x.send(null);
   }
   function doUpdate() {
     getRemoteString('revision.dat', function (data) {
       if (data != last_known_revision) {
         getRemoteString('revision-message.dat', function (message) {
           last_known_revision = data;
           var status = document.getElementById('updatesStatus');
           status.textContent = 'This specification has been updated. You are reading ' + current_revision + ' but the latest revision is ' + data + ' ("' +
                                message + '") ';
           var a = document.createElement('a');
           a.href = '';
           a.onclick = function () { location.reload(); return false; };
           a.textContent = "Reload";
           status.appendChild(a);
           status.appendChild(document.createTextNode('. '));
           var d = document.createElement('a');
           d.href = 'http://html5.org/tools/web-apps-tracker?from=' + current_revision.substr(1) + '&to=' + data.substr(1);
           d.textContent = "Diffs";
           status.appendChild(d);
           status.appendChild(document.createTextNode('. '));
           var x = document.createElement('a');
           x.href = '';
           x.onclick = function () { status.textContent = ''; status.className = ''; return false; };
           x.textContent = "Close";
           status.appendChild(x);
           status.appendChild(document.createTextNode('. '));
           status.className = 'relevant';
         });
       }
     });
   }
   var updater;
   function configureUpdates(on) {
     var date = new Date();
     date.setFullYear(date.getFullYear() + 1);
     document.cookie = 'updatesEnabled=' + encodeURIComponent(on?'1':'0') + '; expires=' + date.toGMTString();
     if (updater && !on)
       clearInterval(updater);
     if (!updater && on)
       updater = setInterval(doUpdate, 30000);
     if (on)
       doUpdate();
   }
  </script><div id=configUI><p id=updatesUI><label><input id=updatesEnabled onchange=configureUpdates(this.checked) type=checkbox> Watch
  for updates</label></div>
  <p id=updatesStatus></p>

  <script>
   if (getCookie('updatesEnabled') == '1') {
     document.getElementById('updatesEnabled').checked = true;
     configureUpdates(true);
   }
  </script><h3 class="no-num no-toc" id=stability-0>Stability</h3>

  <p>Different parts of this specification are at different levels of
  maturity.</p>

  <div id=stability></div>

  <p class=XXX>Some of the more major known issues are marked
  like this. There are many other issues that have been raised as
  well; the issues given in this document are not the only known
  issues! Also, firing of events needs to be unified (right now some
  bubble, some don't, they all use different text to fire events,
  etc).</p>


  <h2 class="no-num no-toc" id=contents>Table of contents</h2>
  
<!--begin-toc-->
<ol class=toc>
 <li><a href=#introduction><span class=secno>1 </span>Introduction</a>
  <ol>
   <li><a href=#background><span class=secno>1.1 </span>Background</a></li>
   <li><a href=#audience><span class=secno>1.2 </span>Audience</a></li>
   <li><a href=#scope><span class=secno>1.3 </span>Scope</a></li>
   <li><a href=#history-0><span class=secno>1.4 </span>History</a></li>
   <li><a href=#relationships-to-other-specifications><span class=secno>1.5 </span>Relationships to other specifications</a>
    <ol>
     <li><a href=#relationship-to-html-4.01-and-dom2-html><span class=secno>1.5.1 </span>Relationship to HTML 4.01 and DOM2 HTML</a></li>
     <li><a href=#relationship-to-xhtml-1.x><span class=secno>1.5.2 </span>Relationship to XHTML 1.x</a></li>
     <li><a href=#relationship-to-xhtml2-and-xforms><span class=secno>1.5.3 </span>Relationship to XHTML2 and XForms</a></li>
     <li><a href=#relationship-to-flash,-silverlight,-xul-and-similar-proprietary-languages><span class=secno>1.5.4 </span>Relationship to Flash, Silverlight, XUL <!-- alphabetical -->
  and similar proprietary languages</a></ol></li>
   <li><a href=#html-vs-xhtml><span class=secno>1.6 </span>HTML vs XHTML</a></li>
   <li><a href=#structure-of-this-specification><span class=secno>1.7 </span>Structure of this specification</a>
    <ol>
     <li><a href=#how-to-read-this-specification><span class=secno>1.7.1 </span>How to read this specification</a></li>
     <li><a href=#typographic-conventions><span class=secno>1.7.2 </span>Typographic conventions</a></ol></ol></li>
 <li><a href=#infrastructure><span class=secno>2 </span>Common infrastructure</a>
  <ol>
   <li><a href=#terminology><span class=secno>2.1 </span>Terminology</a>
    <ol>
     <li><a href=#xml><span class=secno>2.1.1 </span>XML</a></li>
     <li><a href=#dom-trees><span class=secno>2.1.2 </span>DOM trees</a></li>
     <li><a href=#scripting-0><span class=secno>2.1.3 </span>Scripting</a></li>
     <li><a href=#plugins><span class=secno>2.1.4 </span>Plugins</a></li>
     <li><a href=#character-encodings><span class=secno>2.1.5 </span>Character encodings</a></ol></li>
   <li><a href=#conformance-requirements><span class=secno>2.2 </span>Conformance requirements</a>
    <ol>
     <li><a href=#dependencies><span class=secno>2.2.1 </span>Dependencies</a></li>
     <li><a href=#features-defined-in-other-specifications><span class=secno>2.2.2 </span>Features defined in other specifications</a></li>
     <li><a href=#common-conformance-requirements-for-apis-exposed-to-javascript><span class=secno>2.2.3 </span>Common conformance requirements for APIs exposed to
  JavaScript</a></ol></li>
   <li><a href=#case-sensitivity-and-string-comparison><span class=secno>2.3 </span>Case-sensitivity and string comparison</a></li>
   <li><a href=#common-microsyntaxes><span class=secno>2.4 </span>Common microsyntaxes</a>
    <ol>
     <li><a href=#common-parser-idioms><span class=secno>2.4.1 </span>Common parser idioms</a></li>
     <li><a href=#boolean-attributes><span class=secno>2.4.2 </span>Boolean attributes</a></li>
     <li><a href=#numbers><span class=secno>2.4.3 </span>Numbers</a>
      <ol>
       <li><a href=#non-negative-integers><span class=secno>2.4.3.1 </span>Non-negative integers</a></li>
       <li><a href=#signed-integers><span class=secno>2.4.3.2 </span>Signed integers</a></li>
       <li><a href=#real-numbers><span class=secno>2.4.3.3 </span>Real numbers</a></li>
       <li><a href=#ratios><span class=secno>2.4.3.4 </span>Ratios</a></li>
       <li><a href=#percentages-and-dimensions><span class=secno>2.4.3.5 </span>Percentages and lengths</a></li>
       <li><a href=#lists-of-integers><span class=secno>2.4.3.6 </span>Lists of integers</a></li>
       <li><a href=#lists-of-dimensions><span class=secno>2.4.3.7 </span>Lists of dimensions</a></ol></li>
     <li><a href=#dates-and-times><span class=secno>2.4.4 </span>Dates and times</a>
      <ol>
       <li><a href=#months><span class=secno>2.4.4.1 </span>Months</a></li>
       <li><a href=#dates><span class=secno>2.4.4.2 </span>Dates</a></li>
       <li><a href=#times><span class=secno>2.4.4.3 </span>Times</a></li>
       <li><a href=#local-dates-and-times><span class=secno>2.4.4.4 </span>Local dates and times</a></li>
       <li><a href=#global-dates-and-times><span class=secno>2.4.4.5 </span>Global dates and times</a></li>
       <li><a href=#weeks><span class=secno>2.4.4.6 </span>Weeks</a></li>
       <li><a href=#vaguer-moments-in-time><span class=secno>2.4.4.7 </span>Vaguer moments in time</a></ol></li>
     <li><a href=#colors><span class=secno>2.4.5 </span>Colors</a></li>
     <li><a href=#space-separated-tokens><span class=secno>2.4.6 </span>Space-separated tokens</a></li>
     <li><a href=#comma-separated-tokens><span class=secno>2.4.7 </span>Comma-separated tokens</a></li>
     <li><a href=#keywords-and-enumerated-attributes><span class=secno>2.4.8 </span>Keywords and enumerated attributes</a></li>
     <li><a href=#syntax-references><span class=secno>2.4.9 </span>References</a></ol></li>
   <li><a href=#urls><span class=secno>2.5 </span>URLs</a>
    <ol>
     <li><a href=#terminology-0><span class=secno>2.5.1 </span>Terminology</a></li>
     <li><a href=#parsing-urls><span class=secno>2.5.2 </span>Parsing URLs</a></li>
     <li><a href=#resolving-urls><span class=secno>2.5.3 </span>Resolving URLs</a></li>
     <li><a href=#dynamic-changes-to-base-urls><span class=secno>2.5.4 </span>Dynamic changes to base URLs</a></li>
     <li><a href=#interfaces-for-url-manipulation><span class=secno>2.5.5 </span>Interfaces for URL manipulation</a></ol></li>
   <li><a href=#fetching-resources><span class=secno>2.6 </span>Fetching resources</a>
    <ol>
     <li><a href=#concept-http-equivalent><span class=secno>2.6.1 </span>Protocol concepts</a></li>
     <li><a href=#encrypted-http-and-related-security-concerns><span class=secno>2.6.2 </span>Encrypted HTTP and related security concerns</a></ol></li>
   <li><a href=#content-type-sniffing><span class=secno>2.7 </span>Determining the type of a resource</a>
    <ol>
     <li><a href=#content-type><span class=secno>2.7.1 </span>Content-Type metadata</a></li>
     <li><a href=#content-type-sniffing:-web-pages><span class=secno>2.7.2 </span>Content-Type sniffing: Web pages</a></li>
     <li><a href=#content-type-sniffing:-text-or-binary><span class=secno>2.7.3 </span>Content-Type sniffing: text or binary</a></li>
     <li><a href=#content-type-sniffing:-unknown-type><span class=secno>2.7.4 </span>Content-Type sniffing: unknown type</a></li>
     <li><a href=#content-type-sniffing:-image><span class=secno>2.7.5 </span>Content-Type sniffing: image</a></li>
     <li><a href=#content-type-sniffing:-feed-or-html><span class=secno>2.7.6 </span>Content-Type sniffing: feed or HTML</a></ol></li>
   <li><a href=#common-dom-interfaces><span class=secno>2.8 </span>Common DOM interfaces</a>
    <ol>
     <li><a href=#reflecting-content-attributes-in-dom-attributes><span class=secno>2.8.1 </span>Reflecting content attributes in DOM attributes</a></li>
     <li><a href=#collections><span class=secno>2.8.2 </span>Collections</a>
      <ol>
       <li><a href=#htmlcollection><span class=secno>2.8.2.1 </span>HTMLCollection</a></li>
       <li><a href=#htmlformcontrolscollection><span class=secno>2.8.2.2 </span>HTMLFormControlsCollection</a></li>
       <li><a href=#htmloptionscollection><span class=secno>2.8.2.3 </span>HTMLOptionsCollection</a></ol></li>
     <li><a href=#domtokenlist><span class=secno>2.8.3 </span>DOMTokenList</a></li>
     <li><a href=#safe-passing-of-structured-data><span class=secno>2.8.4 </span>Safe passing of structured data</a></li>
     <li><a href=#domstringmap><span class=secno>2.8.5 </span>DOMStringMap</a></li>
     <li><a href=#dom-feature-strings><span class=secno>2.8.6 </span>DOM feature strings</a></li>
     <li><a href=#exceptions><span class=secno>2.8.7 </span>Exceptions</a></li>
     <li><a href=#garbage-collection><span class=secno>2.8.8 </span>Garbage collection</a></ol></ol></li>
 <li><a href=#dom><span class=secno>3 </span>Semantics and structure of HTML documents</a>
  <ol>
   <li><a href=#semantics-intro><span class=secno>3.1 </span>Introduction</a></li>
   <li><a href=#documents><span class=secno>3.2 </span>Documents</a>
    <ol>
     <li><a href=#documents-in-the-dom><span class=secno>3.2.1 </span>Documents in the DOM</a></li>
     <li><a href=#security><span class=secno>3.2.2 </span>Security</a></li>
     <li><a href=#resource-metadata-management><span class=secno>3.2.3 </span>Resource metadata management</a></li>
     <li><a href=#dom-tree-accessors><span class=secno>3.2.4 </span>DOM tree accessors</a></ol></li>
   <li><a href=#elements><span class=secno>3.3 </span>Elements</a>
    <ol>
     <li><a href=#semantics-0><span class=secno>3.3.1 </span>Semantics</a></li>
     <li><a href=#elements-in-the-dom><span class=secno>3.3.2 </span>Elements in the DOM</a></li>
     <li><a href=#global-attributes><span class=secno>3.3.3 </span>Global attributes</a>
      <ol>
       <li><a href=#the-id-attribute><span class=secno>3.3.3.1 </span>The <code>id</code> attribute</a></li>
       <li><a href=#the-title-attribute><span class=secno>3.3.3.2 </span>The <code>title</code> attribute</a></li>
       <li><a href=#the-lang-and-xml:lang-attributes><span class=secno>3.3.3.3 </span>The <code>lang</code> and <code>xml:lang</code>
  attributes</a></li>
       <li><a href=#the-xml:base-attribute-(xml-only)><span class=secno>3.3.3.4 </span>The <code>xml:base</code>
  attribute (XML only)</a></li>
       <li><a href=#the-dir-attribute><span class=secno>3.3.3.5 </span>The <code>dir</code> attribute</a></li>
       <li><a href=#classes><span class=secno>3.3.3.6 </span>The <code>class</code> attribute</a></li>
       <li><a href=#the-style-attribute><span class=secno>3.3.3.7 </span>The <code>style</code> attribute</a></li>
       <li><a href=#embedding-custom-non-visible-data><span class=secno>3.3.3.8 </span>Embedding custom non-visible data</a></ol></ol></li>
   <li><a href=#content-models><span class=secno>3.4 </span>Content models</a>
    <ol>
     <li><a href=#kinds-of-content><span class=secno>3.4.1 </span>Kinds of content</a>
      <ol>
       <li><a href=#metadata-content><span class=secno>3.4.1.1 </span>Metadata content</a></li>
       <li><a href=#flow-content><span class=secno>3.4.1.2 </span>Flow content</a></li>
       <li><a href=#sectioning-content><span class=secno>3.4.1.3 </span>Sectioning content</a></li>
       <li><a href=#heading-content><span class=secno>3.4.1.4 </span>Heading content</a></li>
       <li><a href=#phrasing-content><span class=secno>3.4.1.5 </span>Phrasing content</a></li>
       <li><a href=#embedded-content><span class=secno>3.4.1.6 </span>Embedded content</a></li>
       <li><a href=#interactive-content><span class=secno>3.4.1.7 </span>Interactive content</a></ol></li>
     <li><a href=#transparent-content-models><span class=secno>3.4.2 </span>Transparent content models</a></ol></li>
   <li><a href=#paragraphs><span class=secno>3.5 </span>Paragraphs</a></li>
   <li><a href=#apis-in-html-documents><span class=secno>3.6 </span>APIs in HTML documents</a></li>
   <li><a href=#dynamic-markup-insertion><span class=secno>3.7 </span>Dynamic markup insertion</a>
    <ol>
     <li><a href=#controlling-the-input-stream><span class=secno>3.7.1 </span>Controlling the input stream</a></li>
     <li><a href=#document.write()><span class=secno>3.7.2 </span><code title=dom-document-write>document.write()</code></a></li>
     <li><a href=#document.writeln()><span class=secno>3.7.3 </span><code title=dom-document-writeln>document.writeln()</code></a></li>
     <li><a href=#innerhtml><span class=secno>3.7.4 </span><code title=dom-innerHTML>innerHTML</code></a></li>
     <li><a href=#outerhtml><span class=secno>3.7.5 </span><code title=dom-outerHTML>outerHTML</code></a></li>
     <li><a href=#insertadjacenthtml()><span class=secno>3.7.6 </span><code title=dom-insertAdjacentHTML>insertAdjacentHTML()</code></a></ol></ol></li>
 <li><a href=#semantics><span class=secno>4 </span>The elements of HTML</a>
  <ol>
   <li><a href=#the-root-element><span class=secno>4.1 </span>The root element</a>
    <ol>
     <li><a href=#the-html-element><span class=secno>4.1.1 </span>The <code>html</code> element</a></ol></li>
   <li><a href=#document-metadata><span class=secno>4.2 </span>Document metadata</a>
    <ol>
     <li><a href=#the-head-element><span class=secno>4.2.1 </span>The <code>head</code> element</a></li>
     <li><a href=#the-title-element><span class=secno>4.2.2 </span>The <code>title</code> element</a></li>
     <li><a href=#the-base-element><span class=secno>4.2.3 </span>The <code>base</code> element</a></li>
     <li><a href=#the-link-element><span class=secno>4.2.4 </span>The <code>link</code> element</a></li>
     <li><a href=#meta><span class=secno>4.2.5 </span>The <code>meta</code> element</a>
      <ol>
       <li><a href=#standard-metadata-names><span class=secno>4.2.5.1 </span>Standard metadata names</a></li>
       <li><a href=#other-metadata-names><span class=secno>4.2.5.2 </span>Other metadata names</a></li>
       <li><a href=#pragma-directives><span class=secno>4.2.5.3 </span>Pragma directives</a></li>
       <li><a href=#other-pragma-directives><span class=secno>4.2.5.4 </span>Other pragma directives</a></li>
       <li><a href=#charset><span class=secno>4.2.5.5 </span>Specifying the document's character encoding</a></ol></li>
     <li><a href=#the-style-element><span class=secno>4.2.6 </span>The <code>style</code> element</a></li>
     <li><a href=#styling><span class=secno>4.2.7 </span>Styling</a></ol></li>
   <li><a href=#scripting-1><span class=secno>4.3 </span>Scripting</a>
    <ol>
     <li><a href=#script><span class=secno>4.3.1 </span>The <code>script</code> element</a>
      <ol>
       <li><a href=#scriptingLanguages><span class=secno>4.3.1.1 </span>Scripting languages</a></li>
       <li><a href=#inline-documentation-for-external-scripts><span class=secno>4.3.1.2 </span>Inline documentation for external scripts</a></ol></li>
     <li><a href=#the-noscript-element><span class=secno>4.3.2 </span>The <code>noscript</code> element</a></li>
     <li><a href=#the-eventsource-element><span class=secno>4.3.3 </span>The <code>eventsource</code> element</a></ol></li>
   <li><a href=#sections><span class=secno>4.4 </span>Sections</a>
    <ol>
     <li><a href=#the-body-element><span class=secno>4.4.1 </span>The <code>body</code> element</a></li>
     <li><a href=#the-section-element><span class=secno>4.4.2 </span>The <code>section</code> element</a></li>
     <li><a href=#the-nav-element><span class=secno>4.4.3 </span>The <code>nav</code> element</a></li>
     <li><a href=#the-article-element><span class=secno>4.4.4 </span>The <code>article</code> element</a></li>
     <li><a href=#the-aside-element><span class=secno>4.4.5 </span>The <code>aside</code> element</a></li>
     <li><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements><span class=secno>4.4.6 </span>The <code>h1</code>, <code>h2</code>,
  <code>h3</code>, <code>h4</code>,
  <code>h5</code>, and <code>h6</code>
  elements</a></li>
     <li><a href=#the-header-element><span class=secno>4.4.7 </span>The <code>header</code> element</a></li>
     <li><a href=#the-footer-element><span class=secno>4.4.8 </span>The <code>footer</code> element</a></li>
     <li><a href=#the-address-element><span class=secno>4.4.9 </span>The <code>address</code> element</a></li>
     <li><a href=#headings-and-sections><span class=secno>4.4.10 </span>Headings and sections</a>
      <ol>
       <li><a href=#outlines><span class=secno>4.4.10.1 </span>Creating an outline</a></li>
       <li><a href=#distinguishing-site-wide-headings-from-page-headings><span class=secno>4.4.10.2 </span>Distinguishing site-wide headings from page headings</a></ol></ol></li>
   <li><a href=#grouping-content><span class=secno>4.5 </span>Grouping content</a>
    <ol>
     <li><a href=#the-p-element><span class=secno>4.5.1 </span>The <code>p</code> element</a></li>
     <li><a href=#the-hr-element><span class=secno>4.5.2 </span>The <code>hr</code> element</a></li>
     <li><a href=#the-br-element><span class=secno>4.5.3 </span>The <code>br</code> element</a></li>
     <li><a href=#the-pre-element><span class=secno>4.5.4 </span>The <code>pre</code> element</a></li>
     <li><a href=#the-dialog-element><span class=secno>4.5.5 </span>The <code>dialog</code> element</a></li>
     <li><a href=#the-blockquote-element><span class=secno>4.5.6 </span>The <code>blockquote</code> element</a></li>
     <li><a href=#the-ol-element><span class=secno>4.5.7 </span>The <code>ol</code> element</a></li>
     <li><a href=#the-ul-element><span class=secno>4.5.8 </span>The <code>ul</code> element</a></li>
     <li><a href=#the-li-element><span class=secno>4.5.9 </span>The <code>li</code> element</a></li>
     <li><a href=#the-dl-element><span class=secno>4.5.10 </span>The <code>dl</code> element</a></li>
     <li><a href=#the-dt-element><span class=secno>4.5.11 </span>The <code>dt</code> element</a></li>
     <li><a href=#the-dd-element><span class=secno>4.5.12 </span>The <code>dd</code> element</a></li>
     <li><a href=#common-grouping-idioms><span class=secno>4.5.13 </span>Common grouping idioms</a>
      <ol>
       <li><a href=#tag-clouds><span class=secno>4.5.13.1 </span>Tag clouds</a></ol></ol></li>
   <li><a href=#text-level-semantics><span class=secno>4.6 </span>Text-level semantics</a>
    <ol>
     <li><a href=#the-a-element><span class=secno>4.6.1 </span>The <code>a</code> element</a></li>
     <li><a href=#the-q-element><span class=secno>4.6.2 </span>The <code>q</code> element</a></li>
     <li><a href=#the-cite-element><span class=secno>4.6.3 </span>The <code>cite</code> element</a></li>
     <li><a href=#the-em-element><span class=secno>4.6.4 </span>The <code>em</code> element</a></li>
     <li><a href=#the-strong-element><span class=secno>4.6.5 </span>The <code>strong</code> element</a></li>
     <li><a href=#the-small-element><span class=secno>4.6.6 </span>The <code>small</code> element</a></li>
     <li><a href=#the-mark-element><span class=secno>4.6.7 </span>The <code>mark</code> element</a></li>
     <li><a href=#the-dfn-element><span class=secno>4.6.8 </span>The <code>dfn</code> element</a></li>
     <li><a href=#the-abbr-element><span class=secno>4.6.9 </span>The <code>abbr</code> element</a></li>
     <li><a href=#the-time-element><span class=secno>4.6.10 </span>The <code>time</code> element</a></li>
     <li><a href=#the-progress-element><span class=secno>4.6.11 </span>The <code>progress</code> element</a></li>
     <li><a href=#the-meter-element><span class=secno>4.6.12 </span>The <code>meter</code> element</a></li>
     <li><a href=#the-code-element><span class=secno>4.6.13 </span>The <code>code</code> element</a></li>
     <li><a href=#the-var-element><span class=secno>4.6.14 </span>The <code>var</code> element</a></li>
     <li><a href=#the-samp-element><span class=secno>4.6.15 </span>The <code>samp</code> element</a></li>
     <li><a href=#the-kbd-element><span class=secno>4.6.16 </span>The <code>kbd</code> element</a></li>
     <li><a href=#the-sub-and-sup-elements><span class=secno>4.6.17 </span>The <code>sub</code> and <code>sup</code> elements</a></li>
     <li><a href=#the-span-element><span class=secno>4.6.18 </span>The <code>span</code> element</a></li>
     <li><a href=#the-i-element><span class=secno>4.6.19 </span>The <code>i</code> element</a></li>
     <li><a href=#the-b-element><span class=secno>4.6.20 </span>The <code>b</code> element</a></li>
     <li><a href=#the-bdo-element><span class=secno>4.6.21 </span>The <code>bdo</code> element</a></li>
     <li><a href=#the-ruby-element><span class=secno>4.6.22 </span>The <code>ruby</code> element</a></li>
     <li><a href=#the-rt-element><span class=secno>4.6.23 </span>The <code>rt</code> element</a></li>
     <li><a href=#the-rp-element><span class=secno>4.6.24 </span>The <code>rp</code> element</a></li>
     <li><a href=#usage-summary><span class=secno>4.6.25 </span>Usage summary</a></li>
     <li><a href=#footnotes><span class=secno>4.6.26 </span>Footnotes</a></ol></li>
   <li><a href=#edits><span class=secno>4.7 </span>Edits</a>
    <ol>
     <li><a href=#the-ins-element><span class=secno>4.7.1 </span>The <code>ins</code> element</a></li>
     <li><a href=#the-del-element><span class=secno>4.7.2 </span>The <code>del</code> element</a></li>
     <li><a href=#attributes-common-to-ins-and-del-elements><span class=secno>4.7.3 </span>Attributes common to <code>ins</code> and <code>del</code> elements</a></li>
     <li><a href=#edits-and-paragraphs><span class=secno>4.7.4 </span>Edits and paragraphs</a></li>
     <li><a href=#edits-and-lists><span class=secno>4.7.5 </span>Edits and lists</a></ol></li>
   <li><a href=#embedded-content-0><span class=secno>4.8 </span>Embedded content</a>
    <ol>
     <li><a href=#the-figure-element><span class=secno>4.8.1 </span>The <code>figure</code> element</a></li>
     <li><a href=#the-img-element><span class=secno>4.8.2 </span>The <code>img</code> element</a>
      <ol>
       <li><a href=#alt><span class=secno>4.8.2.1 </span>Requirements for providing text to act as an alternative for images</a>
        <ol>
         <li><a href=#a-link-or-button-containing-nothing-but-the-image><span class=secno>4.8.2.1.1 </span>A link or button containing nothing but the image</a></li>
         <li><a href=#a-phrase-or-paragraph-with-an-alternative-graphical-representation:-charts,-diagrams,-graphs,-maps,-illustrations><span class=secno>4.8.2.1.2 </span>A phrase or paragraph with an alternative graphical representation: charts, diagrams, graphs, maps, illustrations</a></li>
         <li><a href=#a-short-phrase-or-label-with-an-alternative-graphical-representation:-icons,-logos><span class=secno>4.8.2.1.3 </span>A short phrase or label with an alternative graphical representation: icons, logos</a></li>
         <li><a href=#text-that-has-been-rendered-to-a-graphic-for-typographical-effect><span class=secno>4.8.2.1.4 </span>Text that has been rendered to a graphic for typographical effect</a></li>
         <li><a href=#a-graphical-representation-of-some-of-the-surrounding-text><span class=secno>4.8.2.1.5 </span>A graphical representation of some of the surrounding text</a></li>
         <li><a href="#a-purely-decorative-image-that-doesn't-add-any-information"><span class=secno>4.8.2.1.6 </span>A purely decorative image that doesn't add any information</a></li>
         <li><a href=#a-group-of-images-that-form-a-single-larger-picture-with-no-links><span class=secno>4.8.2.1.7 </span>A group of images that form a single larger picture with no links</a></li>
         <li><a href=#a-group-of-images-that-form-a-single-larger-picture-with-links><span class=secno>4.8.2.1.8 </span>A group of images that form a single larger picture with links</a></li>
         <li><a href=#a-key-part-of-the-content><span class=secno>4.8.2.1.9 </span>A key part of the content</a></li>
         <li><a href=#an-image-not-intended-for-the-user><span class=secno>4.8.2.1.10 </span>An image not intended for the user</a></li>
         <li><a href=#an-image-in-an-e-mail-or-document-intended-for-a-specific-person-who-is-known-to-be-able-to-view-images><span class=secno>4.8.2.1.11 </span>An image in an e-mail or document intended for a specific person who is known to be able to view images</a></li>
         <li><a href=#general-guidelines><span class=secno>4.8.2.1.12 </span>General guidelines</a></li>
         <li><a href=#guidance-for-markup-generators><span class=secno>4.8.2.1.13 </span>Guidance for markup generators</a></ol></ol></li>
     <li><a href=#the-iframe-element><span class=secno>4.8.3 </span>The <code>iframe</code> element</a></li>
     <li><a href=#the-embed-element><span class=secno>4.8.4 </span>The <code>embed</code> element</a></li>
     <li><a href=#the-object-element><span class=secno>4.8.5 </span>The <code>object</code> element</a></li>
     <li><a href=#the-param-element><span class=secno>4.8.6 </span>The <code>param</code> element</a></li>
     <li><a href=#video><span class=secno>4.8.7 </span>The <code>video</code> element</a>
      <ol>
       <li><a href=#video-and-audio-codecs-for-video-elements><span class=secno>4.8.7.1 </span>Video and audio codecs for <code>video</code> elements</a></ol></li>
     <li><a href=#audio><span class=secno>4.8.8 </span>The <code>audio</code> element</a>
      <ol>
       <li><a href=#audio-codecs-for-audio-elements><span class=secno>4.8.8.1 </span>Audio codecs for <code>audio</code> elements</a></ol></li>
     <li><a href=#the-source-element><span class=secno>4.8.9 </span>The <code>source</code> element</a></li>
     <li><a href=#media-elements><span class=secno>4.8.10 </span>Media elements</a>
      <ol>
       <li><a href=#error-codes><span class=secno>4.8.10.1 </span>Error codes</a></li>
       <li><a href=#location-of-the-media-resource><span class=secno>4.8.10.2 </span>Location of the media resource</a></li>
       <li><a href=#media-types><span class=secno>4.8.10.3 </span>Media types</a></li>
       <li><a href=#network-states><span class=secno>4.8.10.4 </span>Network states</a></li>
       <li><a href=#loading-the-media-resource><span class=secno>4.8.10.5 </span>Loading the media resource</a></li>
       <li><a href=#offsets-into-the-media-resource><span class=secno>4.8.10.6 </span>Offsets into the media resource</a></li>
       <li><a href=#the-ready-states><span class=secno>4.8.10.7 </span>The ready states</a></li>
       <li><a href=#cue-ranges><span class=secno>4.8.10.8 </span>Cue ranges</a></li>
       <li><a href=#playing-the-media-resource><span class=secno>4.8.10.9 </span>Playing the media resource</a></li>
       <li><a href=#seeking><span class=secno>4.8.10.10 </span>Seeking</a></li>
       <li><a href=#user-interface><span class=secno>4.8.10.11 </span>User interface</a></li>
       <li><a href=#time-ranges><span class=secno>4.8.10.12 </span>Time ranges</a></li>
       <li><a href=#mediaevents><span class=secno>4.8.10.13 </span>Event summary</a></li>
       <li><a href=#security-and-privacy-considerations><span class=secno>4.8.10.14 </span>Security and privacy considerations</a></ol></li>
     <li><a href=#the-canvas-element><span class=secno>4.8.11 </span>The <code>canvas</code> element</a>
      <ol>
       <li><a href=#the-2d-context><span class=secno>4.8.11.1 </span>The 2D context</a>
        <ol>
         <li><a href=#the-canvas-state><span class=secno>4.8.11.1.1 </span>The canvas state</a></li>
         <li><a href=#transformations><span class=secno>4.8.11.1.2 </span>Transformations</a></li>
         <li><a href=#compositing><span class=secno>4.8.11.1.3 </span>Compositing</a></li>
         <li><a href=#colors-and-styles><span class=secno>4.8.11.1.4 </span>Colors and styles</a></li>
         <li><a href=#line-styles><span class=secno>4.8.11.1.5 </span>Line styles</a></li>
         <li><a href=#shadows><span class=secno>4.8.11.1.6 </span>Shadows</a></li>
         <li><a href=#simple-shapes-(rectangles)><span class=secno>4.8.11.1.7 </span>Simple shapes (rectangles)</a></li>
         <li><a href=#complex-shapes-(paths)><span class=secno>4.8.11.1.8 </span>Complex shapes (paths)</a></li>
         <li><a href=#text><span class=secno>4.8.11.1.9 </span>Text</a></li>
         <li><a href=#images><span class=secno>4.8.11.1.10 </span>Images</a></li>
         <li><a href=#pixel-manipulation><span class=secno>4.8.11.1.11 </span>Pixel manipulation</a></li>
         <li><a href=#drawing-model><span class=secno>4.8.11.1.12 </span>Drawing model</a></ol></li>
       <li><a href=#color-spaces-and-color-correction><span class=secno>4.8.11.2 </span>Color spaces and color correction</a></li>
       <li><a href=#security-with-canvas-elements><span class=secno>4.8.11.3 </span>Security with <code>canvas</code> elements</a></ol></li>
     <li><a href=#the-map-element><span class=secno>4.8.12 </span>The <code>map</code> element</a></li>
     <li><a href=#the-area-element><span class=secno>4.8.13 </span>The <code>area</code> element</a></li>
     <li><a href=#image-maps><span class=secno>4.8.14 </span>Image maps</a>
      <ol>
       <li><a href=#authoring><span class=secno>4.8.14.1 </span>Authoring</a></li>
       <li><a href=#processing-model><span class=secno>4.8.14.2 </span>Processing model</a></ol></li>
     <li><a href=#mathml><span class=secno>4.8.15 </span>MathML</a></li>
     <li><a href=#svg><span class=secno>4.8.16 </span>SVG</a></li>
     <li><a href=#dimension-attributes><span class=secno>4.8.17 </span>Dimension attributes</a></ol></li>
   <li><a href=#tabular-data><span class=secno>4.9 </span>Tabular data</a>
    <ol>
     <li><a href=#table-intro><span class=secno>4.9.1 </span>Introduction</a></li>
     <li><a href=#the-table-element><span class=secno>4.9.2 </span>The <code>table</code> element</a></li>
     <li><a href=#the-caption-element><span class=secno>4.9.3 </span>The <code>caption</code> element</a></li>
     <li><a href=#the-colgroup-element><span class=secno>4.9.4 </span>The <code>colgroup</code> element</a></li>
     <li><a href=#the-col-element><span class=secno>4.9.5 </span>The <code>col</code> element</a></li>
     <li><a href=#the-tbody-element><span class=secno>4.9.6 </span>The <code>tbody</code> element</a></li>
     <li><a href=#the-thead-element><span class=secno>4.9.7 </span>The <code>thead</code> element</a></li>
     <li><a href=#the-tfoot-element><span class=secno>4.9.8 </span>The <code>tfoot</code> element</a></li>
     <li><a href=#the-tr-element><span class=secno>4.9.9 </span>The <code>tr</code> element</a></li>
     <li><a href=#the-td-element><span class=secno>4.9.10 </span>The <code>td</code> element</a></li>
     <li><a href=#the-th-element><span class=secno>4.9.11 </span>The <code>th</code> element</a></li>
     <li><a href=#attributes-common-to-td-and-th-elements><span class=secno>4.9.12 </span>Attributes common to <code>td</code> and <code>th</code> elements</a></li>
     <li><a href=#processing-model-0><span class=secno>4.9.13 </span>Processing model</a>
      <ol>
       <li><a href=#forming-a-table><span class=secno>4.9.13.1 </span>Forming a table</a></li>
       <li><a href=#header-and-data-cell-semantics><span class=secno>4.9.13.2 </span>Forming relationships between data cells and header cells</a></ol></ol></li>
   <li><a href=#forms><span class=secno>4.10 </span>Forms</a>
    <ol>
     <li><a href=#the-form-element><span class=secno>4.10.1 </span>The <code>form</code> element</a></li>
     <li><a href=#the-fieldset-element><span class=secno>4.10.2 </span>The <code>fieldset</code> element</a></li>
     <li><a href=#the-label-element><span class=secno>4.10.3 </span>The <code>label</code> element</a></li>
     <li><a href=#the-input-element><span class=secno>4.10.4 </span>The <code>input</code> element</a>
      <ol>
       <li><a href=#states-of-the-type-attribute><span class=secno>4.10.4.1 </span>States of the <code title=attr-input-type>type</code> attribute</a>
        <ol>
         <li><a href=#hidden-state><span class=secno>4.10.4.1.1 </span>Hidden state</a></li>
         <li><a href=#text-state-and-search-state><span class=secno>4.10.4.1.2 </span>Text state and Search state</a></li>
         <li><a href=#url-state><span class=secno>4.10.4.1.3 </span>URL state</a></li>
         <li><a href=#e-mail-state><span class=secno>4.10.4.1.4 </span>E-mail state</a></li>
         <li><a href=#password-state><span class=secno>4.10.4.1.5 </span>Password state</a></li>
         <li><a href=#date-and-time-state><span class=secno>4.10.4.1.6 </span>Date and Time state</a></li>
         <li><a href=#date-state><span class=secno>4.10.4.1.7 </span>Date state</a></li>
         <li><a href=#month-state><span class=secno>4.10.4.1.8 </span>Month state</a></li>
         <li><a href=#week-state><span class=secno>4.10.4.1.9 </span>Week state</a></li>
         <li><a href=#time-state><span class=secno>4.10.4.1.10 </span>Time state</a></li>
         <li><a href=#local-date-and-time-state><span class=secno>4.10.4.1.11 </span>Local Date and Time state</a></li>
         <li><a href=#number-state><span class=secno>4.10.4.1.12 </span>Number state</a></li>
         <li><a href=#range-state><span class=secno>4.10.4.1.13 </span>Range state</a></li>
         <li><a href=#color-state><span class=secno>4.10.4.1.14 </span>Color state</a></li>
         <li><a href=#checkbox-state><span class=secno>4.10.4.1.15 </span>Checkbox state</a></li>
         <li><a href=#radio-button-state><span class=secno>4.10.4.1.16 </span>Radio Button state</a></li>
         <li><a href=#file-upload-state><span class=secno>4.10.4.1.17 </span>File Upload state</a></li>
         <li><a href=#submit-button-state><span class=secno>4.10.4.1.18 </span>Submit Button state</a></li>
         <li><a href=#image-button-state><span class=secno>4.10.4.1.19 </span>Image Button state</a></li>
         <li><a href=#reset-button-state><span class=secno>4.10.4.1.20 </span>Reset Button state</a></li>
         <li><a href=#button-state><span class=secno>4.10.4.1.21 </span>Button state</a></ol></li>
       <li><a href=#common-input-element-attributes><span class=secno>4.10.4.2 </span>Common <code>input</code> element attributes</a>
        <ol>
         <li><a href=#the-autocomplete-attribute><span class=secno>4.10.4.2.1 </span>The <code title=attr-input-autocomplete>autocomplete</code> attribute</a></li>
         <li><a href=#the-list-attribute><span class=secno>4.10.4.2.2 </span>The <code title=attr-input-list>list</code> attribute</a></li>
         <li><a href=#the-readonly-attribute><span class=secno>4.10.4.2.3 </span>The <code title=attr-input-readonly>readonly</code> attribute</a></li>
         <li><a href=#the-size-attribute><span class=secno>4.10.4.2.4 </span>The <code title=attr-input-size>size</code> attribute</a></li>
         <li><a href=#the-required-attribute><span class=secno>4.10.4.2.5 </span>The <code title=attr-input-required>required</code> attribute</a></li>
         <li><a href=#the-multiple-attribute><span class=secno>4.10.4.2.6 </span>The <code title=attr-input-multiple>multiple</code> attribute</a></li>
         <li><a href=#the-maxlength-attribute><span class=secno>4.10.4.2.7 </span>The <code title=attr-input-maxlength>maxlength</code> attribute</a></li>
         <li><a href=#the-pattern-attribute><span class=secno>4.10.4.2.8 </span>The <code title=attr-input-pattern>pattern</code> attribute</a></li>
         <li><a href=#the-min-and-max-attributes><span class=secno>4.10.4.2.9 </span>The <code title=attr-input-min>min</code> and <code title=attr-input-max>max</code> attributes</a></li>
         <li><a href=#the-step-attribute><span class=secno>4.10.4.2.10 </span>The <code title=attr-input-step>step</code> attribute</a></li>
         <li><a href=#the-placeholder-attribute><span class=secno>4.10.4.2.11 </span>The <code title=attr-input-placeholder>placeholder</code> attribute</a></ol></li>
       <li><a href=#common-input-element-apis><span class=secno>4.10.4.3 </span>Common <code>input</code> element APIs</a></li>
       <li><a href=#common-event-behaviors><span class=secno>4.10.4.4 </span>Common event behaviors</a></ol></li>
     <li><a href=#the-button-element><span class=secno>4.10.5 </span>The <code>button</code> element</a></li>
     <li><a href=#the-select-element><span class=secno>4.10.6 </span>The <code>select</code> element</a></li>
     <li><a href=#the-datalist-element><span class=secno>4.10.7 </span>The <code>datalist</code> element</a></li>
     <li><a href=#the-optgroup-element><span class=secno>4.10.8 </span>The <code>optgroup</code> element</a></li>
     <li><a href=#the-option-element><span class=secno>4.10.9 </span>The <code>option</code> element</a></li>
     <li><a href=#the-textarea-element><span class=secno>4.10.10 </span>The <code>textarea</code> element</a></li>
     <li><a href=#the-output-element><span class=secno>4.10.11 </span>The <code>output</code> element</a></li>
     <li><a href=#association-of-controls-and-forms><span class=secno>4.10.12 </span>Association of controls and forms</a></li>
     <li><a href=#attributes-common-to-form-controls><span class=secno>4.10.13 </span>Attributes common to form controls</a>
      <ol>
       <li><a href=#naming-form-controls><span class=secno>4.10.13.1 </span>Naming form controls</a></li>
       <li><a href=#enabling-and-disabling-form-controls><span class=secno>4.10.13.2 </span>Enabling and disabling form controls</a></li>
       <li><a href="#a-form-control's-value"><span class=secno>4.10.13.3 </span>A form control's value</a></li>
       <li><a href=#autofocusing-a-form-control><span class=secno>4.10.13.4 </span>Autofocusing a form control</a></li>
       <li><a href=#limiting-user-input-length><span class=secno>4.10.13.5 </span>Limiting user input length</a></li>
       <li><a href=#form-submission><span class=secno>4.10.13.6 </span>Form submission</a></ol></li>
     <li><a href=#constraints><span class=secno>4.10.14 </span>Constraints</a>
      <ol>
       <li><a href=#definitions><span class=secno>4.10.14.1 </span>Definitions</a></li>
       <li><a href=#constraint-validation><span class=secno>4.10.14.2 </span>Constraint validation</a></li>
       <li><a href=#the-constraint-validation-api><span class=secno>4.10.14.3 </span>The constraint validation API</a></li>
       <li><a href=#security-0><span class=secno>4.10.14.4 </span>Security</a></ol></li>
     <li><a href=#form-submission-0><span class=secno>4.10.15 </span>Form submission</a>
      <ol>
       <li><a href=#implicit-submission><span class=secno>4.10.15.1 </span>Implicit submission</a></li>
       <li><a href=#form-submission-algorithm><span class=secno>4.10.15.2 </span>Form submission algorithm</a></li>
       <li><a href=#url-encoded-form-data><span class=secno>4.10.15.3 </span>URL-encoded form data</a></li>
       <li><a href=#multipart-form-data><span class=secno>4.10.15.4 </span>Multipart form data</a></li>
       <li><a href=#plain-text-form-data><span class=secno>4.10.15.5 </span>Plain text form data</a></ol></li>
     <li><a href=#resetting-a-form><span class=secno>4.10.16 </span>Resetting a form</a></li>
     <li><a href=#event-dispatch><span class=secno>4.10.17 </span>Event dispatch</a></ol></li>
   <li><a href=#interactive-elements><span class=secno>4.11 </span>Interactive elements</a>
    <ol>
     <li><a href=#the-details-element><span class=secno>4.11.1 </span>The <code>details</code> element</a></li>
     <li><a href=#datagrid><span class=secno>4.11.2 </span>The <code>datagrid</code> element</a>
      <ol>
       <li><a href=#the-datagrid-data-model><span class=secno>4.11.2.1 </span>The <code>datagrid</code> data model</a></li>
       <li><a href=#how-rows-are-identified><span class=secno>4.11.2.2 </span>How rows are identified</a></li>
       <li><a href=#the-data-provider-interface><span class=secno>4.11.2.3 </span>The data provider interface</a></li>
       <li><a href=#the-default-data-provider><span class=secno>4.11.2.4 </span>The default data provider</a>
        <ol>
         <li><a href=#commonDefaultDataGridMethodDefinitions><span class=secno>4.11.2.4.1 </span>Common default data
  provider method definitions for cells</a></ol></li>
       <li><a href=#populating-the-datagrid-element><span class=secno>4.11.2.5 </span>Populating the <code>datagrid</code> element</a></li>
       <li><a href=#updating-the-datagrid><span class=secno>4.11.2.6 </span>Updating the <code>datagrid</code></a></li>
       <li><a href=#requirements-for-interactive-user-agents><span class=secno>4.11.2.7 </span>Requirements for interactive user agents</a></li>
       <li><a href=#the-selection><span class=secno>4.11.2.8 </span>The selection</a></li>
       <li><a href=#columns-and-captions><span class=secno>4.11.2.9 </span>Columns and captions</a></ol></li>
     <li><a href=#the-command><span class=secno>4.11.3 </span>The <code>command</code> element</a></li>
     <li><a href=#the-bb-element><span class=secno>4.11.4 </span>The <code>bb</code> element</a>
      <ol>
       <li><a href=#browser-button-types><span class=secno>4.11.4.1 </span>Browser button types</a>
        <ol>
         <li><a href=#the-make-application-state><span class=secno>4.11.4.1.1 </span>The <i>make application</i> state</a></ol></ol></li>
     <li><a href=#menus><span class=secno>4.11.5 </span>The <code>menu</code> element</a>
      <ol>
       <li><a href=#menus-intro><span class=secno>4.11.5.1 </span>Introduction</a></li>
       <li><a href=#building-menus-and-tool-bars><span class=secno>4.11.5.2 </span>Building menus and tool bars</a></li>
       <li><a href=#context-menus><span class=secno>4.11.5.3 </span>Context menus</a></li>
       <li><a href=#tool-bars><span class=secno>4.11.5.4 </span>Tool bars</a></ol></li>
     <li><a href=#commands><span class=secno>4.11.6 </span>Commands</a>
      <ol>
       <li><a href=#using-the-a-element-to-define-a-command><span class=secno>4.11.6.1 </span>Using the <code>a</code> element to define a command</a></li>
       <li><a href=#using-the-button-element-to-define-a-command><span class=secno>4.11.6.2 </span>Using the <code>button</code> element to define a command</a></li>
       <li><a href=#using-the-input-element-to-define-a-command><span class=secno>4.11.6.3 </span>Using the <code>input</code> element to define a command</a></li>
       <li><a href=#using-the-option-element-to-define-a-command><span class=secno>4.11.6.4 </span>Using the <code>option</code> element to define a command</a></li>
       <li><a href=#using-the-command-element-to-define-a-command><span class=secno>4.11.6.5 </span>Using the <code>command</code> element to define
  a command</a></li>
       <li><a href=#using-the-bb-element-to-define-a-command><span class=secno>4.11.6.6 </span>Using the <code>bb</code> element to define a command</a></ol></ol></li>
   <li><a href=#miscellaneous-elements><span class=secno>4.12 </span>Miscellaneous elements</a>
    <ol>
     <li><a href=#the-legend-element><span class=secno>4.12.1 </span>The <code>legend</code> element</a></li>
     <li><a href=#the-div-element><span class=secno>4.12.2 </span>The <code>div</code> element</a></ol></li>
   <li><a href=#matching-html-elements-using-selectors><span class=secno>4.13 </span>Matching HTML elements using selectors</a></ol></li>
 <li><a href=#browsers><span class=secno>5 </span>Web browsers</a>
  <ol>
   <li><a href=#windows><span class=secno>5.1 </span>Browsing contexts</a>
    <ol>
     <li><a href=#nested-browsing-contexts><span class=secno>5.1.1 </span>Nested browsing contexts</a>
      <ol>
       <li><a href=#navigating-nested-browsing-contexts-in-the-dom><span class=secno>5.1.1.1 </span>Navigating nested browsing contexts in the DOM</a></ol></li>
     <li><a href=#auxiliary-browsing-contexts><span class=secno>5.1.2 </span>Auxiliary browsing contexts</a>
      <ol>
       <li><a href=#navigating-auxiliary-browsing-contexts-in-the-dom><span class=secno>5.1.2.1 </span>Navigating auxiliary browsing contexts in the DOM</a></ol></li>
     <li><a href=#secondary-browsing-contexts><span class=secno>5.1.3 </span>Secondary browsing contexts</a></li>
     <li><a href=#security-1><span class=secno>5.1.4 </span>Security</a></li>
     <li><a href=#groupings-of-browsing-contexts><span class=secno>5.1.5 </span>Groupings of browsing contexts</a></li>
     <li><a href=#browsing-context-names><span class=secno>5.1.6 </span>Browsing context names</a></ol></li>
   <li><a href=#the-windowproxy-object><span class=secno>5.2 </span>The <code>WindowProxy</code> object</a></li>
   <li><a href=#the-window-object><span class=secno>5.3 </span>The <code>Window</code> object</a>
    <ol>
     <li><a href=#security-2><span class=secno>5.3.1 </span>Security</a></li>
     <li><a href=#apis-for-creating-and-navigating-browsing-contexts-by-name><span class=secno>5.3.2 </span>APIs for creating and navigating browsing contexts by name</a></li>
     <li><a href=#accessing-other-browsing-contexts><span class=secno>5.3.3 </span>Accessing other browsing contexts</a></li>
     <li><a href=#garbage-collection-and-browsing-contexts><span class=secno>5.3.4 </span>Garbage collection and browsing contexts</a></li>
     <li><a href=#named-access-on-the-window-object><span class=secno>5.3.5 </span>Named access on the <code>Window</code> object</a></li>
     <li><a href=#browser-interface-elements><span class=secno>5.3.6 </span>Browser interface elements</a></ol></li>
   <li><a href=#origin><span class=secno>5.4 </span>Origin</a>
    <ol>
     <li><a href=#relaxing-the-same-origin-restriction><span class=secno>5.4.1 </span>Relaxing the same-origin restriction</a></ol></li>
   <li><a href=#scripting><span class=secno>5.5 </span>Scripting</a>
    <ol>
     <li><a href=#introduction-0><span class=secno>5.5.1 </span>Introduction</a></li>
     <li><a href=#enabling-and-disabling-scripting><span class=secno>5.5.2 </span>Enabling and disabling scripting</a></li>
     <li><a href=#processing-model-1><span class=secno>5.5.3 </span>Processing model</a>
      <ol>
       <li><a href=#definitions-0><span class=secno>5.5.3.1 </span>Definitions</a></li>
       <li><a href=#calling-scripts><span class=secno>5.5.3.2 </span>Calling scripts</a></li>
       <li><a href=#creating-scripts><span class=secno>5.5.3.3 </span>Creating scripts</a></li>
       <li><a href=#killing-scripts><span class=secno>5.5.3.4 </span>Killing scripts</a></ol></li>
     <li><a href=#event-loops><span class=secno>5.5.4 </span>Event loops</a>
      <ol>
       <li><a href=#generic-task-sources><span class=secno>5.5.4.1 </span>Generic task sources</a></ol></li>
     <li><a href=#javascript-protocol><span class=secno>5.5.5 </span>The <code title="">javascript:</code> protocol</a></li>
     <li><a href=#events><span class=secno>5.5.6 </span>Events</a>
      <ol>
       <li><a href=#event-handler-attributes><span class=secno>5.5.6.1 </span>Event handler attributes</a></li>
       <li><a href=#event-handler-attributes-on-elements-and-on-window-objects><span class=secno>5.5.6.2 </span>Event handler attributes on elements and on <code>Window</code> objects</a></li>
       <li><a href=#event-firing><span class=secno>5.5.6.3 </span>Event firing</a></li>
       <li><a href=#events-and-the-window-object><span class=secno>5.5.6.4 </span>Events and the <code>Window</code> object</a></li>
       <li><a href=#runtime-script-errors><span class=secno>5.5.6.5 </span>Runtime script errors</a></ol></ol></li>
   <li><a href=#user-prompts><span class=secno>5.6 </span>User prompts</a>
    <ol>
     <li><a href=#simple-dialogs><span class=secno>5.6.1 </span>Simple dialogs</a></li>
     <li><a href=#printing><span class=secno>5.6.2 </span>Printing</a></li>
     <li><a href=#dialogs-implemented-using-separate-documents><span class=secno>5.6.3 </span>Dialogs implemented using separate documents</a></ol></li>
   <li><a href=#system-state-and-capabilities><span class=secno>5.7 </span>System state and capabilities</a>
    <ol>
     <li><a href=#client-identification><span class=secno>5.7.1 </span>Client identification</a></li>
     <li><a href=#custom-handlers><span class=secno>5.7.2 </span>Custom protocol and content handlers</a>
      <ol>
       <li><a href=#security-and-privacy><span class=secno>5.7.2.1 </span>Security and privacy</a></li>
       <li><a href=#sample-handler-impl><span class=secno>5.7.2.2 </span>Sample user interface</a></ol></ol></li>
   <li><a href=#offline><span class=secno>5.8 </span>Offline Web applications</a>
    <ol>
     <li><a href=#introduction-1><span class=secno>5.8.1 </span>Introduction</a></li>
     <li><a href=#appcache><span class=secno>5.8.2 </span>Application caches</a></li>
     <li><a href=#manifests><span class=secno>5.8.3 </span>The cache manifest syntax</a>
      <ol>
       <li><a href=#a-sample-manifest><span class=secno>5.8.3.1 </span>A sample manifest</a></li>
       <li><a href=#writing-cache-manifests><span class=secno>5.8.3.2 </span>Writing cache manifests</a></li>
       <li><a href=#parsing-cache-manifests><span class=secno>5.8.3.3 </span>Parsing cache manifests</a></ol></li>
     <li><a href=#updating-an-application-cache><span class=secno>5.8.4 </span>Updating an application cache</a></li>
     <li><a href=#matching-a-fallback-namespace><span class=secno>5.8.5 </span>Matching a fallback namespace</a></li>
     <li><a href=#the-application-cache-selection-algorithm><span class=secno>5.8.6 </span>The application cache selection algorithm</a>
      <ol>
       <li><a href=#changesToNetworkingModel><span class=secno>5.8.6.1 </span>Changes to the networking model</a></ol></li>
     <li><a href=#application-cache-api><span class=secno>5.8.7 </span>Application cache API</a></li>
     <li><a href=#browser-state><span class=secno>5.8.8 </span>Browser state</a></ol></li>
   <li><a href=#history><span class=secno>5.9 </span>Session history and navigation</a>
    <ol>
     <li><a href=#the-session-history-of-browsing-contexts><span class=secno>5.9.1 </span>The session history of browsing contexts</a></li>
     <li><a href=#the-history-interface><span class=secno>5.9.2 </span>The <code>History</code> interface</a></li>
     <li><a href=#activating-state-object-entries><span class=secno>5.9.3 </span>Activating state object entries</a></li>
     <li><a href=#the-location-interface><span class=secno>5.9.4 </span>The <code>Location</code> interface</a>
      <ol>
       <li><a href=#security-3><span class=secno>5.9.4.1 </span>Security</a></ol></li>
     <li><a href=#history-notes><span class=secno>5.9.5 </span>Implementation notes for session history</a></ol></li>
   <li><a href=#browsing-the-web><span class=secno>5.10 </span>Browsing the Web</a>
    <ol>
     <li><a href=#navigating-across-documents><span class=secno>5.10.1 </span>Navigating across documents</a></li>
     <li><a href=#read-html><span class=secno>5.10.2 </span>Page load processing model for HTML files</a></li>
     <li><a href=#read-xml><span class=secno>5.10.3 </span>Page load processing model for XML files</a></li>
     <li><a href=#read-text><span class=secno>5.10.4 </span>Page load processing model for text files</a></li>
     <li><a href=#read-image><span class=secno>5.10.5 </span>Page load processing model for images</a></li>
     <li><a href=#read-plugin><span class=secno>5.10.6 </span>Page load processing model for content that uses plugins</a></li>
     <li><a href=#read-ua-inline><span class=secno>5.10.7 </span>Page load processing model for inline content that doesn't have a DOM</a></li>
     <li><a href=#scroll-to-fragid><span class=secno>5.10.8 </span>Navigating to a fragment identifier</a></li>
     <li><a href=#history-traversal><span class=secno>5.10.9 </span>History traversal</a></li>
     <li><a href=#unloading-documents><span class=secno>5.10.10 </span>Unloading documents</a>
      <ol>
       <li><a href=#event-definition><span class=secno>5.10.10.1 </span>Event definition</a></ol></ol></li>
   <li><a href=#structured-client-side-storage><span class=secno>5.11 </span>Structured client-side storage</a>
    <ol>
     <li><a href=#storage><span class=secno>5.11.1 </span>Storing name/value pairs</a>
      <ol>
       <li><a href=#introduction-2><span class=secno>5.11.1.1 </span>Introduction</a></li>
       <li><a href=#the-storage-interface><span class=secno>5.11.1.2 </span>The <code>Storage</code> interface</a></li>
       <li><a href=#the-sessionstorage-attribute><span class=secno>5.11.1.3 </span>The <code title=dom-sessionStorage>sessionStorage</code> attribute</a></li>
       <li><a href=#the-localstorage-attribute><span class=secno>5.11.1.4 </span>The <code title=dom-localStorage>localStorage</code> attribute</a></li>
       <li><a href=#the-storage-event><span class=secno>5.11.1.5 </span>The <code title=event-storage>storage</code> event</a>
        <ol>
         <li><a href=#event-definition-0><span class=secno>5.11.1.5.1 </span>Event definition</a></ol></li>
       <li><a href=#threads><span class=secno>5.11.1.6 </span>Threads</a></ol></li>
     <li><a href=#sql><span class=secno>5.11.2 </span>Database storage</a>
      <ol>
       <li><a href=#introduction-3><span class=secno>5.11.2.1 </span>Introduction</a></li>
       <li><a href=#databases><span class=secno>5.11.2.2 </span>Databases</a></li>
       <li><a href=#executing-sql-statements><span class=secno>5.11.2.3 </span>Executing SQL statements</a></li>
       <li><a href=#database-query-results><span class=secno>5.11.2.4 </span>Database query results</a></li>
       <li><a href=#errors><span class=secno>5.11.2.5 </span>Errors</a></li>
       <li><a href=#processing-model-2><span class=secno>5.11.2.6 </span>Processing model</a></ol></li>
     <li><a href=#disk-space><span class=secno>5.11.3 </span>Disk space</a></li>
     <li><a href=#privacy><span class=secno>5.11.4 </span>Privacy</a>
      <ol>
       <li><a href=#user-tracking><span class=secno>5.11.4.1 </span>User tracking</a></li>
       <li><a href=#cookie-resurrection><span class=secno>5.11.4.2 </span>Cookie resurrection</a></ol></li>
     <li><a href=#security-4><span class=secno>5.11.5 </span>Security</a>
      <ol>
       <li><a href=#dns-spoofing-attacks><span class=secno>5.11.5.1 </span>DNS spoofing attacks</a></li>
       <li><a href=#cross-directory-attacks><span class=secno>5.11.5.2 </span>Cross-directory attacks</a></li>
       <li><a href=#implementation-risks><span class=secno>5.11.5.3 </span>Implementation risks</a></li>
       <li><a href=#sql-and-user-agents><span class=secno>5.11.5.4 </span>SQL and user agents</a></li>
       <li><a href=#sql-injection><span class=secno>5.11.5.5 </span>SQL injection</a></ol></ol></li>
   <li><a href=#links><span class=secno>5.12 </span>Links</a>
    <ol>
     <li><a href=#hyperlink-elements><span class=secno>5.12.1 </span>Hyperlink elements</a></li>
     <li><a href=#following-hyperlinks><span class=secno>5.12.2 </span>Following hyperlinks</a>
      <ol>
       <li><a href=#hyperlink-auditing><span class=secno>5.12.2.1 </span>Hyperlink auditing</a></ol></li>
     <li><a href=#linkTypes><span class=secno>5.12.3 </span>Link types</a>
      <ol>
       <li><a href=#link-type-alternate><span class=secno>5.12.3.1 </span>Link type "<code>alternate</code>"</a></li>
       <li><a href=#link-type-archives><span class=secno>5.12.3.2 </span>Link type "<code>archives</code>"</a></li>
       <li><a href=#link-type-author><span class=secno>5.12.3.3 </span>Link type "<code>author</code>"</a></li>
       <li><a href=#link-type-bookmark><span class=secno>5.12.3.4 </span>Link type "<code>bookmark</code>"</a></li>
       <li><a href=#link-type-external><span class=secno>5.12.3.5 </span>Link type "<code>external</code>"</a></li>
       <li><a href=#link-type-feed><span class=secno>5.12.3.6 </span>Link type "<code>feed</code>"</a></li>
       <li><a href=#link-type-help><span class=secno>5.12.3.7 </span>Link type "<code>help</code>"</a></li>
       <li><a href=#rel-icon><span class=secno>5.12.3.8 </span>Link type "<code>icon</code>"</a></li>
       <li><a href=#link-type-license><span class=secno>5.12.3.9 </span>Link type "<code>license</code>"</a></li>
       <li><a href=#link-type-nofollow><span class=secno>5.12.3.10 </span>Link type "<code>nofollow</code>"</a></li>
       <li><a href=#link-type-noreferrer><span class=secno>5.12.3.11 </span>Link type "<code>noreferrer</code>"</a></li>
       <li><a href=#link-type-pingback><span class=secno>5.12.3.12 </span>Link type "<code>pingback</code>"</a></li>
       <li><a href=#link-type-prefetch><span class=secno>5.12.3.13 </span>Link type "<code>prefetch</code>"</a></li>
       <li><a href=#link-type-search><span class=secno>5.12.3.14 </span>Link type "<code>search</code>"</a></li>
       <li><a href=#link-type-stylesheet><span class=secno>5.12.3.15 </span>Link type "<code>stylesheet</code>"</a></li>
       <li><a href=#link-type-sidebar><span class=secno>5.12.3.16 </span>Link type "<code>sidebar</code>"</a></li>
       <li><a href=#link-type-tag><span class=secno>5.12.3.17 </span>Link type "<code>tag</code>"</a></li>
       <li><a href=#hierarchical-link-types><span class=secno>5.12.3.18 </span>Hierarchical link types</a>
        <ol>
         <li><a href=#link-type-index><span class=secno>5.12.3.18.1 </span>Link type "<code>index</code>"</a></li>
         <li><a href=#link-type-up><span class=secno>5.12.3.18.2 </span>Link type "<code>up</code>"</a></ol></li>
       <li><a href=#sequential-link-types><span class=secno>5.12.3.19 </span>Sequential link types</a>
        <ol>
         <li><a href=#link-type-first><span class=secno>5.12.3.19.1 </span>Link type "<code>first</code>"</a></li>
         <li><a href=#link-type-last><span class=secno>5.12.3.19.2 </span>Link type "<code>last</code>"</a></li>
         <li><a href=#link-type-next><span class=secno>5.12.3.19.3 </span>Link type "<code>next</code>"</a></li>
         <li><a href=#link-type-prev><span class=secno>5.12.3.19.4 </span>Link type "<code>prev</code>"</a></ol></li>
       <li><a href=#other-link-types><span class=secno>5.12.3.20 </span>Other link types</a></ol></ol></ol></li>
 <li><a href=#editing><span class=secno>6 </span>User Interaction</a>
  <ol>
   <li><a href=#editing-intro><span class=secno>6.1 </span>Introduction</a></li>
   <li><a href=#the-hidden-attribute><span class=secno>6.2 </span>The <code>hidden</code> attribute</a></li>
   <li><a href=#activation><span class=secno>6.3 </span>Activation</a></li>
   <li><a href=#scrolling-elements-into-view><span class=secno>6.4 </span>Scrolling elements into view</a></li>
   <li><a href=#focus><span class=secno>6.5 </span>Focus</a>
    <ol>
     <li><a href=#sequential-focus-navigation><span class=secno>6.5.1 </span>Sequential focus navigation</a></li>
     <li><a href=#focus-management><span class=secno>6.5.2 </span>Focus management</a></li>
     <li><a href=#document-level-focus-apis><span class=secno>6.5.3 </span>Document-level focus APIs</a></li>
     <li><a href=#element-level-focus-apis><span class=secno>6.5.4 </span>Element-level focus APIs</a></ol></li>
   <li><a href=#selection><span class=secno>6.6 </span>The text selection APIs</a>
    <ol>
     <li><a href=#documentSelection><span class=secno>6.6.1 </span>APIs for the browsing context selection</a></li>
     <li><a href=#textFieldSelection><span class=secno>6.6.2 </span>APIs for the text field selections</a></ol></li>
   <li><a href=#contenteditable><span class=secno>6.7 </span>The <code title=attr-contenteditable>contenteditable</code> attribute</a>
    <ol>
     <li><a href=#user-editing-actions><span class=secno>6.7.1 </span>User editing actions</a></li>
     <li><a href=#making-entire-documents-editable><span class=secno>6.7.2 </span>Making entire documents editable</a></ol></li>
   <li><a href=#dnd><span class=secno>6.8 </span>Drag and drop</a>
    <ol>
     <li><a href=#introduction-4><span class=secno>6.8.1 </span>Introduction</a></li>
     <li><a href=#the-dragevent-and-datatransfer-interfaces><span class=secno>6.8.2 </span>The <code>DragEvent</code> and <code>DataTransfer</code> interfaces</a></li>
     <li><a href=#events-fired-during-a-drag-and-drop-action><span class=secno>6.8.3 </span>Events fired during a drag-and-drop action</a></li>
     <li><a href=#drag-and-drop-processing-model><span class=secno>6.8.4 </span>Drag-and-drop processing model</a>
      <ol>
       <li><a href=#when-the-drag-and-drop-operation-starts-or-ends-in-another-document><span class=secno>6.8.4.1 </span>When the drag-and-drop operation starts or ends in another
  document</a></li>
       <li><a href=#when-the-drag-and-drop-operation-starts-or-ends-in-another-application><span class=secno>6.8.4.2 </span>When the drag-and-drop operation starts or ends in another
  application</a></ol></li>
     <li><a href=#the-draggable-attribute><span class=secno>6.8.5 </span>The <code>draggable</code> attribute</a></li>
     <li><a href=#copy-and-paste><span class=secno>6.8.6 </span>Copy and paste</a>
      <ol>
       <li><a href=#copy-to-clipboard><span class=secno>6.8.6.1 </span>Copy to clipboard</a></li>
       <li><a href=#cut-to-clipboard><span class=secno>6.8.6.2 </span>Cut to clipboard</a></li>
       <li><a href=#paste-from-clipboard><span class=secno>6.8.6.3 </span>Paste from clipboard</a></li>
       <li><a href=#paste-from-selection><span class=secno>6.8.6.4 </span>Paste from selection</a></ol></li>
     <li><a href=#security-risks-in-the-drag-and-drop-model><span class=secno>6.8.7 </span>Security risks in the drag-and-drop model</a></ol></li>
   <li><a href=#undo><span class=secno>6.9 </span>Undo history</a>
    <ol>
     <li><a href=#the-undomanager-interface><span class=secno>6.9.1 </span>The <code>UndoManager</code> interface</a></li>
     <li><a href=#undo:-moving-back-in-the-undo-transaction-history><span class=secno>6.9.2 </span>Undo: moving back in the undo transaction history</a></li>
     <li><a href=#redo:-moving-forward-in-the-undo-transaction-history><span class=secno>6.9.3 </span>Redo: moving forward in the undo transaction history</a></li>
     <li><a href=#the-undomanagerevent-interface-and-the-undo-and-redo-events><span class=secno>6.9.4 </span>The <code>UndoManagerEvent</code> interface and the <code title=event-undo>undo</code> and <code title=event-redo>redo</code> events</a></li>
     <li><a href=#implementation-notes><span class=secno>6.9.5 </span>Implementation notes</a></ol></li>
   <li><a href=#command-apis><span class=secno>6.10 </span>Command APIs</a></ol></li>
 <li><a href=#comms><span class=secno>7 </span>Communication</a>
  <ol>
   <li><a href=#event-definitions><span class=secno>7.1 </span>Event definitions</a></li>
   <li><a href=#server-sent-events><span class=secno>7.2 </span>Server-sent events</a>
    <ol>
     <li><a href=#the-remoteeventtarget-interface><span class=secno>7.2.1 </span>The <code>RemoteEventTarget</code> interface</a></li>
     <li><a href=#connecting-to-an-event-stream><span class=secno>7.2.2 </span>Connecting to an event stream</a></li>
     <li><a href=#parsing-an-event-stream><span class=secno>7.2.3 </span>Parsing an event stream</a></li>
     <li><a href=#event-stream-interpretation><span class=secno>7.2.4 </span>Interpreting an event stream</a></li>
     <li><a href=#notes><span class=secno>7.2.5 </span>Notes</a></ol></li>
   <li><a href=#network><span class=secno>7.3 </span>Web sockets</a>
    <ol>
     <li><a href=#network-intro><span class=secno>7.3.1 </span>Introduction</a></li>
     <li><a href=#the-websocket-interface><span class=secno>7.3.2 </span>The <code>WebSocket</code> interface</a></li>
     <li><a href=#websocket-events><span class=secno>7.3.3 </span>WebSocket Events</a></li>
     <li><a href=#feedback-from-the-protocol><span class=secno>7.3.4 </span>Feedback from the protocol</a></li>
     <li><a href=#websocket-protocol title="This protocol enables two-way
  communication between a user agent running untrusted code running in
  a controlled environment to a remote host that understands the
  protocol. It is intended to fail to communicate with servers of
  pre-existing protocols like SMTP or HTTP, while allowing HTTP
  servers to opt-in to supporting this protocol if desired. It is
  designed to be easy to implement on the server side."><span class=secno>7.3.5 </span>The Web Socket
  protocol</a>
      <ol>
       <li><a href=#introduction-5><span class=secno>7.3.5.1 </span>Introduction</a></li>
       <li><a href=#client-side-requirements><span class=secno>7.3.5.2 </span>Client-side requirements</a>
        <ol>
         <li><a href=#handshake><span class=secno>7.3.5.2.1 </span>Handshake</a></li>
         <li><a href=#data-framing><span class=secno>7.3.5.2.2 </span>Data framing</a></ol></li>
       <li><a href=#server-side-requirements><span class=secno>7.3.5.3 </span>Server-side requirements</a>
        <ol>
         <li><a href=#minimal-handshake><span class=secno>7.3.5.3.1 </span>Minimal handshake</a></li>
         <li><a href=#handshake-details><span class=secno>7.3.5.3.2 </span>Handshake details</a></li>
         <li><a href=#ws-sd-framing><span class=secno>7.3.5.3.3 </span>Data framing</a></ol></li>
       <li><a href=#closing-the-connection><span class=secno>7.3.5.4 </span>Closing the connection</a></li>
       <li><a href=#security-considerations><span class=secno>7.3.5.5 </span>Security considerations</a></li>
       <li><a href=#iana-considerations><span class=secno>7.3.5.6 </span>IANA considerations</a></ol></ol></li>
   <li><a href=#crossDocumentMessages><span class=secno>7.4 </span>Cross-document messaging</a>
    <ol>
     <li><a href=#introduction-6><span class=secno>7.4.1 </span>Introduction</a></li>
     <li><a href=#security-5><span class=secno>7.4.2 </span>Security</a>
      <ol>
       <li><a href=#authors><span class=secno>7.4.2.1 </span>Authors</a></li>
       <li><a href=#user-agents><span class=secno>7.4.2.2 </span>User agents</a></ol></li>
     <li><a href=#posting-messages><span class=secno>7.4.3 </span>Posting messages</a></li>
     <li><a href=#posting-messages-with-message-ports><span class=secno>7.4.4 </span>Posting messages with message ports</a></ol></li>
   <li><a href=#channel-messaging><span class=secno>7.5 </span>Channel messaging</a>
    <ol>
     <li><a href=#introduction-7><span class=secno>7.5.1 </span>Introduction</a></li>
     <li><a href=#message-channels><span class=secno>7.5.2 </span>Message channels</a></li>
     <li><a href=#message-ports><span class=secno>7.5.3 </span>Message ports</a>
      <ol>
       <li><a href=#ports-and-garbage-collection><span class=secno>7.5.3.1 </span>Ports and garbage collection</a></ol></ol></ol></li>
 <li><a href=#syntax><span class=secno>8 </span>The HTML syntax</a>
  <ol>
   <li><a href=#writing-html-documents><span class=secno>8.1 </span>Writing HTML documents</a>
    <ol>
     <li><a href=#the-doctype><span class=secno>8.1.1 </span>The DOCTYPE</a></li>
     <li><a href=#elements-0><span class=secno>8.1.2 </span>Elements</a>
      <ol>
       <li><a href=#start-tags><span class=secno>8.1.2.1 </span>Start tags</a></li>
       <li><a href=#end-tags><span class=secno>8.1.2.2 </span>End tags</a></li>
       <li><a href=#attributes><span class=secno>8.1.2.3 </span>Attributes</a></li>
       <li><a href=#optional-tags><span class=secno>8.1.2.4 </span>Optional tags</a></li>
       <li><a href=#element-restrictions><span class=secno>8.1.2.5 </span>Restrictions on content models</a></li>
       <li><a href=#cdata-rcdata-restrictions><span class=secno>8.1.2.6 </span>Restrictions on the contents of CDATA and RCDATA elements</a></ol></li>
     <li><a href=#text-0><span class=secno>8.1.3 </span>Text</a>
      <ol>
       <li><a href=#newlines><span class=secno>8.1.3.1 </span>Newlines</a></ol></li>
     <li><a href=#character-references><span class=secno>8.1.4 </span>Character references</a></li>
     <li><a href=#cdata-sections><span class=secno>8.1.5 </span>CDATA sections</a></li>
     <li><a href=#comments><span class=secno>8.1.6 </span>Comments</a></ol></li>
   <li><a href=#parsing><span class=secno>8.2 </span>Parsing HTML documents</a>
    <ol>
     <li><a href=#overview-of-the-parsing-model><span class=secno>8.2.1 </span>Overview of the parsing model</a></li>
     <li><a href=#the-input-stream><span class=secno>8.2.2 </span>The input stream</a>
      <ol>
       <li><a href=#determining-the-character-encoding><span class=secno>8.2.2.1 </span>Determining the character encoding</a></li>
       <li><a href=#character-encoding-requirements><span class=secno>8.2.2.2 </span>Character encoding requirements</a></li>
       <li><a href=#preprocessing-the-input-stream><span class=secno>8.2.2.3 </span>Preprocessing the input stream</a></li>
       <li><a href=#changing-the-encoding-while-parsing><span class=secno>8.2.2.4 </span>Changing the encoding while parsing</a></ol></li>
     <li><a href=#parse-state><span class=secno>8.2.3 </span>Parse state</a>
      <ol>
       <li><a href=#the-insertion-mode><span class=secno>8.2.3.1 </span>The insertion mode</a></li>
       <li><a href=#the-stack-of-open-elements><span class=secno>8.2.3.2 </span>The stack of open elements</a></li>
       <li><a href=#the-list-of-active-formatting-elements><span class=secno>8.2.3.3 </span>The list of active formatting elements</a></li>
       <li><a href=#the-element-pointers><span class=secno>8.2.3.4 </span>The element pointers</a></li>
       <li><a href=#other-parsing-state-flags><span class=secno>8.2.3.5 </span>Other parsing state flags</a></ol></li>
     <li><a href=#tokenization><span class=secno>8.2.4 </span>Tokenization</a>
      <ol>
       <li><a href=#data-state><span class=secno>8.2.4.1 </span>Data state</a></li>
       <li><a href=#character-reference-data-state><span class=secno>8.2.4.2 </span>Character reference data state</a></li>
       <li><a href=#tag-open-state><span class=secno>8.2.4.3 </span>Tag open state</a></li>
       <li><a href=#close-tag-open-state><span class=secno>8.2.4.4 </span>Close tag open state</a></li>
       <li><a href=#tag-name-state><span class=secno>8.2.4.5 </span>Tag name state</a></li>
       <li><a href=#before-attribute-name-state><span class=secno>8.2.4.6 </span>Before attribute name state</a></li>
       <li><a href=#attribute-name-state><span class=secno>8.2.4.7 </span>Attribute name state</a></li>
       <li><a href=#after-attribute-name-state><span class=secno>8.2.4.8 </span>After attribute name state</a></li>
       <li><a href=#before-attribute-value-state><span class=secno>8.2.4.9 </span>Before attribute value state</a></li>
       <li><a href=#attribute-value-(double-quoted)-state><span class=secno>8.2.4.10 </span>Attribute value (double-quoted) state</a></li>
       <li><a href=#attribute-value-(single-quoted)-state><span class=secno>8.2.4.11 </span>Attribute value (single-quoted) state</a></li>
       <li><a href=#attribute-value-(unquoted)-state><span class=secno>8.2.4.12 </span>Attribute value (unquoted) state</a></li>
       <li><a href=#character-reference-in-attribute-value-state><span class=secno>8.2.4.13 </span>Character reference in attribute value state</a></li>
       <li><a href=#after-attribute-value-(quoted)-state><span class=secno>8.2.4.14 </span>After attribute value (quoted) state</a></li>
       <li><a href=#self-closing-start-tag-state><span class=secno>8.2.4.15 </span>Self-closing start tag state</a></li>
       <li><a href=#bogus-comment-state><span class=secno>8.2.4.16 </span>Bogus comment state</a></li>
       <li><a href=#markup-declaration-open-state><span class=secno>8.2.4.17 </span>Markup declaration open state</a></li>
       <li><a href=#comment-start-state><span class=secno>8.2.4.18 </span>Comment start state</a></li>
       <li><a href=#comment-start-dash-state><span class=secno>8.2.4.19 </span>Comment start dash state</a></li>
       <li><a href=#comment-state><span class=secno>8.2.4.20 </span>Comment state</a></li>
       <li><a href=#comment-end-dash-state><span class=secno>8.2.4.21 </span>Comment end dash state</a></li>
       <li><a href=#comment-end-state><span class=secno>8.2.4.22 </span>Comment end state</a></li>
       <li><a href=#doctype-state><span class=secno>8.2.4.23 </span>DOCTYPE state</a></li>
       <li><a href=#before-doctype-name-state><span class=secno>8.2.4.24 </span>Before DOCTYPE name state</a></li>
       <li><a href=#doctype-name-state><span class=secno>8.2.4.25 </span>DOCTYPE name state</a></li>
       <li><a href=#after-doctype-name-state><span class=secno>8.2.4.26 </span>After DOCTYPE name state</a></li>
       <li><a href=#before-doctype-public-identifier-state><span class=secno>8.2.4.27 </span>Before DOCTYPE public identifier state</a></li>
       <li><a href=#doctype-public-identifier-(double-quoted)-state><span class=secno>8.2.4.28 </span>DOCTYPE public identifier (double-quoted) state</a></li>
       <li><a href=#doctype-public-identifier-(single-quoted)-state><span class=secno>8.2.4.29 </span>DOCTYPE public identifier (single-quoted) state</a></li>
       <li><a href=#after-doctype-public-identifier-state><span class=secno>8.2.4.30 </span>After DOCTYPE public identifier state</a></li>
       <li><a href=#before-doctype-system-identifier-state><span class=secno>8.2.4.31 </span>Before DOCTYPE system identifier state</a></li>
       <li><a href=#doctype-system-identifier-(double-quoted)-state><span class=secno>8.2.4.32 </span>DOCTYPE system identifier (double-quoted) state</a></li>
       <li><a href=#doctype-system-identifier-(single-quoted)-state><span class=secno>8.2.4.33 </span>DOCTYPE system identifier (single-quoted) state</a></li>
       <li><a href=#after-doctype-system-identifier-state><span class=secno>8.2.4.34 </span>After DOCTYPE system identifier state</a></li>
       <li><a href=#bogus-doctype-state><span class=secno>8.2.4.35 </span>Bogus DOCTYPE state</a></li>
       <li><a href=#cdata-section-state><span class=secno>8.2.4.36 </span>CDATA section state</a></li>
       <li><a href=#tokenizing-character-references><span class=secno>8.2.4.37 </span>Tokenizing character references</a></ol></li>
     <li><a href=#tree-construction><span class=secno>8.2.5 </span>Tree construction</a>
      <ol>
       <li><a href=#creating-and-inserting-elements><span class=secno>8.2.5.1 </span>Creating and inserting elements</a></li>
       <li><a href=#closing-elements-that-have-implied-end-tags><span class=secno>8.2.5.2 </span>Closing elements that have implied end tags</a></li>
       <li><a href=#foster-parenting><span class=secno>8.2.5.3 </span>Foster parenting</a></li>
       <li><a href=#the-initial-insertion-mode><span class=secno>8.2.5.4 </span>The "initial" insertion mode</a></li>
       <li><a href=#the-before-html-insertion-mode><span class=secno>8.2.5.5 </span>The "before html" insertion mode</a></li>
       <li><a href=#the-before-head-insertion-mode><span class=secno>8.2.5.6 </span>The "before head" insertion mode</a></li>
       <li><a href=#parsing-main-inhead><span class=secno>8.2.5.7 </span>The "in head" insertion mode</a></li>
       <li><a href=#parsing-main-inheadnoscript><span class=secno>8.2.5.8 </span>The "in head noscript" insertion mode</a></li>
       <li><a href=#the-after-head-insertion-mode><span class=secno>8.2.5.9 </span>The "after head" insertion mode</a></li>
       <li><a href=#parsing-main-inbody><span class=secno>8.2.5.10 </span>The "in body" insertion mode</a></li>
       <li><a href=#parsing-main-incdata><span class=secno>8.2.5.11 </span>The "in CDATA/RCDATA" insertion mode</a></li>
       <li><a href=#parsing-main-intable><span class=secno>8.2.5.12 </span>The "in table" insertion mode</a></li>
       <li><a href=#parsing-main-incaption><span class=secno>8.2.5.13 </span>The "in caption" insertion mode</a></li>
       <li><a href=#parsing-main-incolgroup><span class=secno>8.2.5.14 </span>The "in column group" insertion mode</a></li>
       <li><a href=#parsing-main-intbody><span class=secno>8.2.5.15 </span>The "in table body" insertion mode</a></li>
       <li><a href=#parsing-main-intr><span class=secno>8.2.5.16 </span>The "in row" insertion mode</a></li>
       <li><a href=#parsing-main-intd><span class=secno>8.2.5.17 </span>The "in cell" insertion mode</a></li>
       <li><a href=#parsing-main-inselect><span class=secno>8.2.5.18 </span>The "in select" insertion mode</a></li>
       <li><a href=#parsing-main-inselectintable><span class=secno>8.2.5.19 </span>The "in select in table" insertion mode</a></li>
       <li><a href=#parsing-main-inforeign><span class=secno>8.2.5.20 </span>The "in foreign content" insertion mode</a></li>
       <li><a href=#parsing-main-afterbody><span class=secno>8.2.5.21 </span>The "after body" insertion mode</a></li>
       <li><a href=#parsing-main-inframeset><span class=secno>8.2.5.22 </span>The "in frameset" insertion mode</a></li>
       <li><a href=#parsing-main-afterframeset><span class=secno>8.2.5.23 </span>The "after frameset" insertion mode</a></li>
       <li><a href=#the-after-after-body-insertion-mode><span class=secno>8.2.5.24 </span>The "after after body" insertion mode</a></li>
       <li><a href=#the-after-after-frameset-insertion-mode><span class=secno>8.2.5.25 </span>The "after after frameset" insertion mode</a></ol></li>
     <li><a href=#the-end><span class=secno>8.2.6 </span>The end</a></li>
     <li><a href=#coercing-an-html-dom-into-an-infoset><span class=secno>8.2.7 </span>Coercing an HTML DOM into an infoset</a></ol></li>
   <li><a href=#namespaces><span class=secno>8.3 </span>Namespaces</a></li>
   <li><a href=#serializing-html-fragments><span class=secno>8.4 </span>Serializing HTML fragments</a></li>
   <li><a href=#parsing-html-fragments><span class=secno>8.5 </span>Parsing HTML fragments</a></li>
   <li><a href=#named-character-references><span class=secno>8.6 </span>Named character references</a></ol></li>
 <li><a href=#the-xhtml-syntax><span class=secno>9 </span>The XHTML syntax</a>
  <ol>
   <li><a href=#writing-xhtml-documents><span class=secno>9.1 </span>Writing XHTML documents</a></li>
   <li><a href=#parsing-xhtml-documents><span class=secno>9.2 </span>Parsing XHTML documents</a></li>
   <li><a href=#serializing-xhtml-fragments><span class=secno>9.3 </span>Serializing XHTML fragments</a></li>
   <li><a href=#parsing-xhtml-fragments><span class=secno>9.4 </span>Parsing XHTML fragments</a></ol></li>
 <li><a href=#rendering><span class=secno>10 </span>Rendering</a>
  <ol>
   <li><a href=#introduction-8><span class=secno>10.1 </span>Introduction</a></li>
   <li><a href=#the-css-user-agent-style-sheet-and-presentational-hints><span class=secno>10.2 </span>The CSS user agent style sheet and presentational hints</a>
    <ol>
     <li><a href=#introduction-9><span class=secno>10.2.1 </span>Introduction</a></li>
     <li><a href=#display-types><span class=secno>10.2.2 </span>Display types</a></li>
     <li><a href=#margins-and-padding><span class=secno>10.2.3 </span>Margins and padding</a></li>
     <li><a href=#alignment><span class=secno>10.2.4 </span>Alignment</a></li>
     <li><a href=#fonts-and-colors><span class=secno>10.2.5 </span>Fonts and colors</a></li>
     <li><a href=#punctuation-and-decorations><span class=secno>10.2.6 </span>Punctuation and decorations</a></li>
     <li><a href=#resetting-rules-for-inherited-properties><span class=secno>10.2.7 </span>Resetting rules for inherited properties</a></li>
     <li><a href=#the-hr-element-0><span class=secno>10.2.8 </span>The <code>hr</code> element</a></li>
     <li><a href=#the-fieldset-element-0><span class=secno>10.2.9 </span>The <code>fieldset</code> element</a></ol></li>
   <li><a href=#replaced-elements><span class=secno>10.3 </span>Replaced elements</a>
    <ol>
     <li><a href=#embedded-content-1><span class=secno>10.3.1 </span>Embedded content</a></li>
     <li><a href=#images-0><span class=secno>10.3.2 </span>Images</a></li>
     <li><a href=#attributes-for-embedded-content-and-images><span class=secno>10.3.3 </span>Attributes for embedded content and images</a></li>
     <li><a href=#tool-bars-0><span class=secno>10.3.4 </span>Tool bars</a></ol></li>
   <li><a href=#bindings><span class=secno>10.4 </span>Bindings</a>
    <ol>
     <li><a href=#introduction-10><span class=secno>10.4.1 </span>Introduction</a></li>
     <li><a href=#the-bb-element-0><span class=secno>10.4.2 </span>The <code>bb</code> element</a></li>
     <li><a href=#the-button-element-0><span class=secno>10.4.3 </span>The <code>button</code> element</a></li>
     <li><a href=#the-datagrid-element><span class=secno>10.4.4 </span>The <code>datagrid</code> element</a></li>
     <li><a href=#the-details-element-0><span class=secno>10.4.5 </span>The <code>details</code> element</a></li>
     <li><a href=#the-input-element-as-a-text-entry-widget><span class=secno>10.4.6 </span>The <code>input</code> element as a text entry widget</a></li>
     <li><a href=#the-input-element-as-domain-specific-widgets><span class=secno>10.4.7 </span>The <code>input</code> element as domain-specific widgets</a></li>
     <li><a href=#the-input-element-as-a-range-control><span class=secno>10.4.8 </span>The <code>input</code> element as a range control</a></li>
     <li><a href=#the-input-element-as-a-color-well><span class=secno>10.4.9 </span>The <code>input</code> element as a color well</a></li>
     <li><a href=#the-input-element-as-a-check-box-and-radio-button-widgets><span class=secno>10.4.10 </span>The <code>input</code> element as a check box and radio button widgets</a></li>
     <li><a href=#the-input-element-as-a-file-upload-control><span class=secno>10.4.11 </span>The <code>input</code> element as a file upload control</a></li>
     <li><a href=#the-input-element-as-a-button><span class=secno>10.4.12 </span>The <code>input</code> element as a button</a></li>
     <li><a href=#the-marquee-element><span class=secno>10.4.13 </span>The <code>marquee</code> element</a></li>
     <li><a href=#the-meter-element-0><span class=secno>10.4.14 </span>The <code>meter</code> element</a></li>
     <li><a href=#the-progress-element-0><span class=secno>10.4.15 </span>The <code>progress</code> element</a></li>
     <li><a href=#the-select-element-0><span class=secno>10.4.16 </span>The <code>select</code> element</a></li>
     <li><a href=#the-textarea-element-0><span class=secno>10.4.17 </span>The <code>textarea</code> element</a></ol></li>
   <li><a href=#frames-and-framesets><span class=secno>10.5 </span>Frames and framesets</a></li>
   <li><a href=#interactive-media><span class=secno>10.6 </span>Interactive media</a>
    <ol>
     <li><a href=#links,-forms,-and-navigation><span class=secno>10.6.1 </span>Links, forms, and navigation</a></li>
     <li><a href=#the-mark-element-0><span class=secno>10.6.2 </span>The <code>mark</code> element</a></li>
     <li><a href=#the-title-attribute-0><span class=secno>10.6.3 </span>The <code title=attr-title>title</code> attribute</a></ol></li>
   <li><a href=#print-media><span class=secno>10.7 </span>Print media</a></li>
   <li><a href=#interaction-with-css><span class=secno>10.8 </span>Interaction with CSS</a></ol></li>
 <li><a href=#obsolete-features><span class=secno>11 </span>Obsolete features</a>
  <ol>
   <li><a href=#self-contained-features><span class=secno>11.1 </span>Self-contained features</a>
    <ol>
     <li><a href=#the-applet-element><span class=secno>11.1.1 </span>The <code>applet</code> element</a></li>
     <li><a href=#the-marquee-element-0><span class=secno>11.1.2 </span>The <code>marquee</code> element</a></ol></li>
   <li><a href=#other-elements-and-attributes><span class=secno>11.2 </span>Other elements and attributes</a></li>
   <li><a href=#other-dom-apis><span class=secno>11.3 </span>Other DOM APIs</a></li>
   <li><a href=#conformance-checkers-0><span class=secno>11.4 </span>Conformance checkers</a></ol></li>
 <li><a href=#no><span class=secno>12 </span>Things that you can't do with this specification because
  they are better handled using other technologies that are further
  described herein</a>
  <ol>
   <li><a href=#localization><span class=secno>12.1 </span>Localization</a></li>
   <li><a href=#declarative-2d-vector-graphics-and-animation><span class=secno>12.2 </span>Declarative 2D vector graphics and animation</a></li>
   <li><a href=#declarative-3d-scenes><span class=secno>12.3 </span>Declarative 3D scenes</a></li>
   <li><a href=#timers><span class=secno>12.4 </span>Timers</a></li>
   <li><a href=#rendering-and-the-dom><span class=secno>12.5 </span>Rendering and the DOM</a></ol></li>
 <li><a class=no-num href=#index>Index</a></li>
 <li><a class=no-num href=#references>References</a></li>
 <li><a class=no-num href=#acknowledgements>Acknowledgements</a></ol>
<!--end-toc-->
  <hr><h2 id=introduction><span class=secno>1 </span>Introduction</h2>


  <h3 id=background><span class=secno>1.1 </span>Background</h3>

  <p><em>This section is non-normative.</em></p>

  <p>The World Wide Web's markup language has always been HTML. HTML
  was primarily designed as a language for semantically describing
  scientific documents, although its general design and adaptations
  over the years has enabled it to be used to describe a number of
  other types of documents.</p>

  <p>The main area that has not been adequately addressed by HTML is a
  vague subject referred to as Web Applications. This specification
  attempts to rectify this, while at the same time updating the HTML
  specifications to address issues raised in the past few years.</p>


  <h3 id=audience><span class=secno>1.2 </span>Audience</h3>

  <p><em>This section is non-normative.</em></p>

  <p>This specification is intended for authors of documents and
  scripts that use the features defined in this specificaton, and
  implementors of tools that are intended to conform to this
  specification, and individuals wishing to establish the correctness
  of documents or implementations with respect to the requirements of
  this specification.</p>

  <p>This document is probably not suited to readers who do not
  already have at least a passing familiarity with Web technologies,
  as in places it sacrifices clarity for precision, and brevity for
  completeness. More approachable tutorials and authoring guides can
  provide a gentler introduction to the topic.</p>

  <p>In particular, readers should be familiar with the basics of DOM
  Core and DOM Events before reading this specification. An
  understanding of WebIDL, HTTP, XML, Unicode, character encodings,
  JavaScript, and CSS will be helpful in places but is not
  essential.</p>


  <h3 id=scope><span class=secno>1.3 </span>Scope</h3>

  <p><em>This section is non-normative.</em></p>

  <p>This specification is limited to providing a semantic-level
  markup language and associated semantic-level scripting APIs for
  authoring accessible pages on the Web ranging from static documents
  to dynamic applications.</p>

  <p>The scope of this specification does not include providing
  mechanisms for media-specific customization of presentation
  (although default rendering rules for Web browsers are included at
  the end of this specification, and several mechanisms for hooking
  into CSS are provided as part of the language).</p>

  <p>The scope of this specification does not include documenting
  every HTML or DOM feature supported by Web browsers. Browsers
  support many features that are considered to be very bad for
  accessibility or that are otherwise inappropriate. For example, the
  <code>blink</code> element is clearly presentational and authors
  wishing to cause text to blink should instead use CSS.</p>

  <p>The scope of this specification is not to describe an entire
  operating system. In particular, hardware configuration software,
  image manipulation tools, and applications that users would be
  expected to use with high-end workstations on a daily basis are out
  of scope. In terms of applications, this specification is targeted
  specifically at applications that would be expected to be used by
  users on an occasional basis, or regularly but from disparate
  locations, with low CPU requirements. For instance online purchasing
  systems, searching systems, games (especially multiplayer online
  games), public telephone books or address books, communications
  software (e-mail clients, instant messaging clients, discussion
  software), document editing software, etc.</p>

  <p>For sophisticated cross-platform applications, there already
  exist several proprietary solutions (such as Mozilla's XUL, Adobe's
  Flash, or Microsoft's Silverlight). These solutions are evolving
  faster than any standards process could follow, and the requirements
  are evolving even faster. These systems are also significantly more
  complicated to specify, and are orders of magnitude more difficult
  to achieve interoperability with, than the solutions described in
  this document. Platform-specific solutions for such sophisticated
  applications (for example the Mac OS X Core APIs) are even further
  ahead.</p>


  <h3 id=history-0><span class=secno>1.4 </span>History</h3>

  <p><em>This section is non-normative.</em></p>

  <p>Work on HTML5 originally started in late 2003, as a proof of
  concept to show that it was possible to extend HTML4's forms to
  provide many of the features that XForms 1.0 introduced, without
  requiring browsers to implement rendering engines that were
  incompatible with existing HTML Web pages. At this early stage,
  while the draft was already publicly available, and input was
  already being solicited from all sources, the specification was only
  under Opera Software's copyright.</p>

  <p>In early 2004, some of the principles that underlie this effort,
  as well as an early draft proposal covering just forms-related
  features, were presented to the W3C jointly by Mozilla and Opera at
  a workshop discussing the future of Web Applications on the Web. The
  proposal was rejected on the grounds that the proposal conflicted
  with the previously chosen direction for the Web's evolution.</p>

  <p>Shortly thereafter, Apple, Mozilla, and Opera jointly announced
  their intent to continue working on the effort. A public mailing
  list was created, and the drafts were moved to the WHATWG site. The
  copyright was subsequently amended to be jointly owned by all three
  vendors, and to allow reuse of the specifications.</p>

  <p>In 2006, the W3C expressed interest in the specification, and
  created a working group chartered to work with the WHATWG on the
  development of the HTML5 specifications. The working group opened in
  2007. Apple, Mozilla, and Opera allowed the W3C to publish the
  specifications under the W3C copyright, while keeping versions with
  the less restrictive license on the WHATWG site.</p>

  <p>Since then, both groups have been working together.</p>



  <h3 id=relationships-to-other-specifications><span class=secno>1.5 </span>Relationships to other specifications</h3>

  <h4 id=relationship-to-html-4.01-and-dom2-html><span class=secno>1.5.1 </span>Relationship to HTML 4.01 and DOM2 HTML</h4>

  <p><em>This section is non-normative.</em></p>

  <p>This specification represents a new version of HTML4, along with
  a new version of the associated DOM2 HTML API. Migration from HTML4
  to the format and APIs described in this specification should in
  most cases be straightforward, as care has been taken to ensure that
  backwards-compatibility is retained. <a href=#refsHTML4>[HTML4]</a> <a href=#refsDOM2HTML>[DOM2HTML]</a></p>


  <h4 id=relationship-to-xhtml-1.x><span class=secno>1.5.2 </span>Relationship to XHTML 1.x</h4>

  <p><em>This section is non-normative.</em></p>

  <p>This specification is intended to replace XHTML 1.0 as the
  normative definition of the XML serialization of the HTML
  vocabulary. <a href=#refsXHTML10>[XHTML10]</a></p>

  <p>While this specification updates the semantics and requirements
  of the vocabulary defined by XHTML Modularization 1.1 and used by
  XHTML 1.1, it does not attempt to provide a replacement for the
  modularization scheme defined and used by those (and other)
  specifications, and therefore cannot be considered a complete
  replacement for them. <a href=#refsXHTMLMOD>[XHTMLMOD]</a> <a href=#refsXHTML11>[XHTML11]</a></p>

  <p>Thus, authors and implementors who do not need such a
  modularization scheme can consider this specification a replacement
  for XHTML 1.x, but those who do need such a mechanism are encouraged
  to continue using the XHTML 1.1 line of specifications.</p>


  <h4 id=relationship-to-xhtml2-and-xforms><span class=secno>1.5.3 </span>Relationship to XHTML2 and XForms</h4>

  <p><em>This section is non-normative.</em></p>

  <p>XHTML2 defines a new vocabulary with features for hyperlinks,
  multimedia content, annotating document edits, rich metadata,
  declarative interactive forms, and describing the semantics of human
  literary works such as poems and scientific papers. <a href=#refsXHTML2>[XHTML2]</a></p>

  <p>XForms similarly defines a new vocabulary with features for
  complex data entry, such as tax forms or insurance forms.</p>

  <p>However, XHTML2 and XForms lack features to express the semantics
  of many of the non-document types of content often seen on the
  Web. For instance, they are not well-suited for marking up forum
  sites, auction sites, search engines, online shops, mapping
  applications, e-mail applications, word processors, real-time
  strategy games, and the like.</p>

  <p><em>This</em> specification aims to extend HTML so that it is
  also suitable in these contexts.</p>

  <p>XHTML2, XForms, and this specification all use different
  namespaces and therefore can all be implemented in the same XML
  processor.</p>


  <h4 id=relationship-to-flash,-silverlight,-xul-and-similar-proprietary-languages><span class=secno>1.5.4 </span>Relationship to Flash, Silverlight, XUL <!-- alphabetical -->
  and similar proprietary languages</h4>

  <p><em>This section is non-normative.</em></p>

  <p>This specification is independent of the various proprietary
  application languages that various vendors provide, but is intended
  to address many of the same problems.</p>

  <p>In contrast with proprietary languages, this specification is
  intended to define an openly-produced, vendor-neutral language, to
  be implemented in a broad range of competing products, across a wide
  range of platforms and devices. This enables developers to write
  applications that are not limited to one vendor's implementation or
  language. Furthermore, while writing applications that target
  vendor-specific platforms necessarily introduces a cost that
  application developers and their customers or users will face if
  they are forced to switch (or desire to switch) to another vendor's
  platform, using an openly-produced and vendor neutral language means
  that application authors can switch vendors with little to no
  cost.</p>


  <h3 id=html-vs-xhtml><span class=secno>1.6 </span>HTML vs XHTML</h3>

  <p><em>This section is non-normative.</em></p>

  <p>This specification defines an abstract language for describing
  documents and applications, and some APIs for interacting with
  in-memory representations of resources that use this language.</p>

  <p>The in-memory representation is known as "DOM5 HTML", or "the
  DOM" for short.</p>

  <p>There are various concrete syntaxes that can be used to transmit
  resources that use this abstract language, two of which are defined
  in this specification.</p>

  <p>The first such concrete syntax is "HTML5". This is the format
  recommended for most authors. It is compatible with all legacy Web
  browsers. If a document is transmitted with the MIME type <code title="">text/html</code>, then it will be processed as an "HTML5"
  document by Web browsers.</p>

  <p>The second concrete syntax uses XML, and is known as
  "XHTML5". When a document is transmitted with an XML MIME type, such
  as <code title="">application/xhtml+xml</code>, then it is processed
  by an XML processor by Web browsers, and treated as an "XHTML5"
  document. Authors are reminded that the processing for XML and HTML
  differs; in particular, even minor syntax errors will prevent an XML
  document from being rendered fully, whereas they would be ignored in
  the "HTML5" syntax.</p>

  <p>The "DOM5 HTML", "HTML5", and "XHTML5" representations cannot all
  represent the same content. For example, namespaces cannot be
  represented using "HTML5", but they are supported in "DOM5 HTML" and
  "XHTML5". Similarly, documents that use the <code><a href=#the-noscript-element>noscript</a></code>
  feature can be represented using "HTML5", but cannot be represented
  with "XHTML5" and "DOM5 HTML". Comments that contain the string
  "<code title="">--&gt;</code>" can be represented in "DOM5 HTML" but
  not in "HTML5" and "XHTML5". And so forth.</p>


  <h3 id=structure-of-this-specification><span class=secno>1.7 </span>Structure of this specification</h3>

  <p><em>This section is non-normative.</em></p>

  <p>This specification is divided into the following major
  sections:</p>

  <dl><dt><a href=#infrastructure>Common Infrastructure</a></dt>

   <dd>The conformance classes, algorithms, definitions, and the
   common underpinnings of the rest of the specification.</dd>


   <dt><a href=#dom>The DOM</a></dt>

   <dd>Documents are built from elements. These elements form a tree
   using the DOM. This section defines the features of this DOM, as
   well as introducing the features common to all elements, and the
   concepts used in defining elements.</dd>


   <dt><a href=#semantics>Elements</a></dt>

   <dd>Each element has a predefined meaning, which is explained in
   this section. User agent requirements for how to handle each
   element are also given, along with rules for authors on how to use
   the element.</dd>


   <dt><a href=#browsers>Web Browsers</a></dt>

   <dd>HTML documents do not exist in a vacuum &mdash; this section
   defines many of the features that affect environments that deal
   with multiple pages, links between pages, and running scripts.</dd>


   <dt><a href=#editing>User Interaction</a></dt>

   <dd>HTML documents can provide a number of mechanisms for users to
   interact with and modify content, which are described in this
   section.</dd>


   <dt><a href=#comms>The Communication APIs</a></dt>

   <dd>Applications written in HTML often require mechanisms to
   communicate with remote servers, as well as communicating with
   other applications from different domains running on the same
   client.</dd>


   <dt><a href=#syntax>The Language Syntax</a></dt>

   <dd>All of these features would be for naught if they couldn't be
   represented in a serialized form and sent to other people, and so
   this section defines the syntax of HTML, along with rules for how
   to parse HTML.</dd>


  </dl><p>There are also a couple of appendices, defining <a href=#rendering>rendering rules</a> for Web browsers and listing
  <a href=#no>areas that are out of scope</a> for this
  specification.</p>


  <h4 id=how-to-read-this-specification><span class=secno>1.7.1 </span>How to read this specification</h4>

  <p>This specification should be read like all other specifications.
  First, it should be read cover-to-cover, multiple times. Then, it
  should be read backwards at least once. Then it should be read by
  picking random sections from the contents list and following all the
  cross-references.</p>


  <h4 id=typographic-conventions><span class=secno>1.7.2 </span>Typographic conventions</h4>

  <p>This is a definition, requirement, or explanation.</p>

  <p class=note>This is a note.</p>

  <p class=example>This is an example.</p>

  <p class=XXX>This is an open issue.</p>

  <p class=warning>This is a warning.</p>

  <p>The defining instance of a term is marked up like <dfn id=x-this title=x-this>this</dfn>. Uses of that term are marked up like
  <a href=#x-this title=x-this>this</a> or like <i title=x-this><a href=#x-this>this</a></i>.</p>

  <p>The defining instance of an element, attribute, or API is marked
  up like <dfn id=x-that title=x-that><code>this</code></dfn>. References to
  that element, attribute, or API are marked up like <code title=x-that><a href=#x-that>this</a></code>.</p>

  <p>Other code fragments are marked up <code title="">like
  this</code>.</p>

  <p>Variables are marked up like <var title="">this</var>.</p>

  <pre class=idl>interface <dfn title="">Example</dfn> {
  // this is an IDL definition
};</pre>



  <h2 id=infrastructure><span class=secno>2 </span>Common infrastructure</h2>

  <h3 id=terminology><span class=secno>2.1 </span>Terminology</h3>

  <p>This specification refers to both HTML and XML attributes and DOM
  attributes, often in the same context. When it is not clear which is
  being referred to, they are referred to as <dfn id=content-attributes>content
  attributes</dfn> for HTML and XML attributes, and <dfn id=dom-attributes>DOM
  attributes</dfn> for those from the DOM. Similarly, the term
  "properties" is used for both ECMAScript object properties and CSS
  properties. When these are ambiguous they are qualified as object
  properties and CSS properties respectively.</p>

  <p>The term <a href=#html-documents>HTML documents</a> is sometimes used in
  contrast with <a href=#xml-documents>XML documents</a> to specifically mean
  documents that were parsed using an <a href=#html-parser>HTML parser</a> (as
  opposed to using an <a href=#xml-parser>XML parser</a> or created purely
  through the DOM).</p>

  <p>Generally, when the specification states that a feature applies
  to HTML or XHTML, it also includes the other. When a feature
  specifically only applies to one of the two languages, it is called
  out by explicitly stating that it does not apply to the other
  format, as in "for HTML, ... (this does not apply to XHTML)".</p>

  <p>This specification uses the term <i>document</i> to
  refer to any use of HTML, ranging from short static documents to
  long essays or reports with rich multimedia, as well as to
  fully-fledged interactive applications.</p>

  <p>For simplicity, terms such as <i>shown</i>, <i>displayed</i>,
  and <i>visible</i> might sometimes be used when referring to the
  way a document is rendered to the user. These terms are not meant to
  imply a visual medium; they must be considered to apply to other
  media in equivalent ways.</p>

  <p>Some of the algorithms in this specification, for historical
  reasons, require the user agent to <dfn id=pause>pause</dfn> until some
  condition has been met. While a user agent is paused, it must ensure
  that no scripts execute (e.g. no event handlers, no timers,
  etc). User agents should remain responsive to user input while
  paused, however, albeit without letting the user interact with Web
  pages where that would involve invoking any <a href=#concept-script title=concept-script>script</a>.</p>


  <h4 id=xml><span class=secno>2.1.1 </span>XML</h4>

  <p id=html-namespace>To ease migration from HTML to XHTML, UAs
  conforming to this specification will place elements in HTML in the
  <code>http://www.w3.org/1999/xhtml</code> namespace, at least for
  the purposes of the DOM and CSS. The term "<dfn id=elements-in-the-html-namespace>elements in the HTML
  namespace</dfn>", or "<dfn id=html-elements>HTML elements</dfn>" for short, when used
  in this specification, thus refers to both HTML and XHTML
  elements.</p>

  <p>Unless otherwise stated, all elements defined or mentioned in
  this specification are in the
  <code>http://www.w3.org/1999/xhtml</code> namespace, and all
  attributes defined or mentioned in this specification have no
  namespace (they are in the per-element partition).</p>

  <p>When an XML name, such as an attribute or element name, is
  referred to in the form <code><var title="">prefix</var>:<var title="">localName</var></code>, as in <code>xml:id</code> or
  <code>svg:rect</code>, it refers to a name with the local name <var title="">localName</var> and the namespace given by the prefix, as
  defined by the following table:</p>

  <dl><dt><code title="">xml</code></dt>
   <dd><code>http://www.w3.org/XML/1998/namespace</code></dd>
   <dt><code title="">html</code></dt>
   <dd><code>http://www.w3.org/1999/xhtml</code></dd>
   <dt><code title="">svg</code></dt>
   <dd><code>http://www.w3.org/2000/svg</code></dd>
  </dl><p>Attribute names are said to be <dfn id=xml-compatible>XML-compatible</dfn> if they
  match the <a href=http://www.w3.org/TR/REC-xml/#NT-Name><code title="">Name</code></a> production defined in XML, they contain no
  U+003A COLON (:) characters, and their first three characters are
  not an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string
  "<code title="">xml</code>". <a href=#refsXML>[XML]</a></p>


  <h4 id=dom-trees><span class=secno>2.1.2 </span>DOM trees</h4>

  <p>The term <dfn id=root-element>root element</dfn>, when not explicitly qualified
  as referring to the document's root element, means the furthest
  ancestor element node of whatever node is being discussed, or the
  node itself if it has no ancestors. When the node is a part of the
  document, then that is indeed the document's root element; however,
  if the node is not currently part of the document tree, the root
  element will be an orphaned node.</p>

  <p>A node's <dfn id=home-subtree>home subtree</dfn> is the subtree rooted at that
  node's <a href=#root-element>root element</a>.</p>

  <p>The <code>Document</code> of a <code>Node</code> (such as an
  element) is the <code>Document</code> that the <code>Node</code>'s
  <code title="">ownerDocument</code> DOM attribute returns.</p>

  <p>An element is said to have been <dfn id=insert-an-element-into-a-document title="insert an element
  into a document">inserted into a document</dfn> when its <a href=#root-element>root
  element</a> changes and is now the document's <a href=#root-element>root
  element</a>. If a <code>Node</code> is in a <code>Document</code>
  then that <code>Document</code> is always the <code>Node</code>'s
  <code>Document</code>, and the <code>Node</code>'s <code title="">ownerDocument</code> DOM attribute thus always returns that
  <code>Document</code>.</p>

  <p>The term <dfn id=tree-order>tree order</dfn> means a pre-order, depth-first
  traversal of DOM nodes involved (through the <code title="">parentNode</code>/<code title="">childNodes</code>
  relationship).</p>

  <p>When it is stated that some element or attribute is <dfn id=ignore title=ignore>ignored</dfn>, or treated as some other value, or
  handled as if it was something else, this refers only to the
  processing of the node after it is in the DOM. A user agent must not
  mutate the DOM in such situations.</p>

  <p>The term <dfn id=text-node>text node</dfn> refers to any <code>Text</code>
  node, including <code>CDATASection</code> nodes; specifically, any
  <code>Node</code> with node type <code title="">TEXT_NODE</code> (3)
  or <code title="">CDATA_SECTION_NODE</code> (4). <a href=#refsDOM3CORE>[DOM3CORE]</a></p>


  <h4 id=scripting-0><span class=secno>2.1.3 </span>Scripting</h4>

  <p>The construction "a <code>Foo</code> object", where
  <code>Foo</code> is actually an interface, is sometimes used instead
  of the more accurate "an object implementing the interface
  <code>Foo</code>".</p>

  <p>A DOM attribute is said to be <i>getting</i> when its value is
  being retrieved (e.g. by author script), and is said to be
  <i>setting</i> when a new value is assigned to it.</p>

  <p>If a DOM object is said to be <dfn id=live>live</dfn>, then that means
  that any attributes returning that object must always return the
  same object (not a new object each time), and the attributes and
  methods on that object must operate on the actual underlying data,
  not a snapshot of the data.</p>

  <p>The terms <i>fire</i> and <i>dispatch</i> are used
  interchangeably in the context of events, as in the DOM Events
  specifications. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>


  <h4 id=plugins><span class=secno>2.1.4 </span>Plugins</h4>

  <p>The term <dfn id=plugin>plugin</dfn> is used to mean any content handler,
  typically a third-party content handler, for Web content types that
  are not supported by the user agent natively, or for content types
  that do not expose a DOM, that supports rendering the content as
  part of the user agent's interface.</p>

  <p class=example>One example of a plugin would be a PDF viewer
  that is instantiated in a <a href=#browsing-context>browsing context</a> when the
  user navigates to a PDF file. This would count as a plugin
  regardless of whether the party that implemented the PDF viewer
  component was the same as that which implemented the user agent
  itself. However, a PDF viewer application that launches separate
  from the user agent (as opposed to using the same interface) is not
  a plugin by this definition.</p>

  <p class=note>This specification does not define a mechanism for
  interacting with plugins, as it is expected to be user-agent- and
  platform-specific. Some UAs might opt to support a plugin mechanism
  such as the Netscape Plugin API; others might use remote content
  converters or have built-in support for certain types. <a href=#refsNPAPI>[NPAPI]</a></p>

  <p class=warning>Browsers should take extreme care when
  interacting with external content intended for <a href=#plugin title=plugin>plugins</a>. When third-party software is run with
  the same privileges as the user agent itself, vulnerabilities in the
  third-party software become as dangerous as those in the user
  agent.</p>


  <h4 id=character-encodings><span class=secno>2.1.5 </span>Character encodings</h4>

  <p>An <dfn id=ascii-compatible-character-encoding>ASCII-compatible character encoding</dfn> is one that is
  a superset of US-ASCII (specifically, ANSI_X3.4-1968) for bytes in
  the set 0x09, 0x0A, 0x0C, 0x0D, 0x20 - 0x22, 0x26, 0x27, 0x2C -
  0x3F, 0x41 - 0x5A, and 0x61 - 0x7A<!-- is that list ok? do any
  character sets we want to support do things outside that range?
  -->. <!-- XXX #refs RFC1345 ? --></p>




  <h3 id=conformance-requirements><span class=secno>2.2 </span>Conformance requirements</h3>

  <p>All diagrams, examples, and notes in this specification are
  non-normative, as are all sections explicitly marked non-normative.
  Everything else in this specification is normative.</p>

  <p>The key words "MUST", "MUST NOT", "REQUIRED", <!--"SHALL", "SHALL
  NOT",--> "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
  "OPTIONAL" in the normative parts of this document are to be
  interpreted as described in RFC2119. For readability, these words do
  not appear in all uppercase letters in this specification. <a href=#refsRFC2119>[RFC2119]</a></p>

  <p>Requirements phrased in the imperative as part of algorithms
  (such as "strip any leading space characters" or "return false and
  abort these steps") are to be interpreted with the meaning of the
  key word ("must", "should", "may", etc) used in introducing the
  algorithm.</p>

  <p>This specification describes the conformance criteria for user
  agents (relevant to implementors) and documents (relevant to
  authors and authoring tool implementors).</p>

  <p class=note>There is no implied relationship between document
  conformance requirements and implementation conformance
  requirements. User agents are not free to handle non-conformant
  documents as they please; the processing model described in this
  specification applies to implementations regardless of the
  conformity of the input documents.</p>



  <!-- put this list into its own section -->

  <p>User agents fall into several (overlapping) categories with
  different conformance requirements.</p>

  <dl><dt id=interactive>Web browsers and other interactive user agents</dt>

   <dd>

    <p>Web browsers that support <a href=#xhtml5>XHTML</a> must process
    elements and attributes from the <a href=#html-namespace-0>HTML namespace</a> found
    in <a href=#xml-documents>XML documents</a> as described in this specification,
    so that users can interact with them, unless the semantics of
    those elements have been overridden by other specifications.</p>

    <p class=example>A conforming XHTML processor would, upon
    finding an XHTML <code><a href=#script>script</a></code> element in an XML document,
    execute the script contained in that element. However, if the
    element is found within a transformation expressed in XSLT
    (assuming the user agent also supports XSLT), then the processor
    would instead treat the <code><a href=#script>script</a></code> element as an opaque
    element that forms part of the transform.</p>

    <p>Web browsers that support <a href=#html5 title=HTML5>HTML</a> must
    process documents labeled as <code>text/html</code> as described
    in this specification, so that users can interact with them.</p>

    <p>User agents that support scripting must also be conforming
    implementations of the IDL fragments in this specification, as
    described in the WebIDL specification. <a href=#refsWebIDL>[WebIDL]</a></p>

   </dd>

   <dt id=non-interactive>Non-interactive presentation user agents</dt>

   <dd>

    <p>User agents that process HTML and XHTML documents purely to
    render non-interactive versions of them must comply to the same
    conformance criteria as Web browsers, except that they are exempt
    from requirements regarding user interaction.</p>

    <p class=note>Typical examples of non-interactive presentation
    user agents are printers (static UAs) and overhead displays
    (dynamic UAs). It is expected that most static non-interactive
    presentation user agents will also opt to <a href=#non-scripted>lack scripting support</a>.</p>

    <p class=example>A non-interactive but dynamic presentation UA
    would still execute scripts, allowing forms to be dynamically
    submitted, and so forth. However, since the concept of "focus" is
    irrelevant when the user cannot interact with the document, the UA
    would not need to support any of the focus-related DOM APIs.</p>

   </dd>

   <dt><dfn id=non-scripted>User agents with no scripting support</dfn></dt>

   <dd>

    <p>Implementations that do not support scripting (or which have
    their scripting features disabled entirely) are exempt from
    supporting the events and DOM interfaces mentioned in this
    specification. For the parts of this specification that are
    defined in terms of an events model or in terms of the DOM, such
    user agents must still act as if events and the DOM were
    supported.</p>

    <p class=note>Scripting can form an integral part of an
    application. Web browsers that do not support scripting, or that
    have scripting disabled, might be unable to fully convey the
    author's intent.</p>

   </dd>

   <dt>Conformance checkers</dt>

   <dd id=conformance-checkers>

    <p>Conformance checkers must verify that a document conforms to
    the applicable conformance criteria described in this
    specification. Automated conformance checkers are exempt from
    detecting errors that require interpretation of the author's
    intent (for example, while a document is non-conforming if the
    content of a <code><a href=#the-blockquote-element>blockquote</a></code> element is not a quote,
    conformance checkers running without the input of human judgement
    do not have to check that <code><a href=#the-blockquote-element>blockquote</a></code> elements only
    contain quoted material).</p>

    <p>Conformance checkers must check that the input document
    conforms when parsed without a <a href=#browsing-context>browsing context</a>
    (meaning that no scripts are run, and that the parser's
    <a href=#scripting-flag>scripting flag</a> is disabled), and should also check
    that the input document conforms when parsed with a <a href=#browsing-context>browsing
    context</a> in which scripts execute, and that the scripts
    never cause non-conforming states to occur other than transiently
    during script execution itself. (This is only a "SHOULD" and not a
    "MUST" requirement because it has been proven to be impossible. <a href=#refsHALTINGPROBLEM>[HALTINGPROBLEM]</a>)</p> <!-- XXX
    [Computable] On computable numbers, with an application to the
    Entscheidungsproblem. Alan M. Turing. In Proceedings of the London
    Mathematical Society, series 2, volume 42, pages 230-265. London
    Mathematical Society,
    1937. http://www.turingarchive.org/browse.php/B/12 (referenced:
    2007-03-03) -->

    <p>The term "HTML5 validator" can be used to refer to a
    conformance checker that itself conforms to the applicable
    requirements of this specification.</p>

    <div class=note>

     <p>XML DTDs cannot express all the conformance requirements of
     this specification. Therefore, a validating XML processor and a
     DTD cannot constitute a conformance checker. Also, since neither
     of the two authoring formats defined in this specification are
     applications of SGML, a validating SGML system cannot constitute
     a conformance checker either.</p>

     <p>To put it another way, there are three types of conformance
     criteria:</p>

     <ol><li>Criteria that can be expressed in a DTD.</li>

      <li>Criteria that cannot be expressed by a DTD, but can still be
      checked by a machine.</li>

      <li>Criteria that can only be checked by a human.</li>

     </ol><p>A conformance checker must check for the first two. A simple
     DTD-based validator only checks for the first class of errors and
     is therefore not a conforming conformance checker according to
     this specification.</p>

    </div>
   </dd>

   <dt>Data mining tools</dt>

   <dd id=data-mining>

    <p>Applications and tools that process HTML and XHTML documents
    for reasons other than to either render the documents or check
    them for conformance should act in accordance to the semantics of
    the documents that they process.</p>

    <p class=example>A tool that generates <a href=#outline title=outline>document outlines</a> but increases the nesting
    level for each paragraph and does not increase the nesting level
    for each section would not be conforming.</p>

   </dd>

   <dt id=editors>Authoring tools and markup generators</dt>

   <dd>

    <p>Authoring tools and markup generators must generate conforming
    documents. Conformance criteria that apply to authors also apply
    to authoring tools, where appropriate.</p>

    <p>Authoring tools are exempt from the strict requirements of
    using elements only for their specified purpose, but only to the
    extent that authoring tools are not yet able to determine author
    intent.</p>

    <p class=example>For example, it is not conforming to use an
    <code><a href=#the-address-element>address</a></code> element for arbitrary contact information;
    that element can only be used for marking up contact information
    for the author of the document or section. However, since an
    authoring tool is likely unable to determine the difference, an
    authoring tool is exempt from that requirement.</p>

    <p class=note>In terms of conformance checking, an editor is
    therefore required to output documents that conform to the same
    extent that a conformance checker will verify.</p>

    <p>When an authoring tool is used to edit a non-conforming
    document, it may preserve the conformance errors in sections of
    the document that were not edited during the editing session
    (i.e. an editing tool is allowed to round-trip erroneous
    content). However, an authoring tool must not claim that the
    output is conformant if errors have been so preserved.</p>

    <p>Authoring tools are expected to come in two broad varieties:
    tools that work from structure or semantic data, and tools that
    work on a What-You-See-Is-What-You-Get media-specific editing
    basis (WYSIWYG).</p>

    <p>The former is the preferred mechanism for tools that author
    HTML, since the structure in the source information can be used to
    make informed choices regarding which HTML elements and attributes
    are most appropriate.</p>

    <p>However, WYSIWYG tools are legitimate. WYSIWYG tools should use
    elements they know are appropriate, and should not use elements
    that they do not know to be appropriate. This might in certain
    extreme cases mean limiting the use of flow elements to just a few
    elements, like <code><a href=#the-div-element>div</a></code>, <code><a href=#the-b-element>b</a></code>, <code><a href=#the-i-element>i</a></code>,
    and <code><a href=#the-span-element>span</a></code> and making liberal use of the <code title=attr-style><a href=#the-style-attribute>style</a></code> attribute.</p>

    <p>All authoring tools, whether WYSIWYG or not, should make a best
    effort attempt at enabling users to create well-structured,
    semantically rich, media-independent content.</p>

   </dd>

  </dl><p>Some conformance requirements are phrased as requirements on
  elements, attributes, methods or objects. Such requirements fall
  into two categories: those describing content model restrictions,
  and those describing implementation behavior. The former category
  of requirements are requirements on documents and authoring
  tools. The second category are requirements on user agents.</p>

  <p>Conformance requirements phrased as algorithms or specific steps
  may be implemented in any manner, so long as the end result is
  equivalent. (In particular, the algorithms defined in this
  specification are intended to be easy to follow, and not intended to
  be performant.)</p>

  <p id=hardwareLimitations>User agents may impose
  implementation-specific limits on otherwise unconstrained inputs,
  e.g. to prevent denial of service attacks, to guard against running
  out of memory, or to work around platform-specific limitations.</p>

  <p>For compatibility with existing content and prior specifications,
  this specification describes two authoring formats: one based on XML
  (referred to as <dfn id=xhtml5 title=XHTML>XHTML5</dfn>), and
  one using a <a href=#parsing>custom format</a> inspired by SGML
  (referred to as <dfn id=html5>HTML5</dfn>). Implementations may
  support only one of these two formats, although supporting both is
  encouraged.</p>

  <p id=authors-using-xhtml><a href=#xhtml5>XHTML</a> documents (<a href=#xml-documents>XML
  documents</a> using elements from the <a href=#html-namespace-0>HTML
  namespace</a>) that use the new features described in this
  specification and that are served over the wire (e.g. by HTTP) must
  be sent using an XML MIME type such as <code>application/xml</code>
  or <code>application/xhtml+xml</code> and must not be served as
  <code>text/html</code>. <a href=#refsRFC3023>[RFC3023]</a></p>

  <p id=authors-using-html><a href=#html5 title=HTML5>HTML
  documents</a>, if they are served over the wire (e.g. by HTTP)
  must be labeled with the <code>text/html</code> MIME type.</p> <!--
  XXX update RFC 2854 -->

  <p id=entity-references>The language in this specification assumes
  that the user agent expands all entity references, and therefore
  does not include entity reference nodes in the DOM. If user agents
  do include entity reference nodes in the DOM, then user agents must
  handle them as if they were fully expanded when implementing this
  specification. For example, if a requirement talks about an
  element's child text nodes, then any text nodes that are children of
  an entity reference that is a child of that element would be used as
  well. Entity references to unknown entities must be treated as if
  they contained just an empty text node for the purposes of the
  algorithms defined in this specification.</p>


  <h4 id=dependencies><span class=secno>2.2.1 </span>Dependencies</h4>

  <p>This specification relies on several other underlying
  specifications.</p>

  <dl><dt>XML</dt>

   <dd>

    <p>Implementations that support XHTML5 must support some version
    of XML, as well as its corresponding namespaces specification,
    because XHTML5 uses an XML serialization with namespaces. <a href=#refsXML>[XML]</a> <a href=#refsXMLNAMES>[XMLNAMES]</a></p>

   </dd>

   <dt>DOM</dt>

   <dd>

    <p>The Document Object Model (DOM) is a representation &mdash; a
    model &mdash; of a document and its content. The DOM is not just
    an API; the conformance criteria of HTML implementations are
    defined, in this specification, in terms of operations on the DOM.
    <a href=#refsDOM3CORE>[DOM3CORE]</a></p>

    <p>Implementations must support some version of DOM Core and DOM
    Events, because this specification is defined in terms of the DOM,
    and some of the features are defined as extensions to the DOM Core
    interfaces. <a href=#refsDOM3CORE>[DOM3CORE]</a> <a href=#refsDOM3CORE>[DOM3EVENTS]</a></p>

   </dd>

   <dt>ECMAScript</dt>

   <dd>

    <p>The IDL fragments in this specification must be interpreted as
    required for conforming IDL fragments, as described in the Web IDL
    specification. <a href=#refsWebIDL>[WebIDL]</a></p>

   </dd>

   <dt id=mq>Media Queries</dt>

   <dd>

    <p>Implementations must support some version of the Media Queries
    language. <a href=#refsMQ>[MQ]</a></p>

   </dd>

  </dl><p>This specification does not require support of any particular
  network transport protocols, style sheet language, scripting
  language, or any of the DOM and WebAPI specifications beyond those
  described above. However, the language described by this
  specification is biased towards CSS as the styling language,
  ECMAScript as the scripting language, and HTTP as the network
  protocol, and several features assume that those languages and
  protocols are in use.</p>

  <p class=note>This specification might have certain additional
  requirements on character encodings, image formats, audio formats,
  and video formats in the respective sections.</p>


  <h4 id=features-defined-in-other-specifications><span class=secno>2.2.2 </span>Features defined in other specifications</h4>

  <p class=XXX>this section will be removed at some point</p>

  <p>Some elements are defined in terms of their DOM
  <dfn id=textcontent><code>textContent</code></dfn> attribute. This is an attribute
  defined on the <code>Node</code> interface in DOM3 Core. <a href=#refsDOM3CORE>[DOM3CORE]</a></p>

  <!-- This section is currently here exclusively so that we crossref
  to textContent. XXX also add event-click, event-change,
  event-DOMActivate, etc, here, once DOM3 Events is ready for that,
  and just have the section be a general "defined in other
  specifications" section -->

  <p>The interface <dfn id=domtimestamp><code>DOMTimeStamp</code></dfn> is defined in
  DOM3 Core. <a href=#refsDOM3CORE>[DOM3CORE]</a></p>

  <p id=alternate-style-sheets>The rules for handling alternative
  style sheets are defined in the CSS object model specification. <a href=#refsCSSOM>[CSSOM]</a></p>

  <p class=XXX>See <a href="http://dev.w3.org/cvsweb/~checkout~/csswg/cssom/Overview.html?content-type=text/html;%20charset=utf-8">http://dev.w3.org/cvsweb/~checkout~/csswg/cssom/Overview.html?content-type=text/html;%20charset=utf-8</a></p>
  <!--XXX empty title attribute is equivalent to missing attribute for
  purposes of alternate style sheet processing -->


  <h4 id=common-conformance-requirements-for-apis-exposed-to-javascript><span class=secno>2.2.3 </span>Common conformance requirements for APIs exposed to
  JavaScript</h4>

  <p class=XXX>This section will eventually be removed in favour of WebIDL.</p>

  <p class=XXX>A lot of arrays/lists/<a href=#collections-0 title=collections>collection</a>s
  in this spec assume zero-based indexes but use the term "<var title="">index</var>th" liberally. We should define those to be
  zero-based and be clearer about this.</p>

  <p>Unless otherwise specified, if a DOM attribute that is a floating
  point number type (<code title="">float</code>) is assigned an
  Infinity or Not-a-Number value, a <code class=XXX><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception must be
  raised.</p>

  <p>Unless otherwise specified, if a method with an argument that is a
  floating point number type (<code title="">float</code>) is passed
  an Infinity or Not-a-Number value, a <code class=XXX><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception must be
  raised.</p>

  <!-- XXX DOMB -->
  <p>Unless otherwise specified, if a method is passed fewer
  arguments than is defined for that method in its IDL definition,
  a <code class=XXX><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception must be
  raised.</p>

  <!-- XXX DOMB -->
  <p>Unless otherwise specified, if a method is passed more arguments than
  is defined for that method in its IDL definition, the excess
  arguments must be ignored.</p>
  



  <h3 id=case-sensitivity-and-string-comparison><span class=secno>2.3 </span>Case-sensitivity and string comparison</h3>

  <p>This specification defines several comparison operators for
  strings.</p>

  <p>Comparing two strings in a <dfn id=case-sensitive>case-sensitive</dfn> manner means
  comparing them exactly, codepoint for codepoint.</p>

  <p>Comparing two strings in an <dfn id=ascii-case-insensitive>ASCII case-insensitive</dfn>
  manner means comparing them exactly, codepoint for codepoint, except
  that the characters in the range U+0041 .. U+005A (i.e. LATIN
  CAPITAL LETTER A to LATIN CAPITAL LETTER Z) and the corresponding
  characters in the range U+0061 .. U+007A (i.e. LATIN SMALL LETTER A
  to LATIN SMALL LETTER Z) are considered to also match.</p>

  <p>Comparing two strings in a <dfn id=compatibility-caseless>compatibility caseless</dfn>
  manner means using the Unicode <i>compatibility caseless match</i>
  operation to compare the two strings. <a href=#refsUNICODECASE>[UNICODECASE]</a></p> <!-- XXX refs to
  Unicode Standard Annex #21, Case Mappings -->

  <p><dfn id=converted-to-uppercase title="converted to uppercase">Converting a string to
  uppercase</dfn> means replacing all characters in the range U+0061
  .. U+007A (i.e. LATIN SMALL LETTER A to LATIN SMALL LETTER Z) with
  the corresponding characters in the range U+0041 .. U+005A
  (i.e. LATIN CAPITAL LETTER A to LATIN CAPITAL LETTER Z).</p>

  <p><dfn id=converted-to-lowercase title="converted to lowercase">Converting a string to
  lowercase</dfn> means replacing all characters in the range U+0041
  .. U+005A (i.e. LATIN CAPITAL LETTER A to LATIN CAPITAL LETTER Z)
  with the corresponding characters in the range U+0061 .. U+007A
  (i.e. LATIN SMALL LETTER A to LATIN SMALL LETTER Z).</p>

  <p>A string <var title="">pattern</var> is a <dfn id=prefix-match>prefix match</dfn>
  for a string <var title="">s</var> when <var title="">pattern</var>
  is not longer than <var title="">s</var> and truncating <var title="">s</var> to <var title="">pattern</var>'s length leaves the
  two strings as matches of each other.</p>



  <h3 id=common-microsyntaxes><span class=secno>2.4 </span>Common microsyntaxes</h3>

  <p>There are various places in HTML that accept particular data
  types, such as dates or numbers. This section describes what the
  conformance criteria for content in those formats is, and how to
  parse them.</p>

  <!-- XXX need to define how to handle U+000A LINE FEED and U+000D
  CARRIAGE RETURN in attributes (for HTML) -->

  <p class=XXX>Need to go through the whole spec and make sure
  all the attribute values are clearly defined either in terms of
  microsyntaxes or in terms of other specs, or as "Text" or some
  such.</p>



  <h4 id=common-parser-idioms><span class=secno>2.4.1 </span>Common parser idioms</h4>

  <p>The <dfn id=space-character title="space character">space characters</dfn>, for the
  purposes of this specification, are U+0020 SPACE, U+0009 CHARACTER
  TABULATION (tab), U+000A LINE FEED (LF), U+000C FORM FEED (FF), and
  U+000D CARRIAGE RETURN (CR).</p>

  <p>The <dfn id=white_space title=White_Space>White_Space characters</dfn> are
  those that have the Unicode property "White_Space". <a href=#refsUNICODE>[UNICODE]</a></p>

  <p>Some of the micro-parsers described below follow the pattern of
  having an <var title="">input</var> variable that holds the string
  being parsed, and having a <var title="">position</var> variable
  pointing at the next character to parse in <var title="">input</var>.</p>

  <p>For parsers based on this pattern, a step that requires the user
  agent to <dfn id=collect-a-sequence-of-characters>collect a sequence of characters</dfn> means that the
  following algorithm must be run, with <var title="">characters</var>
  being the set of characters that can be collected:</p>

  <ol><li><p>Let <var title="">input</var> and <var title="">position</var> be the same variables as those of the same
   name in the algorithm that invoked these steps.</li>

   <li><p>Let <var title="">result</var> be the empty string.</li>

   <li><p>While <var title="">position</var> doesn't point past the
   end of <var title="">input</var> and the character at <var title="">position</var> is one of the <var title="">characters</var>, append that character to the end of <var title="">result</var> and advance <var title="">position</var> to
   the next character in <var title="">input</var>.</li>

   <li><p>Return <var title="">result</var>.</li>

  </ol><p>The step <dfn id=skip-whitespace>skip whitespace</dfn> means that the user agent
  must <a href=#collect-a-sequence-of-characters>collect a sequence of characters</a> that are <a href=#space-character title="space character">space characters</a>. The step <dfn id=skip-white_space-characters>skip
  White_Space characters</dfn> means that the user agent must
  <a href=#collect-a-sequence-of-characters>collect a sequence of characters</a> that are
  <a href=#white_space>White_Space</a> characters. In both cases, the collected
  characters are not used. <a href=#refsUNICODE>[UNICODE]</a></p>

  <p>When a user agent is to <dfn id=strip-line-breaks>strip line breaks</dfn> from a
  string, the user agent must remove any U+000A LINE FEED (LF) and
  U+000D CARRIAGE RETURN (CR) characters from that string.</p>

  <p>The <dfn id=codepoint-length>codepoint length</dfn> of a string is the number of
  Unicode codepoints in that string.</p>



  <h4 id=boolean-attributes><span class=secno>2.4.2 </span>Boolean attributes</h4>

  <p>A number of attributes in HTML5 are <dfn id=boolean-attribute title="boolean
  attribute">boolean attributes</dfn>. The presence of a boolean
  attribute on an element represents the true value, and the absence
  of the attribute represents the false value.</p>

  <p>If the attribute is present, its value must either be the empty
  string or a value that is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a>
  match for the attribute's canonical name, with no leading or
  trailing whitespace.</p>

  <p class=note>The values "true" and "false" are not allowed on
  boolean attributes. To represent a false value, the attribute has to
  be omitted altogether.</p>


  <h4 id=numbers><span class=secno>2.4.3 </span>Numbers</h4>

  <h5 id=non-negative-integers><span class=secno>2.4.3.1 </span>Non-negative integers</h5>

  <p>A string is a <dfn id=valid-non-negative-integer>valid non-negative integer</dfn> if it
  consists of one of more characters in the range U+0030 DIGIT ZERO
  (0) to U+0039 DIGIT NINE (9).</p>

  <p>A <a href=#valid-non-negative-integer>valid non-negative integer</a> represents the number
  that is represented in base ten by that string of digits.</p>

  <p>The <dfn id=rules-for-parsing-non-negative-integers>rules for parsing non-negative integers</dfn> are as
  given in the following algorithm. When invoked, the steps must be
  followed in the order given, aborting at the first step that returns
  a value. This algorithm will either return zero, a positive integer,
  or an error. Leading spaces are ignored. Trailing spaces and indeed
  any trailing garbage characters are ignored.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>Let <var title="">value</var> have the value 0.</li>

   <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

   <li><p>If the next character is a U+002B PLUS SIGN character (+),
   advance <var title="">position</var> to the next character.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

   <li><p>If the next character is not one of U+0030 DIGIT ZERO (0)
   .. U+0039 DIGIT NINE (9), then return an error.</li>

   <!-- Ok. At this point we know we have a number. It might have
   trailing garbage which we'll ignore, but it's a number, and we
   won't return an error. -->

   <li>

    <p>If the next character is one of U+0030 DIGIT ZERO (0) .. U+0039
    DIGIT NINE (9):</p>

    <ol><li>Multiply <var title="">value</var> by ten.</li>

     <li>Add the value of the current character (0..9) to <var title="">value</var>.</li>

     <li>Advance <var title="">position</var> to the next
     character.</li>

     <li>If <var title="">position</var> is not past the end of <var title="">input</var>, return to the top of step 7 in the overall
     algorithm (that's the step within which these substeps find
     themselves).</li>

    </ol></li>

   <li><p>Return <var title="">value</var>.</li>

  </ol><h5 id=signed-integers><span class=secno>2.4.3.2 </span>Signed integers</h5>

  <p>A string is a <dfn id=valid-integer>valid integer</dfn> if it consists of one of
  more characters in the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT
  NINE (9), optionally prefixed with a U+002D HYPHEN-MINUS ("-")
  character.</p>

  <p>A <a href=#valid-integer>valid integer</a> without a U+002D HYPHEN-MINUS ("-")
  prefix represents the number that is represented in base ten by that
  string of digits. A <a href=#valid-integer>valid integer</a> <em>with</em> a
  U+002D HYPHEN-MINUS ("-") prefix represents the number represented
  in base ten by the string of digits that follows the U+002D
  HYPHEN-MINUS, subtracted from zero.</p>

  <p>The <dfn id=rules-for-parsing-integers>rules for parsing integers</dfn> are similar to the
  <a href=#rules-for-parsing-non-negative-integers title="rules for parsing non-negative integers">rules for
  non-negative integers</a>, and are as given in the following
  algorithm. When invoked, the steps must be followed in the order
  given, aborting at the first step that returns a value. This
  algorithm will either return an integer or an error. Leading spaces
  are ignored. Trailing spaces and trailing garbage characters are
  ignored.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>Let <var title="">value</var> have the value 0.</li>

   <li><p>Let <var title="">sign</var> have the value
   "positive".</li>

   <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

   <li>

    <p>If the character indicated by <var title="">position</var> (the
    first character) is a U+002D HYPHEN-MINUS ("-") character:</p>

    <ol><li>Let <var title="">sign</var> be "negative".</li>

     <li>Advance <var title="">position</var> to the next
     character.</li>

     <li>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

    </ol></li>

   <li><p>If the next character is not one of U+0030 DIGIT ZERO (0)
   .. U+0039 DIGIT NINE (9), then return an error.</li>

   <!-- Ok. At this point we know we have a number. It might have
   trailing garbage which we'll ignore, but it's a number, and we
   won't return an error. -->

   <li>

    <p>If the next character is one of U+0030 DIGIT ZERO (0) .. U+0039
    DIGIT NINE (9):</p>

    <ol><li>Multiply <var title="">value</var> by ten.</li>

     <li>Add the value of the current character (0..9) to <var title="">value</var>.</li>

     <li>Advance <var title="">position</var> to the next
     character.</li>

     <li>If <var title="">position</var> is not past the end of <var title="">input</var>, return to the top of step 9 in the overall
     algorithm (that's the step within which these substeps find
     themselves).</li>

    </ol></li>

   <li><p>If <var title="">sign</var> is "positive", return <var title="">value</var>, otherwise return 0-<var title="">value</var>.</li>

  </ol><h5 id=real-numbers><span class=secno>2.4.3.3 </span>Real numbers</h5>

  <p>A string is a <dfn id=valid-floating-point-number>valid floating point number</dfn> if it
  consists of:</p>

  <ol class=brief><li>Optionally, a U+002D HYPHEN-MINUS ("-") character.</li>

   <li>A series of one or more characters in the range U+0030 DIGIT
   ZERO (0) to U+0039 DIGIT NINE (9).</li>

   <li>Optionally:

    <ol><li>A single U+002E FULL STOP (".") character.</li>

     <li>A series of one or more characters in the range U+0030 DIGIT
     ZERO (0) to U+0039 DIGIT NINE (9).</li>

    </ol></li>

   <li>Optionally:

    <ol><li>Either a U+0065 LATIN SMALL LETTER E character or a U+0045
     LATIN CAPITAL LETTER E character.</li>

     <li>Optionally, a U+002D HYPHEN-MINUS ("-") character or U+002B
     PLUS SIGN ("+") character.</li>

     <li>A series of characters in the range U+0030 DIGIT ZERO (0) to
     U+0039 DIGIT NINE (9).</li>

    </ol></li>

  </ol><p>A <a href=#valid-floating-point-number>valid floating point number</a> represents the number
  obtained by multiplying the significand by ten raised to the power
  of the exponent, where the significand is the first number,
  interpreted as base ten (including the decimal point and the number
  after the decimal point, if any, and interpreting the significand as
  a negative number if the whole string starts with a U+002D
  HYPHEN-MINUS ("-") character and the number is not zero), and where
  the exponent is the number after the E, if any (interpreted as a
  negative number if there is a U+002D HYPHEN-MINUS ("-") character
  between the E and the number and the number is not zero, or else
  ignoring a U+002B PLUS SIGN ("+") character between the E and the
  number if there is one). If there is no E, then the exponent is
  treated as zero.</p>

  <p class=note>The values &plusmn;Infinity and NaN are not <a href=#valid-floating-point-number title="valid floating point number">valid floating point
  numbers</a>.</p>

  <p>The <dfn id=best-representation-of-the-floating-point-number>best representation of the floating point number</dfn>
  <var title="">n</var> is the string obtained from applying the
  ECMAScript operator ToString to <var title="">n</var>.</p>

  <p>The <dfn id=rules-for-parsing-floating-point-number-values>rules for parsing floating point number values</dfn> are
  as given in the following algorithm. As with the previous
  algorithms, when this one is invoked, the steps must be followed in
  the order given, aborting at the first step that returns
  something. This algorithm will either return a number or an
  error. Leading spaces are ignored. Trailing spaces and garbage
  characters are ignored.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>Let <var title="">value</var> have the value 1.</li>

   <li><p>Let <var title="">divisor</var> have the value 1.</li>

   <li><p>Let <var title="">exponent</var> have the value 1.</li>

   <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

   <li>

    <p>If the character indicated by <var title="">position</var> is a
    U+002D HYPHEN-MINUS ("-") character:</p>

    <ol><li>Change <var title="">value</var> and <var title="">divisor</var> to &minus;1.</li>

     <li>Advance <var title="">position</var> to the next
     character.</li>

     <li>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

    </ol></li>

   <li><p>If the character indicated by <var title="">position</var>
   is not one of U+0030 DIGIT ZERO (0) .. U+0039 DIGIT NINE (9), then
   return an error.</li>

   <!-- Ok. At this point we know we have a number. It might have
   trailing garbage which we'll ignore, but it's a number, and we
   won't return an error. -->

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), and interpret the
   resulting sequence as a base-ten integer. Multiply <var title="">value</var> by that integer.</li>

   <li>If <var title="">position</var> is past the end of <var title="">input</var>, return <var title="">value</var>.</li>

   <li><p>If the character indicated by <var title="">position</var>
   is a U+002E FULL STOP ("."), run these substeps:</p>

    <ol><li><p>Advance <var title="">position</var> to the next
     character.</li>

     <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, or if the character indicated by <var title="">position</var> is not one of U+0030 DIGIT ZERO (0)
     .. U+0039 DIGIT NINE (9), then return <var title="">value</var>.</li>

     <li><p><i>Fraction loop</i>: Multiply <var title="">divisor</var>
     by ten.</li>

     <li>Add the value of the current character interpreted as a
     base-ten digit (0..9) divided by <var title="">divisor</var>, to
     <var title="">value</var>.</li>

     <li><p>Advance <var title="">position</var> to the next
     character.</li>

     <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, then return <var title="">value</var>.</li>

     <li><p>If the character indicated by <var title="">position</var>
     is one of U+0030 DIGIT ZERO (0) .. U+0039 DIGIT NINE (9), return
     to the step labeled <i>fraction loop</i> in these
     substeps.</li>

    </ol></li>

   <li><p>If the character indicated by <var title="">position</var>
   is a U+0065 LATIN SMALL LETTER E character or a U+0045 LATIN
   CAPITAL LETTER E character, run these substeps:</p>

    <ol><li><p>Advance <var title="">position</var> to the next
     character.</li>

     <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, then return <var title="">value</var>.</li>

     <li>

      <p>If the character indicated by <var title="">position</var> is
      a U+002D HYPHEN-MINUS ("-") character:</p>

      <ol><li>Change <var title="">exponent</var> to &minus;1.</li>

       <li>Advance <var title="">position</var> to the next
       character.</li>

       <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, then return <var title="">value</var>.</li>

      </ol><p>Otherwise, if the character indicated by <var title="">position</var> is a U+002B PLUS SIGN ("+")
      character:</p>

      <ol><li>Advance <var title="">position</var> to the next
       character.</li>

       <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, then return <var title="">value</var>.</li>

      </ol></li>

     <li><p>If the character indicated by <var title="">position</var>
     is not one of U+0030 DIGIT ZERO (0) .. U+0039 DIGIT NINE (9),
     then return <var title="">value</var>.</li>

     <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
     U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), and interpret the
     resulting sequence as a base-ten integer. Multiply <var title="">exponent</var> by that integer.</li>

     <li><p>Multiply <var title="">value</var> by ten raised to the
     <var title="">exponent</var>th power.</li>

    </ol></li>

   <li><p>Return <var title="">value</var>.</li>

  </ol><h5 id=ratios><span class=secno>2.4.3.4 </span>Ratios</h5>

  <p class=note>The algorithms described in this section are used by
  the <code><a href=#the-progress-element>progress</a></code> and <code><a href=#the-meter-element>meter</a></code> elements.</p>

  <p>A <dfn id=valid-denominator-punctuation-character>valid denominator punctuation character</dfn> is one of
  the characters from the table below. There is <dfn id=values-associated-with-denominator-punctuation-characters title="values
  associated with denominator punctuation characters">a value
  associated with each denominator punctuation character</dfn>, as
  shown in the table below.</p>

  <table><thead><tr><th colspan=2>Denominator Punctuation Character</th>
     <th>Value</th>
    <tbody><tr><td>U+0025 PERCENT SIGN</td>
     <td>%</td>
     <td>100</td>
    <tr><td>U+066A ARABIC PERCENT SIGN</td>
     <td>&#1642;</td>
     <td>100</td>
    <tr><td>U+FE6A SMALL PERCENT SIGN</td>
     <td>&#65130;</td>
     <td>100</td>
    <tr><td>U+FF05 FULLWIDTH PERCENT SIGN</td>
     <td>&#65285;</td>
     <td>100</td>
    <tr><td>U+2030 PER MILLE SIGN</td>
     <td>&permil;</td>
     <td>1000</td>
    <tr><td>U+2031 PER TEN THOUSAND SIGN</td>
     <td>&#8241;</td>
     <td>10000</td>
    </table><p>The <dfn id=steps-for-finding-one-or-two-numbers-of-a-ratio-in-a-string>steps for finding one or two numbers of a ratio in a
  string</dfn> are as follows:</p>

  <ol><li>If the string is empty, then return nothing and abort these
   steps.</li>

   <li><a href=#find-a-number>Find a number</a> in the string according to the
   algorithm below, starting at the start of the string.</li>

   <li>If the sub-algorithm in step 2 returned nothing or returned an
   error condition, return nothing and abort these steps.</li>

   <li>Set <var title="">number1</var> to the number returned by the
   sub-algorithm in step 2.</li>

   <li>Starting with the character immediately after the last one
   examined by the sub-algorithm in step 2, skip all
   <a href=#white_space>White_Space</a> characters in the string (this might match
   zero characters).</li>

   <li>If there are still further characters in the string, and the
   next character in the string is a <a href=#valid-denominator-punctuation-character>valid denominator
   punctuation character</a>, set <var title="">denominator</var>
   to that character.</li>

   <li>If the string contains any other characters in the range U+0030
   DIGIT ZERO to U+0039 DIGIT NINE, but <var title="">denominator</var> was
   given a value in the step 6, return nothing and abort these
   steps.</li>

   <li>Otherwise, if <var title="">denominator</var> was given a value
   in step 6, return <var title="">number1</var> and <var title="">denominator</var> and abort these steps.</li>

   <li><a href=#find-a-number>Find a number</a> in the string again, starting
   immediately after the last character that was examined by the
   sub-algorithm in step 2.</li>

   <li>If the sub-algorithm in step 9 returned nothing or an error
   condition, return <var title="">number1</var> and abort these
   steps.</li>

   <li>Set <var title="">number2</var> to the number returned by the
   sub-algorithm in step 9.</li>

   <li>Starting with the character immediately after the last one
   examined by the sub-algorithm in step 9, skip all
   <a href=#white_space>White_Space</a> characters in the string (this might match
   zero characters).</li>

   <li>If there are still further characters in the string, and the
   next character in the string is a <a href=#valid-denominator-punctuation-character>valid denominator
   punctuation character</a>, return nothing and abort these
   steps.</li>

   <li>If the string contains any other characters in the range U+0030
   DIGIT ZERO to U+0039 DIGIT NINE, return nothing and abort these
   steps.</li>
 
   <li>Otherwise, return <var title="">number1</var> and
   <var title="">number2</var>.</li>

  </ol><p>The algorithm to <dfn id=find-a-number>find a number</dfn> is as follows. It is
  given a string and a starting position, and returns either nothing,
  a number, or an error condition.</p>

  <ol><li>Starting at the given starting position, ignore all characters
   in the given string until the first character that is either a
   U+002E FULL STOP or one of the ten characters in the range U+0030
   DIGIT ZERO to U+0039 DIGIT NINE.</li>

   <li>If there are no such characters, return nothing and abort these
   steps.</li>

   <li>Starting with the character matched in step 1, collect all the
   consecutive characters that are either a U+002E FULL STOP or one of
   the ten characters in the range U+0030 DIGIT ZERO to U+0039 DIGIT
   NINE, and assign this string of one or more characters to
   <var title="">string</var>.</li>

   <li>If <var title="">string</var> consists of just a single U+002E
   FULL STOP character or if it contains more than one U+002E FULL
   STOP character then return an error condition and abort these
   steps.</li>

   <li>Parse <var title="">string</var> according to the <a href=#rules-for-parsing-floating-point-number-values>rules
   for parsing floating point number values</a>, to obtain <var title="">number</var>. This step cannot fail (<var title="">string</var> is guaranteed to be a <a href=#valid-floating-point-number>valid floating
   point number</a>).</li>

   <li>Return <var title="">number</var>.</li>

  </ol><h5 id=percentages-and-dimensions><span class=secno>2.4.3.5 </span>Percentages and lengths</h5>
<!--(percentages are not used in html5)
  <p>A string is a <dfn>valid dimension value</dfn> if it consists of
  a character in the range U+0031 DIGIT ONE (1) to U+0039 DIGIT NINE
  (9), optionally followed by zero of more characters in the range
  U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), optionally followed
  by a U+002E FULL STOP character (.) and one of more characters in
  the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), and
  optionally suffixed by a U+0025 PERCENT SIGN character (%).</p>

  <p>A <span>valid dimension value</span> represents the number that
  is represented in base ten by that string of digits, optionally with
  a fractional component. If the U+0025 PERCENT SIGN is present, then
  the dimension is a percentage; otherwise, it is a length.</p>

  <p class="note">For historical reasons, percentanges and lengths
  less than 1.0 cannot be represented as <span title="valid dimension
  value">valid dimension values</span>.</p>
-->
  <p>The <dfn id=rules-for-parsing-dimension-values>rules for parsing dimension values</dfn> are as given in
  the following algorithm. When invoked, the steps must be followed in
  the order given, aborting at the first step that returns a
  value. This algorithm will either return a number greater than or
  equal to 1.0, or an error; if a number is returned, then it is
  further categorised as either a percentage or a length.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

   <li><p>If the next character is a U+002B PLUS SIGN character (+),
   advance <var title="">position</var> to the next character.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> that are
   U+0030 DIGIT ZERO (0) characters, and discard them.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return an error.</li>

   <li><p>If the next character is not one of U+0031 DIGIT ONE (1)
   .. U+0039 DIGIT NINE (9), then return an error.</li>

   <!-- Ok. At this point we know we have a number. It might have
   trailing garbage which we'll ignore, but it's a number, and we
   won't return an error. -->

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), and interpret the
   resulting sequence as a base-ten integer. Let <var title="">value</var> be that number.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return <var title="">value</var> as an
   integer.</li>

   <li>

    <p>If the next character is a U+002E FULL STOP character (.):</p>

    <ol><li><p>Advance <var title="">position</var> to the next
     character.</li>

     <li><p>If the next character is not one of U+0030 DIGIT ZERO (0)
     .. U+0039 DIGIT NINE (9), then return <var title="">value</var>
     as an integer.</li>

     <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
     U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). Let <var title="">length</var> be the number of characters collected. Let
     <var title="">fraction</var> be the result of interpreting the
     collected characters as a base-ten integer, and then dividing
     that number by <span title="">10<sup title=""><var title="">length</var></sup></span>.</li>

     <li><p>Increment <var title="">value</var> by <var title="">fraction</var>.</li>

    </ol></li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, return <var title="">value</var> as a
   length.</li>

   <li><p>If the next character is a U+0025 PERCENT SIGN character
   (%), return <var title="">value</var> as a percentage.</li>

   <li><p>Return <var title="">value</var> as a length.</li>

  </ol><h5 id=lists-of-integers><span class=secno>2.4.3.6 </span>Lists of integers</h5>

  <p>A <dfn id=valid-list-of-integers>valid list of integers</dfn> is a number of <a href=#valid-integer title="valid integer">valid integers</a> separated by U+002C
  COMMA characters, with no other characters (e.g. no <a href=#space-character title="space character">space characters</a>). In addition, there
  might be restrictions on the number of integers that can be given,
  or on the range of values allowed.</p>

  <p>The <dfn id=rules-for-parsing-a-list-of-integers>rules for parsing a list of integers</dfn> are as
  follows:</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>Let <var title="">numbers</var> be an initially empty list
   of integers. This list will be the result of this
   algorithm.</li>

   <li><p>If there is a character in the string <var title="">input</var> at position <var title="">position</var>, and
   it is either a U+0020 SPACE, U+002C COMMA, or U+003B SEMICOLON
   character, then advance <var title="">position</var> to the next
   character in <var title="">input</var>, or to beyond the end of the
   string if there are no more characters.</li>

   <li><p>If <var title="">position</var> points to beyond the end of
   <var title="">input</var>, return <var title="">numbers</var> and
   abort.</li>

   <li><p>If the character in the string <var title="">input</var> at
   position <var title="">position</var> is a U+0020 SPACE, U+002C
   COMMA, or U+003B SEMICOLON character, then return to step 4.</li>

   <li><p>Let <var title="">negated</var> be false.</li>
   <li><p>Let <var title="">value</var> be 0.</li>

   <li><p>Let <var title="">started</var> be false. This variable is
   set to true when the parser sees a number or a "<code title="">-</code>" character.</li>

   <li><p>Let <var title="">got number</var> be false. This variable
   is set to true when the parser sees a number.</li>

   <li><p>Let <var title="">finished</var> be false. This variable is
   set to true to switch parser into a mode where it ignores
   characters until the next separator.</li>

   <li><p>Let <var title="">bogus</var> be false.</li>

   <li><p><em>Parser:</em> If the character in the string <var title="">input</var> at position <var title="">position</var>
   is:</p>

    <dl class=switch><dt>A U+002D HYPHEN-MINUS character</dt>

     <dd>

      <p>Follow these substeps:</p>

      <ol><li>If <var title="">got number</var> is true, let <var title="">finished</var> be true.</li>

       <li>If <var title="">finished</var> is true, skip to the next
       step in the overall set of steps.</li>

       <li>If <var title="">started</var> is true, let <var title="">negated</var> be false.</li>

       <li>Otherwise, if <var title="">started</var> is false and if <var title="">bogus</var> is false, let <var title="">negated</var>
       be true.</li>

       <li>Let <var title="">started</var> be true.</li>

      </ol></dd>


     <dt>A character in the range U+0030 DIGIT ZERO .. U+0039 DIGIT
     NINE</dt>

     <dd>

      <p>Follow these substeps:</p>

      <ol><li>If <var title="">finished</var> is true, skip to the next
       step in the overall set of steps.</li>

       <li>Multiply <var title="">value</var> by ten.</li>

       <li>Add the value of the digit, interpreted in base ten, to
       <var title="">value</var>.</li>

       <li>Let <var title="">started</var> be true.</li>

       <li>Let <var title="">got number</var> be true.</li>

      </ol></dd>


     <dt>A U+0020 SPACE character</dt>
     <dt>A U+002C COMMA character</dt>
     <dt>A U+003B SEMICOLON character</dt>

     <dd>

      <p>Follow these substeps:</p>

      <ol><li>If <var title="">got number</var> is false, return the <var title="">numbers</var> list and abort. This happens if an entry
       in the list has no digits, as in "<code title="">1,2,x,4</code>".</li>

       <li>If <var title="">negated</var> is true, then negate <var title="">value</var>.</li>

       <li>Append <var title="">value</var> to the <var title="">numbers</var> list.</li>

       <li>Jump to step 4 in the overall set of steps.</li>

      </ol></dd>


     <dt>A U+002E FULL STOP character</dt>
 <!--
 Test: http://www.hixie.ch/tests/adhoc/html/flow/image-maps/004-demo.html
 IE6 on Wine treats the following characters like this also: U+1-U+1f,
 U+21-U+2b, U+2d-U+2f, U+3a, U+3c-U+40, U+5b-U+60, U+7b-U+82,
 U+84-U+89, U+8b, U+8d, U+8f-U+99, U+9b, U+9d, U+a0-U+bf, U+d7, U+f7,
 U+1f6-U+1f9, U+218-U+24f, U+2a9-U+385, U+387, U+38b, U+38d, U+3a2,
 U+3cf, U+3d7-U+3d9, U+3db, U+3dd, U+3df, U+3e1, U+3f4-U+400, U+40d,
 U+450, U+45d, U+482-U+48f, U+4c5-U+4c6, U+4c9-U+4ca, U+4cd-U+4cf,
 U+4ec-U+4ed, U+4f6-U+4f7, U+4fa-U+530, U+557-U+560, U+588-U+5cf,
 U+5eb-U+5ef, U+5f3-U+620, U+63b-U+640, U+64b-U+670, U+6b8-U+6b9,
 U+6bf, U+6cf, U+6d4, U+6d6-U+904, U+93a-U+957, U+962-U+984,
 U+98d-U+98e, U+991-U+992, U+9a9, U+9b1, U+9b3-U+9b5, U+9ba-U+9db,
 U+9de, U+9e2-U+9ef, U+9f2-U+a04, U+a0b-U+a0e, U+a11-U+a12, U+a29,
 U+a31, U+a34, U+a37, U+a3a-U+a58, U+a5d, U+a5f-U+a84, U+a8c, U+a8e,
 U+a92, U+aa9, U+ab1, U+ab4, U+aba-U+adf, U+ae1-U+b04, U+b0d-U+b0e,
 U+b11-U+b12, U+b29, U+b31, U+b34-U+b35, U+b3a-U+b5b, U+b5e,
 U+b62-U+b84, U+b8b-U+b8d, U+b91, U+b96-U+b98, U+b9b, U+b9d,
 U+ba0-U+ba2, U+ba5-U+ba7, U+bab-U+bad, U+bb6, U+bba-U+c04, U+c0d,
 U+c11, U+c29, U+c34, U+c3a-U+c5f, U+c62-U+c84, U+c8d, U+c91, U+ca9,
 U+cb4, U+cba-U+cdd, U+cdf, U+ce2-U+d04, U+d0d, U+d11, U+d29,
 U+d3a-U+d5f, U+d62-U+e00, U+e2f, U+e31, U+e34-U+e3f, U+e46-U+e80,
 U+e83, U+e85-U+e86, U+e89, U+e8b-U+e8c, U+e8e-U+e93, U+e98, U+ea0,
 U+ea4, U+ea6, U+ea8-U+ea9, U+eac, U+eaf-U+edb, U+ede-U+109f,
 U+10c6-U+10cf, U+10f7-U+10ff, U+115a-U+115e, U+11a3-U+11a7,
 U+11fa-U+1dff, U+1e9b-U+1e9f, U+1efa-U+1eff, U+1f16-U+1f17,
 U+1f1e-U+1f1f, U+1f46-U+1f47, U+1f4e-U+1f4f, U+1f58, U+1f5a, U+1f5c,
 U+1f5e, U+1f7e-U+1f7f, U+1fb5, U+1fbd-U+1fc1, U+1fc5, U+1fcd-U+1fcf,
 U+1fd4-U+1fd5, U+1fdc-U+1fdf, U+1fed-U+1ff1, U+1ff5, U+1ffd-U+249b,
 U+24ea-U+3004, U+3006-U+3040, U+3095-U+309a, U+309f-U+30a0, U+30fb,
 U+30ff-U+3104, U+312d-U+3130, U+318f-U+4dff, U+9fa6-U+abff,
 U+d7a4-U+d7ff, U+e000-U+f8ff, U+fa2e-U+faff, U+fb07-U+fb12,
 U+fb18-U+fb1e, U+fb37, U+fb3d, U+fb3f, U+fb42, U+fb45, U+fbb2-U+fbd2,
 U+fbe9, U+fce1, U+fd3e-U+fd4f, U+fd90-U+fd91, U+fdc8-U+fdef,
 U+fdfc-U+fe7f, U+fefd-U+ff20, U+ff3b-U+ff40, U+ff5b-U+ff65, U+ffa0,
 U+ffbf-U+ffc1, U+ffc8-U+ffc9, U+ffd0-U+ffd1, U+ffd8-U+ffd9,
 U+ffdd-U+ffff
 IE7 on Win2003 treats the following characters like this also
 instead: U+1-U+1f, U+21-U+2b, U+2d-U+2f, U+3a, U+3c-U+40, U+5b-U+60,
 U+7b-U+82, U+84-U+89, U+8b, U+8d, U+8f-U+99, U+9b, U+9d, U+a0-U+a9,
 U+ab-U+b4, U+b6-U+b9, U+bb-U+bf, U+d7, U+f7, U+220-U+221,
 U+234-U+24f, U+2ae-U+2af, U+2b9-U+2ba, U+2c2-U+2df, U+2e5-U+2ed,
 U+2ef-U+344, U+346-U+379, U+37b-U+385, U+387, U+38b, U+38d, U+3a2,
 U+3cf, U+3d8-U+3d9, U+3f4-U+3ff, U+482-U+48b, U+4c5-U+4c6,
 U+4c9-U+4ca, U+4cd-U+4cf, U+4f6-U+4f7, U+4fa-U+530, U+557-U+558,
 U+55a-U+560, U+588-U+5cf, U+5eb-U+5ef, U+5f3-U+620, U+63b-U+640,
 U+656-U+66f, U+6d4, U+6dd-U+6e0, U+6e9-U+6ec, U+6ee-U+6f9,
 U+6fd-U+70f, U+72d-U+72f, U+740-U+77f, U+7b1-U+900, U+904,
 U+93a-U+93c, U+94d - U+94f, U+951-U+957, U+964-U+980, U+984,
 U+98d-U+98e, U+991-U+992, U+9a9, U+9b1, U+9b3-U+9b5, U+9ba-U+9bd,
 U+9c5-U+9c6, U+9c9-U+9ca, U+9cd-U+9d6, U+9d8-U+9db, U+9de,
 U+9e4-U+9ef, U+9f2-U+a01, U+a03-U+a04, U+a0b-U+a0e, U+a11-U+a12,
 U+a29, U+a31, U+a34, U+a37, U+a3a-U+a3d, U+a43-U+a46, U+a49-U+a4a,
 U+a4d-U+a58, U+a5d, U+a5f-U+a6f, U+a75-U+a80, U+a84, U+a8c, U+a8e,
 U+a92, U+aa9, U+ab1, U+ab4, U+aba-U+abc, U+ac6, U+aca, U+acd-U+acf,
 U+ad1-U+adf, U+ae1-U+b00, U+b04, U+b0d-U+b0e, U+b11-U+b12, U+b29,
 U+b31, U+b34-U+b35, U+b3a-U+b3c, U+b44-U+b46, U+b49 - U+b4a,
 U+b4d-U+b55, U+b58-U+b5b, U+b5e, U+b62-U+b81, U+b84, U+b8b-U+b8d,
 U+b91, U+b96-U+b98, U+b9b, U+b9d, U+ba0 - U+ba2, U+ba5-U+ba7,
 U+bab-U+bad, U+bb6, U+bba-U+bbd, U+bc3-U+bc5, U+bc9, U+bcd-U+bd6,
 U+bd8-U+c00, U+c04, U+c0d, U+c11, U+c29, U+c34, U+c3a-U+c3d, U+c45,
 U+c49, U+c4d-U+c54, U+c57-U+c5f, U+c62-U+c81, U+c84, U+c8d, U+c91,
 U+ca9, U+cb4, U+cba-U+cbd, U+cc5, U+cc9, U+ccd-U+cd4, U+cd7-U+cdd,
 U+cdf, U+ce2-U+d01, U+d04, U+d0d, U+d11, U+d29, U+d3a-U+d3d,
 U+d44-U+d45, U+d49, U+d4d-U+d56, U+d58-U+d5f, U+d62-U+d81, U+d84,
 U+d97-U+d99, U+db2, U+dbc, U+dbe - U+dbf, U+dc7-U+dce, U+dd5, U+dd7,
 U+de0-U+df1, U+df4-U+e00, U+e3b-U+e3f, U+e4f-U+e80, U+e83,
 U+e85-U+e86, U+e89, U+e8b-U+e8c, U+e8e-U+e93, U+e98, U+ea0, U+ea4,
 U+ea6, U+ea8-U+ea9, U+eac, U+eba, U+ebe-U+ebf, U+ec5-U+ecc,
 U+ece-U+edb, U+ede-U+eff, U+f01-U+f3f, U+f48, U+f6b-U+f70,
 U+f82-U+f87, U+f8c-U+f8f, U+f98, U+fbd-U+fff, U+1022, U+1028, U+102b,
 U+1033-U+1035, U+1037, U+1039-U+104f, U+105a-U+109f, U+10c6-U+10cf,
 U+10f7-U+10ff, U+115a - U+115e, U+11a3-U+11a7, U+11fa-U+11ff, U+1207,
 U+1247, U+1249, U+124e-U+124f, U+1257, U+1259, U+125e-U+125f, U+1287,
 U+1289, U+128e-U+128f, U+12af, U+12b1, U+12b6-U+12b7, U+12bf, U+12c1,
 U+12c6-U+12c7, U+12cf, U+12d7, U+12ef, U+130f, U+1311, U+1316-U+1317,
 U+131f, U+1347, U+135b-U+139f, U+13f5-U+1400, U+166d-U+166e,
 U+1677-U+1680, U+169b - U+169f, U+16eb-U+177f, U+17c9-U+181f, U+1843,
 U+1878-U+187f, U+18aa-U+1dff, U+1e9c-U+1e9f, U+1efa-U+1eff,
 U+1f16-U+1f17, U+1f1e-U+1f1f, U+1f46-U+1f47, U+1f4e-U+1f4f, U+1f58,
 U+1f5a, U+1f5c, U+1f5e, U+1f7e-U+1f7f, U+1fb5, U+1fbd, U+1fbf-U+1fc1,
 U+1fc5, U+1fcd-U+1fcf, U+1fd4-U+1fd5, U+1fdc-U+1fdf, U+1fed-U+1ff1,
 U+1ff5, U+1ffd-U+207e, U+2080-U+2101, U+2103-U+2106, U+2108-U+2109,
 U+2114, U+2116-U+2118, U+211e-U+2123, U+2125, U+2127, U+2129, U+212e,
 U+2132, U+213a-U+215f, U+2184-U+3005, U+3008-U+3020, U+302a-U+3037,
 U+303b-U+3104, U+312d-U+3130, U+318f - U+319f, U+31b8-U+33ff,
 U+4db6-U+4dff, U+9fa6-U+9fff, U+a48d-U+abff, U+d7a4-U+d7ff,
 U+e000-U+f8ff, U+fa2e-U+faff, U+fb07-U+fb12, U+fb18-U+fb1c, U+fb1e,
 U+fb29, U+fb37, U+fb3d, U+fb3f, U+fb42, U+fb45, U+fbb2-U+fbd2,
 U+fd3e-U+fd4f, U+fd90-U+fd91, U+fdc8-U+fdef, U+fdfc-U+fe6f, U+fe73,
 U+fe75, U+fefd-U+ff20, U+ff3b-U+ff40, U+ff5b-U+ff9f, U+ffbf-U+ffc1,
 U+ffc8-U+ffc9, U+ffd0-U+ffd1, U+ffd8-U+ffd9, U+ffdd-U+ffff
 -->

     <dd>

      <p>Follow these substeps:</p>

      <ol><li>If <var title="">got number</var> is true, let <var title="">finished</var> be true.</li>

       <li>If <var title="">finished</var> is true, skip to the next
       step in the overall set of steps.</li>

       <li>Let <var title="">negated</var> be false.</li>

      </ol></dd>


     <dt>Any other character</dt>

     <dd>

      <p>Follow these substeps:</p>

      <ol><li>If <var title="">finished</var> is true, skip to the next
       step in the overall set of steps.</li>

       <li>Let <var title="">negated</var> be false.</li>

       <li>Let <var title="">bogus</var> be true.</li>

       <li>If <var title="">started</var> is true, then return the
       <var title="">numbers</var> list, and abort. (The value in <var title="">value</var> is not appended to the list first; it is
       dropped.)</li>

      </ol></dd>

    </dl></li>

   <li><p>Advance <var title="">position</var> to the next character
   in <var title="">input</var>, or to beyond the end of the string if
   there are no more characters.</li>

   <li><p>If <var title="">position</var> points to a character (and
   not to beyond the end of <var title="">input</var>), jump to the
   big <em>Parser</em> step above.</li>

   <li><p>If <var title="">negated</var> is true, then negate <var title="">value</var>.</li>

   <li><p>If <var title="">got number</var> is true, then append <var title="">value</var> to the <var title="">numbers</var> list.</li>

   <li><p>Return the <var title="">numbers</var> list and
   abort.</li>

  </ol><h5 id=lists-of-dimensions><span class=secno>2.4.3.7 </span>Lists of dimensions</h5>

  <!-- no definition of a type since no conforming feature uses this
  syntax (it's only used in cols="" and rows="" on <frameset> -->

  <p>The <dfn id=rules-for-parsing-a-list-of-dimensions>rules for parsing a list of dimensions</dfn> are as
  follows. These rules return a list of zero or more pairs consisting
  of a number and a unit, the unit being one of <i>percentage</i>,
  <i>relative</i>, and <i>absolute</i>.</p>

  <ol><li><p>Let <var title="">raw input</var> be the string being
   parsed.</li>

   <li><p>If the last character in <var title="">raw input</var> is a
   U+002C COMMA character (","), then remove that character from <var title="">raw input</var>.</li>

   <li><p><a href=#split-a-string-on-commas title="split a string on commas">Split the string <var title="">raw input</var> on commas</a>. Let <var title="">raw
   tokens</var> be the resulting list of tokens.</li>

   <li><p>Let <var title="">result</var> be an empty list of
   number/unit pairs.</li>

   <li>

    <p>For each token in <var title="">raw tokens</var>, run the
    following substeps:</p>

    <ol><li><p>Let <var title="">input</var> be the token.</li>

     <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
     string.</li>

     <li><p>Let <var title="">value</var> be the number 0.</li>

     <li><p>Let <var title="">unit</var> be <i>absolute</i>.</li>

     <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, set <var title="">unit</var> to
     <i>relative</i> and jump to the last substep.</li>

     <li><p>If the character at <var title="">position</var> is a
     character in the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE
     (9), <a href=#collect-a-sequence-of-characters>collect a sequence of characters</a> in the range
     U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), interpret the
     resulting sequence as an integer in base ten, and increment <var title="">value</var> by that integer.</li>

     <li>

      <p>If the character at <var title="">position</var> is a U+002E
      FULL STOP character (.), run these substeps:</p>

      <ol><li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> consisting
       of <a href=#space-character title="space character">space characters</a> and
       characters in the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT
       NINE (9). Let <var title="">s</var> be the resulting
       sequence.</li>

       <li><p>Remove all <a href=#space-character title="space character">space
       characters</a> in <var title="">s</var>.</li>

       <li>

        <p>If <var title="">s</var> is not the empty string, run these
        subsubsteps:</p>

        <ol><li><p>Let <var title="">length</var> be the number of
         characters in <var title="">s</var> (after the spaces were
         removed).</li>

         <li><p>Let <var title="">fraction</var> be the result of
         interpreting <var title="">s</var> as a base-ten integer, and
         then dividing that number by <span title="">10<sup title=""><var title="">length</var></sup></span>.</li>

         <li><p>Increment <var title="">value</var> by <var title="">fraction</var>.</li>

        </ol></li>

      </ol></li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

     <li>

      <p>If the character at <var title="">position</var> is a U+0025
      PERCENT SIGN (%) character, then set <var title="">unit</var> to
      <i>percentage</i>.</p>

      <p>Otherwise, if the character at <var title="">position</var>
      is a U+002A ASTERISK character (*), then set <var title="">unit</var> to <i>relative</i>.</p>

     </li>

     <!-- the remaining characters in /input/ are ignored -->

     <li><p>Add an entry to <var title="">result</var> consisting of
     the number given by <var title="">value</var> and the unit given
     by <var title="">unit</var>.</li>

    </ol></li>

   <li><p>Return the list <var title="">result</var>.</li>

  </ol><h4 id=dates-and-times><span class=secno>2.4.4 </span>Dates and times</h4>

  <p>In the algorithms below, the <dfn id=number-of-days-in-month-month-of-year-year>number of days in month <var title="">month</var> of year <var title="">year</var></dfn> is:
  <em>31</em> if <var title="">month</var> is 1, 3, 5, 7, 8, 10, or
  12; <em>30</em> if <var title="">month</var> is 4, 6, 9, or 11;
  <em>29</em> if <var title="">month</var> is 2 and <var title="">year</var> is a number divisible by 400, or if <var title="">year</var> is a number divisible by 4 but not by 100; and
  <em>28</em> otherwise. This takes into account leap years in the
  Gregorian calendar. <a href=#refsGREGORIAN>[GREGORIAN]</a></p>

  <p>The <dfn id=concept-datetime-digit title=concept-datetime-digit>digits</dfn> in the date
  and time syntaxes defined in this section must be characters in the
  range U+0030 DIGIT ZERO to U+0039 DIGIT NINE, used to express
  numbers in base ten.</p>


  <h5 id=months><span class=secno>2.4.4.1 </span>Months</h5>

  <p>A <dfn id=concept-month title=concept-month>month</dfn> consists of a specific
  proleptic Gregorian date with no timezone information and no date
  information beyond a year and a month. <a href=#refsGREGORIAN>[GREGORIAN]</a></p>

  <p>A string is a <dfn id=valid-month-string>valid month string</dfn> representing a year
  <var title="">year</var> and month <var title="">month</var> if it
  consists of the following components in the given order:</p>

  <ol><li>Four or more <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>, representing <var title="">year</var>, where <var title="">year</var>&nbsp;&gt;&nbsp;0</li>

   <li>A U+002D HYPHEN-MINUS character (-)</li>

   <li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
   representing the month <var title="">month</var>, in the range
   1&nbsp;&le;&nbsp;<var title="">month</var>&nbsp;&le;&nbsp;12</li>

  </ol><p>The rules to <dfn id=parse-a-month-string>parse a month string</dfn> are as follows. This
  will either return a year and month, or nothing. If at any point the
  algorithm says that it "fails", this means that it is aborted at
  that point and returns nothing.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#parse-a-month-component>Parse a month component</a> to obtain <var title="">year</var> and <var title="">month</var>. If this returns
   nothing, then fail.</p>

   <li><p>If <var title="">position</var> is <em>not</em> beyond the
   end of <var title="">input</var>, then fail.</li>

   <li><p>Return <var title="">year</var> and <var title="">month</var>.</li>

  </ol><p>The rules to <dfn id=parse-a-month-component>parse a month component</dfn>, given an <var title="">input</var> string and a <var title="">position</var>, are
  as follows. This will either return a year and a month, or
  nothing. If at any point the algorithm says that it "fails", this
  means that it is aborted at that point and returns nothing.</p>

  <ol><li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
   sequence is not at least four characters long, then
   fail. Otherwise, interpret the resulting sequence as a base-ten
   integer. Let that number be the <var title="">year</var>.</li>

   <li><p>If <var title="">year</var> is not a number greater than
   zero, then fail.</li>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+002D HYPHEN-MINUS character,
   then fail. Otherwise, move <var title="">position</var> forwards
   one character.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
   sequence is not exactly two characters long, then fail. Otherwise,
   interpret the resulting sequence as a base-ten integer. Let that
   number be the <var title="">month</var>.</li>

   <li><p>If <var title="">month</var> is not a number in the range
   1&nbsp;&le;&nbsp;<var title="">month</var>&nbsp;&le;&nbsp;12, then
   fail.</li>

   <li><p>Return <var title="">year</var> and <var title="">month</var>.</li>

  </ol><h5 id=dates><span class=secno>2.4.4.2 </span>Dates</h5>

  <p>A <dfn id=concept-date title=concept-date>date</dfn> consists of a specific
  proleptic Gregorian date with no timezone information, consisting of
  a year, a month, and a day. <a href=#refsGREGORIAN>[GREGORIAN]</a></p>

  <p>A string is a <dfn id=valid-date-string>valid date string</dfn> representing a year
  <var title="">year</var>, month <var title="">month</var>, and day
  <var title="">day</var> if it consists of the following components
  in the given order:</p>

  <ol><li>A <a href=#valid-month-string>valid month string</a>, representing <var title="">year</var> and <var title="">month</var></li>

   <li>A U+002D HYPHEN-MINUS character (-)</li>

   <li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
   representing <var title="">day</var>, in the range
   1&nbsp;&le;&nbsp;<var title="">day</var>&nbsp;&le;&nbsp;<var title="">maxday</var> where <var title="">maxday</var> is the <a href=#number-of-days-in-month-month-of-year-year title="number of days in month month of year year">number of days
   in the month <var title="">month</var> and year <var title="">year</var></a></li>

  </ol><p>The rules to <dfn id=parse-a-date-string>parse a date string</dfn> are as follows. This
  will either return a date, or nothing. If at any point the algorithm
  says that it "fails", this means that it is aborted at that point
  and returns nothing.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#parse-a-date-component>Parse a date component</a> to obtain <var title="">year</var>, <var title="">month</var>, and <var title="">day</var>. If this returns nothing, then fail.</p>

   <li><p>If <var title="">position</var> is <em>not</em> beyond the
   end of <var title="">input</var>, then fail.</li>

   <li><p>Let <var title="">date</var> be the date with year <var title="">year</var>, month <var title="">month</var>, and day <var title="">day</var>.</li>

   <li><p>Return <var title="">date</var>.</li>

  </ol><p>The rules to <dfn id=parse-a-date-component>parse a date component</dfn>, given an <var title="">input</var> string and a <var title="">position</var>, are
  as follows. This will either return a year, a month, and a day, or
  nothing. If at any point the algorithm says that it "fails", this
  means that it is aborted at that point and returns nothing.</p>

  <ol><li><p><a href=#parse-a-month-component>Parse a month component</a> to obtain <var title="">year</var> and <var title="">month</var>. If this returns
   nothing, then fail.</li>

   <li><p>Let <var title="">maxday</var> be the <a href=#number-of-days-in-month-month-of-year-year>number of days
   in month <var title="">month</var> of year <var title="">year</var></a>.</li>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+002D HYPHEN-MINUS character,
   then fail. Otherwise, move <var title="">position</var> forwards
   one character.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
   sequence is not exactly two characters long, then fail. Otherwise,
   interpret the resulting sequence as a base-ten integer. Let that
   number be the <var title="">day</var>.</li>

   <li><p>If <var title="">day</var> is not a number in the range
   1&nbsp;&le;&nbsp;<var title="">month</var>&nbsp;&le;&nbsp;<var title="">maxday</var>, then fail.</li>

   <li><p>Return <var title="">year</var>, <var title="">month</var>,
   and <var title="">day</var>.</li>

  </ol><h5 id=times><span class=secno>2.4.4.3 </span>Times</h5>

  <p>A <dfn id=concept-time title=concept-time>time</dfn> consists of a specific
  time with no timezone information, consisting of an hour, a minute,
  a second, and a fraction of a second.</p>

  <p>A string is a <dfn id=valid-time-string>valid time string</dfn> representing an hour
  <var title="">hour</var>, a minute <var title="">minute</var>, and a
  second <var title="">second</var> if it consists of the following
  components in the given order:</p>

  <ol><li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
   representing <var title="">hour</var>, in the range
   0&nbsp;&le;&nbsp;<var title="">hour</var>&nbsp;&le;&nbsp;23</li>

   <li>A U+003A COLON character (:)</li>

   <li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
   representing <var title="">minute</var></li>

   <li>Optionally (required if <var title="">second</var> is
   non-zero):

    <ol><li>A U+003A COLON character (:)</li>

     <li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
     representing the integer part of <var title="">second</var>, in
     the range 0&nbsp;&le;&nbsp;<var title="">s</var>&nbsp;&le;&nbsp;59</li>

     <li>Optionally (required if <var title="">second</var> is not an
     integer):

      <ol><li>A 002E FULL STOP character (.)</li>

       <li>One or more <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>, representing the
       fractional part of <var title="">second</var></li>

      </ol></li>

    </ol></li>

  </ol><p class=note>The <var title="">second</var> component cannot be
  60 or 61; leap seconds cannot be represented.</p>

  <p>The rules to <dfn id=parse-a-time-string>parse a time string</dfn> are as follows. This
  will either return a time, or nothing. If at any point the algorithm
  says that it "fails", this means that it is aborted at that point
  and returns nothing.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#parse-a-time-component>Parse a time component</a> to obtain <var title="">hour</var>, <var title="">minute</var>, and <var title="">second</var>. If this returns nothing, then fail.</p>

   <li><p>If <var title="">position</var> is <em>not</em> beyond the
   end of <var title="">input</var>, then fail.</li>

   <li><p>Let <var title="">time</var> be the time with hour <var title="">hour</var>, minute <var title="">minute</var>, and second
   <var title="">second</var>.</li>

   <li><p>Return <var title="">time</var>.</li>

  </ol><p>The rules to <dfn id=parse-a-time-component>parse a time component</dfn>, given an <var title="">input</var> string and a <var title="">position</var>, are
  as follows. This will either return an hour, a minute, and a second,
  or nothing. If at any point the algorithm says that it "fails", this
  means that it is aborted at that point and returns nothing.</p>

  <ol><li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
   sequence is not exactly two characters long, then fail. Otherwise,
   interpret the resulting sequence as a base-ten integer. Let that
   number be the <var title="">hour</var>.</li>

   <li>If <var title="">hour</var> is not a number in the range
   0&nbsp;&le;&nbsp;<var title="">hour</var>&nbsp;&le;&nbsp;23, then
   fail.</li>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+003A COLON character, then
   fail. Otherwise, move <var title="">position</var> forwards one
   character.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
   sequence is not exactly two characters long, then fail. Otherwise,
   interpret the resulting sequence as a base-ten integer. Let that
   number be the <var title="">minute</var>.</li>

   <li>If <var title="">minute</var> is not a number in the range
   0&nbsp;&le;&nbsp;<var title="">minute</var>&nbsp;&le;&nbsp;59, then
   fail.</li>

   <li><p>Let <var title="">second</var> be a string with the value
   "0".</li>

   <li>

    <p>If <var title="">position</var> is not beyond the end of
    <var title="">input</var> and the character at <var title="">position</var> is a U+003A COLON, then run these
    substeps:</p>

    <ol><li><p>Advance <var title="">position</var> to the next character
     in <var title="">input</var>.</li>

     <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var>, or at the last character in <var title="">input</var>, or if the next <em>two</em> characters in
     <var title="">input</var> starting at <var title="">position</var> are not two characters both in the range
     U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), then
     fail.</li>

     <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> that are
     either characters in the range U+0030 DIGIT ZERO (0) to U+0039
     DIGIT NINE (9) or U+002E FULL STOP characters. If the collected
     sequence has more than one U+002E FULL STOP characters, or if the
     last character in the sequence is a U+002E FULL STOP character,
     then fail. Otherwise, let the collected string be <var title="">second</var> instead of its previous value.</li>

    </ol></li>

   <li><p>Interpret <var title="">second</var> as a base-ten number
   (possibly with a fractional part). Let <var title="">second</var>
   be that number instead of the string version.</li>

   <li><p>If <var title="">second</var> is not a number in the range
   0&nbsp;&le;&nbsp;<var title="">second</var>&nbsp;&lt;&nbsp;60, then
   fail.</li>

   <li><p>Return <var title="">hour</var>, <var title="">minute</var>,
   and <var title="">second</var>.</li>

  </ol><h5 id=local-dates-and-times><span class=secno>2.4.4.4 </span>Local dates and times</h5>

  <p>A <dfn id=concept-datetime-local title=concept-datetime-local>local date and time</dfn>
  consists of a specific proleptic Gregorian date, consisting of a
  year, a month, and a day, and a time, consisting of an hour, a
  minute, a second, and a fraction of a second, but expressed without
  a time zone. <a href=#refsGREGORIAN>[GREGORIAN]</a></p>

  <p>A string is a <dfn id=valid-local-date-and-time-string>valid local date and time string</dfn>
  representing a date and time if it consists of the following
  components in the given order:</p>

  <ol><li>A <a href=#valid-date-string>valid date string</a> representing the date.</li>

   <li>A U+0054 LATIN CAPITAL LETTER T character.</li>

   <li>A <a href=#valid-time-string>valid time string</a> representing the time.</li>

  </ol><p>The rules to <dfn id=parse-a-local-date-and-time-string>parse a local date and time string</dfn> are as
  follows. This will either return a date and time, or nothing. If at
  any point the algorithm says that it "fails", this means that it is
  aborted at that point and returns nothing.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#parse-a-date-component>Parse a date component</a> to obtain <var title="">year</var>, <var title="">month</var>, and <var title="">day</var>. If this returns nothing, then fail.</p>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+0054 LATIN CAPITAL LETTER T
   character then fail. Otherwise, move <var title="">position</var>
   forwards one character.</li>

   <li><p><a href=#parse-a-time-component>Parse a time component</a> to obtain <var title="">hour</var>, <var title="">minute</var>, and <var title="">second</var>. If this returns nothing, then fail.</p>

   <li><p>If <var title="">position</var> is <em>not</em> beyond the
   end of <var title="">input</var>, then fail.</li>

   <li><p>Let <var title="">date</var> be the date with year <var title="">year</var>, month <var title="">month</var>, and day <var title="">day</var>.</li>

   <li><p>Let <var title="">time</var> be the time with hour <var title="">hour</var>, minute <var title="">minute</var>, and second
   <var title="">second</var>.</li>

   <li><p>Return <var title="">date</var> and <var title="">time</var>.</li>

  </ol><h5 id=global-dates-and-times><span class=secno>2.4.4.5 </span>Global dates and times</h5>

  <p>A <dfn id=concept-datetime title=concept-datetime>global date and time</dfn>
  consists of a specific proleptic Gregorian date, consisting of a
  year, a month, and a day, and a time, consisting of an hour, a
  minute, a second, and a fraction of a second, expressed with a time
  zone, consisting of a number of hours and minutes. <a href=#refsGREGORIAN>[GREGORIAN]</a></p>

  <!--XXX [GREGORIAN] should point to
  <dd id="refsGREGORIAN">[GREGORIAN]</dd>
  <dd>(Non-normative) <cite>Inter Gravissimas</cite>, A. Lilius, C. Clavius. Gregory XIII Papal Bulls, February 1582.</dd>
  -->

  <p>A string is a <dfn id=valid-global-date-and-time-string>valid global date and time string</dfn>
  representing a date, time, and a timezone offset if it consists of
  the following components in the given order:</p>

  <ol><li>A <a href=#valid-date-string>valid date string</a> representing the date</li>

   <li>A U+0054 LATIN CAPITAL LETTER T character</li>

   <li>A <a href=#valid-time-string>valid time string</a> representing the time</li>

   <li>Either:

    <ul><li>A U+005A LATIN CAPITAL LETTER Z character, allowed only if
     the time zone is UTC</li>

     <li>Or:

      <ol><li>Either a U+002B PLUS SIGN character (+) or a U+002D
       HYPHEN-MINUS (-) character, representing the sign of the
       timezone offset</li>

       <li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
       representing the hours component <var title="">hour</var> of
       the timezone offset, in the range 0&nbsp;&le;&nbsp;<var title="">hour</var>&nbsp;&le;&nbsp;23</li>

       <li>A U+003A COLON character (:)</li>

       <li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
       representing the minutes component <var title="">minute</var>
       of the timezone offset, in the range 0&nbsp;&le;&nbsp;<var title="">minute</var>&nbsp;&le;&nbsp;59</li>

      </ol></li>

    </ul></li>

  </ol><p class=note>This format allows for time zone offsets from -23:59
  to +23:59. In practice, however, the range of actual time zones is
  -12:00 to +14:00, and the minutes component of actual time zones is
  always either 00, 30, or 45.</p>

  <div class=example>

   <p>The following are some examples of dates written as <a href=#valid-global-date-and-time-string title="valid global date and time string">valid global date and
   time strings</a>.</p>

   <dl><dt>"<code>0037-12-13T00:00Z</code>"</dt>

    <dd>Midnight UTC on the birthday of Nero (the Roman Emperor).</dd>

    <dt>"<code>1979-10-14T12:00:00.001-04:00</code>"</dt>

    <dd>One millisecond after noon on October 14th 1979, in the time
    zone in use on the east coast of North America during daylight
    saving time.</dd>

    <dt>"<code>8592-01-01T02:09+02:09</code>"</dt>

    <dd>Midnight UTC on the 1st of January, 8592. The time zone
    associated with that time is two hours and nine minutes ahead of
    UTC, which is not a real time zone currently, but is nonetheless
    allowed.</dd>

   </dl><p>Several things are notable about these dates:</p>

   <ul><li>Years with fewer than four digits have to be
    zero-padded. The date "37-12-13" would not be a valid date.</li>

    <li>To unambiguously identify a moment in time prior to the
    introduction of the Gregorian calendar, the date has to be first
    converted to the Gregorian calendar from the calendar in use at
    the time (e.g. from the Julian calendar). The date of Nero's birth
    is the 15th of December 37, in the Julian Calendar, which is the
    13th of December 37 in the proleptic Gregorian Calendar.</li> <!--
    XXX this might not be true. I can't find a reference that gives
    his birthday with an explicit statement about the calendar being
    used. However, it seems unlikely that it would be given in the
    Gregorian calendar, so I assume sites use the Julian one. -->

    <li>The time and timezone components are not optional.</li>

    <li>Dates before the year zero can't be represented as a datetime
    in this version of HTML.</li>

    <li>Time zones differ based on daylight savings time.</li>

   </ul></div>

  <p>The rules to <dfn id=parse-a-global-date-and-time-string>parse a global date and time string</dfn> are
  as follows. This will either return a time in UTC, with associated
  timezone information for round tripping or display purposes, or
  nothing. If at any point the algorithm says that it "fails", this
  means that it is aborted at that point and returns nothing.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#parse-a-date-component>Parse a date component</a> to obtain <var title="">year</var>, <var title="">month</var>, and <var title="">day</var>. If this returns nothing, then fail.</p>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+0054 LATIN CAPITAL LETTER T
   character then fail. Otherwise, move <var title="">position</var>
   forwards one character.</li>

   <li><p><a href=#parse-a-time-component>Parse a time component</a> to obtain <var title="">hour</var>, <var title="">minute</var>, and <var title="">second</var>. If this returns nothing, then fail.</p>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var>, then fail.</li>

   <li><p><a href=#parse-a-timezone-component>Parse a timezone component</a> to obtain <var title="">timezone<sub title="">hours</sub></var> and <var title="">timezone<sub title="">minutes</sub></var>. If this returns
   nothing, then fail.</p>

   <li><p>If <var title="">position</var> is <em>not</em> beyond the
   end of <var title="">input</var>, then fail.</li>

   <li><p>Let <var title="">time</var> be the moment in time at year
   <var title="">year</var>, month <var title="">month</var>, day <var title="">day</var>, hours <var title="">hour</var>, minute <var title="">minute</var>, second <var title="">second</var>,
   subtracting <var title="">timezone<sub title="">hours</sub></var>
   hours and <var title="">timezone<sub title="">minutes</sub></var>
   minutes. That moment in time is a moment in the UTC
   timezone.</li>

   <li><p>Let <var title="">timezone</var> be <var title="">timezone<sub title="">hours</sub></var> hours and <var title="">timezone<sub title="">minutes</sub></var> minutes from
   UTC.</li>

   <li><p>Return <var title="">time</var> and <var title="">timezone</var>.</li>

  </ol><p>The rules to <dfn id=parse-a-timezone-component>parse a timezone component</dfn>, given an <var title="">input</var> string and a <var title="">position</var>, are
  as follows. This will either return timezone hours and timezone
  minutes, or nothing. If at any point the algorithm says that it
  "fails", this means that it is aborted at that point and returns
  nothing.</p>

  <ol><li>

    <p>If the character at <var title="">position</var> is a U+005A
    LATIN CAPITAL LETTER Z, then:</p>

    <ol><li><p>Let <var title="">timezone<sub title="">hours</sub></var>
     be 0.</li>

     <li><p>Let <var title="">timezone<sub title="">minutes</sub></var> be 0.</li>

     <li><p>Advance <var title="">position</var> to the next character
     in <var title="">input</var>.</li>

    </ol><p>Otherwise, if the character at <var title="">position</var> is
    either a U+002B PLUS SIGN ("+") or a U+002D HYPHEN-MINUS ("-"),
    then:</p>

    <ol><li><p>If the character at <var title="">position</var> is a
     U+002B PLUS SIGN ("+"), let <var title="">sign</var> be
     "positive". Otherwise, it's a U+002D HYPHEN-MINUS ("-"); let <var title="">sign</var> be "negative".</li>

     <li><p>Advance <var title="">position</var> to the next character
     in <var title="">input</var>.</li>

     <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
     U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
     sequence is not exactly two characters long, then
     fail. Otherwise, interpret the resulting sequence as a base-ten
     integer. Let that number be the <var title="">timezone<sub title="">hours</sub></var>.</li>

     <li>If <var title="">timezone<sub title="">hours</sub></var> is
     not a number in the range 0&nbsp;&le;&nbsp;<var title="">timezone<sub title="">hours</sub></var>&nbsp;&le;&nbsp;23, then fail.</li>

     <li>If <var title="">sign</var> is "negative", then negate <var title="">timezone<sub title="">hours</sub></var>.</li>

     <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+003A COLON character, then
     fail. Otherwise, move <var title="">position</var> forwards one
     character.</li>

     <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
     U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
     sequence is not exactly two characters long, then
     fail. Otherwise, interpret the resulting sequence as a base-ten
     integer. Let that number be the <var title="">timezone<sub title="">minutes</sub></var>.</li>

     <li>If <var title="">timezone<sub title="">minutes</sub></var> is
     not a number in the range 0&nbsp;&le;&nbsp;<var title="">timezone<sub title="">minutes</sub></var>&nbsp;&le;&nbsp;59, then fail.</li>

     <li>If <var title="">sign</var> is "negative", then negate <var title="">timezone<sub title="">minutes</sub></var>.</li>

    </ol></li>

   <li><p>Return <var title="">timezone<sub title="">hours</sub></var>
   and <var title="">timezone<sub title="">minutes</sub></var>.</li>

  </ol><h5 id=weeks><span class=secno>2.4.4.6 </span>Weeks</h5>

  <p>A <dfn id=concept-week title=concept-week>week</dfn> consists of a week-year
  number and a week number representing a seven day period. Each
  week-year in this calendaring system has either 52 weeks or 53
  weeks, as defined below. A week is a seven-day period. The week
  starting on the Gregorian date Monday December 29th 1969
  (1969-12-29) is defined as week number 1 in week-year
  1970. Consecutive weeks are numbered sequentially. The week before
  the number 1 week in a week-year is the last week in the previous
  week-year, and vice versa. <a href=#refsGREGORIAN>[GREGORIAN]</a></p>

  <p>A week-year with a number <var title="">year</var> that
  corresponds to a year <var title="">year</var> in the proleptic
  Gregorian calendar that has a Thursday as its first day (January
  1st), and a week-year <var title="">year</var> where <var title="">year</var> is a number divisible by 400, or a number
  divisible by 4 but not by 100, has 53 weeks. All other week-years
  have 52 weeks.</p>

  <p>The <dfn id=week-number-of-the-last-day>week number of the last day</dfn> of a week-year with 53
  weeks is 53; the week number of the last day of a week-year with 52
  weeks is 52.</p>

  <p class=note>The week-year number of a particular day can be
  different than the number of the year that contains that day in the
  proleptic Gregorian calendar. The first week in a week-year <var title="">year</var> is the week that contains the first Thursday of
  the Gregorian year <var title="">year</var>.</p>

  <p>A string is a <dfn id=valid-week-string>valid week string</dfn> representing a
  week-year <var title="">year</var> and week <var title="">week</var>
  if it consists of the following components in the given order:</p>

  <ol><li>Four or more <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>, representing <var title="">year</var>, where <var title="">year</var>&nbsp;&gt;&nbsp;0</li>

   <li>A U+002D HYPHEN-MINUS character (-)</li>

   <li>A U+0057 LATIN CAPITAL LETTER W character</li>

   <li>Two <a href=#concept-datetime-digit title=concept-datetime-digit>digits</a>,
   representing the week <var title="">week</var>, in the range
   1&nbsp;&le;&nbsp;<var title="">week</var>&nbsp;&le;&nbsp;<var title="">maxweek</var>, where <var title="">maxweek</var> is the
   <a href=#week-number-of-the-last-day>week number of the last day</a> of week-year <var title="">year</var></li>

  </ol><p>The rules to <dfn id=parse-a-week-string>parse a week string</dfn> are as follows. This
  will either return a week-year number and week number, or
  nothing. If at any point the algorithm says that it "fails", this
  means that it is aborted at that point and returns nothing.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
   sequence is not at least four characters long, then
   fail. Otherwise, interpret the resulting sequence as a base-ten
   integer. Let that number be the <var title="">year</var>.</li>

   <li><p>If <var title="">year</var> is not a number greater than
   zero, then fail.</li>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+002D HYPHEN-MINUS character,
   then fail. Otherwise, move <var title="">position</var> forwards
   one character.</li>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var> or if the character at <var title="">position</var> is not a U+0057 LATIN CAPITAL LETTER W
   character, then fail. Otherwise, move <var title="">position</var>
   forwards one character.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9). If the collected
   sequence is not exactly two characters long, then fail. Otherwise,
   interpret the resulting sequence as a base-ten integer. Let that
   number be the <var title="">week</var>.</li>

   <li><p>Let <var title="">maxweek</var> be the <a href=#week-number-of-the-last-day>week number of
   the last day</a> of year <var title="">year</var>.</li>

   <li><p>If <var title="">week</var> is not a number in the range
   1&nbsp;&le;&nbsp;<var title="">week</var>&nbsp;&le;&nbsp;<var title="">maxweek</var>, then fail.</li>

   <li><p>If <var title="">position</var> is <em>not</em> beyond the
   end of <var title="">input</var>, then fail.</li>

   <li><p>Return the week-year number <var title="">year</var> and the
   week number <var title="">week</var>.</li>

  </ol><h5 id=vaguer-moments-in-time><span class=secno>2.4.4.7 </span>Vaguer moments in time</h5>

  <p>A <dfn id=date-or-time-string>date or time string</dfn> consists of either a <a href=#concept-date title=concept-date>date</a>, a <a href=#concept-time title=concept-time>time</a>, or a <a href=#concept-datetime title=concept-datetime>global date and time</a>.</p>

  <p>A string is a <dfn id=valid-date-or-time-string>valid date or time string</dfn> if it is also
  one of the following:</p>

  <ul><li>A <a href=#valid-date-string>valid date string</a>.</li>

   <li>A <a href=#valid-time-string>valid time string</a>.</li>

   <li>A <a href=#valid-global-date-and-time-string>valid global date and time string</a>.</li>

  </ul><p>A string is a <dfn id=valid-date-or-time-string-in-content>valid date or time string in content</dfn> if
  it consists of zero or more <a href=#white_space>White_Space</a> characters,
  followed by a <a href=#valid-date-or-time-string>valid date or time string</a>, followed by
  zero or more further <a href=#white_space>White_Space</a> characters.</p>

  <p>The rules to <dfn id=parse-a-date-or-time-string>parse a date or time string</dfn> are as
  follows. The algorithm is invoked with a flag indicating if the
  <i>in attribute</i> variant or the <i>in content</i> variant is to
  be used. The algorithm will either return a <a href=#concept-date title=concept-date>date</a>, a <a href=#concept-time title=concept-time>time</a>, a <a href=#concept-datetime title=concept-datetime>global date and time</a>, or nothing. If
  at any point the algorithm says that it "fails", this means that it
  is aborted at that point and returns nothing.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>For the <i>in content</i> variant: <a href=#skip-white_space-characters>skip White_Space
   characters</a>.</li>

   <li><p>Set <var title="">start position</var> to the same position
   as <var title="">position</var>.</li>

   <li><p>Set the <var title="">date present</var> and <var title="">time present</var> flags to true.</li>

   <li><p><a href=#parse-a-date-component>Parse a date component</a> to obtain <var title="">year</var>, <var title="">month</var>, and <var title="">day</var>. If this fails, then set the <var title="">date
   present</var> flag to false.</p>

   <li>

    <p>If <var title="">date present</var> is true, and <var title="">position</var> is not beyond the end of <var title="">input</var>, and the character at <var title="">position</var> is a U+0054 LATIN CAPITAL LETTER T
    character, then advance <var title="">position</var> to the next
    character in <var title="">input</var>.</p>

    <p>Otherwise, if <var title="">date present</var> is true, and
    either <var title="">position</var> is beyond the end of <var title="">input</var> or the character at <var title="">position</var> is not a U+0054 LATIN CAPITAL LETTER T
    character, then set <var title="">time present</var> to false.</p>

    <p>Otherwise, if <var title="">date present</var> is false, set
    <var title="">position</var> back to the same position as <var title="">start position</var>.</p>

   </li>

   <li><p>If the <var title="">time present</var> flag is true, then
   <a href=#parse-a-time-component>parse a time component</a> to obtain <var title="">hour</var>, <var title="">minute</var>, and <var title="">second</var>. If this returns nothing, then set the <var title="">time present</var> flag to false.</p>

   <li><p>If both the <var title="">date present</var> and <var title="">time present</var> flags are false, then fail.</li>

   <li><p>If the <var title="">time present</var> flag is true, but
   <var title="">position</var> is beyond the end of <var title="">input</var>, then fail.</li>

   <li><p>If the <var title="">date present</var> and <var title="">time present</var> flags are both true, <a href=#parse-a-timezone-component>parse a
   timezone component</a> to obtain <var title="">timezone<sub title="">hours</sub></var> and <var title="">timezone<sub title="">minutes</sub></var>. If this returns nothing, then
   fail.</p>

   <li><p>For the <i>in content</i> variant: <a href=#skip-white_space-characters>skip White_Space
   characters</a>.</li>

   <li><p>If <var title="">position</var> is <em>not</em> beyond the
   end of <var title="">input</var>, then fail.</li>

   <li>

    <p>If the <var title="">date present</var> flag is true and the
    <var title="">time present</var> flag is false, then let <var title="">date</var> be the date with year <var title="">year</var>, month <var title="">month</var>, and day <var title="">day</var>, and return <var title="">date</var>.</p>

    <p>Otherwise, if the <var title="">time present</var> flag is true
    and the <var title="">date present</var> flag is false, then let
    <var title="">time</var> be the time with hour <var title="">hour</var>, minute <var title="">minute</var>, and second
    <var title="">second</var>, and return <var title="">time</var>.</p>

    <p>Otherwise, let <var title="">time</var> be the moment in time
    at year <var title="">year</var>, month <var title="">month</var>,
    day <var title="">day</var>, hours <var title="">hour</var>,
    minute <var title="">minute</var>, second <var title="">second</var>, subtracting <var title="">timezone<sub title="">hours</sub></var> hours and <var title="">timezone<sub title="">minutes</sub></var> minutes, that moment in time being a
    moment in the UTC timezone; let <var title="">timezone</var> be
    <var title="">timezone<sub title="">hours</sub></var> hours and
    <var title="">timezone<sub title="">minutes</sub></var> minutes
    from UTC; and return <var title="">time</var> and <var title="">timezone</var>.</p>

   </li>

  </ol><h4 id=colors><span class=secno>2.4.5 </span>Colors</h4>

  <p>A <dfn id=simple-color>simple color</dfn> consists of three 8-bit numbers in the
  range 0..255, representing the red, green, and blue components of
  the color respectively, in the sRGB color space. <a href=#refsSRGB>[SRGB]</a></p>

  <p>A string is a <dfn id=valid-simple-color>valid simple color</dfn> if it is exactly
  seven characters long, and the first character is a U+0023 NUMBER
  SIGN (#) character, and the remaining six characters are all in the
  range U+0030 DIGIT ZERO (0) .. U+0039 DIGIT NINE (9), U+0041 LATIN
  CAPITAL LETTER A .. U+0046 LATIN CAPITAL LETTER F, U+0061 LATIN
  SMALL LETTER A .. U+0066 LATIN SMALL LETTER F, with the first two
  digits representing the red component, the middle two digits
  representing the green component, and the last two digits
  representing the blue component, in hexadecimal.</p>

  <p>A string is a <dfn id=valid-lowercase-simple-color>valid lowercase simple color</dfn> if it is a
  <a href=#valid-simple-color>valid simple color</a> and doesn't use any characters in
  the range U+0041 LATIN CAPITAL LETTER A .. U+0046 LATIN CAPITAL
  LETTER F.</p>

  <p>The <dfn id=rules-for-parsing-simple-color-values>rules for parsing simple color values</dfn> are as given
  in the following algorithm. When invoked, the steps must be followed
  in the order given, aborting at the first step that returns a
  value. This algorithm will either return a <a href=#simple-color>simple color</a>
  or an error.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>If <var title="">input</var> is not exactly seven characters
   long, then return an error.</li>

   <li><p>If the first character in <var title="">input</var> is not a
   U+0023 NUMBER SIGN (#) character, then return an error.</li>

   <li><p>If the last six characters of <var title="">input</var> are
   not all in the range U+0030 DIGIT ZERO (0) .. U+0039 DIGIT NINE
   (9), U+0041 LATIN CAPITAL LETTER A .. U+0046 LATIN CAPITAL LETTER
   F, U+0061 LATIN SMALL LETTER A .. U+0066 LATIN SMALL LETTER F, then
   return an error.</li>

   <li><p>Let <var title="">result</var> be a <a href=#simple-color>simple
   color</a>.</p>

   <li><p>Interpret the second and third characters as a hexadecimal
   number and let the result be the red component of <var title="">result</var>.</p>

   <li><p>Interpret the fourth and fifth characters as a hexadecimal
   number and let the result be the green component of <var title="">result</var>.</p>

   <li><p>Interpret the sixth and seventh characters as a hexadecimal
   number and let the result be the blue component of <var title="">result</var>.</p>

   <li><p>Return <var title="">result</var>.</p>

  </ol><p>The <dfn id=rules-for-serialising-simple-color-values>rules for serialising simple color values</dfn> given a
  <a href=#simple-color>simple color</a> are as given in the following
  algorithm:</p>

  <ol><li><p>Let <var title="">result</var> be a string consisting of a
   single U+0023 NUMBER SIGN (#) character.</li>

   <li><p>Convert the red, green, and blue components in turn to
   two-digit hexadecimal numbers using the digits U+0030 DIGIT ZERO
   (0) .. U+0039 DIGIT NINE (9) and U+0061 LATIN SMALL LETTER A
   .. U+0066 LATIN SMALL LETTER F, zero-padding if necessary, and
   append these numbers to <var title="">result</var>, in the order
   red, green, blue.</p>

   <li><p>Return <var title="">result</var>, which will be a
   <a href=#valid-lowercase-simple-color>valid lowercase simple color</a>.</li>

  </ol><hr><p>Some obsolete legacy attributes parse colors in a more
  complicated manner, using the <dfn id=rules-for-parsing-a-legacy-color-value>rules for parsing a legacy color
  value</dfn>, which are given in the following algorithm. When
  invoked, the steps must be followed in the order given, aborting at
  the first step that returns a value. This algorithm will either
  return a <a href=#simple-color>simple color</a> or an error.</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>If <var title="">input</var> is the empty string, then
   return an error.</li>

   <li><p>If <var title="">input</var> is an <a href=#ascii-case-insensitive>ASCII
   case-insensitive</a> match for one of the keywords listed in the
   <a href=http://www.w3.org/TR/css3-color/#svg-color>SVG color
   keywords</a> section of the CSS3 Color specification, the return
   the <a href=#simple-color>simple color</a> corresponding to that keyword. <a href=#refsCSS3COLOR>[CSS3COLOR]</a></li>

   <li>

    <p>If <var title="">input</var> is four characters long, and the
    first character in <var title="">input</var> is a U+0023 NUMBER
    SIGN (#) character, and the the last three characters of <var title="">input</var> are all in the range U+0030 DIGIT ZERO (0)
    .. U+0039 DIGIT NINE (9), U+0041 LATIN CAPITAL LETTER A .. U+0046
    LATIN CAPITAL LETTER F, and U+0061 LATIN SMALL LETTER A .. U+0066
    LATIN SMALL LETTER F, then run these substeps:</p>

    <ol><li><p>Let <var title="">result</var> be a <a href=#simple-color>simple
     color</a>.</p>

     <li><p>Interpret the second character of <var title="">input</var> as a hexadecimal digit; let the red
     component of <var title="">result</var> be the resulting number
     multiplied by 17.</p>

     <li><p>Interpret the third character of <var title="">input</var>
     as a hexadecimal digit; let the green component of <var title="">result</var> be the resulting number multiplied by
     17.</p>

     <li><p>Interpret the fourth character of <var title="">input</var> as a hexadecimal digit; let the blue
     component of <var title="">result</var> be the resulting number
     multiplied by 17.</p>

     <li><p>Return <var title="">result</var>.</p>

    </ol></li>

   <li><p>Replace any characters in <var title="">input</var> that
   have a Unicode codepoint greater than U+FFFF (i.e. any characters
   that are not in the basic multilingual plane) with the
   two-character string "<code title="">00</code>".</li>

   <li><p>If <var title="">input</var> is longer than 128 characters,
   truncate <var title="">input</var>, leaving only the first 128
   characters.</li>

   <li><p>If the first character in <var title="">input</var> is a
   U+0023 NUMBER SIGN character (#), remove it.</li>

   <li><p>Replace any character in <var title="">input</var> that is
   not in the range U+0030 DIGIT ZERO (0) .. U+0039 DIGIT NINE (9),
   U+0041 LATIN CAPITAL LETTER A .. U+0046 LATIN CAPITAL LETTER F, and
   U+0061 LATIN SMALL LETTER A .. U+0066 LATIN SMALL LETTER F with the
   character U+0030 DIGIT ZERO (0).</li>

   <li><p>While <var title="">input</var>'s length is zero or not a
   multiple of three, append a U+0030 DIGIT ZERO (0) character to <var title="">input</var>.</li>

   <li><p>Split <var title="">input</var> into three strings of equal
   length, to obtain three components. Let <var title="">length</var>
   be the length of those components (one third the length of <var title="">input</var>).</li>

   <li><p>If <var title="">length</var> is greater than 8, then remove
   the leading <span><var title="">length</var>-8</span> characters in
   each component, and let <var title="">length</var> be 8.</li>

   <li><p>While <var title="">length</var> is greater than two and the
   first character in each component is a U+0030 DIGIT ZERO (0)
   character, remove that character and reduce <var title="">length</var> by one.</li>

   <li><p>If <var title="">length</var> is <em>still</em> greater than
   two, truncate each component, leaving only the first two
   characters in each.</li>

   <li><p>Let <var title="">result</var> be a <a href=#simple-color>simple
   color</a>.</p>

   <li><p>Interpret the first component as a hexadecimal number; let
   the red component of <var title="">result</var> be the resulting
   number.</li>

   <li><p>Interpret the second component as a hexadecimal number; let
   the green component of <var title="">result</var> be the resulting
   number.</li>

   <li><p>Interpret the third component as a hexadecimal number; let
   the blue component of <var title="">result</var> be the resulting
   number.</li>

   <li><p>Return <var title="">result</var>.</p>

  </ol><hr><p class=note>The <a href=#canvas-context-2d title=canvas-context-2d>2D graphics
  context</a> has a separate color syntax that also handles
  opacity.</p>


  <h4 id=space-separated-tokens><span class=secno>2.4.6 </span>Space-separated tokens</h4>

  <p>A <dfn id=set-of-space-separated-tokens>set of space-separated tokens</dfn> is a set of zero or
  more words separated by one or more <a href=#space-character title="space
  character">space characters</a>, where words consist of any
  string of one or more characters, none of which are <a href=#space-character title="space character">space characters</a>.</p>

  <p>A string containing a <a href=#set-of-space-separated-tokens>set of space-separated tokens</a>
  may have leading or trailing <a href=#space-character title="space character">space
  characters</a>.</p>

  <p>An <dfn id=unordered-set-of-unique-space-separated-tokens>unordered set of unique space-separated tokens</dfn> is a
  <a href=#set-of-space-separated-tokens>set of space-separated tokens</a> where none of the words
  are duplicated.</p>

  <p>An <dfn id=ordered-set-of-unique-space-separated-tokens>ordered set of unique space-separated tokens</dfn> is a
  <a href=#set-of-space-separated-tokens>set of space-separated tokens</a> where none of the words
  are duplicated but where the order of the tokens is meaningful.</p>

  <p><a href=#set-of-space-separated-tokens title="set of space-separated tokens">Sets of
  space-separated tokens</a> sometimes have a defined set of
  allowed values. When a set of allowed values is defined, the tokens
  must all be from that list of allowed values; other values are
  non-conforming. If no such set of allowed values is provided, then
  all values are conforming.</p>

  <p>When a user agent has to <dfn id=split-a-string-on-spaces>split a string on spaces</dfn>, it
  must use the following algorithm:</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>Let <var title="">tokens</var> be a list of tokens,
   initially empty.</li>

   <li><p><a href=#skip-whitespace>Skip whitespace</a></li>

   <li><p>While <var title="">position</var> is not past the end of
   <var title="">input</var>:</p>

    <ol><li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> that are not
     <a href=#space-character title="space character">space characters</a>.</li>

     <li><p>Add the string collected in the previous step to <var title="">tokens</var>.</li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a></li>

    </ol></li>

   <li><p>Return <var title="">tokens</var>.</li>  

  </ol><p>When a user agent has to <dfn id=remove-a-token-from-a-string>remove a token from a string</dfn>,
  it must use the following algorithm:</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   modified.</li>

   <li><p>Let <var title="">token</var> be the token being removed. It
   will not contain any <a href=#space-character title="space character">space
   characters</a>.</li>

   <li><p>Let <var title="">output</var> be the output string,
   initially empty.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>If <var title="">position</var> is beyond the end of <var title="">input</var>, set the string being modified to <var title="">output</var>, and abort these steps.</li>

   <li><p>If the character at <var title="">position</var> is a
   <a href=#space-character>space character</a>:

    <ol><li><p>Append the character at <var title="">position</var> to
     the end of <var title="">output</var>.</li>

     <li><p>Increment <var title="">position</var> so it points at the
     next character in <var title="">input</var>.</li>

     <li><p>Return to step 5 in the overall set of steps.</li>

    </ol></li>

   <li><p>Otherwise, the character at <var title="">position</var> is
   the first character of a token. <a href=#collect-a-sequence-of-characters>Collect a sequence of
   characters</a> that are not <a href=#space-character title="space character">space
   characters</a>, and let that be <var title="">s</var>.</li>

   <li><p>If <var title="">s</var> is exactly equal to <var title="">token</var>, then:</p>

    <ol><li><p><a href=#skip-whitespace>Skip whitespace</a> (in <var title="">input</var>).</li>

     <li><p>Remove any <a href=#space-character title="space character">space
     characters</a> currently at the end of <var title="">output</var>.</li>

     <li><p>If <var title="">position</var> is not past the end of
     <var title="">input</var>, and <var title="">output</var> is not
     the empty string, append a single U+0020 SPACE character at the
     end of <var title="">output</var>.</li>

    </ol></li>

   <li><p>Otherwise, append <var title="">s</var> to the end of <var title="">output</var>.</li>

   <li><p>Return to step 6 in the overall set of steps.</li>

  </ol><p class=note>This causes any occurrences of the token to be
  removed from the string, and any spaces that were surrounding the
  token to be collapsed to a single space, except at the start and end
  of the string, where such spaces are removed.</p>



  <h4 id=comma-separated-tokens><span class=secno>2.4.7 </span>Comma-separated tokens</h4>

  <p>A <dfn id=set-of-comma-separated-tokens>set of comma-separated tokens</dfn> is a set of zero or
  more tokens each separated from the next by a single U+002C COMMA
  character (<code title="">,</code>), where tokens consist of any
  string of zero or more characters, neither beginning nor ending with
  <a href=#space-character title="space character">space characters</a>, nor
  containing any U+002C COMMA characters (<code title="">,</code>),
  and optionally surrounded by <a href=#space-character title="space character">space
  characters</a>.</p>

  <p class=example>For instance, the string "<code title="">&nbsp;a&nbsp;,b,,d&nbsp;d&nbsp;</code>" consists of four
  tokens: "a", "b", the empty string, and "d&nbsp;d". Leading and
  trailing whitespace around each token doesn't count as part of the
  token, and the empty string can be a token.</p>

  <p><a href=#set-of-comma-separated-tokens title="set of comma-separated tokens">Sets of
  comma-separated tokens</a> sometimes have further restrictions on
  what consists a valid token. When such restrictions are defined, the
  tokens must all fit within those restrictions; other values are
  non-conforming. If no such restrictions are specified, then all
  values are conforming.</p>

  <p>When a user agent has to <dfn id=split-a-string-on-commas>split a string on commas</dfn>, it
  must use the following algorithm:</p>

  <ol><li><p>Let <var title="">input</var> be the string being
   parsed.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p>Let <var title="">tokens</var> be a list of tokens,
   initially empty.</li>

   <li><p><i>Token</i>: If <var title="">position</var> is past the
   end of <var title="">input</var>, jump to the last step.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> that are not
   U+002C COMMA characters (<code title="">,</code>). Let <var title="">s</var> be the resulting sequence (which might be the
   empty string).</li>

   <li><p>Remove any leading or trailing sequence of <a href=#space-character title="space character">space characters</a> from <var title="">s</var>.</li>

   <li><p>Add <var title="">s</var> to <var title="">tokens</var>.</li>

   <li><p>If <var title="">position</var> is not past the end of <var title="">input</var>, then the character at <var title="">position</var> is a U+002C COMMA character (<code title="">,</code>); advance <var title="">position</var> past that
   character.</li>

   <li><p>Jump back to the step labeled <i>token</i>.</li>

   <li><p>Return <var title="">tokens</var>.</li>  

  </ol><h4 id=keywords-and-enumerated-attributes><span class=secno>2.4.8 </span>Keywords and enumerated attributes</h4>

  <p>Some attributes are defined as taking one of a finite set of
  keywords. Such attributes are called <dfn id=enumerated-attribute title="enumerated
  attribute">enumerated attributes</dfn>. The keywords are each
  defined to map to a particular <em>state</em> (several keywords
  might map to the same state, in which case some of the keywords are
  synonyms of each other; additionally, some of the keywords can be
  said to be non-conforming, and are only in the specification for
  historical reasons). In addition, two default states can be
  given. The first is the <i>invalid value default</i>, the second
  is the <i>missing value default</i>.</p>

  <p>If an enumerated attribute is specified, the attribute's value
  must be an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for one of the
  given keywords that are not said to be non-conforming, with no
  leading or trailing whitespace.</p>

  <p>When the attribute is specified, if its value is an <span>ASCII
  case-insensitively</span> match for one of the given keywords then
  that keyword's state is the state that the attribute represents. If
  the attribute value matches none of the given keywords, but the
  attribute has an <i>invalid value default</i>, then the attribute
  represents that state. Otherwise, if the attribute value matches
  none of the keywords but there is a <i>missing value default</i>
  state defined, then <em>that</em> is the state represented by the
  attribute. Otherwise, there is no default, and invalid values must
  be ignored.</p>

  <p>When the attribute is <em>not</em> specified, if there is a
  <i>missing value default</i> state defined, then that is the state
  represented by the (missing) attribute. Otherwise, the absence of
  the attribute means that there is no state represented.</p>

  <p class=note>The empty string can be one of the keywords in some
  cases. For example the <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute has
  two states: <i>true</i>, matching the <code title="">true</code>
  keyword and the empty string, <i>false</i>, matching <code title="">false</code> and all other keywords (it's the <i>invalid
  value default</i>). It could further be thought of as having a
  third state <i>inherit</i>, which would be the default when the
  attribute is not specified at all (the <i>missing value
  default</i>), but for various reasons that isn't the way this
  specification actually defines it.</p>


  <h4 id=syntax-references><span class=secno>2.4.9 </span>References</h4>

  <p>A <dfn id=valid-hash-name-reference>valid hash-name reference</dfn> to an element of type <var title="">type</var> is a string consisting of a U+0023 NUMBER SIGN
  (<code title="">#</code>) character followed by a string which
  exactly matches the value of the <code title="">name</code>
  attribute of an element in the document with type <var title="">type</var>.</p>

  <p>The <dfn id=rules-for-parsing-a-hash-name-reference>rules for parsing a hash-name reference</dfn> to an
  element of type <var title="">type</var> are as follows:</p>

  <ol><li><p>If the string being parsed does not contain a U+0023 NUMBER
   SIGN character, or if the first such character in the string is the
   last character in the string, then return null and abort these
   steps.</li>

   <li><p>Let <var title="">s</var> be the string from the character
   immediately after the first U+0023 NUMBER SIGN character in the
   string being parsed up to the end of that string.</li>

   <li><p>Return the first element of type <var title="">type</var>
   that has an <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute whose value
   is a <a href=#case-sensitive>case-sensitive</a> match for <var title="">s</var> or
   a <code title="">name</code> attribute whose value is a
   <a href=#compatibility-caseless>compatibility caseless</a> match for <var title="">s</var>.</li>

   <!--
   IE is also doing case-insensitive id="" matching.
   Tests:
   http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cmap%20name%3D%22T%26eacute%3B%26%23x01F1%3B%26%23x2075%3B%22%3E%3Carea%20href%3D%22%2F%22%20shape%3Drect%20coords%3D0%2C0%2C200%2C200%3E%3C%2Fmap%3E%0A%3Cimg%20usemap%3D%22%23t%26Eacute%3BDZ5%22%20src%3Dimage%3E
   ...except that doesn't explain why this fails:
   http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cmap%20name%3D%22T%26eacute%3B%26%23x01F1%3B%26%23x2075%3B%26%23xFB01%3B%22%3E%3Carea%20href%3D%22%2F%22%20shape%3Drect%20coords%3D0%2C0%2C200%2C200%3E%3C%2Fmap%3E%0A%3Cimg%20usemap%3D%22%23t%26Eacute%3BDZ5F%26%23x0131%3B%26%23x0307%3B%22%20src%3Dimage%3E
   maybe they just don't know about combining dot above?
   -->

  </ol><h3 id=urls><span class=secno>2.5 </span>URLs</h3>

  <p>This specification defines the term <a href=#url>URL</a>, and defines
  various algorithms for dealing with URLs, because for historical
  reasons the rules defined by the URI and IRI specifications are not
  a complete description of what HTML user agents need to implement to
  be compatible with Web content.</p>


  <h4 id=terminology-0><span class=secno>2.5.1 </span>Terminology</h4>

  <p>A <dfn id=url>URL</dfn> is a string used to identify a resource.</p>

  <p>A <a href=#url>URL</a> is a <dfn id=valid-url>valid URL</dfn> if at least one of
  the following conditions holds:</p>

  <ul><li><p>The <a href=#url>URL</a> is a valid URI reference <a href=#refsRFC3986>[RFC3986]</a>.</li>

   <li><p>The <a href=#url>URL</a> is a valid IRI reference and it has no
   query component. <a href=#refsRFC3987>[RFC3987]</a></li>

   <li><p>The <a href=#url>URL</a> is a valid IRI reference and its query
   component contains no unescaped non-ASCII characters. <a href=#refsRFC3987>[RFC3987]</a></li>

   <li><p>The <a href=#url>URL</a> is a valid IRI reference and the <a href="#document's-character-encoding" title="document's character encoding">character encoding</a> of
   the URL's <code>Document</code> is UTF-8 or UTF-16. <a href=#refsRFC3987>[RFC3987]</a></li>

  </ul><p>A <a href=#url>URL</a> has an associated <dfn id=url-character-encoding>URL character
  encoding</dfn>, determined as follows:</p>

  <dl class=switch><dt>If the URL came from a script (e.g. as an argument to a
   method)</dt>

   <dd>The URL character encoding is the <a href="#script's-character-encoding">script's character
   encoding</a>.</dd>

   <dt>If the URL came from a DOM node (e.g. from an element)</dt>

   <dd>The node has a <code>Document</code>, and the URL character
   encoding is the <a href="#document's-character-encoding">document's character encoding</a>.</dd>

   <dt>If the URL had a character encoding defined when the URL was
   created or defined</dt>

   <dd>The URL character encoding is as defined.</dd>

  </dl><p class=note>The term "URL" in this specification is used in a
  manner distinct from the precise technical meaning it is given in
  RFC 3986. Readers familiar with that RFC will find it easier to read
  <em>this</em> specification if they pretend the term "URL" as used
  herein is really called something else altogether.</p>


  <h4 id=parsing-urls><span class=secno>2.5.2 </span>Parsing URLs</h4>

  <p>To <dfn id=parse-a-url>parse a URL</dfn> <var title="">url</var> into its
  component parts, the user agent must use the following steps:</p>

  <ol><li><p>Strip leading and trailing <a href=#space-character title="space
   character">space characters</a> from <var title="">url</var>.</li>

   <li>

    <p>Parse <var title="">url</var> in the manner defined by RFC
    3986, with the following exceptions:</p>

    <ul><li>Add all characters with codepoints less than or equal to
     U+0020 or greater than or equal to U+007F to the
     &lt;unreserved&gt; production.</li>

     <li>Add the characters U+0022, U+003C, U+003E, U+005B .. U+005E,
     U+0060, and U+007B .. U+007D to the &lt;unreserved&gt;
     production.
      <!--
       0022 QUOTATION MARK
       003C LESS-THAN SIGN
       003E GREATER-THAN SIGN
       005B LEFT SQUARE BRACKET
       005C REVERSE SOLIDUS
       005D RIGHT SQUARE BRACKET
       005E CIRCUMFLEX ACCENT
       0060 GRAVE ACCENT
       007B LEFT CURLY BRACKET
       007C VERTICAL LINE
       007D RIGHT CURLY BRACKET
      -->
     </li>

     <li>Add a single U+0025 PERCENT SIGN character as a second
     alternative way of matching the &lt;pct-encoded&gt; production,
     except when the &lt;pct-encoded&gt; is used in the
     &lt;reg-name&gt; production.</li>

     <li>Add the U+0023 NUMBER SIGN character to the characters
     allowed in the &lt;fragment&gt; production.</li>

     <!-- some browsers also have other differences, e.g. Mozilla
     seems to treat ";" as if it was not in sub-delims, if the scheem
     is "ftp". -->

    </ul></li>

   <li>

    <p>If <var title="">url</var> doesn't match the
    &lt;URI-reference&gt; production, even after the above changes are
    made to the ABNF definitions, then parsing the URL fails with an
    error. <a href=#refsRFC3986>[RFC3986]</a></p>

    <p>Otherwise, parsing <var title="">url</var> was successful; the
    components of the URL are substrings of <var title="">url</var>
    defined as follows:</p>

    <dl><dt><dfn id=url-scheme title=url-scheme>&lt;scheme&gt;</dfn></dt>

     <dd><p>The substring matched by the &lt;scheme&gt; production, if any.</dd>


     <dt><dfn id=url-host title=url-host>&lt;host&gt;</dfn></dt>

     <dd><p>The substring matched by the &lt;host&gt; production, if any.</dd>


     <dt><dfn id=url-port title=url-port>&lt;port&gt;</dfn></dt>

     <dd><p>The substring matched by the &lt;port&gt; production, if any.</dd>


     <dt><dfn id=url-hostport title=url-hostport>&lt;hostport&gt;</dfn></dt>

     <dd><p>If there is a &lt;scheme&gt; component and a &lt;port&gt;
     component and the port given by the &lt;port&gt; component is
     different than the default port defined for the protocol given by
     the &lt;scheme&gt; component, then &lt;hostport&gt; is the
     substring that starts with the substring matched by the
     &lt;host&gt; production and ends with the substring matched by the
     &lt;port&gt; production, and includes the colon in between the
     two. Otherwise, it is the same as the &lt;host&gt; component.</p>


     <dt><dfn id=url-path title=url-path>&lt;path&gt;</dfn></dt>

     <dd>

      <p>The substring matched by one of the following productions, if
      one of them was matched:</p>

      <ul class=brief><li>&lt;path-abempty&gt;</li>
       <li>&lt;path-absolute&gt;</li>
       <li>&lt;path-noscheme&gt;</li>
       <li>&lt;path-rootless&gt;</li>
       <li>&lt;path-empty&gt;</li>
      </ul></dd>


     <dt><dfn id=url-query title=url-query>&lt;query&gt;</dfn></dt>

     <dd><p>The substring matched by the &lt;query&gt; production, if any.</dd>


     <dt><dfn id=url-fragment title=url-fragment>&lt;fragment&gt;</dfn></dt>

     <dd><p>The substring matched by the &lt;fragment&gt; production, if any.</dd>


     <dt><dfn id=url-host-specific title=url-host-specific>&lt;host-specific&gt;</dfn></dt>

     <dd><p>The substring that <em>follows</em> the substring matched
     by the &lt;authority&gt; production, or the whole string if the
     &lt;authority&gt; production wasn't matched.</dd>

    </dl></li>

  </ol><!-- XXX we might want to define "server-based naming authority",
  it's not clear RFC3986 does a good job of defining that anymore
  (earlier URI specs did) --><h4 id=resolving-urls><span class=secno>2.5.3 </span>Resolving URLs</h4>

  <p>To <dfn id=resolve-a-url>resolve a URL</dfn> to an <a href=#absolute-url>absolute URL</a>
  relative to either another <a href=#absolute-url>absolute URL</a> or an element,
  the user agent must use the following steps. Resolving a URL can
  result in an error, in which case the URL is not resolvable.</p>

  <ol><li><p>Let <var title="">url</var> be the <a href=#url>URL</a> being
   resolved.</li>

   <li><p>Let <var title="">encoding</var> be the <a href=#url-character-encoding>URL character
   encoding</a>.</li>

   <li><p>If <var title="">encoding</var> is UTF-16, then change it to
   UTF-8.</li>

   <li>

    <p>If the algorithm was invoked with an <a href=#absolute-url>absolute URL</a>
    to use as the base URL, let <var title="">base</var> be that
    <a href=#absolute-url>absolute URL</a>.</p>

    <p>Otherwise, let <var title="">base</var> be the <i>base URI of
    the element</i>, as defined by the XML Base specification, with
    <i>the base URI of the document entity</i> being defined as the
    <a href=#document-base-url>document base URL</a> of the <code>Document</code> that
    owns the element. <a href=#refsXMLBASE>[XMLBASE]</a></p>

    <p>For the purposes of the XML Base specification, user agents
    must act as if all <code>Document</code> objects represented XML
    documents.</p>

    <p class=note>It is possible for <code title=attr-xml-base><a href=#the-xml:base-attribute-(xml-only)>xml:base</a></code> attributes to be present
    even in HTML fragments, as such attributes can be added
    dynamically using script. (Such scripts would not be conforming,
    however, as <code title=attr-xml-base><a href=#the-xml:base-attribute-(xml-only)>xml:base</a></code> attributes
    are not allowed in <a href=#html-documents>HTML documents</a>.)</p>

    <p>The <dfn id=document-base-url>document base URL</dfn> of a <code>Document</code> is
    the <a href=#absolute-url>absolute URL</a> obtained by running these
    substeps:</p>

    <ol><li><p>Let <var title="">fallback base url</var> be <a href="#the-document's-address">the
     document's address</a>.</li>

     <li>

      <!-- http://www.hixie.ch/tests/adhoc/html/navigation/javascript-url/ -->

      <!-- XXX this should be tested in the case of a browsing context
      that was navigated to about:blank after having been elsewhere,
      as opposed to the about:blank used at the time of the browsing
      context's creation. -->

      <p>If <var title="">fallback base url</var> is
      <code><a href=#about:blank>about:blank</a></code>, and the <code>Document</code>'s
      <a href=#browsing-context>browsing context</a> has a <a href=#creator-browsing-context>creator browsing
      context</a>, then let <var title="">fallback base url</var>
      be the <a href=#document-base-url>document base URL</a> of the <a href=#creator-document>creator
      <code>Document</code></a> instead.</p>

     </li>

     <li><p>If there is no <code><a href=#the-base-element>base</a></code> element that is both a
     child of <a href=#the-head-element-0>the <code>head</code> element</a> and has an
     <code title=attr-base-href><a href=#attr-base-href>href</a></code> attribute, then the
     <a href=#document-base-url>document base URL</a> is <var title="">fallback base
     url</var>.</li>

     <li><p>Otherwise, let <var title="">url</var> be the value of the
     <code title=attr-base-href><a href=#attr-base-href>href</a></code> attribute of the first
     such element.</li>

     <li><p><a href=#resolve-a-url title="resolve a URL">Resolve</a> <var title="">url</var> relative to <var title="">fallback base
     url</var> (thus, the <code><a href=#the-base-element>base</a></code> <code title=attr-base-href><a href=#attr-base-href>href</a></code> attribute isn't affected by
     <code title=attr-xml-base><a href=#the-xml:base-attribute-(xml-only)>xml:base</a></code> attributes).</li>

     <li><p>The <a href=#document-base-url>document base URL</a> is the result of the
     previous step if it was successful; otherwise it is <var title="">fallback base url</var>.</li>

    </ol></li>

   <li><p><a href=#parse-a-url title="parse a URL">Parse</a> <var title="">url</var> into its component parts.</li>

   <li>

    <p>If parsing <var title="">url</var> resulted in a <a href=#url-host title=url-host>&lt;host&gt;</a> component, then replace the
    matching subtring of <var title="">url</var> with the string that
    results from expanding any sequences of percent-encoded octets in
    that component that are valid UTF-8 sequences into Unicode
    characters as defined by UTF-8.</p>

    <p>If any percent-encoded octets in that component are not valid
    UTF-8 sequences, then return an error and abort these steps.</p>

    <p>Apply the IDNA ToASCII algorithm to the matching substring,
    with both the AllowUnassigned and UseSTD3ASCIIRules flags
    set. Replace the matching substring with the result of the ToASCII
    algorithm.</p>

    <p>If ToASCII fails to convert one of the components of the
    string, e.g. because it is too long or because it contains invalid
    characters, then return an error and abort these steps. <a href=#refsRFC3490>[RFC3490]</a></p>

   </li>

   <li>

    <p>If parsing <var title="">url</var> resulted in a <a href=#url-path title=url-path>&lt;path&gt;</a> component, then replace the
    matching substring of <var title="">url</var> with the string that
    results from applying the following steps to each character other
    than U+0025 PERCENT SIGN (%) that doesn't match the original
    &lt;path&gt; production defined in RFC 3986:</p>

    <ol><li>Encode the character into a sequence of octets as defined by
     UTF-8.</li>

     <li>Replace the character with the percent-encoded form of those
     octets. <a href=#refsRFC3986>[RFC3986]</a></li>

    </ol><div class=example>

     <p>For instance if <var title="">url</var> was "<code title="">//example.com/a^b&#9786;c%FFd%z/?e</code>", then the
     <a href=#url-path title=url-path>&lt;path&gt;</a> component's substring
     would be "<code title="">/a^b&#9786;c%FFd%z/</code>" and the two
     characters that would have to be escaped would be "<code title="">^</code>" and "<code title="">&#9786;</code>". The
     result after this step was applied would therefore be that <var title="">url</var> now had the value "<code title="">//example.com/a%5Eb%E2%98%BAc%FFd%z/?e</code>".</p>

    </div>

   </li>

   <li>

    <p>If parsing <var title="">url</var> resulted in a <a href=#url-query title=url-query>&lt;query&gt;</a> component, then replace the
    matching substring of <var title="">url</var> with the string that
    results from applying the following steps to each character other
    than U+0025 PERCENT SIGN (%) that doesn't match the original
    &lt;query&gt; production defined in RFC 3986:</p>

    <ol><li>If the character in question cannot be expressed in the
     encoding <var title="">encoding</var>, then replace it with a
     single 0x3F octet (an ASCII question mark) and skip the remaining
     substeps for this character.</li>

     <li>Encode the character into a sequence of octets as defined by
     the encoding <var title="">encoding</var>.</li>

     <li>Replace the character with the percent-encoded form of those
     octets. <a href=#refsRFC3986>[RFC3986]</a></li>

    </ol></li>

   <li><p>Apply the algorithm described in RFC 3986 section 5.2
   Relative Resolution, using <var title="">url</var> as the
   potentially relative URI reference (<var title="">R</var>), and
   <var title="">base</var> as the base URI (<var title="">Base</var>). <a href=#refsRFC3986>[RFC3986]</a></li>

   <li>

    <p>Apply any relevant conformance criteria of RFC 3986 and RFC
    3987, returning an error and aborting these steps if
    appropriate. <a href=#refsRFC3986>[RFC3986]</a> <a href=#refsRFC3987>[RFC3987]</a></p>

    <p class=example>For instance, if an absolute URI that would be
    returned by the above algorithm violates the restrictions specific
    to its scheme, e.g. a <code title="">data:</code> URI using the
    "<code title="">//</code>" server-based naming authority syntax,
    then user agents are to treat this as an error instead.<!-- RFC
    3986, 3.1 Scheme --></p>

   </li>

   <li><p>Let <var title="">result</var> be the target URI (<var title="">T</var>) returned by the Relative Resolution
   algorithm.</li>

   <li><p>If <var title="">result</var> uses a scheme with a
   server-based naming authority, replace all U+005C REVERSE SOLIDUS
   (\) characters in <var title="">result</var> with U+002F SOLIDUS
   (/) characters.</li>

   <li><p>Return <var title="">result</var>.</li>

  </ol><p>A <a href=#url>URL</a> is an <dfn id=absolute-url>absolute URL</dfn> if <a href=#resolve-a-url title="resolve a URL">resolving</a> it results in the same
  URL without an error.</p>


  <h4 id=dynamic-changes-to-base-urls><span class=secno>2.5.4 </span>Dynamic changes to base URLs</h4>

  <p>When an <code title=attr-xml-base><a href=#the-xml:base-attribute-(xml-only)>xml:base</a></code> attribute
  changes, the attribute's element, and all descendant elements, are
  <a href=#affected-by-a-base-url-change>affected by a base URL change</a>.</p>

  <p>When a document's <a href=#document-base-url>document base URL</a> changes, all
  elements in that document are <a href=#affected-by-a-base-url-change>affected by a base URL
  change</a>.</p>

  <p>When an element is moved from one document to another, if the two
  documents have different <a href=#document-base-url title="document base URL">base
  URLs</a>, then that element and all its descendants are
  <a href=#affected-by-a-base-url-change>affected by a base URL change</a>.</p>

  <p>When an element is <dfn id=affected-by-a-base-url-change>affected by a base URL change</dfn>, it
  must act as described in the following list:</p>

  <dl class=switch><dt>If the element is a <a href=#hyperlink title=hyperlink>hyperlink
   element</a></dt>

   <dd>

    <p>If the <a href=#absolute-url>absolute URL</a> identified by the hyperlink is
    being shown to the user, or if any data derived from that URL is
    affecting the display, then the <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute should be <a href=#resolve-a-url title="resolve a url">reresolved</a> relative to the element
    and the UI updated appropriately.</p>

    <p class=example>For example, the CSS <code title=selector-link><a href=#selector-link>:link</a></code>/<code title=selector-visited><a href=#selector-visited>:visited</a></code> pseudo-classes might have
    been affected.</p>

    <p>If the hyperlink has a <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute and its <a href=#absolute-url title="absolute URL">absolute URL(s)</a> are being shown to the
    user, then the <code title=attr-hyperlink-ping><a href=#ping>ping</a></code>
    attribute's tokens should be <a href=#resolve-a-url title="resolve a
    url">reresolved</a> relative to the element and the UI updated
    appropriately.</p>

   </dd>

   <dt>If the element is a <code><a href=#the-blockquote-element>blockquote</a></code>, <code><a href=#the-q-element>q</a></code>,
   <code><a href=#the-ins-element>ins</a></code>, or <code><a href=#the-del-element>del</a></code> element with a <code title="">cite</code> attribute</dt>

   <dd>

    <p>If the <a href=#absolute-url>absolute URL</a> identified by the <code title="">cite</code> attribute is being shown to the user, or if
    any data derived from that URL is affecting the display, then the
    <a href=#url>URL</a> should be <a href=#resolve-a-url title="resolve a
    url">reresolved</a> relative to the element and the UI updated
    appropriately.</p>

   </dd>

   <dt>Otherwise</dt>

   <dd>

    <p>The element is not directly affected.</p>

    <p class=example>Changing the base URL doesn't affect the image
    displayed by <code><a href=#the-img-element>img</a></code> elements, although subsequent
    accesses of the <code title=dom-img-src><a href=#dom-img-src>src</a></code> DOM attribute
    from script will return a new <a href=#absolute-url>absolute URL</a> that might
    no longer correspond to the image being shown.</p>

   </dd>

  </dl><h4 id=interfaces-for-url-manipulation><span class=secno>2.5.5 </span>Interfaces for URL manipulation</h4>

 <p>An interface that has a complement of <dfn id=url-decomposition-attributes>URL decomposition
  attributes</dfn> will have seven attributes with the following
  definitions:</p>

<pre class=idl>
           attribute DOMString <a href=#dom-uda-protocol title=dom-uda-protocol>protocol</a>;
           attribute DOMString <a href=#dom-uda-host title=dom-uda-host>host</a>;
           attribute DOMString <a href=#dom-uda-hostname title=dom-uda-hostname>hostname</a>;
           attribute DOMString <a href=#dom-uda-port title=dom-uda-port>port</a>;
           attribute DOMString <a href=#dom-uda-pathname title=dom-uda-pathname>pathname</a>;
           attribute DOMString <a href=#dom-uda-search title=dom-uda-search>search</a>;
           attribute DOMString <a href=#dom-uda-hash title=dom-uda-hash>hash</a>;
</pre>

  <p>The attributes defined to be URL decomposition attributes must
  act as described for the attributes with the same corresponding
  names in this section.</p>

  <p>In addition, an interface with a complement of URL decomposition
  attributes will define an <dfn id=concept-uda-input title=concept-uda-input>input</dfn>, which is a <a href=#url>URL</a>
  that the attributes act on, and a <dfn id=concept-uda-setter title=concept-uda-setter>common setter action</dfn>, which is a
  set of steps invoked when any of the attributes' setters are
  invoked.</p>

  <p>The seven URL decomposition attributes have similar
  requirements.</p>

  <p>On getting, if the <a href=#concept-uda-input title=concept-uda-input>input</a>
  fulfills the condition given in the "getter condition" column
  corresponding to the attribute in the table below, the user agent
  must return the part of the <a href=#concept-uda-input title=concept-uda-input>input</a> URL given in the "component"
  column, with any prefixes specified in the "prefix" column
  appropriately added to the start of the string and any suffixes
  specified in the "suffix" column appropriately added to the end of
  the string. Otherwise, the attribute must return the empty
  string.</p>

  <p>On setting, the new value must first be mutated as described by
  the "setter preprocessor" column, then mutated by %-escaping any
  characters in the new value that are not valid in the relevant
  component as given by the "component" column. Then, if the resulting
  new value fulfills the condition given in the "setter condition"
  column, the user agent must make a new string <var title="">output</var> by replacing the component of the URL given by
  the "component" column in the <a href=#concept-uda-input title=concept-uda-input>input</a> URL with the new value;
  otherwise, the user agent must let <var title="">output</var> be
  equal to the <a href=#concept-uda-input title=concept-uda-input>input</a>. Finally,
  the user agent must invoke the <a href=#concept-uda-setter title=concept-uda-setter>common setter action</a> with the
  value of <var title="">output</var>.</p>

  <p>When replacing a component in the URL, if the component is part
  of an optional group in the URL syntax consisting of a character
  followed by the component, the component (including its prefix
  character) must be included even if the new value is the empty
  string.</p>

  <p class=note>The previous paragraph applies in particular to the
  "<code title="">:</code>" before a &lt;port&gt; component, the "<code title="">?</code>" before a &lt;query&gt; component, and the "<code title="">#</code>" before a &lt;fragment&gt; component.</p>

  <p>For the purposes of the above definitions, URLs must be parsed
  using the <a href=#parse-a-url title="parse a URL">URL parsing rules</a> defined
  in this specification.</p>

  <table><thead><tr><th>Attribute
     <th>Component
     <th>Getter Condition
     <th>Prefix
     <th>Suffix
     <th>Setter Preprocessor
     <th>Setter Condition
   <tbody><tr><td><dfn id=dom-uda-protocol title=dom-uda-protocol><code>protocol</code></dfn>
     <td><a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a>
     <td>&mdash;
     <td>&mdash;
     <td>U+003A COLON ("<code title="">:</code>")
     <td>Remove all trailing U+003A COLON ("<code title="">:</code>") characters
     <td>The new value is not the empty string
    <tr><td><dfn id=dom-uda-host title=dom-uda-host><code>host</code></dfn>
     <td><a href=#url-hostport title=url-hostport>&lt;hostport&gt;</a>
     <td><a href=#concept-uda-input title=concept-uda-input>input</a> is hierarchical and uses a server-based naming authority
     <td>&mdash;
     <td>&mdash;
     <td>&mdash;
     <td>&mdash;
    <tr><td><dfn id=dom-uda-hostname title=dom-uda-hostname><code>hostname</code></dfn>
     <td><a href=#url-host title=url-host>&lt;host&gt;</a>
     <td><a href=#concept-uda-input title=concept-uda-input>input</a> is hierarchical and uses a server-based naming authority
     <td>&mdash;
     <td>&mdash;
     <td>Remove all leading U+002F SOLIDUS ("<code title="">/</code>") characters
     <td>&mdash;
    <tr><td><dfn id=dom-uda-port title=dom-uda-port><code>port</code></dfn>
     <td><a href=#url-port title=url-port>&lt;port&gt;</a>
     <td><a href=#concept-uda-input title=concept-uda-input>input</a> is hierarchical, uses a server-based naming authority, and contained a <a href=#url-port title=url-port>&lt;port&gt;</a> component (possibly an empty one)
     <td>&mdash;
     <td>&mdash;
     <td>Remove any characters in the new value that are not in the range U+0030 DIGIT ZERO .. U+0039 DIGIT NINE.
         If the resulting string is empty, set it to a single U+0030 DIGIT ZERO character ('0').
     <td>&mdash;
    <tr><td><dfn id=dom-uda-pathname title=dom-uda-pathname><code>pathname</code></dfn>
     <td><a href=#url-path title=url-path>&lt;path&gt;</a>
     <td><a href=#concept-uda-input title=concept-uda-input>input</a> is hierarchical
     <td>&mdash;
     <td>&mdash;
     <td>If it has no leading U+002F SOLIDUS ("<code title="">/</code>") character, prepend a U+002F SOLIDUS ("<code title="">/</code>") character to the new value
     <td>&mdash;
    <tr><td><dfn id=dom-uda-search title=dom-uda-search><code>search</code></dfn>
     <td><a href=#url-query title=url-query>&lt;query&gt;</a>
     <td><a href=#concept-uda-input title=concept-uda-input>input</a> is hierarchical, and contained a <a href=#url-query title=url-query>&lt;query&gt;</a> component (possibly an empty one)
     <td>U+003F QUESTION MARK ("<code title="">?</code>")
     <td>&mdash;
     <td>Remove one leading U+003F QUESTION MARK ("<code title="">?</code>") character, if any
     <td>&mdash;
    <tr><td><dfn id=dom-uda-hash title=dom-uda-hash><code>hash</code></dfn>
     <td><a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a>
     <td><a href=#concept-uda-input title=concept-uda-input>input</a> contained a <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a> component (possibly an empty one)
     <td>U+0023 NUMBER SIGN ("<code title="">#</code>")
     <td>&mdash;
     <td>Remove one leading U+0023 NUMBER SIGN ("<code title="">#</code>") character, if any
     <td>&mdash;
  </table><!--
  http://www.hixie.ch/tests/adhoc/dom/level0/location/components/
  http://lxr.mozilla.org/seamonkey/source/dom/src/base/nsLocation.cpp
  http://wp.netscape.com/eng/mozilla/3.0/handbook/javascript/ref_h-l.htm#84722
--><div class=example>

   <p>The table below demonstrates how the getter condition for <code title=dom-uda-search><a href=#dom-uda-search>search</a></code> results in different results
   depending on the exact original syntax of the URL:</p>

   <table><thead><tr><th> Input URL
      <th> <code title=dom-uda-search><a href=#dom-uda-search>search</a></code> value
      <th> Explanation
    <tbody><tr><td> <code title="">http://example.com/</code>
      <td> <i>empty string</i>
      <td> No <a href=#url-query title=url-query>&lt;query&gt;</a> component in input URL.
     <tr><td> <code title="">http://example.com/?</code>
      <td> <code title="">?</code>
      <td> There is a <a href=#url-query title=url-query>&lt;query&gt;</a> component, but it is empty. The question mark in the resulting value is the prefix.
     <tr><td> <code title="">http://example.com/?test</code>
      <td> <code title="">?test</code>
      <td> The <a href=#url-query title=url-query>&lt;query&gt;</a> component has the value "<code title="">test</code>".
     <tr><td> <code title="">http://example.com/?test#</code>
      <td> <code title="">?test</code>
      <td> The (empty) <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a> component is not part of the <a href=#url-query title=url-query>&lt;query&gt;</a> component.
   </table></div>



  <h3 id=fetching-resources><span class=secno>2.6 </span>Fetching resources</h3>

  <p>When a user agent is to <dfn id=fetch>fetch</dfn> a resource, the
  following steps must be run:</p>

  <ol><li><p>If the resource is identified by the <a href=#url>URL</a>
   <dfn id=about:blank><code>about:blank</code></dfn>, then return the empty string
   and abort these steps.</li>

   <li><p>Perform the remaining steps asynchronously.</li>

   <li>

    <p>If the resource is identified by an <a href=#absolute-url>absolute URL</a>,
    and the resource is to be obtained using a idempotent action (such
    as an HTTP GET <a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or
    equivalent</a>), and it is already being downloaded for other
    reasons (e.g. another invocation of this algorithm), and the user
    agent is configured such that it is to reuse the data from the
    existing download instead of initiating a new one, then use the
    results of the existing download instead of starting a new
    one.</p>

    <p>Otherwise, at a time convenient to the user and the user agent,
    download (or otherwise obtain) the resource, applying the
    semantics of the relevant specifications (e.g. performing an HTTP
    GET or POST operation, or reading the file from disk, following
    redirects, <a href=#concept-js-deref title=concept-js-deref>dereferencing <span title="javascript protocol"><code title="">javascript:</code>
    URLs</span></a>, etc).</p>

   </li>

   <li><p>When the resource is available, <a href=#queue-a-task>queue a task</a>
   that uses the resource as appropriate. If the resource can be
   processed incrementally, as, for instance, with a progressively
   interlaced JPEG or an HTML file, multiple tasks may be queued to
   process the data as it is downloaded. The <a href=#task-source>task source</a>
   for these tasks is the <a href=#networking-task-source>networking task source</a>.</p>
   <!-- XXX make sure each use of 'fetch' defines what the appropriate
   task is -->

  </ol><p class=note>The <span>offline application cache</span>
  processing model introduces some <a href=#changesToNetworkingModel>changes to the networking model</a>
  to handle the returning of cached resources.</p>

  <p class=note>The <a href=#navigate title=navigate>navigation</a>
  processing model handles redirects itself, overriding the
  redirection handling that would be done by the fetching
  algorithm.</p>

  <p class=note>Whether the <a href=#content-type-sniffing>type
  sniffing rules</a> apply to the fetched resource depends on the
  algorithm that invokes the rules &mdash; they are not always
  applicable.</p>


  <h4 id=concept-http-equivalent><span class=secno>2.6.1 </span>Protocol concepts</h4>

  <p>User agents can implement a variety of transfer protocols, but
  this specification mostly defines behavior in terms of HTTP. <a href=#refsHTTP>[HTTP]</a></p>

  <p>The <dfn id=concept-http-equivalent-get title=concept-http-equivalent-get>HTTP GET
  method</dfn> is equivalent to the default retrieval action of the
  protocol. For example, RETR in FTP. Such actions are idempotent and
  safe, in HTTP terms.</p>

  <p>The <dfn id=concept-http-equivalent-codes title=concept-http-equivalent-codes>HTTP response
  codes</dfn> are equivalent to statuses in other protocols that have
  the same basic meanings. For example, a "file not found" error is
  equivalent to a 404 code, a server error is equivalent to a 5xx
  code, and so on.</p>

  <p>The <dfn id=concept-http-equivalent-headers title=concept-http-equivalent-headers>HTTP
  headers</dfn> are equivalent to fields in other protocols that have
  the same basic meaning. For example, the the HTTP authentication
  headers are equivalent to the authentication aspects of the FTP
  protocol.</p>

  <p class=XXX>If there are any specific questions with what should
  be considered equivalent to what, let me know, and I'll make it more
  explicit for those cases.</p>


  <h4 id=encrypted-http-and-related-security-concerns><span class=secno>2.6.2 </span>Encrypted HTTP and related security concerns</h4>

  <p>Anything in this specification that refers to HTTP also applies
  to HTTP-over-TLS, as represented by <a href=#url title=url>URLs</a>
  representing the <code title="">https</code> scheme.</p>

  <p class=warning>User agents should report certificate errors to
  the user and must either refuse to download resources sent with
  erroneous certificates or must act as if such resources were in fact
  served with no encryption.</p>

  <p>Not doing so can result in users not noticing man-in-the-middle
  attacks.</p>

  <div class=example>

   <p>If a user connects to a server with a self-signed certificate,
   the user agent could allow the connection but just act as if there
   had been no encryption. If the user agent instead allowed the user
   to override the problem and then displayed the page as if it was
   fully and safely encrypted, the user could be easily tricked into
   accepting man-in-the-middle connections.</p>

   <p>If a user connects to a server with full encryption, but the
   page then refers to an external resource that has an expired
   certificate, then the user agent will act as if the resource was
   unavailable, possibly also reporting the problem to the user. If
   the user agent instead allowed the resource to be used, then an
   attacker could just look for "secure" sites that used resources
   from a different host and only apply man-in-the-middle attacks to
   that host, for example taking over scripts in the page.</p>

  </div>



  <h3 id=content-type-sniffing><span class=secno>2.7 </span>Determining the type of a resource</h3>

  <p class=warning>It is imperative that the rules in this section
  be followed exactly. When a user agent uses different heuristics for
  content type detection than the server expects, security problems
  can occur. For example, if a server believes that the client will
  treat a contributed file as an image (and thus treat it as benign),
  but a Web browser believes the content to be HTML (and thus execute
  any scripts contained therein), the end user can be exposed to
  malicious content, making the user vulnerable to cookie theft
  attacks and other cross-site scripting attacks.</p>


  <h4 id=content-type><span class=secno>2.7.1 </span>Content-Type metadata</h4>

  <p>What explicit <dfn id=content-type-0 title=Content-Type>Content-Type
  metadata</dfn> is associated with the resource (the resource's type
  information) depends on the protocol that was used to
  <a href=#fetch>fetch</a> the resource.</p>

  <p>For HTTP resources, only the first Content-Type HTTP header, if
  any, contributes any type information; the explicit type of the
  resource is then the value of that header, interpreted as described
  by the HTTP specifications. If the Content-Type HTTP header is
  present but the value of the first such header cannot be interpreted
  as described by the HTTP specifications (e.g. because its value
  doesn't contain a U+002F SOLIDUS ('/') character), then the resource
  has no type information (even if there are multiple Content-Type
  HTTP headers and one of the other ones is syntactically correct). <a href=#refsHTTP>[HTTP]</a></p>

  <p>For resources fetched from the file system, user agents should use
  platform-specific conventions, e.g. operating system extension/type
  mappings.</p>

  <p>Extensions must not be used for determining resource types for
  resources fetched over HTTP.</p>

  <p>For resources fetched over most other protocols, e.g. FTP, there
  is no type information.</p>


  <p>The <dfn id=algorithm-for-extracting-an-encoding-from-a-content-type>algorithm for extracting an encoding from a
  Content-Type</dfn>, given a string <var title="">s</var>, is as
  follows. It either returns an encoding or nothing.</p>

  <ol><li><p>Find the first seven characters in <var title="">s</var>
   that are an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the word
   "charset". If no such match is found, return nothing.</p>

   <li><p>Skip any U+0009, U+000A, U+000C, U+000D, or U+0020
   characters that immediately follow the word 'charset' (there might
   not be any).</li>

   <li><p>If the next character is not a U+003D EQUALS SIGN ('='),
   return nothing.</li>

   <li><p>Skip any U+0009, U+000A, U+000C, U+000D, or U+0020
   characters that immediately follow the equals sign (there might not
   be any).</li>

   <li><p>Process the next character as follows:</p>

    <dl class=switch><dt>If it is a U+0022 QUOTATION MARK ('"') and there is a later
     U+0022 QUOTATION MARK ('"') in <var title="">s</var></dt>

     <dt>If it is a U+0027 APOSTROPHE ("'") and there is a later
     U+0027 APOSTROPHE ("'") in  <var title="">s</var></dt>

     <dd><p>Return the string between this character and the next
     earliest occurrence of this character.</dd>


     <dt>If it is an unmatched U+0022 QUOTATION MARK ('"')</dt>
     <dt>If it is an unmatched U+0027 APOSTROPHE ("'")</dt>
     <dt>If there is no next character</dt>

     <dd><p>Return nothing.</dd>


     <dt>Otherwise</dt>

     <dd><p>Return the string from this character to the first U+0009,
     U+000A, U+000C, U+000D, U+0020, or U+003B character or the end of
     <var title="">s</var>, whichever comes first.</dd>

    </dl></li>

  </ol><p class=note>The above algorithm is a willful violation of the
  HTTP specification. <a href=#refsRFC2616>[RFC2616]</a></p>


  <h4 id=content-type-sniffing:-web-pages><span class=secno>2.7.2 </span>Content-Type sniffing: Web pages</h4>

  <p>The <dfn id=content-type-sniffing-0 title="Content-Type sniffing">sniffed type of a
  resource</dfn> must be found as follows:</p>

  <ol><li><p>If the user agent is configured to strictly obey
   Content-Type headers for this resource, then jump to the last step
   in this set of steps.</li>

   <li><p>If the resource was fetched over an HTTP protocol and there
   is an HTTP Content-Type header and the value of the first such
   header has bytes that exactly match one of the following lines:</p>

    <table><thead><tr><th>Bytes in Hexadecimal
       <th>Textual representation
     <tbody><tr><!-- Very old Apache default --><td>74 65 78 74 2f 70 6c 61 69 6e
       <td><code title="">text/plain</code>
      <tr><!-- Old Apache default --><td>74 65 78 74 2f 70 6c 61 69 6e 3b 20 63 68 61 72 73 65 74 3d 49 53 4f 2d 38 38 35 39 2d 31
       <td><code title="">text/plain;&nbsp;charset=ISO-8859-1</code>
      <tr><!-- Debian's arbitrarily different Apache default --><td>74 65 78 74 2f 70 6c 61 69 6e 3b 20 63 68 61 72 73 65 74 3d 69 73 6f 2d 38 38 35 39 2d 31
       <td><code title="">text/plain;&nbsp;charset=iso-8859-1</code>
      <tr><!-- Someone else's arbitrarily different Apache default (who?) --><td>74 65 78 74 2f 70 6c 61 69 6e 3b 20 63 68 61 72 73 65 74 3d 55 54 46 2d 38
       <td><code title="">text/plain;&nbsp;charset=UTF-8</code>
    </table><p>...then jump to the <i title="content-type sniffing: text or
    binary"><a href=#content-type-sniffing:-text-or-binary>text or binary</a></i> section below.</p>

    <!-- while IE sniffs all text/plain, this will continue to grow as
    people add new defaults. Hopefully IE will stop the madness in due
    course and stop sniffing anything but the above... -->

   </li>

   <li><p>Let <var title="">official type</var> be the type given by
   the <a href=#content-type-0 title=Content-Type>Content-Type metadata</a> for the
   resource, ignoring parameters. If there is no such type, jump to
   the <i title="content-type sniffing: unknown type"><a href=#content-type-sniffing:-unknown-type>unknown type</a></i>
   step below. Comparisons with this type, as defined by MIME
   specifications, are done in an <a href=#ascii-case-insensitive>ASCII case-insensitive</a>
   manner. <a href=#refsRFC2046>[RFC2046]</a></li>

   <li><p>If <var title="">official type</var> is "unknown/unknown" or
   "application/unknown", jump to the <i title="content-type sniffing:
   unknown type"><a href=#content-type-sniffing:-unknown-type>unknown type</a></i> step below.</p> <!-- In a study
   looking at many billions of pages whose first five characters were
   "<HTML", "unknown/unknown" was used to label documents about once
   for every 5000 pages labeled "text/html", and "application/unknown"
   was used about once for every 35000 pages labeled
   "text/html". --></li>

   <li><p>If <var title="">official type</var> ends in "+xml", or if
   it is either "text/xml" or "application/xml", then the sniffed
   type of the resource is <var title="">official type</var>; return
   that and abort these steps.</li>

   <li><p>If <var title="">official type</var> is an image type
   supported by the user agent (e.g. "image/png", "image/gif",
   "image/jpeg", etc), then jump to the <i title="content-type
   sniffing: image"><a href=#content-type-sniffing:-image>images</a></i> section below, passing it the <var title="">official type</var>.</li>

   <li><p>If <var title="">official type</var> is "text/html", then
   jump to the <i title="content-type sniffing: feed or html"><a href=#content-type-sniffing:-feed-or-html>feed or
   HTML</a></i> section below.</li>

   <li><p>The sniffed type of the resource is <var title="">official
   type</var>.</li>

  </ol><h4 id=content-type-sniffing:-text-or-binary><span class=secno>2.7.3 </span><dfn>Content-Type sniffing: text or binary</dfn></h4>

  <ol><li><p>The user agent may wait for 512 or more bytes of the resource
   to be available.</li>

   <li><p>Let <var title="">n</var> be the smaller of either 512 or
   the number of bytes already available.</li>

   <li>

    <p>If <var title="">n</var> is 4 or more, and the first bytes of
    the resource match one of the following byte sets:</p>

    <table><thead><tr><th>Bytes in Hexadecimal
       <th>Description
     <tbody><tr><td>FE FF
       <td>UTF-16BE BOM <!-- followed by a character --><!-- nobody uses this: or UTF-32LE BOM -->
      <tr><td>FF FE
       <td>UTF-16LE BOM <!-- followed by a character -->
<!-- nobody uses this
      <tr>
       <td>00 00 FE FF
       <td>UTF-32BE BOM
-->
<!-- this one is redundant with the one above
      <tr>
       <td>FF FE 00 00
       <td>UTF-32LE BOM
-->
      <tr><td>EF BB BF
       <td>UTF-8 BOM <!-- followed by a character, or the first byte of a multiple character sequence -->
<!-- nobody uses this
      <tr>
       <td>DD 73 66 73
       <td>UTF-EBCDIC BOM
-->
    </table><p>...then the sniffed type of the resource is "text/plain". Abort
    these steps.</p>

   </li>

   <li><p>If none of the first <var title="">n</var> bytes of the
   resource are <a href=#binary-data-bytes>binary data bytes</a> then the sniffed type
   of the resource is "text/plain". Abort these steps.</li>

   <li>

    <p>If the first bytes of the resource match one of the byte
    sequences in the "pattern" column of the table in the <i title="content-type sniffing: unknown type"><a href=#content-type-sniffing:-unknown-type>unknown type</a></i>
    section below, ignoring any rows whose cell in the "security"
    column says "scriptable" (or "n/a"), then the sniffed type of the
    resource is the type given in the corresponding cell in the
    "sniffed type" column on that row; abort these steps.</p>

    <p class=warning>It is critical that this step not ever return a
    scriptable type (e.g. text/html), as otherwise that would allow a
    privilege escalation attack.</p>

   </li>

   <li><p>Otherwise, the sniffed type of the resource is
   "application/octet-stream".</li>

  </ol><p>Bytes covered by the following ranges are <dfn id=binary-data-bytes>binary data
  bytes</dfn>:</p>

  <!-- This byte list is based on RFC 2046 Section 4.1.2. Characters
  in the range 0x00-0x1F, with the exception of 0x09, 0x0A, 0x0C, 0x0D
  (ASCII for TAB, LF, FF, and CR), and character 0x1B (reportedly used
  by some encodings as a shift escape), are invalid. Thus, if we see
  them, we assume it's not text. -->

  <ul class=brief><li> 0x00 - 0x08 </li>
   <li> 0x0B </li>
   <li> 0x0E - 0x1A </li>
   <li> 0x1C - 0x1F </li>
  </ul><h4 id=content-type-sniffing:-unknown-type><span class=secno>2.7.4 </span><dfn>Content-Type sniffing: unknown type</dfn></h4>

  <ol><li><p>The user agent may wait for 512 or more bytes of the
   resource to be available.</li>

   <li><p>Let <var title="">stream length</var> be the smaller of
   either 512 or the number of bytes already available.</li>

   <li><p>For each row in the table below:</p>

    <dl class=switch><dt>If the row has no "<em>WS</em>" bytes:</dt>

     <dd>

      <ol><li>Let <var title="">pattern length</var> be the length of the
       pattern (number of bytes described by the cell in the second
       column of the row).</li>

       <li>If <var title="">stream length</var> is smaller than <var title="">pattern length</var> then skip this row.</li>

       <li>Apply the "and" operator to the first <var title="">pattern
       length</var> bytes of the resource and the given mask (the
       bytes in the cell of first column of that row), and let the
       result be the <var title="">data</var>.</li>

       <li>If the bytes of the <var title="">data</var> matches the
       given pattern bytes exactly, then the sniffed type of the
       resource is the type given in the cell of the third column in
       that row; abort these steps.</li>

      </ol></dd>

     <dt>If the row has a "<em>WS</em>" byte:</dt>

     <dd>

      <ol><li><p>Let <var title="">index<sub>pattern</sub></var> be an
       index into the mask and pattern byte strings of the
       row.</li>

       <li><p>Let <var title="">index<sub>stream</sub></var> be an
       index into the byte stream being examined.</li>

       <li><p><em>Loop</em>: If <var title="">index<sub>stream</sub></var> points beyond the end of
       the byte stream, then this row doesn't match, skip this
       row.</li>

       <li>

        <p>Examine the <var title="">index<sub>stream</sub></var>th
        byte of the byte stream as follows:</p>

        <dl class=switch><dt>If the <var title="">index<sub>pattern</sub></var>th byte
         of the pattern is a normal hexadecimal byte and not a "<em>WS</em>"
         byte:</dt>

         <dd>

          <p>If the "and" operator, applied to the <var title="">index<sub>stream</sub></var>th byte of the stream
          and the <var title="">index<sub>pattern</sub></var>th byte
          of the mask, yield a value different that the <var title="">index<sub>pattern</sub></var>th byte of the
          pattern, then skip this row.</p>

          <p>Otherwise, increment <var title="">index<sub>pattern</sub></var> to the next byte in
          the mask and pattern and <var title="">index<sub>stream</sub></var> to the next byte in
          the byte stream.</p>

         </dd>

         <dt>Otherwise, if the <var title="">index<sub>pattern</sub></var>th byte of the pattern
         is a "<em>WS</em>" byte:</dt>

         <dd>

          <p>"<em>WS</em>" means "whitespace", and allows insignificant
          whitespace to be skipped when sniffing for a type
          signature.</p>

          <p>If the <var title="">index<sub>stream</sub></var>th byte
          of the stream is one of 0x09 (ASCII TAB), 0x0A (ASCII LF),
          0x0C (ASCII FF), 0x0D (ASCII CR), or 0x20 (ASCII space),
          then increment only the <var title="">index<sub>stream</sub></var> to the next byte in
          the byte stream.</p>

          <p>Otherwise, increment only the <var title="">index<sub>pattern</sub></var> to the next byte in
          the mask and pattern.</p>

         </dd>

        </dl></li>

       <li><p>If <var title="">index<sub>pattern</sub></var> does not
       point beyond the end of the mask and pattern byte strings, then
       jump back to the <em>loop</em> step in this algorithm.</li>

       <li><p>Otherwise, the sniffed type of the resource is the type
       given in the cell of the third column in that row; abort these
       steps.</li>

      </ol></dd>

    </dl></li>

   <li><p>If none of the first <var title="">n</var> bytes of the
   resource are <a href=#binary-data-bytes>binary data bytes</a> then the sniffed type
   of the resource is "text/plain". Abort these steps.</li>

   <li><p>Otherwise, the sniffed type of the resource is
   "application/octet-stream".</li>

  </ol><p>The table used by the above algorithm is:</p>

  <table><thead><tr><th colspan=2>Bytes in Hexadecimal
     <th rowspan=2>Sniffed type
     <th rowspan=2>Security
     <th rowspan=2>Comment
    <tr><th>Mask
     <th>Pattern
   <tbody><tr><td>FF FF DF DF DF DF DF DF DF FF DF DF DF DF
     <td>3C 21 44 4F 43 54 59 50 45 20 48 54 4D 4C <!-- "<!DOCTYPE HTML" --> <!-- common in static data -->
     <td>text/html
     <td>Scriptable
     <td>The string "<code title="">&lt;!DOCTYPE HTML</code>" in US-ASCII or compatible encodings, case-insensitively.
    <tr><td>FF FF DF DF DF DF
     <td><em>WS</em> 3C 48 54 4D 4C <!-- "<HTML" --> <!-- common in static data -->
     <td>text/html
     <td>Scriptable
     <td>The string "<code title="">&lt;HTML</code>" in US-ASCII or compatible encodings, case-insensitively, possibly with leading spaces.
    <tr><td>FF FF DF DF DF DF
     <td><em>WS</em> 3C 48 45 41 44 <!-- "<HEAD" --> <!-- common in static data -->
     <td>text/html
     <td>Scriptable
     <td>The string "<code title="">&lt;HEAD</code>" in US-ASCII or compatible encodings, case-insensitively, possibly with leading spaces.
    <tr><td>FF FF DF DF DF DF DF DF
     <td><em>WS</em> 3C 53 43 52 49 50 54 <!-- "<SCRIPT" --> <!-- common in dynamic data -->
     <td>text/html
     <td>Scriptable
     <td>The string "<code title="">&lt;SCRIPT</code>" in US-ASCII or compatible encodings, case-insensitively, possibly with leading spaces.
    <tr><td>FF FF FF FF FF
     <td>25 50 44 46 2D <!-- "%PDF-" (from http://lxr.mozilla.org/seamonkey/source/netwerk/streamconv/converters/nsUnknownDecoder.cpp#321) -->
     <td>application/pdf
     <td>Scriptable
     <td>The string "<code title="">%PDF-</code>", the PDF signature.
    <tr><td>FF FF FF FF FF FF FF FF FF FF FF
     <td>25 21 50 53 2D 41 64 6F 62 65 2D <!-- "%!PS-Adobe-" (from http://lxr.mozilla.org/seamonkey/source/netwerk/streamconv/converters/nsUnknownDecoder.cpp#321) -->
     <td>application/postscript
     <td>Safe
     <td>The string "<code title="">%!PS-Adobe-</code>", the PostScript signature.

   <!-- copied from the text or binary section above -->
   <tbody><tr><td>FF FF 00 00
     <td>FE FF 00 00
     <td>text/plain
     <td>n/a
     <td>UTF-16BE BOM <!-- followed by at least one character -->
    <tr><td>FF FF 00 00
     <td>FF FF 00 00
     <td>text/plain
     <td>n/a
     <td>UTF-16LE BOM <!-- followed by at least one character -->
    <tr><td>FF FF FF 00
     <td>EF BB BF 00
     <td>text/plain
     <td>n/a
     <td>UTF-8 BOM <!-- followed by at least one character -->

   <!-- based on the table in the image section below -->
   <tbody><tr><td>FF FF FF FF FF FF
     <td>47 49 46 38 37 61 <!-- GIF87a -->
     <td>image/gif
     <td>Safe
     <td>The string "<code title="">GIF87a</code>", a GIF signature.
    <tr><td>FF FF FF FF FF FF
     <td>47 49 46 38 39 61 <!-- GIF89a -->
     <td>image/gif
     <td>Safe
     <td>The string "<code title="">GIF89a</code>", a GIF signature.
    <tr><td>FF FF FF FF FF FF FF FF
     <td>89 50 4E 47 0D 0A 1A 0A <!-- [TAB]PNG[CR][LF][EOF][LF]; 137 80 78 71 13 10 26 10 -->
     <td>image/png
     <td>Safe
     <td>The PNG signature.
    <tr><td>FF FF FF
     <td>FF D8 FF <!-- SOI marker followed by the first byte of another marker -->
     <td>image/jpeg
     <td>Safe
     <td>A JPEG SOI marker followed by the first byte of another marker.
    <tr><td>FF FF
     <td>42 4D
     <td>image/bmp
     <td>Safe
     <td>The string "<code title="">BM</code>", a BMP signature.
    <tr><td>FF FF FF FF
     <td>00 00 01 00
     <td>image/vnd.microsoft.icon
     <td>Safe
     <td>A 0 word following by a 1 word, a Windows Icon file format signature.

  </table><p class=XXX>I'd like to add types like MPEG, AVI, Flash,
  Java, etc, to the above table.</p>

  <p>User agents may support further types if desired, by implicitly
  adding to the above table. However, user agents should not use any
  other patterns for types already mentioned in the table above, as
  this could then be used for privilege escalation (where, e.g., a
  server uses the above table to determine that content is not HTML
  and thus safe from XSS attacks, but then a user agent detects it as
  HTML anyway and allows script to execute).</p>

  <p>The column marked "security" is used by the algorithm in the
  "text or binary" section, to avoid sniffing <code title="">text/plain</code> content as a type that can be used for a
  privilege escalation attack.</p>


  <h4 id=content-type-sniffing:-image><span class=secno>2.7.5 </span><dfn>Content-Type sniffing: image</dfn></h4>

  <p>If the resource's <var title="">official type</var> is
  "image/svg+xml", then the sniffed type of the resource is its <var title="">official type</var> (an XML type).</p>

  <p>Otherwise, if the first bytes of the resource match one of the
  byte sequences in the first column of the following table, then the
  sniffed type of the resource is the type given in the corresponding
  cell in the second column on the same row:</p>

  <table><thead><tr><th>Bytes in Hexadecimal
     <th>Sniffed type
     <th>Comment

   <!-- update the table above if you change this! -->
   <tbody><tr><td>47 49 46 38 37 61 <!-- GIF87a -->
     <td>image/gif
     <td>The string "<code title="">GIF87a</code>", a GIF signature.
    <tr><td>47 49 46 38 39 61 <!-- GIF89a -->
     <td>image/gif
     <td>The string "<code title="">GIF89a</code>", a GIF signature.
    <tr><td>89 50 4E 47 0D 0A 1A 0A <!-- [TAB]PNG[CR][LF][EOF][LF]; 137 80 78 71 13 10 26 10 -->
     <td>image/png
     <td>The PNG signature.
    <tr><td>FF D8 FF <!-- SOI marker followed by the first byte of another marker -->
     <td>image/jpeg
     <td>A JPEG SOI marker followed by the first byte of another marker.
    <tr><td>42 4D
     <td>image/bmp
     <td>The string "<code title="">BM</code>", a BMP signature.
    <tr><td>00 00 01 00
     <td>image/vnd.microsoft.icon
     <td>A 0 word following by a 1 word, a Windows Icon file format signature.
    <!-- XXX Mozilla also detects ART (AOL proprietary format) and Windows Cursor files -->
  </table><p>Otherwise, the sniffed type of the resource is the same as
  its <var title="">official type</var>.</p>


  <h4 id=content-type-sniffing:-feed-or-html><span class=secno>2.7.6 </span><dfn>Content-Type sniffing: feed or HTML</dfn></h4>
  <!-- mostly based on:
   http://blogs.msdn.com/rssteam/articles/PublishersGuide.aspx
   http://lxr.mozilla.org/seamonkey/source/browser/components/feeds/src/nsFeedSniffer.cpp#192
   http://lxr.mozilla.org/seamonkey/source/browser/components/feeds/src/nsFeedSniffer.cpp#127
  -->

  <ol><li><p>The user agent may wait for 512 or more bytes of the
   resource to be available.</li>

   <li><p>Let <var title="">s</var> be the stream of bytes, and let
   <span><var title="">s</var>[<var title="">i</var>]</span> represent
   the byte in <var title="">s</var> with position <var title="">i</var>, treating <var title="">s</var> as zero-indexed
   (so the first byte is at <span><var title="">i</var>=0</span>).</li>

   <li><p>If at any point this algorithm requires the user agent to
   determine the value of a byte in <var title="">s</var> which is not
   yet available, or which is past the first 512 bytes of the
   resource, or which is beyond the end of the resource, the user
   agent must stop this algorithm, and assume that the sniffed type of
   the resource is "text/html".</p>

   <p class=note>User agents are allowed, by the first step of this
   algorithm, to wait until the first 512 bytes of the resource are
   available.</li>

   <li><p>Initialize <var title="">pos</var> to 0.</li>

   <li><p>If <span><var title="">s</var>[0]</span> is 0xEF, <span><var title="">s</var>[1]</span> is 0xBB, and <span><var title="">s</var>[2]</span> is 0xBF, then set <var title="">pos</var> to 3. (This skips over a leading UTF-8 BOM, if
   any.)</li>

   <li><p><i>Loop start:</i> Examine <span><var title="">s</var>[<var title="">pos</var>]</span>.</p>

   <dl class=switch><!-- skip whitespace (S token as defined in XML 1.0 section 2.3; production [3] --><dt>If it is 0x09 (ASCII tab), 0x20 (ASCII space), 0x0A (ASCII LF), or 0x0D (ASCII CR)</dt>
    <dd>Increase <var title="">pos</var> by 1 and repeat this step.</dd>

    <dt>If it is 0x3C (ASCII "<code title="">&lt;</code>")</dt>
    <dd>Increase <var title="">pos</var> by 1 and go to the next step.</dd>

    <dt>If it is anything else</dt>
    <dd>The sniffed type of the resource is "text/html". Abort these
    steps.</dd>

   </dl></li>

   <li><p>If the bytes with positions <var title="">pos</var> to
   <span><var title="">pos</var>+2</span> in <var title="">s</var> are
   exactly equal to 0x21, 0x2D, 0x2D respectively (ASCII for "<code title="">!--</code>"), then:</p>

    <ol><li>Increase <var title="">pos</var> by 3.</li> <!-- skips past the " ! - - " -->

     <li>If the bytes with positions <span><var title="">pos</var></span> to <span><var title="">pos</var>+2</span> in <var title="">s</var> are exactly
     equal to 0x2D, 0x2D, 0x3E respectively (ASCII for "<code title="">--&gt;</code>"), then increase <var title="">pos</var>
     by 3 and jump back to the previous step (the step labeled
     <i>loop start</i>) in the overall algorithm in this section.</li>

     <li>Otherwise, increase <var title="">pos</var> by 1.</li>

     <li>Return to step 2 in these substeps.</li>

    </ol></li>

   <li><p>If <span><var title="">s</var>[<var title="">pos</var>]</span> is 0x21 (ASCII "<code title="">!</code>"):</p>

    <!-- this skips past a DOCTYPE if there is one. It is brain-dead
    because we don't have to be clever to parse the Atom and RSS x.y
    DOCTYPEs, as they don't do anything clever like have internal
    subsets or quoted ">" characters. If this fails, then that's ok,
    we'll treat it as HTML which is fine since we know it's not a feed
    in that case. -->

    <ol><li>Increase <var title="">pos</var> by 1.</li>

     <li>If <span><var title="">s</var>[<var title="">pos</var>]</span> equal 0x3E, then increase <var title="">pos</var> by 1 and jump back to the step labeled
     <i>loop start</i> in the overall algorithm in this section.</li>

     <li>Otherwise, return to step 1 in these substeps.</li>

    </ol></li>

   <li><p>If <span><var title="">s</var>[<var title="">pos</var>]</span> is 0x3F (ASCII "<code title="">?</code>"):</p>

    <ol><li>Increase <var title="">pos</var> by 1.</li>

     <li>If <span><var title="">s</var>[<var title="">pos</var>]</span> and <span><var title="">s</var>[<var title="">pos</var>+1]</span> equal 0x3F and 0x3E respectively,
     then increase <var title="">pos</var> by 1 and jump back to the
     step labeled <i>loop start</i> in the overall algorithm in this
     section.</li>

     <li>Otherwise, return to step 1 in these substeps.</li>

    </ol></li>

   <li><p>Otherwise, if the bytes in <var title="">s</var> starting at
   <var title="">pos</var> match any of the sequences of bytes in the
   first column of the following table, then the user agent must
   follow the steps given in the corresponding cell in the second
   column of the same row.</p>

    <table><thead><tr><th>Bytes in Hexadecimal
       <th>Requirement
       <th>Comment

     <tbody><tr><td>72 73 73
       <td>The sniffed type of the resource is "application/rss+xml"; abort these steps
       <td>The three ASCII characters "<code title="">rss</code>"
      <tr><td>66 65 65 64
       <td>The sniffed type of the resource is "application/atom+xml"; abort these steps
       <td>The four ASCII characters "<code title="">feed</code>"
      <tr><td>72 64 66 3A 52 44 46
       <td>Continue to the next step in this algorithm
       <td>The ASCII characters "<code title="">rdf:RDF</code>"
    </table><p>If none of the byte sequences above match the bytes in <var title="">s</var> starting at <var title="">pos</var>, then the
    sniffed type of the resource is "text/html". Abort these
    steps.</p>

   </li>

   <li><p class=XXX>If, before the next "&gt;", you find two
   xmlns* attributes with http://www.w3.org/1999/02/22-rdf-syntax-ns#
   and http://purl.org/rss/1.0/ as the namespaces, then the sniffed
   type of the resource is "application/rss+xml", abort these
   steps. (maybe we only need to check for http://purl.org/rss/1.0/
   actually)</li>

   <li><p>Otherwise, the sniffed type of the resource is
   "text/html".</li>

  </ol><p class=note>For efficiency reasons, implementations may wish to
  implement this algorithm and the algorithm for detecting the
  character encoding of HTML documents in parallel.</p>



  <h3 id=common-dom-interfaces><span class=secno>2.8 </span>Common DOM interfaces</h3>

  <h4 id=reflecting-content-attributes-in-dom-attributes><span class=secno>2.8.1 </span>Reflecting content attributes in DOM attributes</h4>

  <p>Some <span title="DOM attribute">DOM attributes</span> are
  defined to <dfn id=reflect>reflect</dfn> a particular <span>content
  attribute</span>. This means that on getting, the DOM attribute
  returns the current value of the content attribute, and on setting,
  the DOM attribute changes the value of the content attribute to the
  given value.</p>

  <p>If a reflecting DOM attribute is a <code>DOMString</code>
  attribute whose content attribute is defined to contain a
  <a href=#url>URL</a>, then on getting, the DOM attribute must <a href=#resolve-a-url title="resolve a url">resolve</a> the value of the content
  attribute relative to the element and return the resulting
  <a href=#absolute-url>absolute URL</a> if that was successful, or the empty
  string otherwise; and on setting, must set the content attribute to
  the specified literal value. If the content attribute is absent, the
  DOM attribute must return the default value, if the content
  attribute has one, or else the empty string.</p>

  <p>If a reflecting DOM attribute is a <code>DOMString</code>
  attribute whose content attribute is defined to contain one or more
  <a href=#url title=URL>URLs</a>, then on getting, the DOM attribute
  must <a href=#split-a-string-on-spaces title="split a string on spaces">split the content
  attribute on spaces</a> and return the concatenation of <a href=#resolve-a-url title="resolve a URL">resolving</a> each token URL to an
  <a href=#absolute-url>absolute URL</a> relative to the element, with a single
  U+0020 SPACE character between each URL, ignoring any tokens that
  did not resolve successfully. If the content attribute is absent,
  the DOM attribute must return the default value, if the content
  attribute has one, or else the empty string. On setting, the DOM
  attribute must set the content attribute to the specified literal
  value.</p>

  <p>If a reflecting DOM attribute is a <code>DOMString</code> whose
  content attribute is an <a href=#enumerated-attribute>enumerated attribute</a>, and the
  DOM attribute is <dfn id=limited-to-only-known-values>limited to only known values</dfn>, then, on
  getting, the DOM attribute must return the conforming value
  associated with the state the attribute is in (in its canonical
  case), or the empty string if the attribute is in a state that has
  no associated keyword value; and on setting, if the new value is an
  <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for one of the keywords
  given for that attribute, then the content attribute must be set to
  the conforming value associated with the state that the attribute
  would be in if set to the given new value, otherwise, if the new
  value is the empty string, then the content attribute must be
  removed, otherwise, the setter must raise a <code><a href=#syntax_err>SYNTAX_ERR</a></code>
  exception.</p>

  <p>If a reflecting DOM attribute is a <code>DOMString</code> but
  doesn't fall into any of the above categories, then the getting and
  setting must be done in a transparent, case-preserving manner.</p>

  <p>If a reflecting DOM attribute is a boolean attribute, then on
  getting the DOM attribute must return true if the attribute is set,
  and false if it is absent. On setting, the content attribute must be
  removed if the DOM attribute is set to false, and must be set to
  have the same value as its name if the DOM attribute is set to
  true. (This corresponds to the rules for <a href=#boolean-attribute title="boolean
  attribute">boolean content attributes</a>.)</p>

  <p>If a reflecting DOM attribute is a signed integer type
  (<code>long</code>) then, on getting, the content attribute must be
  parsed according to the <a href=#rules-for-parsing-integers title="rules for parsing
  integers">rules for parsing signed integers</a>, and if that is
  successful, and the value is in the range of the DOM attribute's
  type, the resulting value must be returned. If, on the other hand,
  it fails or returns an out of range value, or if the attribute is
  absent, then the default value must be returned instead, or 0 if
  there is no default value. On setting, the given value must be
  converted to the shortest possible string representing the number as
  a <a href=#valid-integer>valid integer</a> in base ten and then that string must
  be used as the new content attribute value.</p>

  <p>If a reflecting DOM attribute is an <em>unsigned</em> integer
  type (<code>unsigned long</code>) then, on getting, the content
  attribute must be parsed according to the <a href=#rules-for-parsing-non-negative-integers>rules for parsing
  non-negative integers</a>, and if that is successful, and the
  value is in the range of the DOM attribute's type, the resulting
  value must be returned. If, on the other hand, it fails or returns
  an out of range value, or if the attribute is absent, the default
  value must be returned instead, or 0 if there is no default
  value. On setting, the given value must be converted to the shortest
  possible string representing the number as a <a href=#valid-non-negative-integer>valid
  non-negative integer</a> in base ten and then that string must be
  used as the new content attribute value.</p>

  <p>If a reflecting DOM attribute is an unsigned integer type
  (<code>unsigned long</code>) that is <dfn id=limited-to-only-positive-non-zero-numbers>limited to only positive
  non-zero numbers</dfn>, then the behavior is similar to the previous
  case, but zero is not allowed. On getting, the content attribute
  must first be parsed according to the <a href=#rules-for-parsing-non-negative-integers>rules for parsing
  non-negative integers</a>, and if that is successful, and the
  value is in the range of the DOM attribute's type, the resulting
  value must be returned. If, on the other hand, it fails or returns
  an out of range value, or if the attribute is absent, the default
  value must be returned instead, or 1 if there is no default
  value. On setting, if the value is zero, the user agent must fire an
  <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception. Otherwise, the given value
  must be converted to the shortest possible string representing the
  number as a <a href=#valid-non-negative-integer>valid non-negative integer</a> in base ten and
  then that string must be used as the new content attribute
  value.</p>

  <p>If a reflecting DOM attribute is a floating point number type
  (<code>float</code>) and it doesn't fall into one of the earlier
  categories, then, on getting, the content attribute must be parsed
  according to the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing floating point number
  values</a>, and if that is successful, and the value is in the
  range of the DOM attribute's type, the resulting value must be
  returned. If, on the other hand, it fails or returns an out of range
  value, or if the attribute is absent, the default value must be
  returned instead, or 0.0 if there is no default value. On setting,
  the given value must be converted to the <a href=#best-representation-of-the-floating-point-number>best representation
  of the floating point number</a> and then that string must be
  used as the new content attribute value.</p>

  <p class=note>The values &plusmn;Infinity and NaN throw an
  exception on setting, as defined by WebIDL. <a href=#refsWEBIDL>[WEBIDL]</a></p>

  <p>If a reflecting DOM attribute is of the type
  <code><a href=#domtokenlist-0>DOMTokenList</a></code>, then on getting it must return a
  <code><a href=#domtokenlist-0>DOMTokenList</a></code> object whose underlying string is the
  element's corresponding content attribute. When the
  <code><a href=#domtokenlist-0>DOMTokenList</a></code> object mutates its underlying string, the
  content attribute must itself be immediately mutated. When the
  attribute is absent, then the string represented by the
  <code><a href=#domtokenlist-0>DOMTokenList</a></code> object is the empty string; when the
  object mutates this empty string, the user agent must first add the
  corresponding content attribute, and then mutate that attribute
  instead. <code><a href=#domtokenlist-0>DOMTokenList</a></code> attributes are always
  read-only. The same <code><a href=#domtokenlist-0>DOMTokenList</a></code> object must be
  returned every time for each attribute.</p>

  <p>If a reflecting DOM attribute has the type
  <code><a href=#htmlelement>HTMLElement</a></code>, or an interface that descends from
  <code><a href=#htmlelement>HTMLElement</a></code>, then, on getting, it must run the
  following algorithm (stopping at the first point where a value is
  returned):

  <ol><li>If the corresponding content attribute is absent, then the
   DOM attribute must return null.</li>

   <li>Let <var title="">candidate</var> be the element that the <code title="">document.getElementById()</code> method would find if it
   was passed as its argument the current value of the corresponding
   content attribute.</li>

   <li>If <var title="">candidate</var> is null, or if it is not
   type-compatible with the DOM attribute, then the DOM attribute must
   return null.</li>

   <li>Otherwise, it must return <var title="">candidate</var>.</li>

  </ol><p>On setting, if the given element has an <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute, then the content attribute must
  be set to the value of that <code title=attr-id><a href=#the-id-attribute>id</a></code>
  attribute. Otherwise, the DOM attribute must be set to the empty
  string.</p><!-- XXX or raise an exception? -->



  <h4 id=collections><span class=secno>2.8.2 </span>Collections</h4>

  <p>The <code><a href=#htmlcollection-0>HTMLCollection</a></code>,
  <code><a href=#htmlformcontrolscollection-0>HTMLFormControlsCollection</a></code>, and
  <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code> interfaces represent various
  lists of DOM nodes. Collectively, objects implementing these
  interfaces are called <dfn id=collections-0>collections</dfn>.</p>

  <p>When a <a href=#collections-0 title=collections>collection</a> is created, a
  filter and a root are associated with the collection.</p>

  <p class=example>For example, when the <code><a href=#htmlcollection-0>HTMLCollection</a></code>
  object for the <code title=dom-document-images><a href=#dom-document-images>document.images</a></code> attribute is
  created, it is associated with a filter that selects only
  <code><a href=#the-img-element>img</a></code> elements, and rooted at the root of the
  document.</p>

  <p>The <a href=#collections-0 title=collections>collection</a> then <dfn id=represented-by-the-collection title="represented by the collection">represents</dfn> a
  <a href=#live>live</a> view of the subtree rooted at the collection's
  root, containing only nodes that match the given filter. The view is
  linear. In the absence of specific requirements to the contrary, the
  nodes within the collection must be sorted in <a href=#tree-order>tree
  order</a>.</p>

  <p class=note>The <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> list is
  not in tree order.</p>

  <p>An attribute that returns a collection must return the same
  object every time it is retrieved.</p>


  <h5 id=htmlcollection><span class=secno>2.8.2.1 </span>HTMLCollection</h5>

  <p>The <code><a href=#htmlcollection-0>HTMLCollection</a></code> interface represents a generic
  <a href=#collections-0 title=collections>collection</a> of elements.</p>

  <pre class=idl>[Callable=<a href=#dom-htmlcollection-nameditem title=dom-HTMLCollection-namedItem>namedItem</a>]
interface <dfn id=htmlcollection-0>HTMLCollection</dfn> {
  readonly attribute unsigned long <a href=#dom-htmlcollection-length title=dom-HTMLCollection-length>length</a>;
  [IndexGetter] Element <a href=#dom-htmlcollection-item title=dom-HTMLCollection-item>item</a>(in unsigned long index);
  [NameGetter] Element <a href=#dom-htmlcollection-nameditem title=dom-HTMLCollection-namedItem>namedItem</a>(in DOMString name);
};</pre>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to one less than
  the number of nodes <a href=#represented-by-the-collection>represented by the collection</a>. If
  there are no such elements, then there are no <span>supported
  indexed properties</span>.</p>

  <p>The <dfn id=dom-htmlcollection-length title=dom-HTMLCollection-length><code>length</code></dfn>
  attribute must return the number of nodes <a href=#represented-by-the-collection>represented by the
  collection</a>.</p>

  <p>The <dfn id=dom-htmlcollection-item title=dom-HTMLCollection-item><code>item(<var title="">index</var>)</code></dfn> method must return the <var title="">index</var>th node in the collection. If there is no <var title="">index</var>th node in the collection, then the method must
  return null.</p>

  <p>The <span>names of the supported named properties</span> consist
  of the values of the <code title="">name</code> attributes of each
  <code><a href=#the-a-element>a</a></code>, <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-area-element>area</a></code>,
  <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-form-element>form</a></code>, <code>frame</code>,
  <code>frameset</code>, <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-img-element>img</a></code>, and
  <code><a href=#the-object-element>object</a></code> element <a href=#represented-by-the-collection>represented by the
  collection</a> with a <code title="">name</code> attribute, plus
  the list of IDs that the elements <a href=#represented-by-the-collection>represented by the
  collection</a> have.</p>

  <p>The <dfn id=dom-htmlcollection-nameditem title=dom-HTMLCollection-namedItem><code>namedItem(<var title="">key</var>)</code></dfn> method must return the first node
  in the collection that matches the following requirements:</p>

  <ul><li>It is an <code><a href=#the-a-element>a</a></code>, <code><a href=#the-applet-element>applet</a></code>,
   <code><a href=#the-area-element>area</a></code>, <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-form-element>form</a></code>,
   <code>frame</code>, <code>frameset</code>, <code><a href=#the-iframe-element>iframe</a></code>,
   <code><a href=#the-img-element>img</a></code>, or <code><a href=#the-object-element>object</a></code> element with a <code title="">name</code> attribute equal to <var title="">key</var>,
   or,</li>

   <li>It is an element with an ID <var title="">key</var>.</li>

  </ul><p>If no such elements are found, then the method must return
  null.</p>



  <h5 id=htmlformcontrolscollection><span class=secno>2.8.2.2 </span>HTMLFormControlsCollection</h5>

  <p>The <code><a href=#htmlformcontrolscollection-0>HTMLFormControlsCollection</a></code> interface represents
  a <a href=#collections-0 title=collections>collection</a> of <a href=#category-listed title=category-listed>listed</a> elements in <code><a href=#the-form-element>form</a></code>
  and <code><a href=#the-fieldset-element>fieldset</a></code> elements.</p>

  <pre class=idl>[Callable=<a href=#dom-htmlformcontrolscollection-nameditem title=dom-HTMLFormControlsCollection-namedItem>namedItem</a>]
interface <dfn id=htmlformcontrolscollection-0>HTMLFormControlsCollection</dfn> {
  readonly attribute unsigned long <a href=#dom-htmlformcontrolscollection-length title=dom-HTMLFormControlsCollection-length>length</a>;
  [IndexGetter] <a href=#htmlelement>HTMLElement</a> <a href=#dom-htmlformcontrolscollection-item title=dom-HTMLFormControlsCollection-item>item</a>(in unsigned long index);
  [NameGetter] Object <a href=#dom-htmlformcontrolscollection-nameditem title=dom-HTMLFormControlsCollection-namedItem>namedItem</a>(in DOMString name);
};</pre>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to one less than
  the number of nodes <a href=#represented-by-the-collection>represented by the collection</a>. If
  there are no such elements, then there are no <span>supported
  indexed properties</span>.</p>

  <p>The <dfn id=dom-htmlformcontrolscollection-length title=dom-HTMLFormControlsCollection-length><code>length</code></dfn>
  attribute must return the number of nodes <a href=#represented-by-the-collection>represented by the
  collection</a>.</p>

  <p>The <dfn id=dom-htmlformcontrolscollection-item title=dom-HTMLFormControlsCollection-item><code>item(<var title="">index</var>)</code></dfn> method must return the <var title="">index</var>th node in the collection. If there is no <var title="">index</var>th node in the collection, then the method must
  return null.</p>

  <p>The <span>names of the supported named properties</span> consist
  of the values of all the <code title=attr-id><a href=#the-id-attribute>id</a></code> and <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attributes of all the elements
  <a href=#represented-by-the-collection>represented by the collection</a>.</p>

  <p>The <dfn id=dom-htmlformcontrolscollection-nameditem title=dom-HTMLFormControlsCollection-namedItem><code>namedItem(<var title="">name</var>)</code></dfn> method must act according to the
  following algorithm:

  <ol><li>If, at the time the method is called, there is exactly one node
   in the collection that has either an <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute or a <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute equal to <var title="">name</var>, then return that node and stop the
   algorithm.</li>

   <li>Otherwise, if there are no nodes in the collection that have
   either an <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute or a <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute equal to <var title="">name</var>, then return null and stop the algorithm.</li>

   <!-- XXX should we return an HTMLCollection instead, like IE? -->
   <li>Otherwise, create a <code>NodeList</code> object representing a
   live view of the <code><a href=#htmlformcontrolscollection-0>HTMLFormControlsCollection</a></code> object,
   further filtered so that the only nodes in the
   <code>NodeList</code> object are those that have either an <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute or a <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute equal to <var title="">name</var>. The nodes in the <code>NodeList</code> object
   must be sorted in <a href=#tree-order>tree order</a>.</li>

   <li>Return that <code>NodeList</code> object.</li>

  </ol><!--
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E...%0A%3Cform%20name%3D%22a%22%3E%3Cinput%20id%3D%22x%22%20name%3D%22y%22%3E%3Cinput%20name%3D%22x%22%20id%3D%22y%22%3E%3C/form%3E%0A%3Cscript%3E%0A%20%20var%20x%3B%0A%20%20w%28x%20%3D%20document.forms%5B%27a%27%5D%5B%27x%27%5D%29%3B%0A%20%20w%28x.length%29%3B%0A%20%20x%5B0%5D.parentNode.removeChild%28x%5B0%5D%29%3B%0A%20%20w%28x.length%29%3B%0A%20%20w%28x%20%3D%3D%20document.forms%5B%27a%27%5D%5B%27x%27%5D%29%3B%0A%3C/script%3E%0A
--><h5 id=htmloptionscollection><span class=secno>2.8.2.3 </span>HTMLOptionsCollection</h5>

  <p>The <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code> interface represents a
  list of <code><a href=#the-option-element>option</a></code> elements. It is always rooted on a
  <code><a href=#the-select-element>select</a></code> element and has attributes and methods that
  manipulate that element's descendants.</p>

  <pre class=idl>[Callable=<a href=#dom-htmloptionscollection-nameditem title=dom-HTMLOptionsCollection-namedItem>namedItem</a>]
interface <dfn id=htmloptionscollection-0>HTMLOptionsCollection</dfn> {
           attribute unsigned long <a href=#dom-htmloptionscollection-length title=dom-HTMLOptionsCollection-length>length</a>;
  [IndexGetter] <a href=#htmloptionelement>HTMLOptionElement</a> <a href=#dom-htmloptionscollection-item title=dom-HTMLOptionsCollection-item>item</a>(in unsigned long index);
  [NameGetter] Object <a href=#dom-htmloptionscollection-nameditem title=dom-HTMLOptionsCollection-namedItem>namedItem</a>(in DOMString name);
  void <a href=#dom-htmloptionscollection-add title=dom-HTMLOptionsCollection-add>add</a>(in <a href=#htmlelement>HTMLElement</a> element, in <a href=#htmlelement>HTMLElement</a> before);
  void <a href=#dom-htmloptionscollection-add title=dom-HTMLOptionsCollection-add>add</a>(in <a href=#htmlelement>HTMLElement</a> element, in long before);
  void <a href=#dom-htmloptionscollection-remove title=dom-HTMLOptionsCollection-remove>remove</a>(in long index);
};</pre>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to one less than
  the number of nodes <a href=#represented-by-the-collection>represented by the collection</a>. If
  there are no such elements, then there are no <span>supported
  indexed properties</span>.</p>

  <p>On getting, the <dfn id=dom-htmloptionscollection-length title=dom-HTMLOptionsCollection-length><code>length</code></dfn>
  attribute must return the number of nodes <a href=#represented-by-the-collection>represented by the
  collection</a>.</p>

  <p>On setting, the behavior depends on whether the new value is
  equal to, greater than, or less than the number of nodes
  <a href=#represented-by-the-collection>represented by the collection</a> at that time. If the
  number is the same, then setting the attribute must do nothing. If
  the new value is greater, then <var title="">n</var> new
  <code><a href=#the-option-element>option</a></code> elements with no attributes and no child nodes
  must be appended to the <code><a href=#the-select-element>select</a></code> element on which the
  <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code> is rooted, where <var title="">n</var> is the difference between the two numbers (new
  value minus old value). If the new value is lower, then the last
  <var title="">n</var> nodes in the collection must be removed from
  their parent nodes, where <var title="">n</var> is the difference
  between the two numbers (old value minus new value).</p>

  <p class=note>Setting <code title=dom-HTMLOptionsCollection-length><a href=#dom-htmloptionscollection-length>length</a></code> never removes
  or adds any <code><a href=#the-optgroup-element>optgroup</a></code> elements, and never adds new
  children to existing <code><a href=#the-optgroup-element>optgroup</a></code> elements (though it can
  remove children from them).</p>

  <p>The <dfn id=dom-htmloptionscollection-item title=dom-HTMLOptionsCollection-item><code>item(<var title="">index</var>)</code></dfn> method must return the <var title="">index</var>th node in the collection. If there is no <var title="">index</var>th node in the collection, then the method must
  return null.</p>

  <p>The <span>names of the supported named properties</span> consist
  of the values of all the <code title=attr-id><a href=#the-id-attribute>id</a></code> and <code title=attr-option-name>name</code> attributes of all the elements
  <a href=#represented-by-the-collection>represented by the collection</a>.</p>

  <p>The <dfn id=dom-htmloptionscollection-nameditem title=dom-HTMLOptionsCollection-namedItem><code>namedItem(<var title="">name</var>)</code></dfn> method must act according to the
  following algorithm:

  <ol><li>If, at the time the method is called, there is exactly one node
   in the collection that has either an <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute or a <code title=attr-option-name>name</code> attribute equal to <var title="">name</var>, then return that node and stop the
   algorithm.</li>

   <li>Otherwise, if there are no nodes in the collection that have
   either an <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute or a <code title=attr-option-name>name</code> attribute equal to <var title="">name</var>, then return null and stop the algorithm.</li>

   <!-- XXX should we return an HTMLCollection instead, like IE? -->
   <li>Otherwise, create a <code>NodeList</code> object representing a
   live view of the <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code> object, further
   filtered so that the only nodes in the <code>NodeList</code> object
   are those that have either an <code title=attr-id><a href=#the-id-attribute>id</a></code>
   attribute or a <code title=attr-option-name>name</code> attribute
   equal to <var title="">name</var>. The nodes in the
   <code>NodeList</code> object must be sorted in <a href=#tree-order>tree
   order</a>.</li>

   <li>Return that <code>NodeList</code> object.</li>

  </ol><p>The <dfn id=dom-htmloptionscollection-add title=dom-HTMLOptionsCollection-add><code>add(<var title="">element</var>, <var title="">before</var>)</code></dfn>
  method must act according to the following algorithm:</p>

  <ol><li><p>If <var title="">element</var> is not an <code><a href=#the-option-element>option</a></code>
   or <code><a href=#the-optgroup-element>optgroup</a></code> element, then return and abort these
   steps.</li>

   <li><p>If <var title="">element</var> is an ancestor of the
   <code><a href=#the-select-element>select</a></code> element element on which the
   <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code> is rooted, then throw a
   <code><a href=#hierarchy_request_err>HIERARCHY_REQUEST_ERR</a></code> exception.</li>

   <li><p>If <var title="">before</var> is an element, but that
   element isn't a descendant of the <code><a href=#the-select-element>select</a></code> element
   element on which the <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code> is rooted,
   then throw a <code><a href=#not_found_err>NOT_FOUND_ERR</a></code> exception.</li>

   <li><p>If <var title="">element</var> and <var title="">before</var> are the same element, then return and abort
   these steps.</li>

   <li><p>If <var title="">before</var> is a node, then let <var title="">reference</var> be that node. Otherwise, if <var title="">before</var> is an integer, and there is a <var title="">before</var>th node in the collection, let <var title="">reference</var> be that node. Otherwise, let <var title="">reference</var> be null.</li>

   <li><p>If <var title="">reference</var> is not null, let <var title="">parent</var> be the parent node of <var title="">reference</var>. Otherwise, let <var title="">parent</var>
   be the <code><a href=#the-select-element>select</a></code> element element on which the
   <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code> is rooted.</li>

   <li><p>Act as if the DOM Core <code title=dom-insertBefore>insertBefore()</code> method was invoked
   on the <var title="">parent</var> node, with <var title="">element</var> as the first argument and <var title="">reference</var> as the second argument.</p>

  </ol><p>The <dfn id=dom-htmloptionscollection-remove title=dom-HTMLOptionsCollection-remove><code>remove(<var title="">index</var>)</code></dfn> method must act according to
  the following algorithm:</p>

  <ol><li><p>If the number of nodes <a href=#represented-by-the-collection>represented by the
   collection</a> is zero, abort these steps.</li>

   <li><p>If <var title="">index</var> is not a number greater than or
   equal to 0 and less than the number of nodes <a href=#represented-by-the-collection>represented by
   the collection</a>, let <var title="">element</var> be the first
   element in the collection. Otherwise, let <var title="">element</var> be the <var title="">index</var>th element
   in the collection.</li>

   <li><p>Remove <var title="">element</var> from its parent
   node.</li>

  </ol><!-- see also http://ln.hixie.ch/?start=1161042744&count=1 --><h4 id=domtokenlist><span class=secno>2.8.3 </span>DOMTokenList</h4>

  <p>The <code><a href=#domtokenlist-0>DOMTokenList</a></code> interface represents an interface
  to an underlying string that consists of an <a href=#unordered-set-of-unique-space-separated-tokens>unordered set of
  unique space-separated tokens</a>.</p>

  <p>Which string underlies a particular <code><a href=#domtokenlist-0>DOMTokenList</a></code>
  object is defined when the object is created. It might be a content
  attribute (e.g. the string that underlies the <code title=dom-classList><a href=#dom-classlist>classList</a></code> object is the <code title=attr-class><a href=#classes>class</a></code> attribute), or it might be an
  anonymous string (e.g. when a <code><a href=#domtokenlist-0>DOMTokenList</a></code> object is
  passed to an author-implemented callback in the
  <code><a href=#datagrid>datagrid</a></code> APIs).</p>

  <pre class=idl>[<a href=#dom-tokenlist-tostring title=dom-tokenlist-toString>Stringifies</a>] interface <dfn id=domtokenlist-0>DOMTokenList</dfn> {
  readonly attribute unsigned long <a href=#dom-tokenlist-length title=dom-tokenlist-length>length</a>;
  [IndexGetter] DOMString <a href=#dom-tokenlist-item title=dom-tokenlist-item>item</a>(in unsigned long index);
  boolean <a href=#dom-tokenlist-has title=dom-tokenlist-has>has</a>(in DOMString token);
  void <a href=#dom-tokenlist-add title=dom-tokenlist-add>add</a>(in DOMString token);
  void <a href=#dom-tokenlist-remove title=dom-tokenlist-remove>remove</a>(in DOMString token);
  boolean <a href=#dom-tokenlist-toggle title=dom-tokenlist-toggle>toggle</a>(in DOMString token);
};</pre>

  <p>The <dfn id=dom-tokenlist-length title=dom-tokenlist-length><code>length</code></dfn>
  attribute must return the number of <em>unique</em> tokens that
  result from <a href=#split-a-string-on-spaces title="split a string on spaces">splitting the
  underlying string on spaces</a>. This is the <var title=dom-tokenlist-length><a href=#dom-tokenlist-length>length</a></var>.</p>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to <span><var title=dom-tokenlist-length><a href=#dom-tokenlist-length>length</a></var>-1</span>, unless the <var title=dom-tokenlist-length><a href=#dom-tokenlist-length>length</a></var> is zero, in which case
  there are no <span>supported indexed properties</span>.</p>

  <p>The <dfn id=dom-tokenlist-item title=dom-tokenlist-item><code>item(<var title="">index</var>)</code></dfn> method must <a href=#split-a-string-on-spaces title="split a
  string on spaces">split the underlying string on spaces</a>, sort
  the resulting list of tokens by Unicode codepoint<!-- XXX that's
  basically nonsense. What sort order do we want here? It should be
  the cheapest one possible that is well-defined for all Unicode. -->,
  remove exact duplicates, and then return the <var title="">index</var>th item in this list. If <var title="">index</var> is equal to or greater than the number of
  tokens, then the method must return null.</p>


  <p>The <dfn id=dom-tokenlist-has title=dom-tokenlist-has><code>has(<var title="">token</var>)</code></dfn> method must run the following
  algorithm:</p>

  <ol><li>If the <var title="">token</var> argument contains any <a href=#space-character title="space character">space characters</a>, then raise an
   <code><a href=#invalid_character_err>INVALID_CHARACTER_ERR</a></code> exception and stop the
   algorithm.</li>

   <li>Otherwise, <a href=#split-a-string-on-spaces title="split a string on spaces">split the
   underlying string on spaces</a> to get the list of tokens in the
   object's underlying string.</li>

   <li>If the token indicated by <var title="">token</var> is one of
   the tokens in the object's underlying string then return true and
   stop this algorithm.</li>

   <li>Otherwise, return false.</li>

  </ol><p>The <dfn id=dom-tokenlist-add title=dom-tokenlist-add><code>add(<var title="">token</var>)</code></dfn> method must run the following
  algorithm:</p>

  <ol><li>If the <var title="">token</var> argument contains any <a href=#space-character title="space character">space characters</a>, then raise an
   <code><a href=#invalid_character_err>INVALID_CHARACTER_ERR</a></code> exception and stop the
   algorithm.</li>

   <li>Otherwise, <a href=#split-a-string-on-spaces title="split a string on spaces">split the
   underlying string on spaces</a> to get the list of tokens in the
   object's underlying string.</li>

   <li>If the given <var title="">token</var> is already one of the
   tokens in the <code><a href=#domtokenlist-0>DOMTokenList</a></code> object's underlying string
   then stop the algorithm.</li>

   <li>Otherwise, if the <code><a href=#domtokenlist-0>DOMTokenList</a></code> object's underlying
   string is not the empty string and the last character of that
   string is not a <a href=#space-character>space character</a>, then append a U+0020
   SPACE character to the end of that string.</li>

   <li>Append the value of <var title="">token</var> to the end of the
   <code><a href=#domtokenlist-0>DOMTokenList</a></code> object's underlying string.</li>

  </ol><p>The <dfn id=dom-tokenlist-remove title=dom-tokenlist-remove><code>remove(<var title="">token</var>)</code></dfn> method must run the following
  algorithm:</p>

  <ol><li>If the <var title="">token</var> argument contains any <a href=#space-character title="space character">space characters</a>, then raise an
   <code><a href=#invalid_character_err>INVALID_CHARACTER_ERR</a></code> exception and stop the
   algorithm.</li>

   <li>Otherwise, <a href=#remove-a-token-from-a-string title="remove a token from a string">remove
   the given <var title="">token</var> from the underlying
   string</a>.</li>

  </ol><p>The <dfn id=dom-tokenlist-toggle title=dom-tokenlist-toggle><code>toggle(<var title="">token</var>)</code></dfn> method must run the following
  algorithm:</p>

  <ol><li>If the <var title="">token</var> argument contains any <a href=#space-character title="space character">space characters</a>, then raise an
   <code><a href=#invalid_character_err>INVALID_CHARACTER_ERR</a></code> exception and stop the
   algorithm.</li>

   <li>Otherwise, <a href=#split-a-string-on-spaces title="split a string on spaces">split the
   underlying string on spaces</a> to get the list of tokens in the
   object's underlying string.</li>

   <li>If the given <var title="">token</var> is already one of the
   tokens in the <code><a href=#domtokenlist-0>DOMTokenList</a></code> object's underlying string
   then <a href=#remove-a-token-from-a-string title="remove a token from a string">remove the given
   <var title="">token</var> from the underlying string</a>, and
   stop the algorithm, returning false.</li>

   <li>Otherwise, if the <code><a href=#domtokenlist-0>DOMTokenList</a></code> object's underlying
   string is not the empty string and the last character of that
   string is not a <a href=#space-character>space character</a>, then append a U+0020
   SPACE character to the end of that string.</li>

   <li>Append the value of <var title="">token</var> to the end of the
   <code><a href=#domtokenlist-0>DOMTokenList</a></code> object's underlying string.</li>

   <li>Return true.</li>

  </ol><p>Objects implementing the <code><a href=#domtokenlist-0>DOMTokenList</a></code> interface must
  <dfn id=dom-tokenlist-tostring title=dom-tokenlist-toString>stringify</dfn> to the object's
  underlying string representation.</p>


  <h4 id=safe-passing-of-structured-data><span class=secno>2.8.4 </span>Safe passing of structured data</h4>

  <p>When a user agent is required to obtain a <dfn id=structured-clone>structured
  clone</dfn> of an object, it must run the following algorithm, which
  either returns a separate object, or throws an exception.</p>

  <ol><li><p>Let <var title="">input</var> be the object being
   cloned.</li>

   <li><p>Let <var title="">memory</var> be a list of objects,
   initially empty. (This is used to catch cycles.)</li>

   <li><p>Let <var title="">output</var> be the object resulting from
   calling the <a href=#internal-structured-cloning-algorithm>internal structured cloning algorithm</a> with
   <var title="">input</var> and <var title="">memory</var>.</li>

   <li><p>Return <var title="">output</var>.</li>

  </ol><p>The <dfn id=internal-structured-cloning-algorithm>internal structured cloning algorithm</dfn> is always
  called with two arguments, <var title="">input</var> and <var title="">memory</var>, and its behavior depends on the type of <var title="">input</var>, as follows:</p>

  <dl class=switch><dt>If <var title="">input</var> is the undefined value</dt>

   <dd><p>Return the undefined value.</dd>

   <dt>If <var title="">input</var> is the null value</dt>

   <dd><p>Return the null value.</dd>

   <dt>If <var title="">input</var> is the false value</dt>

   <dd><p>Return the false value.</dd>

   <dt>If <var title="">input</var> is the true value</dt>

   <dd><p>Return the true value.</dd>

   <dt>If <var title="">input</var> is a Number object</dt>

   <dd><p>Return a newly constructed Number object with the same value as <var title="">input</var>.</dd>

   <dt>If <var title="">input</var> is a String object</dt>

   <dd><p>Return a newly constructed String object with the same value as <var title="">input</var>.</dd>

   <dt>If <var title="">input</var> is a Date object</dt>

   <dd><p>Return a newly constructed Date object with the same value as <var title="">input</var>.</dd>

   <dt>If <var title="">input</var> is a host object</dt>

   <dd><p>Return the null value.</dd>

   <dt>If <var title="">input</var> is an Array object</dt>
   <dt>If <var title="">input</var> is an Object object</dt>

   <dd>

    <ol><li><p>If <var title="">input</var> is in <var title="">memory</var>, then throw a
     <code><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception and abort the overall
     <a href=#structured-clone>structured clone</a> algorithm.</li>

     <li><p>Otherwise, let <var title="">new memory</var> be a list
     consisting of the items in <var title="">memory</var> with the
     addition of <var title="">input</var>.</li>

     <li><p>Create a new object, <var title="">output</var>, of the
     same type as <var title="">input</var>: either an Array or an
     Object.</li>

     <li><p>For each property in <var title="">input</var>, add a
     corresponding property to <var title="">output</var> having the
     same name, and having a value created from invoking the
     <a href=#internal-structured-cloning-algorithm>internal structured cloning algorithm</a> recursively
     with the value of the property as the "<var title="">input</var>"
     argument and <var title="">new memory</var> as the "<var title="">memory</var>" argument. The order of the properties in
     the <var title="">input</var> and <var title="">output</var>
     objects must be the same.</li>

     <li><p>Return <var title="">output</var>.</li>

    </ol></dd>

  </dl><h4 id=domstringmap><span class=secno>2.8.5 </span>DOMStringMap</h4>

  <p>The <code><a href=#domstringmap-0>DOMStringMap</a></code> interface represents a set of
  name-value pairs. When a <code><a href=#domstringmap-0>DOMStringMap</a></code> object is
  instantiated, it is associated with three algorithms, one for
  getting getting the list of name-value pairs, one for setting names
  to certain values, and one for deleting names.</p>

  <pre class=idl>[NameCreator, NameDeleter, NameGetter, NameSetter]
interface <dfn id=domstringmap-0>DOMStringMap</dfn> {};</pre>

  <p>The <span>names of the supported named properties</span> on a
  <code><a href=#domstringmap-0>DOMStringMap</a></code> object at any instant are the names of
  each pair returned from the algorithm for getting the list of
  name-value pairs at that instant.</p>

  <p>When a <code><a href=#domstringmap-0>DOMStringMap</a></code> object is indexed to retrieve a
  named property <var title="">name</var>, the value returned must be
  the value component of the name-value pair whose name component is
  <var title="">name</var> in the list returned by the algorithm for
  getting the list of name-value pairs.</p>

  <p>When a <code><a href=#domstringmap-0>DOMStringMap</a></code> object is indexed to create or
  modify a named property <var title="">name</var> with value <var title="">value</var>, the algorithm for setting names to certain
  values must be run, passing <var title="">name</var> as the name and
  the result of converting <var title="">value</var> to a
  <code>DOMString</code> as the value.</p>

  <p>When a <code><a href=#domstringmap-0>DOMStringMap</a></code> object is indexed to delete a
  named property named <var title="">name</var>, the algorithm for
  deleting names must be run, passing <var title="">name</var> as the
  name.</p>

  <p class=note>The <code><a href=#domstringmap-0>DOMStringMap</a></code> interface definition
  here is only intended for JavaScript environments. Other language
  bindings will need to define how <code><a href=#domstringmap-0>DOMStringMap</a></code> is to be
  implemented for those languages.</p>


  <h4 id=dom-feature-strings><span class=secno>2.8.6 </span>DOM feature strings</h4>

  <p>DOM3 Core defines mechanisms for checking for interface support,
  and for obtaining implementations of interfaces, using <a href=http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures>feature
  strings</a>. <a href=#refsDOM3CORE>[DOM3CORE]</a></p>

  <p>A DOM application can use the <dfn id=hasfeature title=hasFeature><code>hasFeature(<var title="">feature</var>,
  <var title="">version</var>)</code></dfn> method of the
  <code>DOMImplementation</code> interface with parameter values
  "<code title="">HTML</code>" and "<code>5.0</code>" (respectively)
  to determine whether or not this module is supported by the
  implementation. In addition to the feature string "<code title="">HTML</code>", the feature string "<code title="">XHTML</code>" (with version string "<code>5.0</code>") can
  be used to check if the implementation supports XHTML. User agents
  should respond with a true value when the <code><a href=#hasfeature>hasFeature</a></code>
  method is queried with these values. Authors are cautioned, however,
  that UAs returning true might not be perfectly compliant, and that
  UAs returning false might well have support for features in this
  specification; in general, therefore, use of this method is
  discouraged.</p>

  <p>The values "<code title="">HTML</code>" and "<code title="">XHTML</code>" (both with version "<code>5.0</code>") should
  also be supported in the context of the <code>getFeature()</code>
  and <code>isSupported()</code> methods, as defined by DOM3 Core.</p>

  <p class=note>The interfaces defined in this specification are not
  always supersets of the interfaces defined in DOM2 HTML; some
  features that were formerly deprecated, poorly supported, rarely
  used or considered unnecessary have been removed. Therefore it is
  not guaranteed that an implementation that supports "<code title="">HTML</code>" "<code>5.0</code>" also supports "<code title="">HTML</code>" "<code>2.0</code>".</p>


  <h4 id=exceptions><span class=secno>2.8.7 </span>Exceptions</h4>

  <p>The following <code>DOMException</code> codes are defined in DOM
  Core. <a href=#refsDOMCORE>[DOMCORE]</a></p>

  <ol class=brief><li value=1><dfn id=index_size_err><code>INDEX_SIZE_ERR</code></dfn></li>
   <li value=2><dfn id=domstring_size_err><code>DOMSTRING_SIZE_ERR</code></dfn></li>
   <li value=3><dfn id=hierarchy_request_err><code>HIERARCHY_REQUEST_ERR</code></dfn></li>
   <li value=4><dfn id=wrong_document_err><code>WRONG_DOCUMENT_ERR</code></dfn></li>
   <li value=5><dfn id=invalid_character_err><code>INVALID_CHARACTER_ERR</code></dfn></li>
   <li value=6><dfn id=no_data_allowed_err><code>NO_DATA_ALLOWED_ERR</code></dfn></li>
   <li value=7><dfn id=no_modification_allowed_err><code>NO_MODIFICATION_ALLOWED_ERR</code></dfn></li>
   <li value=8><dfn id=not_found_err><code>NOT_FOUND_ERR</code></dfn></li>
   <li value=9><dfn id=not_supported_err><code>NOT_SUPPORTED_ERR</code></dfn></li>
   <li value=10><dfn id=inuse_attribute_err><code>INUSE_ATTRIBUTE_ERR</code></dfn></li>
   <li value=11><dfn id=invalid_state_err><code>INVALID_STATE_ERR</code></dfn></li>
   <li value=12><dfn id=syntax_err><code>SYNTAX_ERR</code></dfn></li>
   <li value=13><dfn id=invalid_modification_err><code>INVALID_MODIFICATION_ERR</code></dfn></li>
   <li value=14><dfn id=namespace_err><code>NAMESPACE_ERR</code></dfn></li>
   <li value=15><dfn id=invalid_access_err><code>INVALID_ACCESS_ERR</code></dfn></li>
   <li value=16><dfn id=validation_err><code>VALIDATION_ERR</code></dfn></li>
   <li value=17><dfn id=type_mismatch_err><code>TYPE_MISMATCH_ERR</code></dfn></li>
   <li value=18><dfn id=security_err><code>SECURITY_ERR</code></dfn></li> <!-- actually in XHR for now -->
   <li value=19><dfn id=network_err><code>NETWORK_ERR</code></dfn></li> <!-- actually in XHR for now -->
   <li value=20><dfn id=abort_err><code>ABORT_ERR</code></dfn></li> <!-- actually in XHR for now -->
   <li value=21><dfn id=url_mismatch_err><code>URL_MISMATCH_ERR</code></dfn></li> <!-- actually in workers for now -->
   <li value=22><dfn id=quota_exceeded_err><code>QUOTA_EXCEEDED_ERR</code></dfn></li> <!-- actually defined right here for now -->
   <li value=23><dfn id=unavailable_script_err><code>UNAVAILABLE_SCRIPT_ERR</code></dfn></li> <!-- actually defined right here for now -->
   <li value=81><dfn id=parse_err><code>PARSE_ERR</code></dfn></li> <!-- actually defined in dom3ls -->
   <li value=82><dfn id=serialise_err><code>SERIALISE_ERR</code></dfn></li> <!-- actually defined in dom3ls -->
  </ol><h4 id=garbage-collection><span class=secno>2.8.8 </span>Garbage collection</h4>

  <p>There is an <dfn id=implied-strong-reference>implied strong reference</dfn> from any DOM
  attribute that returns a pre-existing object to that object.</p>

  <div class=example>

   <p>For example, the <code>document.location</code> attribute means
   that there is a strong reference from a <code>Document</code>
   object to its <code><a href=#location>Location</a></code> object. Similarly, there is
   always a strong reference from a <code>Document</code> to any
   descendant nodes, and from any node to its owner
   <code>Document</code>.</p>

  </div>




  <h2 id=dom><span class=secno>3 </span>Semantics and structure of HTML documents</h2>

  <h3 id=semantics-intro><span class=secno>3.1 </span>Introduction</h3>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>An introduction to marking up a document.</p>


  <h3 id=documents><span class=secno>3.2 </span>Documents</h3>

  <p>Every XML and HTML document in an HTML UA is represented by a
  <code>Document</code> object. <a href=#refsDOM3CORE>[DOM3CORE]</a></p>

  <p><dfn id="the-document's-address">The document's address</dfn> is an <a href=#absolute-url>absolute URL</a>
  that is set when the <code>Document</code> is created.</p>

  <p>When a <code>Document</code> is created by a <a href=#concept-script title=concept-script>script</a> using the <code title="">createDocument()</code> API, <a href="#the-document's-address">the document's
  address</a> is the same as <a href="#the-document's-address">the document's address</a> of
  the <a href=#active-document>active document</a> of the <a href="#script's-browsing-context">script's browsing
  context</a>.</p>

  <p><code>Document</code> objects are assumed to be <dfn id=xml-documents>XML
  documents</dfn> unless they are flagged as being <dfn id=html-documents>HTML
  documents</dfn> when they are created. Whether a document is an
  <a href=#html-documents title="HTML documents">HTML document</a> or an <a href=#xml-documents title="XML documents">XML document</a> affects the behavior of
  certain APIs, as well as a few CSS rendering rules. <a href=#refsCSS21>[CSS21]</a></p>

  <p class=note>A <code>Document</code> object created by the <code title="">createDocument()</code> API on the
  <code>DOMImplementation</code> object is initially an <a href=#xml-documents title="XML documents">XML document</a>, but can be made into an
  <a href=#html-documents title="HTML documents">HTML document</a> by calling <code title=dom-document-open><a href=#dom-document-open>document.open()</a></code> on it.</p>



  <h4 id=documents-in-the-dom><span class=secno>3.2.1 </span>Documents in the DOM</h4>

  <p>All <code>Document</code> objects (in user agents implementing
  this specification) must also implement the
  <code><a href=#htmldocument>HTMLDocument</a></code> interface, available using
  binding-specific methods. (This is the case whether or not the
  document in question is an <a href=#html-documents title="HTML documents">HTML
  document</a> or indeed whether it contains any <a href=#html-elements>HTML
  elements</a> at all.) <code>Document</code> objects must also
  implement the document-level interface of any other namespaces found
  in the document that the UA supports. For example, if an HTML
  implementation also supports SVG, then the <code>Document</code>
  object must implement <code><a href=#htmldocument>HTMLDocument</a></code> and
  <code>SVGDocument</code>.</p>

  <p class=note>Because the <code><a href=#htmldocument>HTMLDocument</a></code> interface is
  now obtained using binding-specific casting methods instead of
  simply being the primary interface of the document object, it is no
  longer defined as inheriting from <code>Document</code>.</p>

  <pre class=idl>[<a href=#dom-document-nameditem title=dom-document-namedItem>NameGetter</a>=OverrideBuiltins, ImplementedOn=<span>Document</span>]
interface <dfn id=htmldocument>HTMLDocument</dfn> {
  // <a href=#resource-metadata-management>resource metadata management</a>
  [PutForwards=href] readonly attribute <a href=#location>Location</a> <a href=#dom-document-location title=dom-document-location>location</a>;
  readonly attribute DOMString <a href=#dom-document-url title=dom-document-URL>URL</a>;
           attribute DOMString <a href=#dom-document-domain title=dom-document-domain>domain</a>;
  readonly attribute DOMString <a href=#dom-document-referrer title=dom-document-referrer>referrer</a>;
           attribute DOMString <a href=#dom-document-cookie title=dom-document-cookie>cookie</a>;
  readonly attribute DOMString <a href=#dom-document-lastmodified title=dom-document-lastModified>lastModified</a>;
  readonly attribute DOMString <a href=#dom-document-compatmode title=dom-document-compatMode>compatMode</a>;
           attribute DOMString <a href=#dom-document-charset title=dom-document-charset>charset</a>;
  readonly attribute DOMString <a href=#dom-document-characterset title=dom-document-characterSet>characterSet</a>;
  readonly attribute DOMString <a href=#dom-document-defaultcharset title=dom-document-defaultCharset>defaultCharset</a>;
  readonly attribute DOMString <a href=#dom-document-readystate title=dom-document-readyState>readyState</a>;

  // <a href=#dom-tree-accessors>DOM tree accessors</a>
           attribute DOMString <a href=#document.title title=dom-document-title>title</a>;
           attribute DOMString <a href=#dom-document-dir title=dom-document-dir>dir</a>;
           attribute <a href=#htmlelement>HTMLElement</a> <a href=#dom-document-body title=dom-document-body>body</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-images title=dom-document-images>images</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-embeds title=dom-document-embeds>embeds</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-plugins title=dom-document-plugins>plugins</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-links title=dom-document-links>links</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-forms title=dom-document-forms>forms</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-anchors title=dom-document-anchors>anchors</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-scripts title=dom-document-scripts>scripts</a>;
  NodeList <a href=#dom-document-getelementsbyname title=dom-document-getElementsByName>getElementsByName</a>(in DOMString elementName);
  NodeList <a href=#dom-document-getelementsbyclassname title=dom-document-getElementsByClassName>getElementsByClassName</a>(in DOMString classNames);

  // <a href=#dynamic-markup-insertion>dynamic markup insertion</a>
           attribute DOMString <a href=#dom-innerhtml title=dom-innerHTML>innerHTML</a>;
  <a href=#htmldocument>HTMLDocument</a> <a href=#dom-document-open title=dom-document-open>open</a>([Optional] in DOMString type, [Optional] in DOMString replace);
  <a href=#windowproxy>WindowProxy</a> <a href=#dom-document-open title=dom-document-open>open</a>(in DOMString url, in DOMString name, in DOMString features, [Optional] in boolean replace);
  void <a href=#dom-document-close title=dom-document-close>close</a>();
  void <a href=#dom-document-write title=dom-document-write>write</a>([Variadic] in DOMString text);
  void <a href=#dom-document-writeln title=dom-document-writeln>writeln</a>([Variadic] in DOMString text);

  // <a href=#editing>user interaction</a>
  <a href=#selection-0>Selection</a> <a href=#dom-document-getselection title=dom-document-getSelection>getSelection</a>();
  readonly attribute <span>Element</span> <a href=#dom-document-activeelement title=dom-document-activeElement>activeElement</a>;
  boolean <a href=#dom-document-hasfocus title=dom-document-hasFocus>hasFocus</a>();
           attribute boolean <a href=#designMode title=dom-document-designMode>designMode</a>;
  boolean <a href=#execCommand title=dom-document-execCommand>execCommand</a>(in DOMString commandId);
  boolean <a href=#execCommand title=dom-document-execCommand>execCommand</a>(in DOMString commandId, in boolean showUI);
  boolean <a href=#execCommand title=dom-document-execCommand>execCommand</a>(in DOMString commandId, in boolean showUI, in DOMString value);
  boolean <a href=#dom-document-querycommandenabled title=dom-document-queryCommandEnabled>queryCommandEnabled</a>(in DOMString commandId);
  boolean <a href=#dom-document-querycommandindeterm title=dom-document-queryCommandIndeterm>queryCommandIndeterm</a>(in DOMString commandId);
  boolean <a href=#dom-document-querycommandstate title=dom-document-queryCommandState>queryCommandState</a>(in DOMString commandId);
  boolean <a href=#dom-document-querycommandsupported title=dom-document-queryCommandSupported>queryCommandSupported</a>(in DOMString commandId);
  DOMString <a href=#dom-document-querycommandvalue title=dom-document-queryCommandValue>queryCommandValue</a>(in DOMString commandId);
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-commands title=dom-document-commands>commands</a>;
};</pre>

  <p>Since the <code><a href=#htmldocument>HTMLDocument</a></code> interface holds methods and
  attributes related to a number of disparate features, the members of
  this interface are described in various different sections.</p>


  <h4 id=security><span class=secno>3.2.2 </span>Security</h4>

  <p>User agents must raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception whenever
  any of the members of an <code><a href=#htmldocument>HTMLDocument</a></code> object are
  accessed by scripts whose <a href=#effective-script-origin>effective script origin</a> is
  not the <a href=#same-origin title="same origin">same</a> as the
  <code>Document</code>'s <a href=#effective-script-origin>effective script origin</a>.</p>



  <h4 id=resource-metadata-management><span class=secno>3.2.3 </span><dfn>Resource metadata management</dfn></h4>

  <p>The <dfn id=dom-document-url title=dom-document-URL><code>URL</code></dfn>
  attribute must return <a href="#the-document's-address">the document's address</a>.</p>

  <p>The <dfn id=dom-document-referrer title=dom-document-referrer><code>referrer</code></dfn> attribute
  must return either the <a href="#the-document's-address" title="the document's
  address">address</a> of the <a href=#active-document>active document</a> of the
  <a href=#source-browsing-context>source browsing context</a> at the time the navigation was
  started (that is, the page which <a href=#navigate title=navigate>navigated</a> the <a href=#browsing-context>browsing context</a>
  to the current document), or the empty string if there is no such
  originating page, or if the UA has been configured not to report
  referrers in this case, or if the navigation was initiated for a
  <a href=#hyperlink>hyperlink</a> with a <code title=rel-noreferrer><a href=#link-type-noreferrer>noreferrer</a></code> keyword.</p>

  <p class=note>In the case of HTTP, the <code title=dom-document-referrer><a href=#dom-document-referrer>referrer</a></code> DOM attribute will
  match the <code title=http-referer>Referer</code> (sic) header
  that was sent when <a href=#fetch title=fetch>fetching</a> the current
  page.</p>

  <p class=note>Typically user agents are configured to not report
  referrers in the case where the referrer uses an encrypted protocol
  and the current page does not (e.g. when navigating from an <code title="">https:</code> page to an <code title="">http:</code>
  page).</p>

  <hr><p>The <dfn id=dom-document-cookie title=dom-document-cookie><code>cookie</code></dfn>
  attribute represents the cookies of the resource.</p>

  <p id=sandboxCookies>On getting, if the document is not associated
  with a <a href=#browsing-context>browsing context</a> then the user agent must raise
  an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception. Otherwise, if the
  <a href=#sandboxed-origin-browsing-context-flag>sandboxed origin browsing context flag</a> is set on the
  <a href=#browsing-context>browsing context</a> of the document, the user agent must
  raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception. Otherwise, if <a href="#the-document's-address">the
  document's address</a> does not use a server-based naming
  authority, it must return the empty string. Otherwise, it must
  return the same string as the value of the <code title="">Cookie</code> HTTP header it would include if <a href=#fetch title=fetch>fetching</a> the resource indicated by <a href="#the-document's-address">the
  document's address</a> over HTTP, as per RFC 2109 section 4.3.4
  or later specifications, excluding HTTP-only cookies. <a href=#refsRFC2109>[RFC2109]</a> <a href=#refsRFC2965>[RFC2965]</a></p>

  <p>On setting, if the document is not associated with a
  <a href=#browsing-context>browsing context</a> then the user agent must raise an
  <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception. Otherwise, if the
  <a href=#sandboxed-origin-browsing-context-flag>sandboxed origin browsing context flag</a> is set on the
  <a href=#browsing-context>browsing context</a> of the document, the user agent must
  raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception. Otherwise, if <a href="#the-document's-address">the
  document's address</a> does not use a server-based naming
  authority, it must do nothing. Otherwise, the user agent must act as
  it would when processing cookies if it had just attempted to
  <a href=#fetch>fetch</a> <a href="#the-document's-address">the document's address</a> over HTTP,
  and had received a response with a <code>Set-Cookie</code> header
  whose value was the specified value, as per RFC 2109 sections 4.3.1,
  4.3.2, and 4.3.3 or later specifications, but without overwriting
  the values of HTTP-only cookies. <a href=#refsRFC2109>[RFC2109]</a> <a href=#refsRFC2965>[RFC2965]</a></p>

  <p class=note>This specification does not define what makes an
  HTTP-only cookie, and at the time of publication the editor is not
  aware of any reference for HTTP-only cookies. They are a feature
  supported by some Web browsers wherein an "<code title="">httponly</code>" parameter added to the cookie string
  causes the cookie to be hidden from script.</p>

  <p class=note>Since the <code title=dom-document-cookie><a href=#dom-document-cookie>cookie</a></code> attribute is accessible
  across frames, the path restrictions on cookies are only a tool to
  help manage which cookies are sent to which parts of the site, and
  are not in any way a security feature.</p>

  <hr><p>The <dfn id=dom-document-lastmodified title=dom-document-lastModified><code>lastModified</code></dfn>
  attribute, on getting, must return the date and time of the
  <code>Document</code>'s source file's last modification, in the
  user's local timezone, in the following format:</p>

  <ol><li> The month component of the date. </li>

   <li> A U+002F SOLIDUS character ('/'). </li>

   <li> The day component of the date. </li>

   <li> A U+002F SOLIDUS character ('/'). </li>

   <li> The year component of the date. </li>

   <li> A U+0020 SPACE character. </li>

   <li> The hours component of the time. </li>

   <li> A U+003A COLON character (':'). </li>

   <li> The minutes component of the time. </li>

   <li> A U+003A COLON character (':'). </li>

   <li> The seconds component of the time. </li>

  </ol><p>All the numeric components above, other than the year, must be
  given as two digits in the range U+0030 DIGIT ZERO to U+0039 DIGIT
  NINE representing the number in base ten, zero-padded if
  necessary.</p>

  <p>The <code>Document</code>'s source file's last modification date
  and time must be derived from relevant features of the networking
  protocols used, e.g. from the value of the HTTP <code title="">Last-Modified</code> header of the document, or from
  metadata in the file system for local files. If the last modification
  date and time are not known, the attribute must return the string
  <code title="">01/01/1970 00:00:00</code>.</p>


  <p>A <code>Document</code> is always set to one of three modes:
  <dfn id=no-quirks-mode>no quirks mode</dfn>, the default; <dfn id=quirks-mode>quirks mode</dfn>, used
  typically for legacy documents; and <dfn id=limited-quirks-mode>limited quirks mode</dfn>,
  also known as "almost standards" mode. The mode is only ever changed
  from the default by the <a href=#html-parser>HTML parser</a>, based on the
  presence, absence, or value of the DOCTYPE string.</p>

  <p>The <dfn id=dom-document-compatmode title=dom-document-compatMode><code>compatMode</code></dfn> DOM
  attribute must return the literal string "<code title="">CSS1Compat</code>" unless the document has been set to
  <a href=#quirks-mode>quirks mode</a> by the <a href=#html-parser>HTML parser</a>, in which
  case it must instead return the literal string "<code title="">BackCompat</code>".</p>

  <div class=XXX>

   <p>As far as parsing goes, the quirks I know of are:</p>

   <ul><li>Comment parsing is different.</li>

    <li><code><a href=#the-p-element>p</a></code> can contain <code><a href=#the-table-element>table</a></code></li>

    <li>Safari and IE have special parsing rules for &lt;% ... %&gt;
    (even in standards mode, though clearly this should be
    quirks-only).</li>

   </ul></div>



  <p>Documents have an associated <dfn id="document's-character-encoding" title="document's character
  encoding">character encoding</dfn>. When a <code>Document</code>
  object is created, the <a href="#document's-character-encoding">document's character encoding</a>
  must be initialized to UTF-16. Various algorithms during page
  loading affect this value, as does the <code title=dom-document-charset><a href=#dom-document-charset>charset</a></code> setter.  <a href=#refsIANACHARSET>[IANACHARSET]</a> <!-- XXX
  http://www.iana.org/assignments/character-sets --></p>

  <p>The <dfn id=dom-document-charset title=dom-document-charset><code>charset</code></dfn>
  DOM attribute must, on getting, return the preferred MIME name of
  the <a href="#document's-character-encoding">document's character encoding</a>. On setting, if the
  new value is an IANA-registered alias for a character encoding, the
  <a href="#document's-character-encoding">document's character encoding</a> must be set to that
  character encoding. (Otherwise, nothing happens.)</p>

  <p>The <dfn id=dom-document-characterset title=dom-document-characterSet><code>characterSet</code></dfn>
  DOM attribute must, on getting, return the preferred MIME name of
  the <a href="#document's-character-encoding">document's character encoding</a>.</p>

  <p>The <dfn id=dom-document-defaultcharset title=dom-document-defaultCharset><code>defaultCharset</code></dfn>
  DOM attribute must, on getting, return the preferred MIME name of a
  character encoding, possibly the user's default encoding, or an
  encoding associated with the user's current geographical location,
  or any arbitrary encoding name.</p>

  <p>Each document has a <dfn id=current-document-readiness>current document readiness</dfn>. When a
  <code>Document</code> object is created, it must have its
  <a href=#current-document-readiness>current document readiness</a> set to the string "loading"
  if the document is associated with an <a href=#html-parser>HTML parser</a> or an
  <a href=#xml-parser>XML parser</a>, or to the string "complete"
  otherwise. Various algorithms during page loading affect this
  value. When the value is set, the user agent must <a href=#fire-a-simple-event>fire a
  simple event</a> called <code title=event-readystatechange>readystatechange</code> at the
  <code>Document</code> object.</p> <!-- XXX define
  document.onreadystatechange -->

  <p>The <dfn id=dom-document-readystate title=dom-document-readyState><code>readyState</code></dfn> DOM
  attribute must, on getting, return the <a href=#current-document-readiness>current document
  readiness</a>.</p>



  <h4 id=dom-tree-accessors><span class=secno>3.2.4 </span><dfn>DOM tree accessors</dfn></h4>

  <p><dfn id=the-html-element-0>The <code>html</code> element</dfn> of a document is the
  document's root element, if there is one and it's an
  <code><a href=#the-html-element>html</a></code> element, or null otherwise.</p>

  <p><dfn id=the-head-element-0>The <code>head</code> element</dfn> of a document is the
  first <code><a href=#the-head-element>head</a></code> element that is a child of <a href=#the-html-element-0>the
  <code>html</code> element</a>, if there is one, or null
  otherwise.</p>

  <hr><p><dfn id=the-title-element-0>The <code>title</code> element</dfn> of a document is the
  first <code><a href=#the-title-element>title</a></code> element in the document (in tree order), if
  there is one, or null otherwise.</p>

  <p>The <dfn id=document.title title=dom-document-title><code>title</code></dfn> attribute must,
  on getting, run the following algorithm:</p>

  <ol><li><p>If the <a href=#root-element>root element</a> is an <code>svg</code>
   element in the "<code title="">http://www.w3.org/2000/svg</code>"
   namespace, and the user agent supports SVG, then the getter must
   return the value that would have been returned by the DOM attribute
   of the same name on the <code>SVGDocument</code>
   interface.</li>

   <li><p>Otherwise, it must return a concatenation of the data of all
   the child <a href=#text-node title="text node">text nodes</a> of <a href=#the-title-element-0>the
   <code>title</code> element</a>, in tree order, or the empty
   string if <a href=#the-title-element-0>the <code>title</code> element</a> is
   null.</li>

  </ol><p>On setting, the following algorithm must be run:</p>

  <ol><li><p>If the <a href=#root-element>root element</a> is an <code>svg</code>
   element in the "<code title="">http://www.w3.org/2000/svg</code>"
   namespace, and the user agent supports SVG, then the setter must
   defer to the setter for the DOM attribute of the same name on the
   <code>SVGDocument</code> interface (if it is readonly, then this
   will raise an exception). Stop the algorithm here.</li>

   <li>If <a href=#the-title-element-0>the <code>title</code> element</a> is null and
   <a href=#the-head-element-0>the <code>head</code> element</a> is null, then the
   attribute must do nothing. Stop the algorithm here.</li>

   <!-- XXX define the following two paragraphs with respect to
   mutation events (e.g. are mutation events fired synchronously) -->

   <li>If <a href=#the-title-element-0>the <code>title</code> element</a> is null, then a
   new <code><a href=#the-title-element>title</a></code> element must be created and appended to
   <a href=#the-head-element-0>the <code>head</code> element</a>.</li>

   <li>The children of <a href=#the-title-element-0>the <code>title</code> element</a> (if
   any) must all be removed.</li>

   <li>A single <code>Text</code> node whose data is the new value
   being assigned must be appended to <a href=#the-title-element-0>the <code>title</code>
   element</a>.</li>

  </ol><p>The <code title=dom-document-title><a href=#document.title>title</a></code> attribute on
  the <code><a href=#htmldocument>HTMLDocument</a></code> interface should shadow the attribute
  of the same name on the <code>SVGDocument</code> interface when the
  user agent supports both HTML and SVG.</p>

  <hr><p><dfn id=the-body-element-0>The body element</dfn> of a document is the first child of
  <a href=#the-html-element-0>the <code>html</code> element</a> that is either a
  <code><a href=#the-body-element>body</a></code> element or a <code>frameset</code> element. If
  there is no such element, it is null. If the body element is null,
  then when the specification requires that events be fired at "the
  body element", they must instead be fired at the
  <code>Document</code> object.</p>

  <p>The <dfn id=dom-document-body title=dom-document-body><code>body</code></dfn>
  attribute, on getting, must return <a href=#the-body-element-0>the body element</a> of
  the document (either a <code><a href=#the-body-element>body</a></code> element, a
  <code>frameset</code> element, or null). On setting, the following
  algorithm must be run:</p>

  <ol><li>If the new value is not a <code><a href=#the-body-element>body</a></code> or
   <code>frameset</code> element, then raise a
   <code><a href=#hierarchy_request_err>HIERARCHY_REQUEST_ERR</a></code> exception and abort these
   steps.</li>

   <li>Otherwise, if the new value is the same as <a href=#the-body-element-0>the body
   element</a>, do nothing. Abort these steps.</li>

   <li>Otherwise, if <a href=#the-body-element-0>the body element</a> is not null, then
   replace that element with the new value in the DOM, as if the root
   element's <code title="">replaceChild()</code> method had been
   called with the new value and <a href=#the-body-element-0 title="the body element">the
   incumbent body element</a> as its two arguments respectively,
   then abort these steps.</li>

   <li>Otherwise, the <a href=#the-body-element-0>the body element</a> is null. Append
   the new value to the root element.</li>

  </ol><!--XXX
    http://lxr.mozilla.org/seamonkey/source/content/html/document/src/nsHTMLDocument.cpp
    search for ::GetBody ::SetBody
    http://trac.webkit.org/projects/webkit/browser/trunk/WebCore/html/HTMLDocument.cpp
    search for ::setBody
    http://trac.webkit.org/projects/webkit/browser/trunk/WebCore/dom/Document.cpp
    search for ::body
  --><hr><!-- these all return the same object each time because of a rule in
  the collection section --><p>The <dfn id=dom-document-images title=dom-document-images><code>images</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only
  <code><a href=#the-img-element>img</a></code> elements.</p>

  <p>The <dfn id=dom-document-embeds title=dom-document-embeds><code>embeds</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only
  <code><a href=#the-embed-element>embed</a></code> elements.</p>

  <p>The <dfn id=dom-document-plugins title=dom-document-plugins><code>plugins</code></dfn>
  attribute must return the same object as that returned by the <code title=dom-document-embeds><a href=#dom-document-embeds>embeds</a></code> attribute.</p>

  <p>The <dfn id=dom-document-links title=dom-document-links><code>links</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only <code><a href=#the-a-element>a</a></code>
  elements with <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code>
  attributes and <code><a href=#the-area-element>area</a></code> elements with <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attributes.</p>

  <p>The <dfn id=dom-document-forms title=dom-document-forms><code>forms</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only
  <code><a href=#the-form-element>form</a></code> elements.</p>

  <p>The <dfn id=dom-document-anchors title=dom-document-anchors><code>anchors</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only <code><a href=#the-a-element>a</a></code>
  elements with <code title=attr-a-name><a href=#attr-a-name>name</a></code>
  attributes.</p><!-- XXX note that such elements are non-conforming
  -->

  <p>The <dfn id=dom-document-scripts title=dom-document-scripts><code>scripts</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only
  <code><a href=#script>script</a></code> elements.</p>

  <hr><p>The <dfn id=dom-document-getelementsbyname title=dom-document-getElementsByName><code>getElementsByName(<var title="">name</var>)</code></dfn> method takes a string <var title="">name</var>, and must return a live <code>NodeList</code>
  containing all the <code><a href=#the-a-element>a</a></code>, <code><a href=#the-applet-element>applet</a></code>,
  <code><a href=#the-button-element>button</a></code>, <code><a href=#the-form-element>form</a></code>, <code>frame</code>,
  <code>frameset</code>, <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-img-element>img</a></code>,
  <code><a href=#the-input-element>input</a></code>, <code><a href=#the-map-element>map</a></code>, <code><a href=#meta>meta</a></code>,
  <code><a href=#the-object-element>object</a></code>,<!-- param?  XXX--> <code><a href=#the-select-element>select</a></code>, and
  <code><a href=#the-textarea-element>textarea</a></code> elements in that document that have a <code title="">name</code> attribute whose value is equal to the <var title="">name</var> argument (in a <a href=#case-sensitive>case-sensitive</a>
  manner), in <a href=#tree-order>tree order</a>.</p>

  <p>The <dfn id=dom-document-getelementsbyclassname title=dom-document-getElementsByClassName><code>getElementsByClassName(<var title="">classNames</var>)</code></dfn> method takes a string that
  contains an <a href=#unordered-set-of-unique-space-separated-tokens>unordered set of unique space-separated
  tokens</a> representing classes. When called, the method must
  return a live <code>NodeList</code> object containing all the
  elements in the document, in <a href=#tree-order>tree order</a>, that have all
  the classes specified in that argument, having obtained the classes
  by <a href=#split-a-string-on-spaces title="split a string on spaces">splitting a string on
  spaces</a>. If there are no tokens specified in the argument,
  then the method must return an empty <code>NodeList</code>. If the
  document is in <a href=#quirks-mode>quirks mode</a>, then the comparisons for
  the classes must be done in an <a href=#ascii-case-insensitive>ASCII case-insensitive</a>
  manner, otherwise, the comparisons must be done in a
  <a href=#case-sensitive>case-sensitive</a> manner.</p>

  <p>The <dfn id=dom-getelementsbyclassname title=dom-getElementsByClassName><code>getElementsByClassName()</code></dfn>
  method on the <code><a href=#htmlelement>HTMLElement</a></code> interface must return a live
  <code>NodeList</code> with the nodes that the
  <code><a href=#htmldocument>HTMLDocument</a></code> <code title=dom-document-getElementsByClassName><a href=#dom-document-getelementsbyclassname>getElementsByClassName()</a></code>
  method would return when passed the same argument(s), excluding any
  elements that are not descendants of the <code><a href=#htmlelement>HTMLElement</a></code>
  object on which the method was invoked.</p>

  <p>HTML, SVG, and MathML elements define which classes they are in
  by having an attribute in the per-element partition with the name
  <code title="">class</code> containing a space-separated list of
  classes to which the element belongs. Other specifications may also
  allow elements in their namespaces to be labeled as being in
  specific classes.</p>

  <div class=example>

   <p>Given the following XHTML fragment:</p>

   <pre>&lt;div id="example"&gt;
 &lt;p id="p1" class="aaa bbb"/&gt;
 &lt;p id="p2" class="aaa ccc"/&gt;
 &lt;p id="p3" class="bbb ccc"/&gt;
&lt;/div&gt;</pre>

   <p>A call to
   <code>document.getElementById('example').getElementsByClassName('aaa')</code>
   would return a <code>NodeList</code> with the two paragraphs
   <code>p1</code> and <code>p2</code> in it.</p>

   <p>A call to <code>getElementsByClassName('ccc&nbsp;bbb')</code>
   would only return one node, however, namely <code>p3</code>. A call
   to
   <code>document.getElementById('example').getElementsByClassName('bbb&nbsp;&nbsp;ccc&nbsp;')</code>
   would return the same thing.</p>

   <p>A call to <code>getElementsByClassName('aaa,bbb')</code> would
   return no nodes; none of the elements above are in the "aaa,bbb"
   class.</p>

  </div>

<!-- XXX
>         * xGetParentElementByClassName(rootElement, className, tagName) -
> Navigates upwards until we hit a parent element with the given class name and
> optional tag name.
-->

  <hr><p>The <code><a href=#htmldocument>HTMLDocument</a></code> interface <span title="support
  named properties">supports named properties</span>. The <span>names
  of the supported named properties</span> at any moment consist of
  the values of the <code title=attr-name>name</code> content
  attributes of all the <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-embed-element>embed</a></code>,
  <code><a href=#the-form-element>form</a></code>, <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-img-element>img</a></code>, and
  <a href=#fallback-free>fallback-free</a> <code><a href=#the-object-element>object</a></code> elements in the
  <code>Document</code> that have <code title=attr-name>name</code>
  content attributes, and the values of the <code title=attr-id><a href=#the-id-attribute>id</a></code> content attributes of all the
  <code><a href=#the-applet-element>applet</a></code> and <a href=#fallback-free>fallback-free</a>
  <code><a href=#the-object-element>object</a></code> elements in the <code>Document</code> that have
  <code title=attr-id><a href=#the-id-attribute>id</a></code> content attributes, and the values
  of the <code title=attr-id><a href=#the-id-attribute>id</a></code> content attributes of all the
  <code><a href=#the-img-element>img</a></code> elements in the <code>Document</code> that have
  both <code title=attr-name>name</code> content attributes and
  <code title=attr-id><a href=#the-id-attribute>id</a></code> content attributes.</p>

  <p>When <dfn id=dom-document-nameditem title=dom-document-namedItem>the
  <code>HTMLDocument</code> object is indexed for property
  retrieval</dfn> using a name <var title="">name</var>, then the user
  agent must return the value obtained using the following steps:</p>

  <ol><li>

    <p>Let <var title="">elements</var> be the list of <a href=#dom-document-nameditem-filter title=dom-document-namedItem-filter>named elements</a> with
    the name <var title="">name</var> in the <code>Document</code>.

    <p class=note>There will be at least one such element, by
    definition.<!-- (If there wasn't, then this algorithm wouldn't
    have been invoked by WebIDL.) --></p>

   </li>

   <li>

    <p>If <var title="">elements</var> has only one element, and that
    element is an <code><a href=#the-iframe-element>iframe</a></code> element, then return the
    <code><a href=#windowproxy>WindowProxy</a></code> object of the <a href=#nested-browsing-context>nested browsing
    context</a> represented by that <code><a href=#the-iframe-element>iframe</a></code> element,
    and abort these steps.</p>

   </li>

   <li>

    <p>Otherwise, if <var title="">elements</var> has only one
    element, return that element and abort these steps.</p>

   </li>

   <li>

    <p>Otherwise return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
    <code>Document</code> node, whose filter matches only <a href=#dom-document-nameditem-filter title=dom-document-namedItem-filter>named elements</a> with
    the name <var title="">name</var>.</p> <!-- the same one each time
    is returned, because of the rule under collections -->

   </li>

  <!--
  Note that this named getter overrides built-in properties, as in:
     http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A...%3Ciframe%20name%3Dbody%3E%3C%2Fiframe%3E%3Cscript%3Ew(document.body)%3C%2Fscript%3E
  This is what the "OverrideBuiltins" bit means in the IDL.
  -->

  </ol><p><dfn id=dom-document-nameditem-filter title=dom-document-nameditem-filter>Named elements</dfn>
  with the name <var title="">name</var>, for the purposes of the
  above algorithm, are those that are either:</p>

  <ul><li><code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-form-element>form</a></code>,
   <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-img-element>img</a></code>, or
   <a href=#fallback-free>fallback-free</a> <code><a href=#the-object-element>object</a></code> elements that have a
   <code title=attr-name>name</code> content attribute whose value
   is <var title="">name</var>, or</li>

   <li><code><a href=#the-applet-element>applet</a></code> or <a href=#fallback-free>fallback-free</a>
   <code><a href=#the-object-element>object</a></code> elements that have an <code title=attr-id><a href=#the-id-attribute>id</a></code> content attribute whose value is <var title="">name</var>, or</li>

   <li><code><a href=#the-img-element>img</a></code> elements that have an <code title=attr-id><a href=#the-id-attribute>id</a></code> content attribute whose value is <var title="">name</var>, and that have a <code title=attr-name>name</code> content attribute present also.</li>

  </ul><p>An <code><a href=#the-object-element>object</a></code> element is said to be
  <dfn id=fallback-free>fallback-free</dfn> if it has no element descendants other than
  <code><a href=#the-param-element>param</a></code> elements, and no <a href=#text-node>text node</a>
  descendants that are not <a href=#inter-element-whitespace>inter-element whitespace</a>.</p>

  <hr><p class=note>The <code title=dom-document-dir><a href=#dom-document-dir>dir</a></code>
  attribute on the <code><a href=#htmldocument>HTMLDocument</a></code> interface is defined
  along with the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> content
  attribute.</p>



  <h3 id=elements><span class=secno>3.3 </span>Elements</h3>

  <h4 id=semantics-0><span class=secno>3.3.1 </span>Semantics</h4>

  <p>Elements, attributes, and attribute values in HTML are defined
  (by this specification) to have certain meanings (semantics). For
  example, the <code><a href=#the-ol-element>ol</a></code> element represents an ordered list, and
  the <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code> attribute represents the
  language of the content.</p>

  <p>Authors must not use elements, attributes, and attribute values
  for purposes other than their appropriate intended semantic
  purpose.</p>

  <div class=example>
   <p>For example, the following document is non-conforming, despite
   being syntactically correct:</p>

   <pre class=bad>&lt;!DOCTYPE html&gt;
&lt;html lang="en-GB"&gt;
 &lt;head&gt; &lt;title&gt; Demonstration &lt;/title&gt; &lt;/head&gt;
 &lt;body&gt;
  &lt;table&gt;
   &lt;tr&gt; &lt;td&gt; My favourite animal is the cat. &lt;/td&gt; &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td&gt;
     &mdash;&lt;a href="http://example.org/~ernest/"&gt;&lt;cite&gt;Ernest&lt;/cite&gt;&lt;/a&gt;,
     in an essay from 1992
    &lt;/td&gt;
   &lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;</pre>

   <p>...because the data placed in the cells is clearly not tabular
   data (and the <code><a href=#the-cite-element>cite</a></code> element mis-used). A corrected
   version of this document might be:</p>

   <pre>&lt;!DOCTYPE html&gt;
&lt;html lang="en-GB"&gt;
 &lt;head&gt; &lt;title&gt; Demonstration &lt;/title&gt; &lt;/head&gt;
 &lt;body&gt;
  &lt;blockquote&gt;
   &lt;p&gt; My favourite animal is the cat. &lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;p&gt;
   &mdash;&lt;a href="http://example.org/~ernest/"&gt;Ernest&lt;/a&gt;,
   in an essay from 1992
  &lt;/p&gt;
 &lt;/body&gt;
&lt;/html&gt;</pre>

   <p>This next document fragment, intended to represent the heading
   of a corporate site, is similarly non-conforming because the second
   line is not intended to be a heading of a subsection, but merely a
   subheading or subtitle (a subordinate heading for the same
   section).</p>

   <pre>&lt;body&gt;
 &lt;h1&gt;ABC Company&lt;/h1&gt;
 &lt;h2&gt;Leading the way in widget design since 1432&lt;/h2&gt;
 ...</pre>

   <p>The <code><a href=#the-header-element>header</a></code> element should be used in these kinds of
   situations:</p>

   <pre>&lt;body&gt;
 &lt;header&gt;
  &lt;h1&gt;ABC Company&lt;/h1&gt;
  &lt;h2&gt;Leading the way in widget design since 1432&lt;/h2&gt;
 &lt;/header&gt;
 ...</pre>

  </div>

  <p>Through scripting and using other mechanisms, the values of
  attributes, text, and indeed the entire structure of the document
  may change dynamically while a user agent is processing it. The
  semantics of a document at an instant in time are those represented
  by the state of the document at that instant in time, and the
  semantics of a document can therefore change over time. User agents
  must update their presentation of the document as this occurs.</p>

  <p class=example>HTML has a <code><a href=#the-progress-element>progress</a></code> element that
  describes a progress bar. If its "value" attribute is dynamically
  updated by a script, the UA would update the rendering to show the
  progress changing.</p>



  <h4 id=elements-in-the-dom><span class=secno>3.3.2 </span>Elements in the DOM</h4>

  <p>The nodes representing <a href=#html-elements>HTML elements</a> in the DOM must
  implement, and expose to scripts, the interfaces listed for them in
  the relevant sections of this specification. This includes
  <a href=#html-elements>HTML elements</a> in <a href=#xml-documents>XML documents</a>, even when
  those documents are in another context (e.g. inside an XSLT
  transform).</p>

  <p>Elements in the DOM <a href=#represents title=represents>represent</a>
  things; that is, they have intrinsic <em>meaning</em>, also known as
  semantics.</p>

  <p class=example>For example, an <code><a href=#the-ol-element>ol</a></code> element
  represents an ordered list.</p>

  <p>The basic interface, from which all the <a href=#html-elements>HTML
  elements</a>' interfaces inherit, and which must be used by
  elements that have no additional requirements, is the
  <code><a href=#htmlelement>HTMLElement</a></code> interface.</p>

  <pre class=idl>interface <dfn id=htmlelement>HTMLElement</dfn> : <span>Element</span> {
  // <a href=#dom-tree-accessors>DOM tree accessors</a>
  NodeList <a href=#dom-getelementsbyclassname title=dom-getElementsByClassName>getElementsByClassName</a>(in DOMString classNames);

  // <a href=#dynamic-markup-insertion>dynamic markup insertion</a>
           attribute DOMString <a href=#dom-innerhtml title=dom-innerHTML>innerHTML</a>;
           attribute DOMString <a href=#dom-outerhtml title=dom-outerHTML>outerHTML</a>;
  void <a href=#dom-insertadjacenthtml title=dom-insertAdjacentHTML>insertAdjacentHTML</a>(in DOMString position, in DOMString text);

  // <span>metadata attributes</span>
           attribute DOMString <a href=#dom-id title=dom-id>id</a>;
           attribute DOMString <a href=#dom-title title=dom-title>title</a>;
           attribute DOMString <a href=#dom-lang title=dom-lang>lang</a>;
           attribute DOMString <a href=#dom-dir title=dom-dir>dir</a>;
           attribute <span>DOMString</span> <a href=#dom-classname title=dom-className>className</a>;
  readonly attribute <a href=#domtokenlist-0>DOMTokenList</a> <a href=#dom-classlist title=dom-classList>classList</a>;
  readonly attribute <a href=#domstringmap-0>DOMStringMap</a> <a href=#dom-dataset title=dom-dataset>dataset</a>;

  // <a href=#editing>user interaction</a>
           attribute boolean <a href=#dom-hidden title=dom-hidden>hidden</a>;
  void <a href=#dom-click title=dom-click>click</a>();
  void <a href=#dom-scrollintoview title=dom-scrollIntoView>scrollIntoView</a>();
  void <a href=#dom-scrollintoview title=dom-scrollIntoView>scrollIntoView</a>(in boolean top);
           attribute long <a href=#dom-tabindex title=dom-tabindex>tabIndex</a>;
  void <a href=#dom-focus title=dom-focus>focus</a>();
  void <a href=#dom-blur title=dom-blur>blur</a>();
           attribute boolean <a href=#dom-draggable title=dom-draggable>draggable</a>;
           attribute DOMString <a href=#dom-contenteditable title=dom-contentEditable>contentEditable</a>;
  readonly attribute boolean <a href=#dom-iscontenteditable title=dom-isContentEditable>isContentEditable</a>;
           attribute <a href=#htmlmenuelement>HTMLMenuElement</a> <a href=#dom-contextmenu title=dom-contextMenu>contextMenu</a>;

  // <span>styling</span>
  readonly attribute <span>CSSStyleDeclaration</span> <a href=#dom-style title=dom-style>style</a>;

  // <a href=#event-handler-dom-attributes>event handler DOM attributes</a>
           attribute <a href=#function>Function</a> <a href=#handler-onabort title=handler-onabort>onabort</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onblur title=handler-onblur>onblur</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onchange title=handler-onchange>onchange</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onclick title=handler-onclick>onclick</a>;
           attribute <a href=#function>Function</a> <a href=#handler-oncontextmenu title=handler-oncontextmenu>oncontextmenu</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondblclick title=handler-ondblclick>ondblclick</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondrag title=handler-ondrag>ondrag</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragend title=handler-ondragend>ondragend</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragenter title=handler-ondragenter>ondragenter</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragleave title=handler-ondragleave>ondragleave</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragover title=handler-ondragover>ondragover</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragstart title=handler-ondragstart>ondragstart</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondrop title=handler-ondrop>ondrop</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onerror title=handler-onerror>onerror</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onfocus title=handler-onfocus>onfocus</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onkeydown title=handler-onkeydown>onkeydown</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onkeypress title=handler-onkeypress>onkeypress</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onkeyup title=handler-onkeyup>onkeyup</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onload title=handler-onload>onload</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmessage title=handler-onmessage>onmessage</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmousedown title=handler-onmousedown>onmousedown</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmousemove title=handler-onmousemove>onmousemove</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmouseout title=handler-onmouseout>onmouseout</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmouseover title=handler-onmouseover>onmouseover</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmouseup title=handler-onmouseup>onmouseup</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmousewheel title=handler-onmousewheel>onmousewheel</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onscroll title=handler-onscroll>onscroll</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onselect title=handler-onselect>onselect</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onsubmit title=handler-onsubmit>onsubmit</a>;
};</pre>

  <p>The <code><a href=#htmlelement>HTMLElement</a></code> interface holds methods and
  attributes related to a number of disparate features, and the
  members of this interface are therefore described in various
  different sections of this specification.</p>



  <h4 id=global-attributes><span class=secno>3.3.3 </span><dfn>Global attributes</dfn></h4>

  <p>The following attributes are common to and may be specified on
  all <a href=#html-elements>HTML elements</a> (even those not defined in this
  specification):</p>

  <dl class=element><dt>Global attributes:</dt>
   <dd><code title=attr-class><a href=#classes>class</a></code></dd>
   <dd><code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code></dd>
   <dd><code title=attr-contextmenu><a href=#attr-contextmenu>contextmenu</a></code></dd>
   <dd><code title=attr-dir><a href=#the-dir-attribute>dir</a></code></dd>
   <dd><code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code></dd>
   <dd><code title=attr-id><a href=#the-id-attribute>id</a></code></dd>
   <dd><code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code></dd>
   <dd><code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code></dd>
   <dd><code title=attr-style><a href=#the-style-attribute>style</a></code></dd>
   <dd><code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code></dd>
   <dd><code title=attr-title><a href=#the-title-attribute>title</a></code></dd>
  </dl><p>In addition, unless otherwise specified, the following
  <a href=#event-handler-content-attributes>event handler content attributes</a> may be specified on
  any <a href=#html-elements title="HTML elements">HTML element</a>:</p>

  <dl class=element><dt>Event handler content attributes:</dt>
   <dd><code title=handler-onabort><a href=#handler-onabort>onabort</a></code></dd>
   <dd><code title=handler-onblur><a href=#handler-onblur>onblur</a></code></dd>
   <dd><code title=handler-onchange><a href=#handler-onchange>onchange</a></code></dd>
   <dd><code title=handler-onclick><a href=#handler-onclick>onclick</a></code></dd>
   <dd><code title=handler-oncontextmenu><a href=#handler-oncontextmenu>oncontextmenu</a></code></dd>
   <dd><code title=handler-ondblclick><a href=#handler-ondblclick>ondblclick</a></code></dd>
   <dd><code title=handler-ondrag><a href=#handler-ondrag>ondrag</a></code></dd>
   <dd><code title=handler-ondragend><a href=#handler-ondragend>ondragend</a></code></dd>
   <dd><code title=handler-ondragenter><a href=#handler-ondragenter>ondragenter</a></code></dd>
   <dd><code title=handler-ondragleave><a href=#handler-ondragleave>ondragleave</a></code></dd>
   <dd><code title=handler-ondragover><a href=#handler-ondragover>ondragover</a></code></dd>
   <dd><code title=handler-ondragstart><a href=#handler-ondragstart>ondragstart</a></code></dd>
   <dd><code title=handler-ondrop><a href=#handler-ondrop>ondrop</a></code></dd>
   <dd><code title=handler-onerror><a href=#handler-onerror>onerror</a></code>*</dd>
   <dd><code title=handler-onfocus><a href=#handler-onfocus>onfocus</a></code></dd>
   <dd><code title=handler-onkeydown><a href=#handler-onkeydown>onkeydown</a></code></dd>
   <dd><code title=handler-onkeypress><a href=#handler-onkeypress>onkeypress</a></code></dd>
   <dd><code title=handler-onkeyup><a href=#handler-onkeyup>onkeyup</a></code></dd>
   <dd><code title=handler-onload><a href=#handler-onload>onload</a></code>*</dd>
   <dd><code title=handler-onmessage><a href=#handler-onmessage>onmessage</a></code>*</dd>
   <dd><code title=handler-onmousedown><a href=#handler-onmousedown>onmousedown</a></code></dd>
   <dd><code title=handler-onmousemove><a href=#handler-onmousemove>onmousemove</a></code></dd>
   <dd><code title=handler-onmouseout><a href=#handler-onmouseout>onmouseout</a></code></dd>
   <dd><code title=handler-onmouseover><a href=#handler-onmouseover>onmouseover</a></code></dd>
   <dd><code title=handler-onmouseup><a href=#handler-onmouseup>onmouseup</a></code></dd>
   <dd><code title=handler-onmousewheel><a href=#handler-onmousewheel>onmousewheel</a></code></dd>
   <dd><code title=handler-onscroll><a href=#handler-onscroll>onscroll</a></code></dd>
   <dd><code title=handler-onselect><a href=#handler-onselect>onselect</a></code></dd>
   <dd><code title=handler-onsubmit><a href=#handler-onsubmit>onsubmit</a></code></dd>
  </dl><p class=note>The attributes marked with an asterisk cannot be
  specified on <code><a href=#the-body-element>body</a></code> elements as those elements expose
  <a href=#event-handler-attributes-0>event handler attributes</a> of the <code><a href=#window>Window</a></code>
  object with the same names.</p>

  <hr><p>Also, <a href=#custom-data-attribute title="custom data attribute">custom data
  attributes</a> (e.g. <code title="">data-foldername</code> or
  <code title="">data-msgid</code>) can be specified on any <a href=#html-elements title="HTML elements">HTML element</a>, to store custom data
  specific to the page.</p>

  <p>In <a href=#html-documents>HTML documents</a>, elements in the <a href=#html-namespace-0>HTML
  namespace</a> may have an <code title="">xmlns</code> attribute
  specified, if, and only if, it has the exact value
  "<code>http://www.w3.org/1999/xhtml</code>". This does not apply to
  <a href=#xml-documents>XML documents</a>.</p>

  <p class=note>In HTML, the <code title="">xmlns</code> attribute
  has absolutely no effect. It is basically a talisman. It is allowed
  merely to make migration to and from XHTML mildly easier. When
  parsed by an <a href=#html-parser>HTML parser</a>, the attribute ends up in no
  namespace, not the "<code>http://www.w3.org/2000/xmlns/</code>"
  namespace like namespace declaration attributes in XML do.</p>

  <p class=note>In XML, an <code title="">xmlns</code> attribute is
  part of the namespace declaration mechanism, and an element cannot
  actually have an <code title="">xmlns</code> attribute in no
  namespace specified.</p>


  <h5 id=the-id-attribute><span class=secno>3.3.3.1 </span>The <dfn title=attr-id><code>id</code></dfn> attribute</h5>

  <p>The <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute
  <a href=#represents>represents</a> its element's unique identifier. The value
  must be unique in the element's <a href=#home-subtree>home subtree</a> and must
  contain at least one character. The value must not contain any <a href=#space-character title="space character">space characters</a>.</p>

  <!-- space characters are disallowed because space-separated lists
  of IDs otherwise would not be able to reach all valid IDs -->

  <p>If the value is not the empty string, user agents must associate
  the element with the given value (exactly, including any space
  characters) for the purposes of ID matching within the element's
  <a href=#home-subtree>home subtree</a> (e.g. for selectors in CSS or for the
  <code>getElementById()</code> method in the DOM).</p>

  <p>Identifiers are opaque strings. Particular meanings should not be
  derived from the value of the <code title=attr-id><a href=#the-id-attribute>id</a></code>
  attribute.</p>

  <p>This specification doesn't preclude an element having multiple
  IDs, if other mechanisms (e.g. DOM Core methods) can set an
  element's ID in a way that doesn't conflict with the <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute.</p>

  <p>The <dfn id=dom-id title=dom-id><code>id</code></dfn> DOM attribute must
  <a href=#reflect>reflect</a> the <code title=attr-id><a href=#the-id-attribute>id</a></code> content
  attribute.</p>


  <h5 id=the-title-attribute><span class=secno>3.3.3.2 </span>The <dfn title=attr-title><code>title</code></dfn> attribute</h5>

  <p>The <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute
  <a href=#represents>represents</a> advisory information for the element, such
  as would be appropriate for a tooltip. On a link, this could be the
  title or a description of the target resource; on an image, it could
  be the image credit or a description of the image; on a paragraph,
  it could be a footnote or commentary on the text; on a citation, it
  could be further information about the source; and so forth. The
  value is text.</p>

  <p>If this attribute is omitted from an element, then it implies
  that the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute of the
  nearest ancestor <a href=#html-elements title="HTML elements">HTML element</a>
  with a <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute set is also
  relevant to this element. Setting the attribute overrides this,
  explicitly stating that the advisory information of any ancestors is
  not relevant to this element.  Setting the attribute to the empty
  string indicates that the element has no advisory information.</p>

  <p>If the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute's value
  contains U+000A LINE FEED (LF) characters, the content is split into
  multiple lines. Each U+000A LINE FEED (LF) character represents a
  line break.</p>

  <p>Some elements, such as <code><a href=#the-link-element>link</a></code>, <code><a href=#the-abbr-element>abbr</a></code>, and
  <code><a href=#the-input-element>input</a></code>, define additional semantics for the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute beyond the semantics
  described above.</p>

  <p>The <dfn id=dom-title title=dom-title><code>title</code></dfn> DOM attribute
  must <a href=#reflect>reflect</a> the <code title=attr-title><a href=#the-title-attribute>title</a></code>
  content attribute.</p>


  <h5 id=the-lang-and-xml:lang-attributes><span class=secno>3.3.3.3 </span>The <dfn title=attr-lang><code>lang</code></dfn> and <dfn title=attr-xml-lang><code>xml:lang</code></dfn>
  attributes</h5>

  <p>The <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code> attribute specifies the
  primary <dfn id=language>language</dfn> for the element's contents and for any
  of the element's attributes that contain text. Its value must be a
  valid RFC 3066 language code, or the empty string. <a href=#refsRFC3066>[RFC3066]</a></p>

  <p>The <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> attribute (that
  is, the <code title="">lang</code> attribute with the <code title="">xml</code> prefix in the <code title="">http://www.w3.org/XML/1998/namespace</code> namespace) is
  defined in XML. <a href=#refsXML>[XML]</a></p>

  <p>If these attributes are omitted from an element, then the
  language of this element is the same as the language of its parent
  element, if any. Setting the attribute to the empty string indicates
  that the primary language is unknown.</p> <!-- UA conformance
  requires for this are below -->

  <p>The <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code> attribute may be used on
  any <a href=#html-elements title="HTML elements">HTML element</a>.</p>

  <p>The <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> attribute may be
  used on <a href=#html-elements>HTML elements</a> in <a href=#xml-documents>XML documents</a>, as
  well as elements in other namespaces if the relevant specifications
  allow it (in particular, MathML and SVG allow <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> attributes to be specified on
  their elements). If both the <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code>
  attribute and the <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code>
  attribute are specified on the same element, they must have exactly
  the same value when compared in an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> manner.</p>

  <p>Authors must not use the <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> attribute (that is, the <code title="">lang</code> attribute with the <code title="">xml</code>
  prefix in the <code title="">http://www.w3.org/XML/1998/namespace</code> namespace) in
  <a href=#html-documents>HTML documents</a>. To ease migration to and from XHTML,
  authors may specify an attribute in no namespace with no prefix and
  with the localname <code title="">xml:lang</code> on <a href=#html-elements>HTML
  elements</a> in <a href=#html-documents>HTML documents</a>, but such attributes
  must only be specified if a <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code>
  attribute is also specified, and both attributes must have the same
  value when compared in an <a href=#ascii-case-insensitive>ASCII case-insensitive</a>
  manner.</p>

  <hr><p>To determine the language of a node, user agents must look at the
  nearest ancestor element (including the element itself if the node
  is an element) that has an <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> attribute set or is an <a href=#html-elements title="HTML elements">HTML element</a> and has a <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code> attribute set. That attribute
  specifies the language of the node.</p>

  <p>If both the <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> attribute
  and the <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code> attribute are set on an
  element, user agents must use the <code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> attribute, and the <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code> attribute must be <a href=#ignore title=ignore>ignored</a> for the purposes of determining the
  element's language.</p>

  <p>If no explicit language is given for the <a href=#root-element>root
  element</a>, but there is a <a href=#document-wide-default-language>document-wide default
  language</a> set, then that is the language of the node.</p>

  <p>If there is no <a href=#document-wide-default-language>document-wide default language</a>, then
  language information from a higher-level protocol (such as HTTP), if
  any, must be used as the final fallback language. In the absence of
  any language information, the default value is unknown (the empty
  string).</p>

  <p>If the resulting value is not a recognised language code, then it
  must be treated as an unknown language (as if the value was the
  empty string).</p>

  <hr><p>User agents may use the element's language to determine proper
  processing or rendering (e.g. in the selection of appropriate
  fonts or pronunciations, or for dictionary selection). <!--User
  agents must not use the element's language to determine text
  directionality. (commented out because text directionality is a
  rendering-level concern.)--></p>

  <p>The <dfn id=dom-lang title=dom-lang><code>lang</code></dfn> DOM attribute
  must <a href=#reflect>reflect</a> the <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code>
  content attribute.</p>


  <h5 id=the-xml:base-attribute-(xml-only)><span class=secno>3.3.3.4 </span>The <dfn title=attr-xml-base><code>xml:base</code></dfn>
  attribute (XML only)</h5>

  <p>The <code title=attr-xml-base><a href=#the-xml:base-attribute-(xml-only)>xml:base</a></code> attribute is
  defined in XML Base. <a href=#refsXMLBASE>[XMLBASE]</a></p>

  <p>The <code title=attr-xml-base><a href=#the-xml:base-attribute-(xml-only)>xml:base</a></code> attribute may be
  used on elements of <a href=#xml-documents>XML documents</a>.  Authors must not
  use the <code title=attr-xml-base><a href=#the-xml:base-attribute-(xml-only)>xml:base</a></code> attribute in
  <a href=#html-documents>HTML documents</a>.</p>


  <h5 id=the-dir-attribute><span class=secno>3.3.3.5 </span>The <dfn title=attr-dir><code>dir</code></dfn> attribute</h5>

  <p>The <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> attribute specifies the
  element's text directionality. The attribute is an <a href=#enumerated-attribute>enumerated
  attribute</a> with the keyword <code title="">ltr</code> mapping
  to the state <i>ltr</i>, and the keyword <code title="">rtl</code>
  mapping to the state <i>rtl</i>. The attribute has no
  defaults.</p>

  <p>The processing of this attribute is primarily performed by the
  presentation layer. For example, the rendering section in this
  specification defines a mapping from this attribute to the CSS
  'direction' and 'unicode-bidi' properties, and CSS defines rendering
  in terms of those properties.</p>

  <p><dfn id=the-directionality>The directionality</dfn> of an element, which is used in
  particular by the <code><a href=#the-canvas-element>canvas</a></code> element's text rendering API,
  is either 'ltr' or 'rtl'. If the user agent supports CSS and the
  'direction' property on this element has a computed value of either
  'ltr' or 'rtl', then that is <a href=#the-directionality>the directionality</a> of the
  element. Otherwise, if the element is being rendered, then <a href=#the-directionality>the
  directionality</a> of the element is the directionality used by
  the presentation layer, potentially determined from the value of the
  <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> attribute on the
  element. Otherwise, if the element's <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> attribute has the state <i>ltr</i>,
  the element's directionality is 'ltr' (left-to-right); if the
  attribute has the state <i>rtl</i>, the element's directionality
  is 'rtl' (right-to-left); and oherwise, the element's directionality
  is the same as its parent element, or 'ltr' if there is no parent
  element.</p>

  <p>The <dfn id=dom-dir title=dom-dir><code>dir</code></dfn> DOM attribute on
  an element must <a href=#reflect>reflect</a> the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> content attribute of that element,
  <a href=#limited-to-only-known-values>limited to only known values</a>.</p>

  <p>The <dfn id=dom-document-dir title=dom-document-dir><code>dir</code></dfn> DOM
  attribute on <code><a href=#htmldocument>HTMLDocument</a></code> objects must
  <a href=#reflect>reflect</a> the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> content
  attribute of <a href=#the-html-element-0>the <code>html</code> element</a>, if any,
  <a href=#limited-to-only-known-values>limited to only known values</a>. If there is no such
  element, then the attribute must return the empty string and do
  nothing on setting.</p>

  <p class=note>Authors are strongly encouraged to use the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> attribute to indicate text direction
  rather than using CSS, since that way their documents will continue
  to render correctly even in the absence of CSS (e.g. as interpreted
  by search engines).</p>


  <h5 id=classes><span class=secno>3.3.3.6 </span>The <dfn title=attr-class><code>class</code></dfn> attribute</h5>

  <p>Every <a href=#html-elements title="HTML elements">HTML element</a> may have a
  <code title=attr-class><a href=#classes>class</a></code> attribute specified.</p>

  <p>The attribute, if specified, must have a value that is an
  <a href=#unordered-set-of-unique-space-separated-tokens>unordered set of unique space-separated tokens</a>
  representing the various classes that the element belongs to.</p>

  <p>The classes that an <a href=#html-elements title="HTML elements">HTML
  element</a> has assigned to it consists of all the classes
  returned when the value of the <code title=attr-class><a href=#classes>class</a></code>
  attribute is <a href=#split-a-string-on-spaces title="split a string on spaces">split on
  spaces</a>.</p>

  <p class=note>Assigning classes to an element affects class
  matching in selectors in CSS, the <code title=dom-document-getElementsByClassName><a href=#dom-document-getelementsbyclassname>getElementsByClassName()</a></code>
  method in the DOM, and other such features.</p>

  <p>Authors may use any value in the <code title=attr-class><a href=#classes>class</a></code> attribute, but are encouraged to use
  the values that describe the nature of the content, rather than
  values that describe the desired presentation of the
  content.</p>

  <p>The <dfn id=dom-classname title=dom-className><code>className</code></dfn> and
  <dfn id=dom-classlist title=dom-classList><code>classList</code></dfn> DOM
  attributes must both <a href=#reflect>reflect</a> the <code title=attr-class><a href=#classes>class</a></code> content attribute.</p>



  <h5 id=the-style-attribute><span class=secno>3.3.3.7 </span>The <dfn title=attr-style><code>style</code></dfn> attribute</h5>

  <p>All elements may have the <code title=attr-style><a href=#the-style-attribute>style</a></code>
  content attribute set. If specified, the attribute must contain only
  a list of zero or more semicolon-separated (;) CSS declarations. <a href=#refsCSS21>[CSS21]</a></p>

  <p>In user agents that support CSS, the attribute's value must be
  parsed when the attribute is added or has its value changed, with
  its value treated as the body (the part inside the curly brackets)
  of a declaration block in a rule whose selector matches just the
  element on which the attribute is set. All <a href=#url title=URL>URLs</a> in the value must be <a href=#resolve-a-url title="resolve a
  url">resolved</a> relative to the element when the attribute is
  parsed.<!-- so dynamic changes to the base URL don't affect the CSS
  --> For the purposes of the CSS cascade, the attribute must be
  considered to be a 'style' attribute at the author level. </p>

  <p>Documents that use <code title=attr-style><a href=#the-style-attribute>style</a></code>
  attributes on any of their elements must still be comprehensible and
  usable if those attributes were removed.</p>

  <p class=note>In particular, using the <code title=attr-style><a href=#the-style-attribute>style</a></code> attribute to hide and show content,
  or to convey meaning that is otherwise not included in the document,
  is non-conforming.</p>

  <p>The <dfn id=dom-style title=dom-style><code>style</code></dfn> DOM attribute
  must return a <code>CSSStyleDeclaration</code> whose value
  represents the declarations specified in the attribute, if
  present. Mutating the <code>CSSStyleDeclaration</code> object must
  create a <code title=attr-font-style>style</code> attribute on the
  element (if there isn't one already) and then change its value to be
  a value representing the serialized form of the
  <code>CSSStyleDeclaration</code> object. <a href=#refsCSSOM>[CSSOM]</a>

  <div class=example>

   <p>In the following example, the words that refer to colors are
   marked up using the <code><a href=#the-span-element>span</a></code> element and the <code title=attr-style><a href=#the-style-attribute>style</a></code> attribute to make those words show
   up in the relevant colors in visual media.</p>

   <pre>&lt;p&gt;My sweat suit is &lt;span style="color: green; background:
transparent"&gt;green&lt;/span&gt; and my eyes are &lt;span style="color: blue;
background: transparent"&gt;blue&lt;/span&gt;.&lt;/p&gt;</pre>

  </div>



  <h5 id=embedding-custom-non-visible-data><span class=secno>3.3.3.8 </span><dfn>Embedding custom non-visible data</dfn></h5>

  <p>A <dfn id=custom-data-attribute>custom data attribute</dfn> is an attribute whose name
  starts with the string "<dfn id=attr-data-* title=attr-data-*><code>data-</code></dfn>", has at least one
  character after the hyphen, is <a href=#xml-compatible>XML-compatible</a>, has no
  namespace, and contains no characters in the range U+0041 .. U+005A
  (LATIN CAPITAL LETTER A .. LATIN CAPITAL LETTER Z).</p>

  <p class=note>All attributes in <a href=#html-documents>HTML documents</a> get
  lowercased automatically, so the restriction on uppercase letters
  doesn't affect such documents.</p>

  <p><a href=#custom-data-attribute title="custom data attribute">Custom data attributes</a>
  are intended to store custom data private to the page or
  application, for which there are no more appropriate attributes or
  elements.</p>

  <p>These attributes are not intended for use by software that is
  independent of the site that uses the attributes.</p>

  <div class=example>

   <p>For instance, a site about music could annotate list items
   representing tracks in an album with custom data attributes
   containing the length of each track. This information could then be
   used by the site itself to allow the user to sort the list by track
   length, or to filter the list for tracks of certain lengths.</p>

   <pre>&lt;ol&gt;
 &lt;li data-length="2m11s"&gt;Beyond The Sea&lt;/li&gt;
 ...
&lt;/ol&gt;</pre>

   <p>It would be inappropriate, however, for the user to use generic
   software not associated with that music site to search for tracks
   of a certain length by looking at this data.</p>

   <p>This is because these attributes are intended for use by the
   site's own scripts, and are not a generic extension mechanism for
   publicly-usable metadata.</p>

  </div>

  <p>Every <a href=#html-elements title="HTML elements">HTML element</a> may have
  any number of <a href=#custom-data-attribute title="custom data attribute">custom data
  attributes</a> specified, with any value.</p>

  <p>The <dfn id=dom-dataset title=dom-dataset><code>dataset</code></dfn> DOM
  attribute provides convenient accessors for all the <code title=attr-data-*><a href=#attr-data-*>data-*</a></code> attributes on an element.  On
  getting, the <code title=dom-dataset><a href=#dom-dataset>dataset</a></code> DOM attribute
  must return a <code><a href=#domstringmap-0>DOMStringMap</a></code> object, associated with the
  following algorithms, which expose these attributes on their
  element:</p>

  <dl><dt>The algorithm for getting the list of name-value pairs</dt>

   <dd>
    <ol><li>Let <var title="">list</var> be an empty list of name-value
     pairs.</li>

     <li>For each content attribute on the element whose first five
     characters are the string "<code title="">data-</code>", add a
     name-value pair to <var title="">list</var> whose name is the
     attribute's name with the first five character removed and whose
     value is the attribute's value.</li>

     <li>Return <var title="">list</var>.</li>

    </ol></dd>

   <dt>The algorithm for setting names to certain values</dt>

   <dd>
    <ol><li>Let <var title="">name</var> be the concatenation of the
     string <code title="">data-</code> and the name passed to the
     algorithm.</li>

     <li>Let <var title="">value</var> be the value passed to the
     algorithm.</li>

     <li>Set the value of the attribute with the name <var title="">name</var>, to the value <var title="">value</var>,
     replacing any previous value if the attribute already existed. If
     <code title="">setAttribute()</code> would have raised an
     exception when setting an attribute with the name <var title="">name</var>, then this must raise the same
     exception.</li>

    </ol></dd>

   <dt>The algorithm for deleting names</dt>

   <dd>
    <ol><li>Let <var title="">name</var> be the concatenation of the
     string <code title="">data-</code> and the name passed to the
     algorithm.</li>

     <li>Remove the attribute with the name <var title="">name</var>,
     if such an attribute exists. Do nothing otherwise.</li>

    </ol></dd>

  </dl><div class=example>

   <p>If a Web page wanted an element to represent a space ship,
   e.g. as part of a game, it would have to use the <code class=attr-class>class</code> attribute along with <code title=attr-data-*><a href=#attr-data-*>data-*</a></code> attributes:</p>

   <pre>
&lt;div class="spaceship" data-id="92432"
     data-weapons="laser 2" data-shields="50%"
     data-x="30" data-y="10" data-z="90"&gt;
 &lt;button class="fire"
         onclick="spaceships[this.parentNode.dataset.id].fire()"&gt;
  Fire
 &lt;/button&gt;
&lt;/div&gt;
</pre>

  </div>

  <p>Authors should carefully design such extensions so that when the
  attributes are ignored and any associated CSS dropped, the page is
  still usable.</p>

  <p>User agents must not derive any implementation behavior from
  these attributes or values. Specifications intended for user agents
  must not define these attributes to have any meaningful values.</p>



  <h3 id=content-models><span class=secno>3.4 </span>Content models</h3>

  <p>All the elements in this specification have a defined content
  model, which describes what nodes are allowed inside the elements,
  and thus what the structure of an HTML document or fragment must
  look like.</p>

  <p class=note>As noted in the conformance and terminology
  sections, for the purposes of determining if an element matches its
  content model or not, <a href=#text-node title="text
  node"><code>CDATASection</code> nodes in the DOM are treated as
  equivalent to <code>Text</code> nodes</a>, and <a href=#entity-references>entity reference nodes are treated as if
  they were expanded in place</a>.</p>

  <p>The <a href=#space-character title="space character">space characters</a> are
  always allowed between elements. User agents represent these
  characters between elements in the source markup as text nodes in
  the DOM.<!-- not a conf criteria since the parser now requires this
  --> Empty <a href=#text-node title="text node">text nodes</a> and <a href=#text-node title="text node">text nodes</a> consisting of just sequences of
  those characters are considered <dfn id=inter-element-whitespace>inter-element
  whitespace</dfn>.</p>

  <p><a href=#inter-element-whitespace>Inter-element whitespace</a>, comment nodes, and
  processing instruction nodes must be ignored when establishing
  whether an element matches its content model or not, and must be
  ignored when following algorithms that define document and element
  semantics.</p>

  <p>An element <var title="">A</var> is said to be <dfn id=preceded-or-followed>preceded or
  followed</dfn> by a second element <var title="">B</var> if <var title="">A</var> and <var title="">B</var> have the same parent node
  and there are no other element nodes or text nodes (other than
  <a href=#inter-element-whitespace>inter-element whitespace</a>) between them.</p>

  <p>Authors must not use <a href=#elements-in-the-html-namespace>elements in the HTML namespace</a>
  anywhere except where they are explicitly allowed, as defined for
  each element, or as explicitly required by other specifications. For
  XML compound documents, these contexts could be inside elements from
  other namespaces, if those elements are defined as providing the
  relevant contexts.</p>

  <div class=example>
   <p>The Atom specification defines the Atom <code title="">content</code> element, when its <code title="">type</code> attribute has the value <code title="">xhtml</code>, as requiring that it contains a single HTML
   <code><a href=#the-div-element>div</a></code> element. Thus, a <code><a href=#the-div-element>div</a></code> element is
   allowed in that context, even though this is not explicitly
   normatively stated by this specification. <a href=#refsATOM>[ATOM]</a></p>
  </div>

  <p>In addition, <a href=#elements-in-the-html-namespace>elements in the HTML namespace</a> may be
  orphan nodes (i.e. without a parent node).</p>

  <div class=example>

   <p>For example, creating a <code><a href=#the-td-element>td</a></code> element and storing it
   in a global variable in a script is conforming, even though
   <code><a href=#the-td-element>td</a></code> elements are otherwise only supposed to be used
   inside <code><a href=#the-tr-element>tr</a></code> elements.</p>

   <pre>var data = {
  name: "Banana",
  cell: document.createElement('td'), 
};</pre>

  </div>


  <h4 id=kinds-of-content><span class=secno>3.4.1 </span>Kinds of content</h4>

  <p>Each element in HTML falls into zero or more categories that
  group elements with similar characteristics together. The following
  broad categories are used in this specification:</p>

  <ul class=brief><li><a href=#metadata-content-0>Metadata content</a></li>
   <li><a href=#flow-content-0>Flow content</a></li>
   <li><a href=#sectioning-content-0>Sectioning content</a></li>
   <li><a href=#heading-content-0>Heading content</a></li>
   <li><a href=#phrasing-content-0>Phrasing content</a></li>
   <li><a href=#embedded-content-2>Embedded content</a></li>
   <li><a href=#interactive-content-0>Interactive content</a></li>
  </ul><p>These categories are related as follows:

  <p><object data=images/content-venn.svg height=288 width=512><img alt="Sectioning content, heading content, phrasing content, and
  embedded content are all types of flow content. Embedded content is
  also a type of phrasing content." src=images/content-venn.png></object></p>

  <p>In addition, certain elements are categorised as <a href=#form-associated-element title="form-associated element">form-associated elements</a> and
  further subcategorised so so to define their role in various
  form-related processing models.</p>

  <!-- XXX list all the elements for each kind of element in the
  sections below and in a summary table at the end of the document -->

  <p>Some elements have unique requirements and do not fit into any
  particular category.</p>


  <h5 id=metadata-content><span class=secno>3.4.1.1 </span>Metadata content</h5>

  <p><dfn id=metadata-content-0>Metadata content</dfn> is content that sets up the
  presentation or behavior of the rest of the content, or that sets
  up the relationship of the document with other documents, or that
  conveys other "out of band" information.</p>

  <p>Elements from other namespaces whose semantics are primarily
  metadata-related (e.g. RDF) are also <a href=#metadata-content-0>metadata
  content</a>.</p>

  <div class=example>

   <p>Thus, in the XML serialisation, one can use RDF, like this:</p>

   <pre>&lt;html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:r="http://www.w3.org/1999/02/22-rdf-syntax-ns#"&gt;
 &lt;head&gt;
  &lt;title&gt;Hedral's Home Page&lt;/title&gt;
  &lt;r:RDF&gt;
   &lt;Person xmlns="http://www.w3.org/2000/10/swap/pim/contact#"
           r:about="http://hedral.example.com/#"&gt;
    &lt;fullName&gt;Cat Hedral&lt;/fullName&gt;
    &lt;mailbox r:resource="mailto:hedral@damowmow.com"/&gt;
    &lt;personalTitle&gt;Sir&lt;/personalTitle&gt; 
   &lt;/Person&gt;
  &lt;/r:RDF&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;h1&gt;My home page&lt;/h1&gt;
  &lt;p&gt;I like playing with string, I guess. Sister says squirrels are fun
  too so sometimes I follow her to play with them.&lt;/p&gt;
 &lt;/body&gt;
&lt;/html&gt;</pre>

   <p>This isn't possible in the HTML serialisation, however.</p>

  </div>


  <h5 id=flow-content><span class=secno>3.4.1.2 </span>Flow content</h5>

  <p>Most elements that are used in the body of documents and
  applications are categorized as <dfn id=flow-content-0>flow content</dfn>.</p>

  <p>As a general rule, elements whose content model allows any
  <a href=#flow-content-0>flow content</a> should have either at least one descendant
  <a href=#text-node>text node</a> that is not <a href=#inter-element-whitespace>inter-element
  whitespace</a>, or at least one descendant element node that is
  <a href=#embedded-content-2>embedded content</a>. For the purposes of this requirement,
  <code><a href=#the-del-element>del</a></code> elements and their descendants must not be counted
  as contributing to the ancestors of the <code><a href=#the-del-element>del</a></code>
  element.</p>

  <p>This requirement is not a hard requirement, however, as there are
  many cases where an element can be empty legitimately, for example
  when it is used as a placeholder which will later be filled in by a
  script, or when the element is part of a template and would on most
  pages be filled in but on some pages is not relevant.</p>


  <h5 id=sectioning-content><span class=secno>3.4.1.3 </span>Sectioning content</h5>

  <p><dfn id=sectioning-content-0>Sectioning content</dfn> is content that defines the scope
  of <a href=#heading-content-0 title="heading content">headers</a>, <a href=#the-footer-element title=footer>footers</a>, and <a href=#the-address-element title=address>contact
  information</a>.</p>

  <p>Each <a href=#sectioning-content-0>sectioning content</a> element potentially has a
  heading and an <a href=#outline>outline</a>. See the section on
  <a href=#headings-and-sections>headings and sections</a> for further details.</p>

  <p class=note>There are also certain elements that are <a href=#sectioning-root title="sectioning root">sectioning roots</a>. These are distinct
  from <a href=#sectioning-content-0>sectioning content</a>, but they can also have an
  <a href=#outline>outline</a>.</p>


  <h5 id=heading-content><span class=secno>3.4.1.4 </span>Heading content</h5>

  <p><dfn id=heading-content-0>Heading content</dfn> defines the header of a section
  (whether explicitly marked up using <a href=#sectioning-content-0>sectioning content</a>
  elements, or implied by the heading content itself).</p>


  <h5 id=phrasing-content><span class=secno>3.4.1.5 </span>Phrasing content</h5>

  <p><dfn id=phrasing-content-0>Phrasing content</dfn> is the text of the document, as well
  as elements that mark up that text at the intra-paragraph
  level. Runs of <a href=#phrasing-content-0>phrasing content</a> form <a href=#paragraph title=paragraph>paragraphs</a>.</p>

  <p>As a general rule, elements whose content model allows any
  <a href=#phrasing-content-0>phrasing content</a> should have either at least one
  descendant <a href=#text-node>text node</a> that is not <a href=#inter-element-whitespace>inter-element
  whitespace</a>, or at least one descendant element node that is
  <a href=#embedded-content-2>embedded content</a>. For the purposes of this requirement,
  nodes that are descendants of <code><a href=#the-del-element>del</a></code> elements must not be
  counted as contributing to the ancestors of the <code><a href=#the-del-element>del</a></code>
  element.</p>

  <p class=note>Most elements that are categorized as phrasing
  content can only contain elements that are themselves categorized as
  phrasing content, not any flow content.</p>

  <p><a href=#text-node title="text node">Text nodes</a> that are not
  <a href=#inter-element-whitespace>inter-element whitespace</a> are <a href=#phrasing-content-0>phrasing
  content</a>.</p>


  <h5 id=embedded-content><span class=secno>3.4.1.6 </span>Embedded content</h5>

  <p><dfn id=embedded-content-2>Embedded content</dfn> is content that imports another
  resource into the document, or content from another vocabulary that
  is inserted into the document.</p>

  <p>Elements that are from namespaces other than the <a href=#html-namespace-0>HTML
  namespace</a> and that convey content but not metadata, are
  <a href=#embedded-content-2>embedded content</a> for the purposes of the content models
  defined in this specification. (For example, MathML, or SVG.)</p>

  <p>Some embedded content elements can have <dfn id=fallback-content>fallback
  content</dfn>: content that is to be used when the external resource
  cannot be used (e.g. because it is of an unsupported format). The
  element definitions state what the fallback is, if any.</p>


  <h5 id=interactive-content><span class=secno>3.4.1.7 </span>Interactive content</h5>

<!--
TESTS:
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E%0A%3Cp%20tabindex%3D1%3Etest%20%3Ca%20href%3D%22%22%3E%20%3Cem%3Etest%3C/em%3E%20%3C/a%3E%0A%3Cscript%3E%0A%20function%20test%20%28e%29%20%7B%20w%28e.type%20+%20%27%20on%20%27%20+%20e.target.tagName%20+%20%27%20through%20%27%20+%20e.currentTarget.tagName%29%3B%20%7D%0A%20document.getElementsByTagName%28%27a%27%29%5B0%5D.addEventListener%28%27click%27%2C%20test%2C%20false%29%3B%0A%20document.getElementsByTagName%28%27a%27%29%5B0%5D.addEventListener%28%27DOMActivate%27%2C%20test%2C%20false%29%3B%0A%20document.getElementsByTagName%28%27p%27%29%5B0%5D.addEventListener%28%27click%27%2C%20test%2C%20false%29%3B%0A%20document.getElementsByTagName%28%27p%27%29%5B0%5D.addEventListener%28%27DOMActivate%27%2C%20test%2C%20false%29%3B%0A%3C/script%3E%0A
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20HTML%3E%0A%3Ca%20href%3Dhttp%3A//google.com/%20target%3Da%3EA%3C/a%3E%3Ca%20href%3Dhttp%3A//yahoo.com/%20target%3Db%3EB%3C/a%3E%3Cbr%3E%0A%3Ciframe%20name%3Da%3E%3C/iframe%3E%3Ciframe%20name%3Db%3E%3C/iframe%3E%0A%3Cscript%3E%0A%20var%20a%20%3D%20document.getElementsByTagName%28%27a%27%29%5B0%5D%3B%0A%20var%20b%20%3D%20document.getElementsByTagName%28%27a%27%29%5B1%5D%3B%0A%20a.appendChild%28b%29%3B%0A%3C/script%3E
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20HTML%3E%0A%3Cform%20action%3D%22http%3A//google.com/%22%20onsubmit%3D%22w%28%27onsubmit%27%29%22%3E%3Cem%3EA%3C/em%3E%3C/form%3E%0A%3Cscript%3E%0Adocument.getElementsByTagName%28%27form%27%29%5B0%5D.attachEvent%28%27onsubmit%27%2C%20function%20%28%29%20%7B%20w%28%27submit%20fired%27%29%20%7D%29%3B%0Adocument.getElementsByTagName%28%27form%27%29%5B0%5D.fireEvent%28%27onsubmit%27%29%3B%0A%3C/script%3E
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20HTML%3E%0A%3Cform%20action%3D%22http%3A//google.com/%22%3EX%3C/form%3E%0A%3Cscript%3E%0Avar%20evt%20%3D%20document.createEvent%28%22Events%22%29%3B%0Aevt.initEvent%28%22submit%22%2C%20true%2C%20true%29%3B%0Adocument.getElementsByTagName%28%27form%27%29%5B0%5D.dispatchEvent%28evt%29%3B%0A%3C/script%3E
-->

  <p><dfn id=interactive-content-0>Interactive content</dfn> is content that is specifically
  intended for user interaction.</p>

  <p>Certain elements in HTML have an <a href=#activation-behavior>activation
  behavior</a>, which means the user agent should allow the user to
  manually trigger them in some way, for instance using keyboard or
  voice input, or through mouse clicks. When the user triggers an
  element with a defined <a href=#activation-behavior>activation behavior</a> in a manner
  other than clicking it, the default action of the interaction
  event<!-- XXX --> must be to <a href=#run-synthetic-click-activation-steps>run synthetic click activation
  steps</a> on the element.</p>

  <p>When a user agent is to <dfn id=run-synthetic-click-activation-steps>run synthetic click activation
  steps</dfn> on an element, the user agent must <a href=#run-pre-click-activation-steps>run pre-click
  activation steps</a> on the element, then <a href=#fire-a-click-event>fire a <code title=event-click>click</code> event</a> at the element. The
  default action of this <span title=event-click>click</span> event
  must be to <a href=#run-post-click-activation-steps>run post-click activation steps</a> on the
  element. If the event is canceled, the user agent must <a href=#run-canceled-activation-steps>run
  canceled activation steps</a> on the element instead.</p>

  <p>Given an element <var title="">target</var>, the <dfn id=nearest-activatable-element>nearest
  activatable element</dfn> is the element returned by the following
  algorithm:</p>

  <ol><li><p>If <var title="">target</var> has a defined <a href=#activation-behavior>activation
   behavior</a>, then return <var title="">target</var> and abort
   these steps.</li>

   <li><p>If <var title="">target</var> has a parent element, then set
   <var title="">target</var> to that parent element and return to the
   first step.</li>

   <li><p>Otherwise, there is no <a href=#nearest-activatable-element>nearest activatable
   element</a>.</li>

  </ol><p>When a pointing device is clicked, the user agent must run these
  steps:</p>

  <ol><li><p>Let <var title="">e</var> be the <span title="">nearest
   activatable element</span> of the element designated by the user,
   if any.</li>

   <li><p>If there is an element <var title="">e</var>, <a href=#run-pre-click-activation-steps>run
   pre-click activation steps</a> on it.</li>

   <li>

    <p>Dispatching the required <code title=event-click>click</code>
    event.</p>

    <p class=XXX>Another specification presumably requires the
    firing of the <span title=event-click>click</span> event?</p>

    <p>If there is an element <var title="">e</var>, then the default
    action of the <span title=event-click>click</span> event must be
    to <a href=#run-post-click-activation-steps>run post-click activation steps</a> on element <var title="">e</var>.</p>

    <p>If there is an element <var title="">e</var> but the event is
    canceled, the user agent must <a href=#run-canceled-activation-steps>run canceled activation
    steps</a> on element <var title="">e</var>.</p>

   </li>

  </ol><p class=note>The above doesn't happen for arbitrary synthetic
  events dispatched by author script. However, the <code title=dom-click><a href=#dom-click>click()</a></code> method can be used to make it
  happen programmatically.</p>

  <p>When a user agent is to <dfn id=run-post-click-activation-steps>run post-click activation
  steps</dfn> on an element, the user agent must <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-DOMActivate>DOMActivate</code> at that element. The
  default action of this event must be to <a href=#run-final-activation-steps>run final activation
  steps</a> on that element. If the event is canceled, the user
  agent must <a href=#run-canceled-activation-steps>run canceled activation steps</a> on the element
  instead.</p>

  <p>When a user agent is to <dfn id=run-pre-click-activation-steps>run pre-click activation steps</dfn>
  on an element, it must run the <dfn id=pre-click-activation-steps>pre-click activation steps</dfn>
  defined for that element, if any.</p>

  <p>When a user agent is to <dfn id=run-canceled-activation-steps>run canceled activation steps</dfn>
  on an element, it must run the <dfn id=canceled-activation-steps>canceled activation steps</dfn>
  defined for that element, if any.</p>

  <p>When a user agent is to <dfn id=run-final-activation-steps>run final activation steps</dfn> on
  an element, it must run the <dfn id=activation-behavior>activation behavior</dfn> defined
  for that element. Activation behaviors can refer to the <code title=event-click>click</code> and <code title=event-DOMActivate>DOMActivate</code> events that were fired
  by the steps above leading up to this point.</p>



  <h4 id=transparent-content-models><span class=secno>3.4.2 </span>Transparent content models</h4>

  <p>Some elements are described as <dfn id=transparent>transparent</dfn>; they have
  "transparent" as their content model. Some elements are described as
  <dfn id=semi-transparent>semi-transparent</dfn>; this means that part of their content
  model is "transparent" but that is not the only part of the content
  model that must be satisfied.</p>

  <p>When a content model includes a part that is "transparent", those
  parts must not contain content that would not be conformant if all
  transparent and semi-transparent elements in the tree were replaced,
  in their parent element, by the children in the "transparent" part
  of their content model, retaining order.</p>

  <p>When a transparent or semi-transparent element has no parent,
  then the part of its content model that is "transparent" must
  instead be treated as accepting any <a href=#flow-content-0>flow content</a>.</p>


  <h3 id=paragraphs><span class=secno>3.5 </span>Paragraphs</h3>

  <p>A <dfn id=paragraph>paragraph</dfn> is typically a block of text with one or more
  sentences that discuss a particular topic, as in typography, but can
  also be used for more general thematic grouping. For instance, an
  address is also a paragraph, as is a part of a form, a byline, or a
  stanza in a poem.</p>

  <p>Paragraphs in <a href=#flow-content-0>flow content</a> are defined relative to
  what the document looks like without the <code><a href=#the-a-element>a</a></code>,
  <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements complicating matters,
  since those elements, with their hybrid content models, can straddle
  paragraph boundaries.</p>

  <p>Let <var title="">view</var> be a view of the DOM that replaces
  all <code><a href=#the-a-element>a</a></code>, <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements
  in the document with their contents. Then, in <var title="">view</var>, for each run of <a href=#phrasing-content-0>phrasing content</a>
  uninterrupted by other types of content, in an element that accepts
  content other than <a href=#phrasing-content-0>phrasing content</a>, let <var title="">first</var> be the first node of the run, and let <var title="">last</var> be the last node of the run. For each run, a
  paragraph exists in the original DOM from immediately before <var title="">first</var> to immediately after <var title="">last</var>. (Paragraphs can thus span across
  <code><a href=#the-a-element>a</a></code>, <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements.)</p>

  <p>A <a href=#paragraph>paragraph</a> is also formed explicitly by
  <code><a href=#the-p-element>p</a></code> elements.</p>

  <p class=note>The <code><a href=#the-p-element>p</a></code> element can be used to wrap
  individual paragraphs when there would otherwise not be any content
  other than phrasing content to separate the paragraphs from each
  other.</p>

  <div class=example>

   <p>In the following example, there are two paragraphs in a
   section. There is also a header, which contains phrasing content
   that is not a paragraph. Note how the comments and
   <span>intra-element whitespace</span> do not form paragraphs.</p>

   <pre>&lt;section&gt;
  &lt;h1&gt;Example of paragraphs&lt;/h1&gt;
  This is the &lt;em&gt;first&lt;/em&gt; paragraph in this example.
  &lt;p&gt;This is the second.&lt;/p&gt;
  &lt;!-- This is not a paragraph. --&gt;
&lt;/section&gt;</pre>

   <p>The following example takes that markup and puts
   <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements around some of the
   markup to show that the text was changed (though in this case, the
   changes don't really make much sense, admittedly). Notice how this
   example has exactly the same paragraphs as the previous one,
   despite the <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements.</p>

   <pre>&lt;section&gt;
  &lt;ins&gt;&lt;h1&gt;Example of paragraphs&lt;/h1&gt;
  This is the &lt;em&gt;first&lt;/em&gt; paragraph in&lt;/ins&gt; this example&lt;del&gt;.
  &lt;p&gt;This is the second.&lt;/p&gt;&lt;/del&gt;
  &lt;!-- This is not a paragraph. --&gt;
&lt;/section&gt;</pre>

  </div>

  <div class=example>

   <p>In the following example, the link spans half of the first
   paragraph, all of the header separating the two paragraphs, and
   half of the second paragraph.</p>

   <pre>&lt;aside&gt;
 Welcome!
 &lt;a href="about.html"&gt;
  This is home of...
  &lt;h1&gt;The Falcons!&lt;/h1&gt;
  The Lockheed Martin multirole jet fighter aircraft!
 &lt;/a&gt;
 This page discusses the F-16 Fighting Falcon's innermost secrets.
&lt;/aside&gt;</pre>

   <p>Here is another way of marking this up, this time showing the
   paragraphs explicitly, and splitting the one link element into
   three:</p>

   <pre>&lt;aside&gt;
 &lt;p&gt;Welcome! &lt;a href="about.html"&gt;This is home of...&lt;/a&gt;&lt;/p&gt;
 &lt;h1&gt;&lt;a href="about.html"&gt;The Falcons!&lt;/a&gt;&lt;/h1&gt;
 &lt;p&gt;&lt;a href="about.html"&gt;The Lockheed Martin multirole jet
 fighter aircraft!&lt;/a&gt; This page discusses the F-16 Fighting
 Falcon's innermost secrets.&lt;/p&gt;
&lt;/aside&gt;</pre>

  </div>

  <p class=note>Generally, having elements straddle paragraph
  boundaries is best avoided. Maintaining such markup can be
  difficult.</p>


  <h3 id=apis-in-html-documents><span class=secno>3.6 </span>APIs in HTML documents</h3>

  <p>For <a href=#html-documents>HTML documents</a>, and for <a href=#html-elements>HTML
  elements</a> in <a href=#html-documents>HTML documents</a>, certain APIs defined
  in DOM3 Core become case-insensitive or case-changing, as sometimes
  defined in DOM3 Core, and as summarized or required below. <a href=#refsDOM3CORE>[DOM3CORE]</a>.</p>

  <p>This does not apply to <a href=#xml-documents>XML documents</a> or to elements
  that are not in the <a href=#html-namespace-0>HTML namespace</a> despite being in
  <a href=#html-documents>HTML documents</a>.</p>

  <dl><dt><code title="">Element.tagName</code> and <code title="">Node.nodeName</code></dt>

   <dd>

    <p>These attributes must return element names <a href=#converted-to-uppercase>converted to
    uppercase</a>, regardless of the case with which they were
    created.</p>

   </dd>


   <dt><code title="">Document.createElement()</code></dt>

   <dd>

    <p>The canonical form of HTML markup is all-lowercase; thus, this
    method will <a href=#converted-to-lowercase title="converted to lowercase">lowercase</a>
    the argument before creating the requisite element. Also, the
    element created must be in the <a href=#html-namespace-0>HTML namespace</a>.</p>

    <p class=note>This doesn't apply to <code title="">Document.createElementNS()</code>. Thus, it is possible,
    by passing this last method a tag name in the wrong case, to
    create an element that claims to have the tag name of an element
    defined in this specification, but doesn't support its interfaces,
    because it really has another tag name not accessible from the DOM
    APIs.</p>

   </dd>


   <dt><code title="">Element.setAttributeNode()</code></dt>

   <dd>

    <p>When an <code>Attr</code> node is set on an <a href=#html-elements title="HTML
    elements">HTML element</a>, it must have its name
    <a href=#converted-to-lowercase>converted to lowercase</a> before the element is
    affected.</p>

    <p class=note>This doesn't apply to <code title="">Document.setAttributeNodeNS()</code>.</p>

   </dd>


   <dt><code title="">Element.setAttribute()</code></dt>

   <dd>

    <p>When an attribute is set on an <a href=#html-elements title="HTML elements">HTML
    element</a>, the name argument must be <span>converted to
    lowercas</span> before the element is affected.</p>

    <p class=note>This doesn't apply to <code title="">Document.setAttributeNS()</code>.</p>

   </dd>


   <dt><code title="">Document.getElementsByTagName()</code> and <code title="">Element.getElementsByTagName()</code></dt>

   <dd>

    <p>These methods (but not their namespaced counterparts) must
    compare the given argument in an <a href=#ascii-case-insensitive>ASCII
    case-insensitive</a> manner when looking at <a href=#html-elements title="HTML
    elements">HTML elements</a>, and in a
    <a href=#case-sensitive>case-sensitive</a> manner otherwise.</p>

    <p class=note>Thus, in an <a href=#html-documents title="HTML documents">HTML
    document</a> with nodes in multiple namespaces, these methods
    will be both case-sensitive and case-insensitive at the same
    time.</p>

   </dd>


   <dt><code title="">Document.renameNode()</code></dt>

   <dd>

    <p>If the new namespace is the <a href=#html-namespace-0>HTML namespace</a>, then
    the new qualified name must be <a href=#converted-to-lowercase>converted to lowercase</a>
    before the rename takes place.</p>

   </dd>
   

  </dl><h3 id=dynamic-markup-insertion><span class=secno>3.7 </span><dfn>Dynamic markup insertion</dfn></h3>

  <p class=note>APIs for dynamically inserting markup into the
  document interact with the parser, and thus their behavior, varies
  depending on whether they are used with <a href=#html-documents>HTML documents</a>
  (and the <a href=#html-parser>HTML parser</a>) or XHTML in <a href=#xml-documents>XML
  documents</a> (and the <a href=#xml-parser>XML parser</a>).</p>

  <!-- XXX must make sure we spec that innerHTML et al causes mutation
  events to fire, but document.write() doesn't. (the latter is already
  req-stated in the parser section, btw) -->



  <h4 id=controlling-the-input-stream><span class=secno>3.7.1 </span>Controlling the input stream</h4>

  <p>The <dfn id=dom-document-open title=dom-document-open><code>open()</code></dfn>
  method comes in several variants with different numbers of
  arguments.</p>

  <p>When called with two or fewer arguments, the method must act as
  follows:</p>

  <ol><li><p>Let <var title="">type</var> be the value of the first
   argument, if there is one, or "<code>text/html</code>"
   otherwise.</li>

   <li><p>Let <var title="">replace</var> be true if there is a second
   argument and it is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for
   the value "replace", and false otherwise.</li>

   <li>

    <p>If the document has an <span>active parser</span><!-- XXX xref
    --> that isn't a <a href=#script-created-parser>script-created parser</a>, and the
    <a href=#insertion-point>insertion point</a> associated with that parser's
    <a href=#the-input-stream>input stream</a> is not undefined (that is, it
    <em>does</em> point to somewhere in the input stream), then the
    method does nothing. Abort these steps and return the
    <code>Document</code> object on which the method was invoked.</p>

    <p class=note>This basically causes <code title=dom-document-open><a href=#dom-document-open>document.open()</a></code> to be ignored
    when it's called in an inline script found during the parsing of
    data sent over the network, while still letting it have an effect
    when called asynchronously or on a document that is itself being
    spoon-fed using these APIs.</p>

   </li>

   <li><p><a href=#unload-a-document title="unload a document">Unload</a> the
   <code>Document</code> object, with the <var title="">recycle</var>
   parameter set to true. If the user <a href=#refused-to-allow-the-document-to-be-unloaded>refused to allow the
   document to be unloaded</a>, then these steps must be
   aborted.</li>

   <li><p>If the document has an <span>active parser</span><!--XXX
   xref-->, then stop that parser, and throw away any pending content
   in the input stream. <span class=XXX>what about if it
   doesn't, because it's either like a text/plain, or Atom, or PDF, or
   XHTML, or image document, or something?</span></li><!-- XXX see
   also innerHTML in HTML -->

   <li><p>Unregister all event listeners registered on the
   <code>Document</code> node and its descendants.</p>

   <li><p>Remove all child nodes of the document, without firing any
   mutation events.</li>

   <li><p>Replace the <code>Document</code>'s singleton objects with
   new instances of those objects. (This includes in particular the
   <code><a href=#window>Window</a></code>, <code><a href=#location>Location</a></code>, <code><a href=#history-1>History</a></code>,
   <code><a href=#applicationcache>ApplicationCache</a></code>, <code><a href=#undomanager>UndoManager</a></code>,
   <code><a href=#navigator>Navigator</a></code>, and <code><a href=#selection-0>Selection</a></code> objects, the
   various <code><a href=#barprop>BarProp</a></code> objects, the two <code><a href=#storage-0>Storage</a></code>
   objects, and the various <code><a href=#htmlcollection-0>HTMLCollection</a></code> objects. It
   also includes all the WebIDL prototypes in the ECMAScript binding,
   including the <code>Document</code> object's prototype.)</li>

   <!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Ciframe%20src%3D%22document%22%3E%3C%2Fiframe%3E%0A%3Cscript%3Eonload%20%3D%20function%20()%20%7B%20f%20%3D%20document.getElementsByTagName('iframe')%5B0%5D%3B%20d%20%3D%20f.contentWindow.document%3B%20%7D%3C%2Fscript%3E%0A%3Cinput%20type%3Dbutton%20onclick%3D%22w(d.documentElement.innerHTML)%22%20value%3D%22dump%22%3E%0A%3Cinput%20type%3Dbutton%20onclick%3D%22d.open()%3B%20d.write('%3Cscript%3Evar%20x%20%3D%20new%20XMLHttpRequest()%3Bx.open(%26quot%3BGET%26quot%3B%2C%20%26quot%3BGET%26quot%3B)%3Bx.onreadystatechange%3Dfunction()%20%7B%20alert(x.readyState)%3B%20%7D%3Bx.send(null)%3B%3C%2Fscript%3E')%3Bd.close()%3B%20setTimeout(function()%20%7B%20d.open()%3B%20d.write('%3Cp%3Etest%3C%2Fp%3E')%3B%20d.close()%20%7D%2C%200)%3B%22%20value%3D%22xhr%22%3E%0A%3Cinput%20type%3Dbutton%20onclick%3D%22d.onclick%20%3D%20function()%20%7B%20w('click')%20%7D%22%20value%3D%22add%20click%20handler%22%3E%0A%3Cinput%20type%3Dbutton%20onclick%3D%22d.open()%3B%20d.write('%3Cp%3Etest%3C%2Fp%3E')%3B%20d.close()%22%20value%3D%22replace%22%3E%0A%3Cinput%20type%3Dbutton%20onclick%3D%22d.open()%3B%20d.write('%3Cp%3E%3Cscript%3Ei%20%3D%200%3B%20setTimeout(%26quot%3Bparent.w(i%2B%2B)%26quot%3B%2C%202000)%3C%2Fscript%3E%3C%2Fp%3E')%3B%20d.close()%22%20value%3D%22replace%20with%20timer%22%3E -->
   <!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A...%3Ciframe%3E%3C%2Fiframe%3E%0D%0A%3Cscript%3E%0D%0Aonload%20%3D%20function%20()%20%7B%0D%0A%20frames%5B0%5D.test%20%3D%201%0D%0A%20w(frames%5B0%5D.test)%3B%0D%0A%20var%20a%20%3D%20frames%5B0%5D.document.location.assign%3B%0D%0A%20w(a)%3B%0D%0A%20w(frames%5B0%5D.document.location.assign%20%3D%3D%3D%20a)%3B%0D%0A%20frames%5B0%5D.document.open()%3B%0D%0A%20frames%5B0%5D.document.write('%3Cscript%3Edocument.write(test)%3C%5C%2Fscript%3E')%3B%0D%0A%20frames%5B0%5D.document.close()%3B%0D%0A%20w(frames%5B0%5D.test)%3B%0D%0A%20w(frames%5B0%5D.document.location.assign%20%3D%3D%3D%20a)%3B%0D%0A%7D%0D%0A%3C%2Fscript%3E -->

   <li><p>Change the <a href="#document's-character-encoding">document's character encoding</a> to
   UTF-16.</li>

   <li><p>Change <a href="#the-document's-address">the document's address</a> to the
   <a href=#first-script>first script</a>'s <a href="#script's-browsing-context" title="script's browsing
   context">browsing context</a>'s <a href=#active-document>active document</a>'s
   <a href="#the-document's-address" title="the document's address">address</a>.</li>

   <li><p>Create a new <a href=#html-parser>HTML parser</a> and associate it with
   the document. This is a <dfn id=script-created-parser>script-created parser</dfn> (meaning
   that it can be closed by the <code title=dom-document-open><a href=#dom-document-open>document.open()</a></code> and <code title=dom-document-close><a href=#dom-document-close>document.close()</a></code> methods, and
   that the tokeniser will wait for an explicit call to <code title=dom-document-close><a href=#dom-document-close>document.close()</a></code> before emitting
   an end-of-file token).  The encoding <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> is
   <i>irrelevant</i>.</li>

   <li>Mark the document as being an <a href=#html-documents title="HTML documents">HTML
   document</a> (it might already be so-marked).</li>

   <li>

    <!-- text/plain handling -->

    <p>If the <var title="">type</var> string contains a U+003B
    SEMICOLON (;) character, remove the first such character and all
    characters from it up to the end of the string.</p>

    <p>Strip all leading and trailing <a href=#space-character title="space
    character">space characters</a> from <var title="">type</var>.</p>

    <p>If <var title="">type</var> is <em>not</em> now an <a href=#ascii-case-insensitive>ASCII
    case-insensitive</a> match for the string
    "<code>text/html</code>", then act as if the tokeniser had emitted
    a start tag token with the tag name "pre", then set the <a href=#html-parser>HTML
    parser</a>'s <a href=#tokenization>tokenization</a> stage's <a href=#content-model-flag>content
    model flag</a> to <i>PLAINTEXT</i>.</p>

    <!--
 http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Ciframe%3E%3C%2Fiframe%3E%3Cscript%3Eonload%20%3D%20function%20()%20%7B%20%0D%0A%20%20var%20d%20%3D%20document.getElementsByTagName('iframe')%5B0%5D.contentDocument%3B%0D%0A%20%20d.open('image%2Fsvg%2Bxml')%3B%0D%0A%20%20d.write(%22%3Cinput%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml'%20value%3D'(x)html'%2F%3E%22)%3B%0D%0A%20%20d.close()%3B%0D%0A%7D%3B%3C%2Fscript%3E
 http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Ciframe%3E%3C%2Fiframe%3E%3Cscript%3Eonload%20%3D%20function%20()%20%7B%20%0D%0A%20%20var%20d%20%3D%20document.getElementsByTagName('iframe')%5B0%5D.contentDocument%3B%0D%0A%20%20d.open('image%2Fgif')%3B%0D%0A%20%20var%20a%20%3D%20%5B%200x47%2C%200x49%2C%200x46%2C%200x38%2C%200x39%2C%200x61%2C%200x01%2C%200x00%2C%200x01%2C%200x00%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%200x80%2C%200xff%2C%200x00%2C%200xc0%2C%200xc0%2C%200xc0%2C%200x00%2C%200x00%2C%200x00%2C%200x21%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%200xf9%2C%200x04%2C%200x01%2C%200x00%2C%200x00%2C%200x00%2C%200x00%2C%200x2c%2C%200x00%2C%200x00%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%200x00%2C%200x00%2C%200x01%2C%200x00%2C%200x01%2C%200x00%2C%200x00%2C%200x02%2C%200x02%2C%200x44%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%200x01%2C%200x00%2C%200x3b%20%5D%3B%0D%0A%20%20var%20s%20%3D%20%22%22%3B%0D%0A%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20a.length%3B%20i%20%2B%3D%201)%0D%0A%20%20%20%20s%20%2B%3D%20String.fromCharCode(a%5Bi%5D)%3B%0D%0A%20%20d.write(s)%3B%0D%0A%20%20d.close()%3B%0D%0A%7D%3B%3C%2Fscript%3E
 http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Ciframe%3E%3C%2Fiframe%3E%3Cscript%3Eonload%20%3D%20function%20()%20{%20%0A%20%20var%20d%20%3D%20document.getElementsByTagName(%27iframe%27)[0].contentDocument%3B%0A%20%20d.open(%27Text%2Fplain%27)%3B%0A%20%20d.write(%27%3Cb%3Etest%27)%3B%0A%20%20d.close()%3B%0A}%3B%3C%2Fscript%3E
 http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Ciframe%3E%3C%2Fiframe%3E%3Cscript%3Eonload%20%3D%20function%20()%20{%20%0A%20%20var%20d%20%3D%20document.getElementsByTagName(%27iframe%27)[0].contentDocument%3B%0A%20%20d.open(%27%20text%2Fplain%27)%3B%0A%20%20d.write(%27%3Cb%3Etest%27)%3B%0A%20%20d.close()%3B%0A}%3B%3C%2Fscript%3E
 http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Ciframe%3E%3C%2Fiframe%3E%3Cscript%3Eonload%20%3D%20function%20()%20{%20%0A%20%20var%20d%20%3D%20document.getElementsByTagName(%27iframe%27)[0].contentDocument%3B%0A%20%20d.open(%27text%2Fplain%3B%27)%3B%0A%20%20d.write(%27%3Cb%3Etest%27)%3B%0A%20%20d.close()%3B%0A}%3B%3C%2Fscript%3E
    -->

   </li>

   <li>

    <p>If <var title="">replace</var> is false, then:

    <ol><li>Remove all the entries in the <a href=#browsing-context>browsing context</a>'s
     <a href=#session-history>session history</a> after the <a href=#current-entry>current entry</a>
     in its <code>Document</code>'s <code><a href=#history-1>History</a></code> object</li>

     <li>Remove any earlier entries that share the same
     <code>Document</code></li>

     <li>Add a new entry just before the last entry that is associated
     with the text that was parsed by the previous parser associated
     with the <code>Document</code> object, as well as the state of
     the document at the start of these steps. (This allows the user
     to step backwards in the session history to see the page before
     it was blown away by the <code title=dom-document-open><a href=#dom-document-open>document.open()</a></code> call.)</li>

    </ol></li>

   <li><p>Finally, set the <a href=#insertion-point>insertion point</a> to point at
   just before the end of the <a href=#the-input-stream>input stream</a> (which at this
   point will be empty).</li>

   <li><p>Return the <code>Document</code> on which the method was
   invoked.</li>

  </ol><p>When called with three or more arguments, the <code title=dom-document-open><a href=#dom-document-open>open()</a></code> method on the
  <code><a href=#htmldocument>HTMLDocument</a></code> object must call the <code title=dom-open><a href=#dom-open>open()</a></code> method on the <code><a href=#window>Window</a></code>
  object of the <code><a href=#htmldocument>HTMLDocument</a></code> object, with the same
  arguments as the original call to the <code title=dom-document-open><a href=#dom-document-open>open()</a></code> method, and return whatever
  that method returned. If the <code><a href=#htmldocument>HTMLDocument</a></code> object has no
  <code><a href=#window>Window</a></code> object, then the method must raise an
  <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception.</p>

  <p>The <dfn id=dom-document-close title=dom-document-close><code>close()</code></dfn>
  method must do nothing if there is no <a href=#script-created-parser>script-created
  parser</a> associated with the document. If there is such a
  parser, then, when the method is called, the user agent must insert
  an <a href=#explicit-eof-character>explicit "EOF" character</a> at the end of the parser's
  <a href=#the-input-stream>input stream</a>.</p>




  <h4 id=document.write()><span class=secno>3.7.2 </span><code title=dom-document-write><a href=#dom-document-write>document.write()</a></code></h4>

  <p>The <dfn id=dom-document-write title=dom-document-write><code>document.write(...)</code></dfn>
  method must act as follows:</p>

  <ol><li>

    <p>If the method was invoked on an <a href=#xml-documents title="XML documents">XML
    document</a>, throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code>
    exception and abort these steps.</p>

    <!--
    Where would document.write() insert?
    Consider: data:text/xml,<script xmlns="http://www.w3.org/1999/xhtml"><![CDATA[ document.write('<foo>Test</foo>'); ]]></script>
    -->

   </li>

   <li>

    <p>If the <a href=#insertion-point>insertion point</a> is undefined, the <code title=dom-document-open><a href=#dom-document-open>open()</a></code> method must be called
    (with no arguments) on the <code title=Document>document</code>
    object. If the user <a href=#refused-to-allow-the-document-to-be-unloaded>refused to allow the document to be
    unloaded</a>, then these steps must be aborted. Otherwise, the
    <a href=#insertion-point>insertion point</a> will point at just before the end of
    the (empty) <a href=#the-input-stream>input stream</a>.</p>

   </li>

   <li>

    <p>The string consisting of the concatenation of all the arguments
    to the method must be inserted into the <a href=#the-input-stream>input
    stream</a><!-- XXX xref --> just before the <a href=#insertion-point>insertion
    point</a>.</p>

   </li>

   <li>

    <p>If there is a <a href=#pending-external-script>pending external script</a>, then the
    method must now return without further processing of the
    <a href=#the-input-stream>input stream</a>.</p>

   </li>

   <li>

    <p>Otherwise, the tokeniser must process the characters that were
    inserted, one at a time, processing resulting tokens as they are
    emitted, and stopping when the tokeniser reaches the insertion
    point or when the processing of the tokeniser is aborted by the
    tree construction stage (this can happen if a <code><a href=#script>script</a></code>
    end tag token is emitted by the tokeniser).

    <p class=note>If the <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> method was
    called from script executing inline (i.e. executing because the
    parser parsed a set of <code><a href=#script>script</a></code> tags), then this is a
    <a href=#nestedParsing>reentrant invocation of the
    parser</a>.</p>

   </li>

   <li>

    <p>Finally, the method must return.</p>

   </li>

  </ol><h4 id=document.writeln()><span class=secno>3.7.3 </span><code title=dom-document-writeln><a href=#dom-document-writeln>document.writeln()</a></code></h4>

  <p>The <dfn id=dom-document-writeln title=dom-document-writeln><code>document.writeln(...)</code></dfn>
  method, when invoked, must act as if the <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> method had been
  invoked with the same argument(s), plus an extra argument consisting
  of a string containing a single line feed character (U+000A).</p>




  <h4 id=innerhtml><span class=secno>3.7.4 </span><code title=dom-innerHTML><a href=#dom-innerhtml>innerHTML</a></code></h4>

  <p>The <dfn id=dom-innerhtml title=dom-innerHTML><code>innerHTML</code></dfn> DOM
  attribute represents the markup of the node's contents.</p>

  <p>On getting, if the node's document is an <a href=#html-documents title="HTML
  documents">HTML document</a>, then the attribute must return the
  result of running the <a href=#html-fragment-serialization-algorithm>HTML fragment serialization
  algorithm</a> on the node; otherwise, the node's document is an
  <a href=#xml-documents title="XML documents">XML document</a>, and the attribute
  must return the result of running the <a href=#xml-fragment-serialization-algorithm>XML fragment
  serialization algorithm</a> on the node instead (this might raise
  an exception instead of returning a string).</p>

  <p>On setting, the following steps must be run:</p>

  <ol><li>

    <p>If the node's document is an <a href=#html-documents title="HTML documents">HTML
    document</a>: Invoke the <a href=#html-fragment-parsing-algorithm>HTML fragment parsing
    algorithm</a>.</p>

    <p>If the node's document is an <a href=#xml-documents title="XML documents">XML
    document</a>: Invoke the <a href=#xml-fragment-parsing-algorithm>XML fragment parsing
    algorithm</a>.</p>

    <p>In either case, the algorithm must be invoked with the string
    being assigned into the <code title=dom-innerHTML><a href=#dom-innerhtml>innerHTML</a></code> attribute as the <var title="">input</var>. If the node is an <code>Element</code>
    node, then, in addition, that element must be passed as the <var title="">context</var> element.</p>

    <p>If this raises an exception, then abort these steps.</p>

    <p>Otherwise, let <var title="">new children</var> be the nodes
    returned.</p>

   </li>

   <li>

    <p>If the attribute is being set on a <code>Document</code> node,
    and that document has an active <a href=#html-parser>HTML parser</a> or
    <a href=#xml-parser>XML parser</a>, then stop that parser.</p>

    <p class=XXX>what about if it doesn't, because it's either
    like a text/plain, or Atom, or PDF, or XHTML, or image document,
    or something?</p><!-- XXX see also document.open() -->

   </li>

   <li>

    <p>Remove the child nodes of the node whose <code title=dom-innerHTML><a href=#dom-innerhtml>innerHTML</a></code> attribute is being set.</p>

   </li>

   <li>

    <p>If the attribute is being set on a <code>Document</code>
    node, let <var title="">target document</var> be that
    <code>Document</code> node. Otherwise, the attribute is being
    set on an <code>Element</code> node; let <var title="">target
    document</var> be the <code title="">ownerDocument</code> of
    that <code>Element</code>.</p>

   </li>

   <li>

    <p>Set the <code title="">ownerDocument</code> of all the nodes in
    <var title="">new children</var> to the <var title="">target
    document</var>.</p>

   </li>

   <li>

    <p>Append all the <var title="">new children</var> nodes to the
    node whose <code title=dom-innerHTML><a href=#dom-innerhtml>innerHTML</a></code> attribute
    is being set, preserving their order, without firing any mutation
    events.</p>

   </li>

  </ol><h4 id=outerhtml><span class=secno>3.7.5 </span><code title=dom-outerHTML><a href=#dom-outerhtml>outerHTML</a></code></h4>

  <p>The <dfn id=dom-outerhtml title=dom-outerHTML><code>outerHTML</code></dfn> DOM
  attribute represents the markup of the element and its contents.</p>

  <p>On getting, if the node's document is an <a href=#html-documents title="HTML
  documents">HTML document</a>, then the attribute must return the
  result of running the <a href=#html-fragment-serialization-algorithm>HTML fragment serialization
  algorithm</a> on a fictional node whose only child is the node on
  which the attribute was invoked; otherwise, the node's document is
  an <a href=#xml-documents title="XML documents">XML document</a>, and the
  attribute must return the result of running the <a href=#xml-fragment-serialization-algorithm>XML fragment
  serialization algorithm</a> on that fictional node instead (this
  might raise an exception instead of returning a string).</p>

  <p>On setting, the following steps must be run:</p>

  <ol><li>

    <p>Let <var title="">target</var> be the element whose <code title=dom-outerHTML><a href=#dom-outerhtml>outerHTML</a></code> attribute is being
    set.</p>

   </li>

   <li>

    <p>If <var title="">target</var> has no parent node, then abort
    these steps. There would be no way to obtain a reference to the
    nodes created even if the remaining steps were run.</p>

   </li>

   <li>

    <p>If <var title="">target</var>'s parent node is a
    <code>Document</code> object, throw a
    <code><a href=#no_modification_allowed_err>NO_MODIFICATION_ALLOWED_ERR</a></code> exception and abort these
    steps.</p>

   </li>

   <li>

    <p>Let <var title="">parent</var> be <var title="">target</var>'s
    parent node, unless that is a <code>DocumentFragment</code> node,
    in which case let <var title="">parent</var> be an arbitrary
    <code><a href=#the-body-element>body</a></code> element.</p>

   </li>

   <li>

    <p>If <var title="">target</var>'s document is an <a href=#html-documents title="HTML documents">HTML document</a>: Invoke the <a href=#html-fragment-parsing-algorithm>HTML
    fragment parsing algorithm</a>.</p>

    <p>If <var title="">target</var>'s document is an <a href=#xml-documents title="XML
    documents">XML document</a>: Invoke the <a href=#xml-fragment-parsing-algorithm>XML fragment
    parsing algorithm</a>.</p>

    <p>In either case, the algorithm must be invoked with the string
    being assigned into the <code title=dom-outerHTML><a href=#dom-outerhtml>outerHTML</a></code> attribute as the <var title="">input</var>, and <var title="">parent</var> as the <var title="">context</var> element.</p>

    <p>If this raises an exception, then abort these steps.</p>

    <p>Otherwise, let <var title="">new children</var> be <var title="">target</var>s returned.</p>

   </li>

   <li>

    <p>Set the <code title="">ownerDocument</code> of all the nodes in
    <var title="">new children</var> to <var title="">target</var>'s
    document.</p>

   </li>

   <li>

    <p>Remove <var title="">target</var> from its parent node and
    insert in its place all the <var title="">new children</var>
    nodes, preserving their order, without firing any mutation
    events.</p>

   </li>

  </ol><h4 id=insertadjacenthtml()><span class=secno>3.7.6 </span><code title=dom-insertAdjacentHTML><a href=#dom-insertadjacenthtml>insertAdjacentHTML()</a></code></h4>

  <p>The <dfn id=dom-insertadjacenthtml title=dom-insertAdjacentHTML><code>insertAdjacentHTML(<var title="">position</var>, <var title="">text</var>)</code></dfn>
  method, when invoked, must run the following algorithm:</p>

  <ol><li>

    <p>Let <var title="">position</var> and <var title="">text</var>
    be the method's first and second arguments, respectively.</p>

   </li>

   <li>

    <p>Let <var title="">target</var> be the element on which the
    method was invoked.</p>

   </li>

   <li>

    <p>Use the first matching item from this list:</p>

    <dl><dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "beforebegin"</dt>
     <dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "afterend"</dt>

     <dd>

      <p>If <var title="">target</var> has no parent node, then abort
      these steps.</p>

      <p>If <var title="">target</var>'s parent node is a
      <code>Document</code> object, then throw a
      <code><a href=#no_modification_allowed_err>NO_MODIFICATION_ALLOWED_ERR</a></code> exception and abort
      these steps.

      <p>Otherwise, let <var title="">context</var> be the parent node
      of <var title="">target</var>.</p>

     </dd>

     <dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "afterbegin"</dt>
     <dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "beforeend"</dt>

     <dd>

      <p>Let <var title="">context</var> be the same as <var title="">target</var>.</p>

     </dd>

     <dt>Otherwise</dt>

     <dd>

      <p>Throw a <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception.</p>

     </dd>

    </dl></li>

   <li>

    <p>If <var title="">target</var>'s document is an <a href=#html-documents title="HTML documents">HTML document</a>: Invoke the <a href=#html-fragment-parsing-algorithm>HTML
    fragment parsing algorithm</a>.</p>

    <p>If <var title="">target</var>'s document is an <a href=#xml-documents title="XML
    documents">XML document</a>: Invoke the <a href=#xml-fragment-parsing-algorithm>XML fragment
    parsing algorithm</a>.</p>

    <p>In either case, the algorithm must be invoked with <var title="">text</var> as the <var title="">input</var>, and the
    element selected in by the previous step as the <var title="">context</var> element.</p>

    <p>If this raises an exception, then abort these steps.</p>

    <p>Otherwise, let <var title="">new children</var> be <var title="">target</var>s returned.</p>

   </li>

   <li>

    <p>Set the <code title="">ownerDocument</code> of all the nodes in
    <var title="">new children</var> to <var title="">target</var>'s
    document.</p>

   </li>

   <li>

    <p>Use the first matching item from this list:</p>

    <dl><dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "beforebegin"</dt>

     <dd>

      <p>Insert all the <var title="">new children</var> nodes
      immediately before <var title="">target</var>, preserving their
      order.</p>

     </dd>

     <dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "afterbegin"</dt>

     <dd>

      <p>Insert all the <var title="">new children</var> nodes before
      the first child of <var title="">target</var>, if there is one,
      preserving their order. If there is no such child, append them
      all to <var title="">target</var>, preserving their order.</p>

     </dd>

     <dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "beforeend"</dt>

     <dd>

      <p>Append all the <var title="">new children</var> nodes to <var title="">target</var>, preserving their order.</p>

     </dd>

     <dt>If <var title="">position</var> is an <a href=#ascii-case-insensitive>ASCII
     case-insensitive</a> match for the string "afterend"</dt>

     <dd>

      <p>Insert all the <var title="">new children</var> nodes
      immediately after <var title="">target</var>, preserving their
      order.</p>

     </dd>

    </dl><p>The above mutations must be performed without firing any
    mutation events.</p>

   </li>

  </ol><h2 id=semantics><span class=secno>4 </span>The elements of HTML</h2>

  <h3 id=the-root-element><span class=secno>4.1 </span>The root element</h3>

  <h4 id=the-html-element><span class=secno>4.1.1 </span>The <dfn><code>html</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As the root element of a document.</dd>
   <dd>Wherever a subdocument fragment is allowed in a compound document.</dd>
   <dt>Content model:</dt>
   <dd>A <code><a href=#the-head-element>head</a></code> element followed by a <code><a href=#the-body-element>body</a></code> element.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
<!--
   <dd>
    <pre class="idl">interface <dfn>HTMLHtmlElement</dfn> : <span>HTMLElement</span> {
};</pre>
   </dd>
-->
  </dl><p>The <code><a href=#the-html-element>html</a></code> element <a href=#represents>represents</a> the root of
  an HTML document.</p>

  <p>The <dfn id=attr-html-manifest title=attr-html-manifest><code>manifest</code></dfn>
  attribute gives the address of the document's <a href=#application-cache>application
  cache</a> <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a>, if there is
  one. If the attribute is present, the attribute's value must be a
  <a href=#valid-url>valid URL</a>.</p>

  <p>The <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attribute
  only <a href=#concept-appcache-init title=concept-appcache-init>has an effect</a> during
  the early stages of document load. Changing the attribute
  dynamically thus has no effect (and thus, no DOM API is provided for
  this attribute).</p>

  <p class=note>For the purposes of <a href=#concept-appcache-init title=concept-appcache-init>application cache selection</a>,
  later <code><a href=#the-base-element>base</a></code> elements cannot affect the <a href=#resolve-a-url title="resolve a url">resolving of relative URLs</a> in <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attributes, as the
  attributes are processed before those elements are seen.</p>


  <h3 id=document-metadata><span class=secno>4.2 </span>Document metadata</h3>

  <h4 id=the-head-element><span class=secno>4.2.1 </span>The <dfn><code>head</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As the first element in an <code><a href=#the-html-element>html</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>One or more elements of <a href=#metadata-content-0>metadata content</a>, of which exactly one is a <code><a href=#the-title-element>title</a></code> element.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-head-element>head</a></code> element <a href=#represents>represents</a> a
  collection of metadata for the <code>Document</code>.</p>


  <h4 id=the-title-element><span class=secno>4.2.2 </span>The <dfn><code>title</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>In a <code><a href=#the-head-element>head</a></code> element containing no other <code><a href=#the-title-element>title</a></code> elements.</dd>
   <dt>Content model:</dt>
   <dd>Text.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-title-element>title</a></code> element <a href=#represents>represents</a> the
  document's title or name. Authors should use titles that identify
  their documents even when they are used out of context, for example
  in a user's history or bookmarks, or in search results. The
  document's title is often different from its first header, since the
  first header does not have to stand alone when taken out of
  context.</p>

  <p>There must be no more than one <code><a href=#the-title-element>title</a></code> element per
  document.</p>

  <p>The <code><a href=#the-title-element>title</a></code> element must not contain any
  elements.</p>

  <div class=example>

   <p>Here are some examples of appropriate titles, contrasted with
   the top-level headers that might be used on those same pages.</p>

   <pre>  &lt;title&gt;Introduction to The Mating Rituals of Bees&lt;/title&gt;
    ...
  &lt;h1&gt;Introduction&lt;/h1&gt;
  &lt;p&gt;This companion guide to the highly successful
  &lt;cite&gt;Introduction to Medieval Bee-Keeping&lt;/cite&gt; book is...
</pre>

   <p>The next page might be a part of the same site. Note how the
   title describes the subject matter unambiguously, while the first
   header assumes the reader knowns what the context is and therefore
   won't wonder if the dances are Salsa or Waltz:</p>

   <pre>  &lt;title&gt;Dances used during bee mating rituals&lt;/title&gt;
    ...
  &lt;h1&gt;The Dances&lt;/h1&gt;</pre>

  </div>

  <p>The string to use as the document's title is given by the <code title=dom-document-title><a href=#document.title>document.title</a></code> DOM attribute. User
  agents should use the document's title when referring to the
  document in their user interface.</p>


  <h4 id=the-base-element><span class=secno>4.2.3 </span>The <dfn><code>base</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>In a <code><a href=#the-head-element>head</a></code> element containing no other <code><a href=#the-base-element>base</a></code> elements.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-base-href><a href=#attr-base-href>href</a></code></dd>
   <dd><code title=attr-base-target><a href=#attr-base-target>target</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlbaseelement>HTMLBaseElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-base-href title=dom-base-href>href</a>;
           attribute DOMString <a href=#dom-base-target title=dom-base-target>target</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-base-element>base</a></code> element allows authors to specify the
  <a href=#document-base-url>document base URL</a> for the purposes of <a href=#resolve-a-url title="resolve a url">resolving relative URLs</a>, and the name
  of the default <a href=#browsing-context>browsing context</a> for the purposes of
  <a href=#following-hyperlinks>following hyperlinks</a>. The element does not <a href=#represents title=represents>represent</a> any content beyond this
  information.</p>

  <p>There must be no more than one <code><a href=#the-base-element>base</a></code> element per
  document.</p>

  <p>A <code><a href=#the-base-element>base</a></code> element must have either an <code title=attr-base-href><a href=#attr-base-href>href</a></code> attribute, a <code title=attr-base-target><a href=#attr-base-target>target</a></code> attribute, or both.</p>

  <p>The <dfn id=attr-base-href title=attr-base-href><code>href</code></dfn> content
  attribute, if specified, must contain a <a href=#valid-url>valid URL</a>.</p>

  <p>A <code><a href=#the-base-element>base</a></code> element, if it has an <code title=attr-base-href><a href=#attr-base-href>href</a></code> attribute, must come before any
  other elements in the tree that have attributes defined as taking
  <a href=#url title=URL>URLs</a>, except the <code><a href=#the-html-element>html</a></code> element
  (its <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attribute
  isn't affected by <code><a href=#the-base-element>base</a></code> elements).</p>

  <p class=note>If there are multiple <code><a href=#the-base-element>base</a></code> elements
  with <code title=attr-base-href><a href=#attr-base-href>href</a></code> attributes, all but the
  first are ignored.</p>

  <p>The <dfn id=attr-base-target title=attr-base-target><code>target</code></dfn>
  attribute, if specified, must contain a <a href=#valid-browsing-context-name-or-keyword>valid browsing context
  name or keyword</a>. User agents use this name when
  <a href=#following-hyperlinks>following hyperlinks</a>.</p>

  <p>A <code><a href=#the-base-element>base</a></code> element, if it has a <code title=attr-base-target><a href=#attr-base-target>target</a></code> attribute, must come before
  any elements in the tree that represent <a href=#hyperlink title=hyperlink>hyperlinks</a>.</p>

  <p class=note>If there are multiple <code><a href=#the-base-element>base</a></code> elements
  with <code title=attr-base-target><a href=#attr-base-target>target</a></code> attributes, all but
  the first are ignored.</p>

  <p>The <dfn id=dom-base-href title=dom-base-href><code>href</code></dfn> and <dfn id=dom-base-target title=dom-base-target><code>target</code></dfn> DOM attributes
  must <a href=#reflect>reflect</a> the respective content attributes of the
  same name.</p>


  <h4 id=the-link-element><span class=secno>4.2.4 </span>The <dfn><code>link</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#metadata-content-0>metadata content</a> is expected.</dd>
   <dd>In a <code><a href=#the-noscript-element>noscript</a></code> element that is a child of a <code><a href=#the-head-element>head</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-link-href><a href=#attr-link-href>href</a></code></dd>
   <dd><code title=attr-link-rel><a href=#attr-link-rel>rel</a></code></dd>
   <dd><code title=attr-link-media><a href=#attr-link-media>media</a></code></dd>
   <dd><code title=attr-link-hreflang><a href=#attr-link-hreflang>hreflang</a></code></dd>
   <dd><code title=attr-link-type><a href=#attr-link-type>type</a></code></dd>
   <dd><code title=attr-link-sizes><a href=#attr-link-sizes>sizes</a></code></dd>
   <dd>Also, the <code title=attr-link-title><a href=#attr-link-title>title</a></code> attribute has special semantics on this element.</dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmllinkelement>HTMLLinkElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-link-disabled title=dom-link-disabled>disabled</a>;
           attribute DOMString <a href=#dom-link-href title=dom-link-href>href</a>;
           attribute DOMString <a href=#dom-link-rel title=dom-link-rel>rel</a>;
  readonly attribute DOMTokenList <a href=#dom-link-rellist title=dom-link-relList>relList</a>;
           attribute DOMString <a href=#dom-link-media title=dom-link-media>media</a>;
           attribute DOMString <a href=#dom-link-hreflang title=dom-link-hreflang>hreflang</a>;
           attribute DOMString <a href=#dom-link-type title=dom-link-type>type</a>;
           attribute DOMString <a href=#dom-link-sizes title=dom-link-sizes>sizes</a>;
};</pre>
    <p>The <code>LinkStyle</code> interface must also be implemented
    by this element, the <a href=#styling>styling processing model</a> defines
    how. <a href=#refsCSSOM>[CSSOM]</a></p>
   </dd>
  </dl><p>The <code><a href=#the-link-element>link</a></code> element allows authors to link their
  document to other resources.</p>

  <p>The destination of the link(s) is given by the <dfn id=attr-link-href title=attr-link-href><code>href</code></dfn> attribute, which must
  be present and must contain a <a href=#valid-url>valid URL</a>. If the <code title=attr-link-href><a href=#attr-link-href>href</a></code> attribute is absent, then the
  element does not define a link.</p>

  <p>The types of link indicated (the relationships) are given by the
  value of the <dfn id=attr-link-rel title=attr-link-rel><code>rel</code></dfn>
  attribute, which must be present, and must have a value that is a
  <a href=#set-of-space-separated-tokens>set of space-separated tokens</a>. The <a href=#linkTypes>allowed values and their meanings</a> are defined
  in a later section. If the <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code>
  attribute is absent, or if the values used are not allowed according
  to the definitions in this specification, then the element does not
  define a link.</p>

  <p>Two categories of links can be created using the
  <code><a href=#the-link-element>link</a></code> element. <dfn id=external-resource-link title="external resource link">Links
  to external resources</dfn> are links to resources that are to be
  used to augment the current document, and <dfn id=hyperlink-link title="hyperlink
  link">hyperlink links</dfn> are <a href=#hyperlink title=hyperlink>links to
  other documents</a>. The <a href=#linkTypes>link types
  section</a> defines whether a particular link type is an external
  resource or a hyperlink. One element can create multiple links (of
  which some might be external resource links and some might be
  hyperlinks); exactly which and how many links are created depends on
  the keywords given in the <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code>
  attribute. User agents must process the links on a per-link basis,
  not a per-element basis.</p>

  <p class=note>Each link is handled separately. For instance, if
  there are two <code><a href=#the-link-element>link</a></code> elements with <code title="">rel="stylesheet"</code>, they each count as a separate
  external resource, and each is affected by its own attributes
  independently.</p>

  <p>The exact behavior for links to external resources depends on the
  exact relationship, as defined for the relevant link type. Some of
  the attributes control whether or not the external resource is to be
  applied (as defined below). For external resources that are
  represented in the DOM (for example, style sheets), the DOM
  representation must be made available even if the resource is not
  applied. To obtain the resource, the user agent must <a href=#resolve-a-url title="resolve a url">resolve</a> the <a href=#url>URL</a> given by
  the <code title=attr-link-href><a href=#attr-link-href>href</a></code> attribute, relative to
  the element, and then <a href=#fetch>fetch</a> the resulting
  <a href=#absolute-url>absolute URL</a>. User agents may opt to only
  <a href=#fetch>fetch</a> such resources when they are needed, instead of
  pro-actively <a href=#fetch title=fetch>fetching</a> all the external
  resources that are not applied.</p>

  <p>The semantics of the protocol used (e.g. HTTP) must be followed
  when fetching external resources. (For example, redirects must be
  followed and 404 responses must cause the external resource to not
  be applied.)</p>

  <p>Interactive user agents should provide users with a means to
  <a href=#following-hyperlinks title="following hyperlinks">follow the hyperlinks</a>
  created using the <code><a href=#the-link-element>link</a></code> element, somewhere within their
  user interface. The exact interface is not defined by this
  specification, but it should include the following information
  (obtained from the element's attributes, again as defined below), in
  some form or another (possibly simplified), for each hyperlink
  created with each <code><a href=#the-link-element>link</a></code> element in the document:</p>

  <ul><!-- the order here is the order that makes most sense for a UI --><li>The relationship between this document and the resource (given
   by the <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code> attribute)</li>

   <li>The title of the resource (given by the <code title=attr-link-title><a href=#attr-link-title>title</a></code> attribute).</li>

   <li>The address of the resource (given by the <code title=attr-link-href><a href=#attr-link-href>href</a></code> attribute).</li>

   <li>The language of the resource (given by the <code title=attr-link-hreflang><a href=#attr-link-hreflang>hreflang</a></code> attribute).</li>

   <li>The optimum media for the resource (given by the <code title=attr-link-media><a href=#attr-link-media>media</a></code> attribute).</li>

  </ul><p>User agents may also include other information, such as the type
  of the resource (as given by the <code title=attr-link-type><a href=#attr-link-type>type</a></code> attribute).</p>

  <p class=note>Hyperlinks created with the <code><a href=#the-link-element>link</a></code>
  element and its <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code> attribute
  apply to the whole page. This contrasts with the <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code> attribute of <code><a href=#the-a-element>a</a></code>
  and <code><a href=#the-area-element>area</a></code> elements, which indicates the type of a link
  whose context is given by the link's location within the
  document.</p>

  <p>The <dfn id=attr-link-media title=attr-link-media><code>media</code></dfn>
  attribute says which media the resource applies to. The value must
  be a valid <a href=#mq>media query</a>. <a href=#refsMQ>[MQ]</a></p>

  <p>If the link is a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>
  then the <code title=attr-link-media><a href=#attr-link-media>media</a></code> attribute is
  purely advisory, and describes for which media the document in
  question was designed.</p>

  <p>However, if the link is an <a href=#external-resource-link>external resource link</a>,
  then the <code title=attr-link-media><a href=#attr-link-media>media</a></code> attribute is
  prescriptive. The user agent must apply the external resource to
  <a href=#view title=view>views</a> while their state match the listed
  media and the other relevant conditions apply, and must not apply
  them otherwise.</p><!-- note similar text in <style> section -->

  <p class=note>The external resource might have further
  restrictions defined within that limit its applicability. For
  example, a CSS style sheet might have some <code title="">@media</code> blocks. This specification does not override
  such further restrictions or requirements.</p><!-- note similar text
  in <style> section -->

  <p id=default-media>The default, if the <code title=attr-link-media><a href=#attr-link-media>media</a></code> attribute is omitted, is
  <code>all</code>, meaning that by default links apply to all
  media.</p>

  <p>The <dfn id=attr-link-hreflang title=attr-link-hreflang><code>hreflang</code></dfn>
  attribute on the <code><a href=#the-link-element>link</a></code> element has the same semantics as
  the <a href=#attr-hyperlink-hreflang title=attr-hyperlink-hreflang><code>hreflang</code>
  attribute on hyperlink elements</a>.</p>

  <p>The <dfn id=attr-link-type title=attr-link-type><code>type</code></dfn> attribute
  gives the MIME type of the linked resource. It is purely advisory.
  The value must be a valid MIME type, optionally with parameters. <a href=#refsRFC2046>[RFC2046]</a></p>

  <p>For <a href=#external-resource-link title="external resource link">external resource
  links</a>, the <code title=attr-link-type><a href=#attr-link-type>type</a></code> attribute
  is used as a hint to user agents so that they can avoid fetching
  resources they do not support. If the attribute is present, then the
  user agent must assume that the resource is of the given type. If
  the attribute is omitted, but the external resource link type has a
  default type defined, then the user agent must assume that the
  resource is of that type. If the UA does not support the given MIME
  type for the given link relationship, then the UA should not fetch
  the resource; if the UA does support the given MIME type for the
  given link relationship, then the UA should <a href=#fetch>fetch</a> the
  resource. If the attribute is omitted, and the external resource
  link type does not have a default type defined, but the user agent
  would fetch the resource if the type was known and supported, then
  the user agent should <a href=#fetch>fetch</a> the resource under the
  assumption that it will be supported.</p>

  <p>User agents must not consider the <code title=attr-link-type><a href=#attr-link-type>type</a></code> attribute authoritative &mdash;
  upon fetching the resource, user agents must not use the <code title=attr-link-type><a href=#attr-link-type>type</a></code> attribute to determine its actual
  type. Only the actual type (as defined in the next paragraph) is
  used to determine whether to <em>apply</em> the resource, not the
  aforementioned assumed type.</p>

  <p id=concept-link-type-sniffing>If the resource is expected to be
  an image, user agents may apply the <a href=#content-type-sniffing:-image title="Content-Type
  sniffing: image">image sniffing rules</a>, with the <var title="">official type</var> being the type determined from the
  resource's <a href=#content-type-0 title=Content-Type>Content-Type metadata</a>,
  and use the resulting sniffed type of the resource as if it was the
  actual type. Otherwise, if the resource is not expected to be an
  image, or if the user agent opts not to apply those rules, then the
  user agent must use the resource's <a href=#content-type-0 title=Content-Type>Content-Type metadata</a> to determine the
  type of the resource. If there is no type metadata, but the external
  resource link type has a default type defined, then the user agent
  must assume that the resource is of that type.</p>

  <p>Once the user agent has established the type of the resource, the
  user agent must apply the resource if it is of a supported type and
  the other relevant conditions apply, and must ignore the resource
  otherwise.</p>

  <div class=example>

   <p>If a document contains style sheet links labeled as follows:</p>

   <pre>&lt;link rel="stylesheet" href="A" type="text/plain"&gt;
&lt;link rel="stylesheet" href="B" type="text/css"&gt;
&lt;link rel="stylesheet" href="C"&gt;</pre>

   <p>...then a compliant UA that supported only CSS style sheets
   would fetch the B and C files, and skip the A file (since
   <code>text/plain</code> is not the MIME type for CSS style
   sheets).</p>

   <p>For files B and C, it would then check the actual types returned
   by the server. For those that are sent as <code>text/css</code>, it
   would apply the styles, but for those labeled as
   <code>text/plain</code>, or any other type, it would not.</p>

   <p>If one the two files was returned without a
   <a href=#content-type-0>Content-Type</a> metadata, or with a syntactically
   incorrect type like <code title="">Content-Type:&nbsp;"null"</code>, then the default type
   for <code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code> links would kick
   in. Since that default type is <code title="">text/css</code>, the
   style sheet <em>would</em> nonetheless be applied.</p>

  </div>

  <p>The <dfn id=attr-link-title title=attr-link-title><code>title</code></dfn>
  attribute gives the title of the link. With one exception, it is
  purely advisory. The value is text. The exception is for style sheet
  links, where the <code title=attr-link-title><a href=#attr-link-title>title</a></code>
  attribute defines <a href=#alternative-style-sheet-sets>alternative style sheet sets</a>.</p>

  <p class=note>The <code title=attr-link-title><a href=#attr-link-title>title</a></code>
  attribute on <code><a href=#the-link-element>link</a></code> elements differs from the global
  <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute of most other
  elements in that a link without a title does not inherit the title
  of the parent element: it merely has no title.</p>

  <p>The <code title=attr-link-sizes><a href=#attr-link-sizes>sizes</a></code> attribute is used
  with the <code title=rel-icon><a href=#rel-icon>icon</a></code> link type. The attribute
  must not be specified on <code><a href=#the-link-element>link</a></code> elements that do not have
  a <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code> attribute that specifies
  the <code title=rel-icon><a href=#rel-icon>icon</a></code> keyword.</p>

  <p>Some versions of HTTP defined a <code title="">Link:</code>
  header, to be processed like a series of <code><a href=#the-link-element>link</a></code> elements.
  If supported, for the purposes of ordering links defined by HTTP
  headers must be assumed to come before any links in the document, in
  the order that they were given in the HTTP entity header.  (URIs in
  these headers are to be processed and resolved according to the
  rules given in HTTP; the rules of <em>this</em> specification don't
  apply.) <a href=#refsRFC2616>[RFC2616]</a> <a href=#refsRFC2068>[RFC2068]</a></p>

  <p>The DOM attributes <dfn id=dom-link-href title=dom-link-href><code>href</code></dfn>, <dfn id=dom-link-rel title=dom-link-rel><code>rel</code></dfn>, <dfn id=dom-link-media title=dom-link-media><code>media</code></dfn>, <dfn id=dom-link-hreflang title=dom-link-hreflang><code>hreflang</code></dfn>, and <dfn id=dom-link-type title=dom-link-type><code>type</code></dfn>, and <dfn id=dom-link-sizes title=dom-link-sizes><code>sizes</code></dfn> each must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>

  <p>The DOM attribute <dfn id=dom-link-rellist title=dom-link-rellist><code>relList</code></dfn> must
  <a href=#reflect>reflect</a> the <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code>
  content attribute.</p>

  <p>The DOM attribute <dfn id=dom-link-disabled title=dom-link-disabled><code>disabled</code></dfn> only applies
  to style sheet links. When the <code><a href=#the-link-element>link</a></code> element defines a
  style sheet link, then the <code title=dom-link-disabled><a href=#dom-link-disabled>disabled</a></code> attribute behaves as
  defined <a href=#dom-linkstyle-disabled title=dom-linkstyle-disabled>for the alternative
  style sheets DOM</a>. For all other <code><a href=#the-link-element>link</a></code> elements it
  always return false and does nothing on setting.</p> <!-- that is
  normatively required in the definition of dom-linkstyle-disabled -->



  <h4 id=meta><span class=secno>4.2.5 </span>The <dfn><code>meta</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>If the <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute is present, or if the element is in the <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration state</a>: in a <code><a href=#the-head-element>head</a></code> element.</dd>
   <dd>If the <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute is present, and the element is not in the <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration state</a>: in a <code><a href=#the-head-element>head</a></code> element.</dd>
   <dd>If the <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute is present, and the element is not in the <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration state</a>: in a <code><a href=#the-noscript-element>noscript</a></code> element that is a child of a <code><a href=#the-head-element>head</a></code> element.</dd>
   <dd>If the <code title=attr-meta-name><a href=#attr-meta-name>name</a></code> attribute is present: where <a href=#metadata-content-0>metadata content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-meta-name><a href=#attr-meta-name>name</a></code></dd>
   <dd><code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code></dd>
   <dd><code title=attr-meta-content><a href=#attr-meta-content>content</a></code></dd>
   <dd><code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> (<a href=#html-documents title="HTML documents">HTML</a> only)</dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlmetaelement>HTMLMetaElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-meta-content title=dom-meta-content>content</a>;
           attribute DOMString <a href=#dom-meta-name title=dom-meta-name>name</a>;
           attribute DOMString <a href=#dom-meta-httpequiv title=dom-meta-httpEquiv>httpEquiv</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#meta>meta</a></code> element <a href=#represents>represents</a> various
  kinds of metadata that cannot be expressed using the
  <code><a href=#the-title-element>title</a></code>, <code><a href=#the-base-element>base</a></code>, <code><a href=#the-link-element>link</a></code>,
  <code><a href=#the-style-element>style</a></code>, and <code><a href=#script>script</a></code> elements.</p>

  <p>The <code><a href=#meta>meta</a></code> element can represent document-level
  metadata with the <code title=attr-meta-name><a href=#attr-meta-name>name</a></code>
  attribute, pragma directives with the <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute, and the
  file's <a href=#character-encoding-declaration>character encoding declaration</a> when an HTML
  document is serialized to string form (e.g. for transmission over
  the network or for disk storage) with the <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute.</p>

  <p>Exactly one of the <code title=attr-meta-name><a href=#attr-meta-name>name</a></code>,
  <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code>, and <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attributes must be
  specified.</p>

  <p>If either <code title=attr-meta-name><a href=#attr-meta-name>name</a></code> or <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> is specified, then
  the <code title=attr-meta-content><a href=#attr-meta-content>content</a></code> attribute must
  also be specified. Otherwise, it must be omitted.</p>

  <p>The <dfn id=attr-meta-charset title=attr-meta-charset><code>charset</code></dfn>
  attribute specifies the character encoding used by the
  document. This is called a <a href=#character-encoding-declaration>character encoding
  declaration</a>.</p>

  <p>The <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute may
  be specified in <a href=#html5 title=HTML5>HTML documents</a> only, it
  must not be used in <a href=#xhtml5 title=XHTML>XML documents</a>. There
  must not be more than one element with a <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute per document.</p>

  <p>The <dfn id=attr-meta-content title=attr-meta-content><code>content</code></dfn>
  attribute gives the value of the document metadata or pragma
  directive when the element is used for those purposes. The allowed
  values depend on the exact context, as described in subsequent
  sections of this specification.</p>

  <p>If a <code><a href=#meta>meta</a></code> element has a <dfn id=attr-meta-name title=attr-meta-name><code>name</code></dfn> attribute, it sets
  document metadata. Document metadata is expressed in terms of
  name/value pairs, the <code title=attr-meta-name><a href=#attr-meta-name>name</a></code>
  attribute on the <code><a href=#meta>meta</a></code> element giving the name, and the
  <code title=attr-meta-content><a href=#attr-meta-content>content</a></code> attribute on the same
  element giving the value. The name specifies what aspect of metadata
  is being set; valid names and the meaning of their values are
  described in the following sections.  If a <code><a href=#meta>meta</a></code> element
  has no <code title=attr-meta-content><a href=#attr-meta-content>content</a></code> attribute,
  then the value part of the metadata name/value pair is the empty
  string.</p>

  <p>If a <code><a href=#meta>meta</a></code> element has the <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute specified,
  it must be either in a <code><a href=#the-head-element>head</a></code> element or in a
  <code><a href=#the-noscript-element>noscript</a></code> element that itself is in a <code><a href=#the-head-element>head</a></code>
  element. If a <code><a href=#meta>meta</a></code> element does not have the <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute specified,
  it must be in a <code><a href=#the-head-element>head</a></code> element.</p>

  <p>The DOM attributes <dfn id=dom-meta-name title=dom-meta-name><code>name</code></dfn> and <dfn id=dom-meta-content title=dom-meta-content><code>content</code></dfn> must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name. The DOM attribute <dfn id=dom-meta-httpequiv title=dom-meta-httpEquiv><code>httpEquiv</code></dfn> must
  <a href=#reflect>reflect</a> the content attribute <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code>.</p>


  <h5 id=standard-metadata-names><span class=secno>4.2.5.1 </span>Standard metadata names</h5>

  <p>This specification defines a few names for the <code title=attr-meta-name><a href=#attr-meta-name>name</a></code> attribute of the
  <code><a href=#meta>meta</a></code> element.</p>

  <dl><dt><dfn id=meta-application-name title=meta-application-name>application-name</dfn></dt>

   <dd><p>The value must be a short free-form string that giving the
   name of the Web application that the page represents. If the page
   is not a Web application, the <code title=meta-application-name><a href=#meta-application-name>application-name</a></code> metadata name
   must not be used. User agents may use the application name in UI in
   preference to the page's <code><a href=#the-title-element>title</a></code>, since the title might
   include status messages and the like relevant to the status of the
   page at a particular moment in time instead of just being the name
   of the application.</dd>

   <dt><dfn id=meta-description title=meta-description>description</dfn></dt>

   <dd><p>The value must be a free-form string that describes the
   page. The value must be appropriate for use in a directory of
   pages, e.g. in a search engine.</dd>

   <dt><dfn id=meta-generator title=meta-generator>generator</dfn></dt>

   <dd><p>The value must be a free-form string that identifies the
   software used to generate the document. This value must not be used
   on hand-authored pages.</dd>

  </dl><h5 id=other-metadata-names><span class=secno>4.2.5.2 </span>Other metadata names</h5>

  <p><dfn id=concept-meta-extensions title=concept-meta-extensions>Extensions to the predefined
  set of metadata names</dfn> may be registered in the <a href=http://wiki.whatwg.org/wiki/MetaExtensions>WHATWG Wiki
  MetaExtensions page</a>.

  <p>Anyone is free to edit the WHATWG Wiki MetaExtensions page at any
  time to add a type. These new names must be specified with the
  following information:</p>

  <dl><dt>Keyword</dt>

   <dd><p>The actual name being defined. The name should not be
   confusingly similar to any other defined name (e.g. differing only
   in case).</dd>


   <dt>Brief description</dt>

   <dd><p>A short description of what the metadata name's meaning is,
   including the format the value is required to be in.</dd>


   <dt>Link to more details</dt>

   <dd>A link to a more detailed description of the metadata name's
   semantics and requirements. It could be another page on the Wiki,
   or a link to an external page.</dd>


   <dt>Synonyms</dt>

   <dd><p>A list of other names that have exactly the same processing
   requirements. Authors should not use the names defined to be
   synonyms, they are only intended to allow user agents to support
   legacy content.</dd>


   <dt>Status</dt>

   <dd>

    <p>One of the following:</p>

    <dl><dt>Proposal</dt>

     <dd>The name has not received wide peer review and
     approval. Someone has proposed it and is using it.</dd>

     <dt>Accepted</dt>

     <dd>The name has received wide peer review and approval. It has a
     specification that unambiguously defines how to handle pages that
     use the name, including when they use it in incorrect ways.</dd>

     <dt>Unendorsed</dt>

     <dd>The metadata name has received wide peer review and it has
     been found wanting. Existing pages are using this keyword, but
     new pages should avoid it. The "brief description" and "link to
     more details" entries will give details of what authors should
     use instead, if anything.</dd>

    </dl><p>If a metadata name is added with the "proposal" status and
    found to be redundant with existing values, it should be removed
    and listed as a synonym for the existing value.</p>

   </dd>

  </dl><p>Conformance checkers must use the information given on the WHATWG
  Wiki MetaExtensions page to establish if a value not explicitly
  defined in this specification is allowed or not. When an author uses
  a new type not defined by either this specification or the Wiki
  page, conformance checkers should offer to add the value to the
  Wiki, with the details described above, with the "proposal"
  status.</p>

  <p>This specification does not define how new values will get
  approved. It is expected that the Wiki will have a community that
  addresses this.</p>

  <p>Metadata names whose values are to be <a href=#url title=URL>URLs</a> must not be proposed or accepted. Links must
  be represented using the <code><a href=#the-link-element>link</a></code> element, not the
  <code><a href=#meta>meta</a></code> element.</p>


  <h5 id=pragma-directives><span class=secno>4.2.5.3 </span>Pragma directives</h5>

  <p>When the <dfn id=attr-meta-http-equiv title=attr-meta-http-equiv><code>http-equiv</code></dfn> attribute
  is specified on a <code><a href=#meta>meta</a></code> element, the element is a pragma
  directive.</p>

  <p>The <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute
  is an <a href=#enumerated-attribute>enumerated attribute</a>. The following table lists
  the keywords defined for this attribute. The states given in the
  first cell of the rows with keywords give the states to which
  those keywords map. Some of the keywords are non-conforming, as
  noted in the last column.</p>

<!-- things that are neither conforming nor do anything are commented out -->
  <table><thead><tr><th>State
     <th>Keywords
     <th>Notes
   <tbody><tr><td><a href=#attr-meta-http-equiv-content-language title=attr-meta-http-equiv-content-language>Content Language</a>
     <td><code title="">content-language</code>
     <td>Non-conforming 
    <tr><td><a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration</a>
     <td><code title="">content-type</code>
     <td>
<!--
    <tr>
     <td><span title="attr-meta-http-equiv-content-script-type">Content-Script-Type</span>
     <td><code title="">Content-Script-Type</code>
     <td>Non-conforming
    <tr>
     <td><span title="attr-meta-http-equiv-content-style-type">Content-Style-Type</span>
     <td><code title="">Content-Style-Type</code>
     <td>Non-conforming
-->
    <tr><td><a href=#attr-meta-http-equiv-default-style title=attr-meta-http-equiv-default-style>Default style</a>
     <td><code title="">default-style</code>
     <td>
    <tr><td><a href=#attr-meta-http-equiv-refresh title=attr-meta-http-equiv-refresh>Refresh</a>
     <td><code title="">refresh</code>
     <td>
  </table><!--
DATA: According to Henri's validator stats, here are common
non-conforming values used by people who validate (sample of 400
pages):

COUNT ERROR
   20 Bad value "Content-Language" for attribute "http-equiv" on element "meta".
   17 Bad value "Content-Style-Type" for attribute "http-equiv" on element "meta".
   12 Bad value "Expires" for attribute "http-equiv" on element "meta".
   11 Bad value "Pragma" for attribute "http-equiv" on element "meta".
   11 Bad value "imagetoolbar" for attribute "http-equiv" on element "meta".
   10 Bad value "Content-Script-Type" for attribute "http-equiv" on element "meta".
   10 Bad value "content-language" for attribute "http-equiv" on element "meta".
 [...]
http://hsivonen.iki.fi/test/moz/analysis.txt

Here's some more data, this time from Philip`, on a sample of 15k pages.

  COUNT VALUE
   1181 Content-Language
    430 Content-Style-Type
    342 imagetoolbar
    276 content-language
    269 Pragma
    260 expires
    227 Expires
    211 pragma
    146 Content-Script-Type
    132 keywords
    119 Page-Enter
    116 description
    106 reply-to
    102 Cache-Control
   [...]
http://philip.html5.org/data/meta-http-equiv.txt

These numbers are low; further study is required to establish what
people expect to have work and what is necessary.
--><p>When a <code><a href=#meta>meta</a></code> element is <a href=#insert-an-element-into-a-document title="insert an
  element into a document">inserted into the document</a>, if its
  <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute is
  present and represents one of the above states, then the user agent
  must run the algorithm appropriate for that state, as described in
  the following list:</p>

  <dl><dt><dfn id=attr-meta-http-equiv-content-language title=attr-meta-http-equiv-content-language>Content language</dfn>

   <dd>

    <p>This non-conforming pragma sets the <dfn id=document-wide-default-language>document-wide default
    language</dfn>. Until the pragma is successfully processed, there
    is no <a href=#document-wide-default-language>document-wide default language</a>.</p>

    <ol><li><p>If another <code><a href=#meta>meta</a></code> element in the <a href=#attr-meta-http-equiv-content-language title=attr-meta-http-equiv-content-language>Content Language
     state</a> has already been successfully processed (i.e. when
     it was inserted the user agent processed it and reached the last
     step of this list of steps), then abort these steps.</li>

     <li><p>If the <code><a href=#meta>meta</a></code> element has no <code title=attr-meta-content><a href=#attr-meta-content>content</a></code> attribute, or if that
     attribute's value is the empty string, then abort these
     steps.</li>

     <li><p>Let <var title="">input</var> be the value of the
     element's <code title=attr-meta-content><a href=#attr-meta-content>content</a></code>
     attribute.</li>

     <li><p>Let <var title="">position</var> point at the first
     character of <var title="">input</var>.</li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

     <li><p><a href=#collect-a-sequence-of-characters title="collect a sequence of characters">Collect a
     sequence of characters</a> that are neither <a href=#space-character title="space
     character">space characters</a> nor a U+002C COMMA character
     (",").</li>

     <li><p>Let the <a href=#document-wide-default-language>document-wide default language</a> be the
     string that resulted from the previous step.</li>

    </ol><p>For <code><a href=#meta>meta</a></code> elements in the <a href=#attr-meta-http-equiv-content-language title=attr-meta-http-equiv-content-language>Content Language
    state</a>, the <code title=attr-meta-content><a href=#attr-meta-content>content</a></code>
    attribute must have a value consisting of a valid RFC 3066
    language code. <a href=#refsRFC3066>[RFC3066]</a></p>

    <p class=note>This pragma is not exactly equivalent to the HTTP
    <code>Content-Language</code> header, for instance it only
    supports one language. <a href=#refsRFC2616>[RFC2616]</a></p>

   </dd>

   <dt><dfn id=attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration state</dfn>

   <dd>

    <p>The <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding
    declaration state's</a> user agent requirements are all handled
    by the parsing section of the specification. The state is just an
    alternative form of setting the <code title=meta-charset>charset</code> attribute: it is a
    <a href=#character-encoding-declaration>character encoding declaration</a>.</p>

    <p>For <code><a href=#meta>meta</a></code> elements in the <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration
    state</a>, the <code title=attr-meta-content><a href=#attr-meta-content>content</a></code>
    attribute must have a value that is an <a href=#ascii-case-insensitive>ASCII
    case-insensitive</a> match for a string that consists of: the
    literal string "<code title="">text/html;</code>", optionally
    followed by any number of <a href=#space-character title="space character">space
    characters</a>, followed by the literal string "<code title="">charset=</code>", followed by the character encoding name
    of <a href=#charset>the character encoding declaration</a>.</p>

    <p>If the document contains a <code><a href=#meta>meta</a></code> element in the
    <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding
    declaration state</a>, then the document must not contain a
    <code><a href=#meta>meta</a></code> element with the <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute present.</p>

    <p>The <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding
    declaration state</a> may be used in <a href=#html5 title=HTML5>HTML
    documents</a> only, elements in that state must not be used in
    <a href=#xhtml5 title=XHTML>XML documents</a>.</p>

   </dd>

   <dt><dfn id=attr-meta-http-equiv-default-style title=attr-meta-http-equiv-default-style>Default style state</dfn>

   <dd>

    <ol><li class=XXX>...</li>

    </ol></dd>

   <dt><dfn id=attr-meta-http-equiv-refresh title=attr-meta-http-equiv-refresh>Refresh state</dfn>

   <dd>

    <ol><!-- TESTS: http://www.hixie.ch/tests/adhoc/html/meta/refresh/ --><li><p>If another <code><a href=#meta>meta</a></code> element in the <a href=#attr-meta-http-equiv-refresh title=attr-meta-http-equiv-refresh>Refresh state</a> has
     already been successfully processed (i.e. when it was inserted
     the user agent processed it and reached the last step of this
     list of steps), then abort these steps.</li>

     <li><p>If the <code><a href=#meta>meta</a></code> element has no <code title=attr-meta-content><a href=#attr-meta-content>content</a></code> attribute, or if that
     attribute's value is the empty string, then abort these
     steps.</li>

     <li><p>Let <var title="">input</var> be the value of the
     element's <code title=attr-meta-content><a href=#attr-meta-content>content</a></code>
     attribute.</li>

     <li><p>Let <var title="">position</var> point at the first
     character of <var title="">input</var>.</li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

     <li><p><a href=#collect-a-sequence-of-characters title="collect a sequence of characters">Collect a
     sequence of characters</a> in the range U+0030 DIGIT ZERO to
     U+0039 DIGIT NINE, and parse the resulting string using the
     <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative integers</a>. If the
     sequence of characters collected is the empty string, then no
     number will have been parsed; abort these steps. Otherwise, let
     <var title="">time</var> be the parsed number.</li>

     <li><p><a href=#collect-a-sequence-of-characters title="collect a sequence of characters">Collect a
     sequence of characters</a> in the range U+0030 DIGIT ZERO to
     U+0039 DIGIT NINE and U+002E FULL STOP ("<code title="">.</code>"). Ignore any collected characters.</li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

     <li><p>Let <var title="">url</var> be the address of the current
     page.</li>

     <li><p>If the character in <var title="">input</var> pointed to
     by <var title="">position</var> is a U+003B SEMICOLON ("<code title="">;</code>"), then advance <var title="">position</var> to
     the next character. Otherwise, jump to the last step.</li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

     <li><p>If the character in <var title="">input</var> pointed to
     by <var title="">position</var> is one of U+0055 LATIN CAPITAL
     LETTER U or U+0075 LATIN SMALL LETTER U, then advance <var title="">position</var> to the next character. Otherwise, jump to
     the last step.</li>

     <li><p>If the character in <var title="">input</var> pointed to
     by <var title="">position</var> is one of U+0052 LATIN CAPITAL
     LETTER R or U+0072 LATIN SMALL LETTER R, then advance <var title="">position</var> to the next character. Otherwise, jump to
     the last step.</li>

     <li><p>If the character in <var title="">input</var> pointed to
     by <var title="">position</var> is one of U+004C LATIN CAPITAL
     LETTER L or U+006C LATIN SMALL LETTER L, then advance <var title="">position</var> to the next character. Otherwise, jump to
     the last step.</li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

     <li><p>If the character in <var title="">input</var> pointed to
     by <var title="">position</var> is a U+003D EQUALS SIGN ("<code title="">=</code>"), then advance <var title="">position</var> to
     the next character. Otherwise, jump to the last step.</li>

     <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

     <li><p>Let <var title="">url</var> be equal to the substring of
     <var title="">input</var> from the character at <var title="">position</var> to the end of the string.</li>

     <li><p>Strip any trailing <a href=#space-character title="space character">space
     characters</a> from the end of <var title="">url</var>.</li>

     <li><p>Strip any U+0009 CHARACTER TABULATION, U+000A LINE FEED
     (LF), and U+000D CARRIAGE RETURN (CR) characters from <var title="">url</var>.</li>

     <li><p><a href=#resolve-a-url title="resolve a url">Resolve</a> the <var title="">url</var> value to an <a href=#absolute-url>absolute URL</a>,
     relative to the <code><a href=#meta>meta</a></code> element. If this fails, abort
     these steps.</li>

     <li>

      <p>Perform one or more of the following steps:</p>

      <ul><li><p>Set a timer so that in <var title="">time</var> seconds,
       adjusted to take into account user or user agent preferences,
       if the user has not canceled the redirect, the user agent <a href=#navigate title=navigate>navigates</a> the document's browsing
       context to <var title="">url</var>, with <a href=#replacement-enabled>replacement
       enabled</a>, and with the document's browsing context as the
       <a href=#source-browsing-context>source browsing context</a>.</li>

       <li><p>Provide the user with an interface that, when selected,
       <span>navigates</span> a <a href=#browsing-context>browsing context</a> to <var title="">url</var>, with the document's browsing context as the
       <a href=#source-browsing-context>source browsing context</a>.</li>

       <li><p>Do nothing.</li>

      </ul><p>In addition, the user agent may, as with anything, inform the
      user of any and all aspects of its operation, including the
      state of any timers, the destinations of any timed redirects,
      and so forth.</p>

     </li>

    </ol><p>For <code><a href=#meta>meta</a></code> elements in the <a href=#attr-meta-http-equiv-refresh title=attr-meta-http-equiv-refresh>Refresh state</a>, the
    <code title=attr-meta-content><a href=#attr-meta-content>content</a></code> attribute must have
    a value consisting either of:

    <ul><li> just a <a href=#valid-non-negative-integer>valid non-negative integer</a>, or</li>

     <li> a <a href=#valid-non-negative-integer>valid non-negative integer</a>, followed by a
     U+003B SEMICOLON (<code title="">;</code>), followed by one or
     more <a href=#space-character title="space character">space characters</a>,
     followed by either a U+0055 LATIN CAPITAL LETTER U or a U+0075
     LATIN SMALL LETTER U, a U+0052 LATIN CAPITAL LETTER R or a U+0072
     LATIN SMALL LETTER R, a U+004C LATIN CAPITAL LETTER L or a U+006C
     LATIN SMALL LETTER L, a U+003D EQUALS SIGN (<code title="">=</code>), and then a <a href=#valid-url>valid URL</a>.</li>

    </ul><p>In the former case, the integer represents a number of seconds
    before the page is to be reloaded; in the latter case the integer
    represents a number of seconds before the page is to be replaced
    by the page at the given <a href=#url>URL</a>.</p>

   </dd>

  </dl><p>There must not be more than one <code><a href=#meta>meta</a></code> element with
  any particular state in the document at a time.</p>


  <h5 id=other-pragma-directives><span class=secno>4.2.5.4 </span>Other pragma directives</h5>

  <p><dfn id=concept-http-equiv-extensions title=concept-http-equiv-extensions>Extensions to the
  predefined set of pragma directives</dfn> may, under certain
  conditions, be registered in the <a href=http://wiki.whatwg.org/wiki/PragmaExtensions>WHATWG Wiki
  PragmaExtensions page</a>.</p>

  <p>Such extensions must use a name that is identical to a
  previously-registered HTTP header defined in an RFC, and must have
  behavior identical to that described for the HTTP header. Pragma
  directions corresponding to headers describing metadata, or not
  requiring specific user agent processing, must not be registered;
  instead, use <a href=#concept-meta-extensions title=concept-meta-extensions>metadata
  names</a>. Pragma directions corresponding to headers that affect
  the HTTP processing model (e.g. caching) must not be registered, as
  they would result in HTTP-level behavior being different for user
  agents that implement HTML than for user agents that do not.</p>

  <p>Anyone is free to edit the WHATWG Wiki PragmaExtensions page at
  any time to add a pragma directive satisfying these conditions. Such
  registrations must specify the following information:</p>

  <dl><dt>Keyword</dt>

   <dd><p>The actual name being defined.</dd>


   <dt>Brief description</dt>

   <dd><p>A short description of the purpose of the pragma
   directive.</dd>


   <dt>Specification</dt>

   <dd>A link to an IETF RFC defining the corresponding HTTP header.</dd>

  </dl><p>Conformance checkers must use the information given on the WHATWG
  Wiki PragmaExtensions page to establish if a value not explicitly
  defined in this specification is allowed or not.</p>


  <h5 id=charset><span class=secno>4.2.5.5 </span>Specifying the document's character encoding</h5>

  <!-- XXX maybe the rest should move to "writing html" section,
  though if we do then we have to duplicate the requirements in the
  parsing section for conformance checkers -->

  <p>A <dfn id=character-encoding-declaration>character encoding declaration</dfn> is a mechanism by
  which the character encoding used to store or transmit a document is
  specified.</p>

  <p>The following restrictions apply to character encoding
  declarations:</p>

  <ul><li>The character encoding name given must be the name of the
   character encoding used to serialize the file.</li>

   <li>The value must be a valid character encoding name, and must be
   the preferred name for that encoding. <a href=#refsIANACHARSET>[IANACHARSET]</a> <!-- XXX
   http://www.iana.org/assignments/character-sets --></li>

   <li>The character encoding declaration must be serialized without
   the use of <a href=#syntax-charref title=syntax-charref>character references</a>
   or character escapes of any kind.</li>

   <li id=charset512>The element containing the character encoding
   declaration must be serialised completely within the first 512
   bytes of the document.</li>

  </ul><p>If the document does not start with a BOM, and if its encoding is
  not explicitly given by <a href=#content-type-0 title=Content-Type>Content-Type
  metadata</a>, then the character encoding used must be an
  <a href=#ascii-compatible-character-encoding>ASCII-compatible character encoding</a>, and, in addition,
  if that encoding isn't US-ASCII itself, then the encoding must be
  specified using a <code><a href=#meta>meta</a></code> element with a <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute or a
  <code><a href=#meta>meta</a></code> element in the <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration
  state</a>.</p>

  <p>If the document contains a <code><a href=#meta>meta</a></code> element with a <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute or a
  <code><a href=#meta>meta</a></code> element in the <a href=#attr-meta-http-equiv-content-type title=attr-meta-http-equiv-content-type>Encoding declaration
  state</a>, then the character encoding used must be an
  <a href=#ascii-compatible-character-encoding>ASCII-compatible character encoding</a>.</p>

  <p>Authors should not use JIS_X0212-1990, x-JIS0208, and encodings
  based on EBCDIC. Authors should not use UTF-32. Authors must not use
  the CESU-8, UTF-7, BOCU-1 and SCSU encodings. <a href=#refsCESU8>[CESU8]</a> <a href=#refsUTF7>[UTF7]</a> <a href=#refsBOCU1>[BOCU1]</a> <a href=#refsSCSU>[SCSU]</a></p>
  <!-- XXX ref JIS_X0212-1990, x-JIS0208, EBCDIC, UTF-32 -->

  <p>Authors are encouraged to use UTF-8. Conformance checkers may
  advise against authors using legacy encodings.</p>

  <p>In XHTML, the XML declaration should be used for inline character
  encoding information, if necessary.</p>


  <h4 id=the-style-element><span class=secno>4.2.6 </span>The <dfn><code>style</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dd>If the <code title=attr-style-scoped><a href=#attr-style-scoped>scoped</a></code> attribute is present: <a href=#flow-content-0>flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>If the <code title=attr-style-scoped><a href=#attr-style-scoped>scoped</a></code> attribute is absent: where <a href=#metadata-content-0>metadata content</a> is expected.</dd>
   <dd>If the <code title=attr-style-scoped><a href=#attr-style-scoped>scoped</a></code> attribute is absent: in a <code><a href=#the-noscript-element>noscript</a></code> element that is a child of a <code><a href=#the-head-element>head</a></code> element.</dd>
   <dd>If the <code title=attr-style-scoped><a href=#attr-style-scoped>scoped</a></code> attribute is present: where <a href=#flow-content-0>flow content</a> is expected, but before any other <a href=#flow-content-0>flow content</a> other than other <code><a href=#the-style-element>style</a></code> elements and <a href=#inter-element-whitespace>inter-element whitespace</a>.</dd>
   <dt>Content model:</dt>
   <dd>Depends on the value of the <code title=attr-style-type><a href=#attr-style-type>type</a></code> attribute.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-style-media><a href=#attr-style-media>media</a></code></dd>
   <dd><code title=attr-style-type><a href=#attr-style-type>type</a></code></dd>
   <dd><code title=attr-style-scoped><a href=#attr-style-scoped>scoped</a></code></dd>
   <dd>Also, the <code title=attr-style-title><a href=#attr-style-title>title</a></code> attribute has special semantics on this element.</dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlstyleelement>HTMLStyleElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-style-disabled title=dom-style-disabled>disabled</a>;
           attribute DOMString <a href=#dom-style-media title=dom-style-media>media</a>;
           attribute DOMString <a href=#dom-style-type title=dom-style-type>type</a>;
           attribute boolean <a href=#dom-style-scoped title=dom-style-scoped>scoped</a>;
};</pre>
    <p>The <code>LinkStyle</code> interface must also be implemented
    by this element, the <a href=#styling>styling processing model</a> defines
    how. <a href=#refsCSSOM>[CSSOM]</a></p>
   </dd>
  </dl><p>The <code><a href=#the-style-element>style</a></code> element allows authors to embed style
  information in their documents. The <code><a href=#the-style-element>style</a></code> element is
  one of several inputs to the <a href=#styling>styling processing
  model</a>. The element does not <a href=#represents title=represents>represent</a> content for the user.</p>

  <p>If the <dfn id=attr-style-type title=attr-style-type><code>type</code></dfn>
  attribute is given, it must contain a valid MIME type, optionally
  with parameters, that designates a styling language. <a href=#refsRFC2046>[RFC2046]</a> If the attribute is absent, the
  type defaults to <code>text/css</code>. <a href=#refsRFC2318>[RFC2138]</a></p>

  <!-- XXX this is the second time we have this paragraph here... -->
  <p>When examining types to determine if they support the language,
  user agents must not ignore unknown MIME parameters &mdash; types
  with unknown parameters must be assumed to be unsupported.</p>

  <p>The <dfn id=attr-style-media title=attr-style-media><code>media</code></dfn>
  attribute says which media the styles apply to. The value must be a
  valid <a href=#mq>media query</a>. <a href=#refsMQ>[MQ]</a> User
  agents must apply the styles to <a href=#view title=view>views</a>
  while their state match the listed media, and must not apply them
  otherwise.</p><!-- note similar text in <link> section -->

  <p class=note>The styles might be further limited in scope,
  e.g. in CSS with the use of <code title="">@media</code>
  blocks. This specification does not override such further
  restrictions or requirements.</p><!-- note similar text in <link>
  section -->

  <p id=style-default-media>The default, if the <code title=attr-style-media><a href=#attr-style-media>media</a></code> attribute is omitted, is
  <code>all</code>, meaning that by default styles apply to all
  media.</p>

  <p>The <dfn id=attr-style-scoped title=attr-style-scoped><code>scoped</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. If the attribute is
  present, then the user agent must apply the specified style
  information only to the <code><a href=#the-style-element>style</a></code> element's parent element
  (if any), and that element's child nodes. Otherwise, the specified
  styles must, if applied, be applied to the entire document.</p>

  <p id=title-on-style>The <dfn id=attr-style-title title=attr-style-title><code>title</code></dfn> attribute on
  <code><a href=#the-style-element>style</a></code> elements defines <a href=#alternative-style-sheet-sets>alternative style sheet
  sets</a>. If the <code><a href=#the-style-element>style</a></code> element has no <code title=attr-style-title><a href=#attr-style-title>title</a></code> attribute, then it has no
  title; the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute of
  ancestors does not apply to the <code><a href=#the-style-element>style</a></code> element.</p> <!--
  XXX xref -->

  <p class=note>The <code title=attr-style-title><a href=#attr-style-title>title</a></code>
  attribute on <code><a href=#the-style-element>style</a></code> elements, like the <code title=attr-link-title><a href=#attr-link-title>title</a></code> attribute on <code><a href=#the-link-element>link</a></code>
  elements, differs from the global <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute in that a
  <code><a href=#the-style-element>style</a></code> block without a title does not inherit the title
  of the parent element: it merely has no title.</p>

  <p>All descendant elements must be processed, according to their
  semantics, before the <code><a href=#the-style-element>style</a></code> element itself is
  evaluated. For styling languages that consist of pure text, user
  agents must evaluate <code><a href=#the-style-element>style</a></code> elements by passing the
  concatenation of the contents of all the <a href=#text-node title="text
  node">text nodes</a> that are direct children of the
  <code><a href=#the-style-element>style</a></code> element (not any other nodes such as comments or
  elements), in <a href=#tree-order>tree order</a>, to the style system. For
  XML-based styling languages, user agents must pass all the child
  nodes of the <code><a href=#the-style-element>style</a></code> element to the style system.</p>

  <p>All <a href=#url title=URL>URLs</a> found by the styling language's
  processor must be <a href=#resolve-a-url title="resolve a url">resolved</a>,
  relative to the element (or as defined by the styling language),
  when the processor is invoked.<!-- so dynamic changes to the base
  URL don't affect the CSS --></p>

  <p class=note>This specification does not specify a style system,
  but CSS is expected to be supported by most Web browsers. <a href=#refsCSS21>[CSS21]</a></p>

  <p>The <dfn id=dom-style-media title=dom-style-media><code>media</code></dfn>, <dfn id=dom-style-type title=dom-style-type><code>type</code></dfn> and <dfn id=dom-style-scoped title=dom-style-scoped><code>scoped</code></dfn> DOM attributes
  must <a href=#reflect>reflect</a> the respective content attributes of the
  same name.</p>

  <p>The DOM <dfn id=dom-style-disabled title=dom-style-disabled><code>disabled</code></dfn> attribute
  behaves as defined <a href=#dom-linkstyle-disabled title=dom-linkstyle-disabled>for the
  alternative style sheets DOM</a>.</p>

  <h4 id=styling><span class=secno>4.2.7 </span><dfn title="styling processing model">Styling</dfn></h4>

  <p>The <code><a href=#the-link-element>link</a></code> and <code><a href=#the-style-element>style</a></code> elements can provide
  styling information for the user agent to use when rendering the
  document. The DOM Styling specification specifies what styling
  information is to be used by the user agent and how it is to be
  used. <a href=#refsCSSOM>[CSSOM]</a></p>

  <p>The <code><a href=#the-style-element>style</a></code> and <code><a href=#the-link-element>link</a></code> elements implement
  the <code>LinkStyle</code> interface. <a href=#refsCSSOM>[CSSOM]</a></p>

  <p>For <code><a href=#the-style-element>style</a></code> elements, if the user agent does not
  support the specified styling language, then the <code title=dom-LinkStyle-sheet>sheet</code> attribute of the element's
  <code>LinkStyle</code> interface must return null. Similarly,
  <code><a href=#the-link-element>link</a></code> elements that do not represent <a href=#link-type-stylesheet title=rel-stylesheet>external resource links that contribute to
  the styling processing model</a> (i.e. that do not have a <code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code> keyword in their <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code> attribute), and <code><a href=#the-link-element>link</a></code>
  elements whose specified resource has not yet been fetched, or is
  not in a supported styling language, must have their
  <code>LinkStyle</code> interface's <code title=dom-LinkStyle-sheet>sheet</code> attribute return null.</p>

  <p>Otherwise, the <code>LinkStyle</code> interface's <code title=dom-LinkStyle-sheet>sheet</code> attribute must return a
  <code>StyleSheet</code> object with the attributes implemented as
  follows: <a href=#refsCSSOM>[CSSOM]</a></p>

  <dl><dt>The content type (<code title=dom-stylesheet-type>type</code> DOM attribute)</dt>

   <dd><p>The content type must be the same as the style's specified
   type. For <code><a href=#the-style-element>style</a></code> elements, this is the same as the
   <code title=attr-style-type><a href=#attr-style-type>type</a></code> content attribute's
   value, or <code title="">text/css</code> if that is omitted. For
   <code><a href=#the-link-element>link</a></code> elements, this is the <a href=#content-type-0 title=Content-Type>Content-Type metadata of the specified
   resource</a>.</dd>

   <dt>The location (<code title=dom-stylesheet-href>href</code> DOM attribute)</dt>

   <dd><p>For <code><a href=#the-link-element>link</a></code> elements, the location must be the
   result of <a href=#resolve-a-url title="resolve a url">resolving</a> the
   <a href=#url>URL</a> given by the element's <code title=attr-link-href><a href=#attr-link-href>href</a></code> content attribute, relative to
   the element, or the empty string if that fails. For
   <code><a href=#the-style-element>style</a></code> elements, there is no location.</dd> <!--
   note that this might not match the style sheet URL, if the base URL
   has changed for instance -->

   <dt>The intended destination media for style information (<code title=dom-stylesheet-media>media</code> DOM attribute)</dt>

   <dd><p>The media must be the same as the value of the element's
   <code title="">media</code> content attribute.</dd>

   <dt>The style sheet title (<code title=dom-stylesheet-title>title</code> DOM attribute)</dt>

   <dd><p>The title must be the same as the value of the element's
   <code title="">title</code> content attribute. If the attribute is
   absent, then the style sheet does not have a title. The title is
   used for defining <dfn id=alternative-style-sheet-sets>alternative style sheet sets</dfn>.</dd>

  </dl><p>The <dfn id=dom-linkstyle-disabled title=dom-LinkStyle-disabled><code>disabled</code></dfn> DOM
  attribute on <code><a href=#the-link-element>link</a></code> and <code><a href=#the-style-element>style</a></code> elements must
  return false and do nothing on setting, if the <code title=dom-linkstyle-sheet>sheet</code> attribute of their
  <code>LinkStyle</code> interface is null. Otherwise, it must return
  the value of the <code>StyleSheet</code> interface's <code title=dom-stylesheet-disabled>disabled</code> attribute on
  getting, and forward the new value to that same attribute on
  setting.</p>

  <!-- <p class="XXX">Need more here - defining preferred
  stylesheets, alternative stylesheets, persistent stylesheets, ordering
  of stylesheets, dynamic additions/removals, how it maps to
  .styleSheets, HTTP Link: headers, and the stuff about the alternative
  stylesheet API.</p> XXX that will all be covered by Anne's spec -->




  <h3 id=scripting-1><span class=secno>4.3 </span>Scripting</h3>

  <p>Scripts allow authors to add interactivity to their documents.</p>

  <p>Authors are encouraged to use declarative alternatives to
  scripting where possible, as declarative mechanisms are often more
  maintainable, and many users disable scripting.</p>

  <div class=example>
   <p>For example, instead of using script to show or hide a section
   to show more details, the <code><a href=#the-details-element>details</a></code> element could be
   used.</p>
  </div>

  <p>Authors are also encouraged to make their applications degrade
  gracefully in the absence of scripting support.</p>

  <div class=example>
   <p>For example, if an author provides a link in a table header to
   dynamically resort the table, the link could also be made to
   function without scripts by requesting the sorted table from the
   server.</p>
  </div>


  <h4 id=script><span class=secno>4.3.1 </span>The <dfn><code>script</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#metadata-content-0>metadata content</a> is expected.</dd>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>If there is no <code title=attr-script-src><a href=#attr-script-src>src</a></code>
   attribute, depends on the value of the <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute.</dd>
   <dd>If there <em>is</em> a <code title=attr-script-src><a href=#attr-script-src>src</a></code>
   attribute, the element must be either empty or contain only
   <a href=#inline-documentation-for-external-scripts>script documentation</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-script-src><a href=#attr-script-src>src</a></code></dd>
   <dd><code title=attr-script-async><a href=#attr-script-async>async</a></code></dd>
   <dd><code title=attr-script-defer><a href=#attr-script-defer>defer</a></code></dd>
   <dd><code title=attr-script-type><a href=#attr-script-type>type</a></code></dd>
   <dd><code title=attr-script-charset><a href=#attr-script-charset>charset</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlscriptelement>HTMLScriptElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-script-src title=dom-script-src>src</a>;
           attribute boolean <a href=#dom-script-async title=dom-script-async>async</a>;
           attribute boolean <a href=#dom-script-defer title=dom-script-defer>defer</a>;
           attribute DOMString <a href=#dom-script-type title=dom-script-type>type</a>;
           attribute DOMString <a href=#dom-script-charset title=dom-script-charset>charset</a>;
           attribute DOMString <a href=#dom-script-text title=dom-script-text>text</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#script>script</a></code> element allows authors to include dynamic
  script and data blocks in their documents.  The element does not
  <a href=#represents title=represents>represent</a> content for the user.</p>

  <p>When used to include dynamic scripts, the scripts may either be
  embedded inline or may be imported from an external file using the
  <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute. If the language
  is not that described by "<code title="">text/javascript</code>",
  then the <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute must
  be present. If the <code title=attr-script-type><a href=#attr-script-type>type</a></code>
  attribute is present, its value must be the type of the script's
  language.</p>

  <p>When used to include data blocks, the data must be embedded
  inline, the format of the data must be given using the <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute, and the <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute must not be
  specified.</p>

  <p>The <dfn id=attr-script-type title=attr-script-type><code>type</code></dfn>
  attribute gives the language of the script or format of the data. If
  the attribute is present, its value must be a valid MIME type,
  optionally with parameters. The <code title="">charset</code>
  parameter must not be specified. (The default, which is used if the
  attribute is absent, is "<code title="">text/javascript</code>".) <a href=#refsRFC2046>[RFC2046]</a></p>

  <p>The <dfn id=attr-script-src title=attr-script-src><code>src</code></dfn>
  attribute, if specified, gives the address of the external script
  resource to use. The value of the attribute must be a <a href=#valid-url>valid
  URL</a> identifying a script resource of the type given by the
  <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute, if the
  attribute is present, or of the type "<code title="">text/javascript</code>", if the attribute is absent.</p>

  <p>The <dfn id=attr-script-charset title=attr-script-charset><code>charset</code></dfn>
  attribute gives the character encoding of the external script
  resource. The attribute must not be specified if the <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute is not present. If the
  attribute is set, its value must be a valid character encoding name,
  must be the preferred name for that encoding, and must match the
  encoding given in the <code title="">charset</code> parameter of the
  <a href=#content-type-0 title=Content-Type>Content-Type metadata</a> of the
  external file, if any. <a href=#refsIANACHARSET>[IANACHARSET]</a></p>

  <p>The <dfn id=attr-script-async title=attr-script-async><code>async</code></dfn> and
  <dfn id=attr-script-defer title=attr-script-defer><code>defer</code></dfn> attributes
  are <a href=#boolean-attribute title="boolean attribute">boolean attributes</a> that
  indicate how the script should be executed.</p>

  <p>There are three possible modes that can be selected using these
  attributes. If the <code title=attr-script-async><a href=#attr-script-async>async</a></code>
  attribute is present, then the script will be executed
  asynchronously, as soon as it is available. If the <code title=attr-script-async><a href=#attr-script-async>async</a></code> attribute is not present but
  the <code title=attr-script-defer><a href=#attr-script-defer>defer</a></code> attribute is
  present, then the script is executed when the page has finished
  parsing. If neither attribute is present, then the script is
  fetched and executed immediately, before the user agent continues
  parsing the page. The exact processing details for these attributes
  is described below.</p>

  <p>The <code title=attr-script-defer><a href=#attr-script-defer>defer</a></code> attribute may be
  specified even if the <code title=attr-script-async><a href=#attr-script-async>async</a></code>
  attribute is specified, to cause legacy Web browsers that only
  support <code title=attr-script-defer><a href=#attr-script-defer>defer</a></code> (and not <code title=attr-script-async><a href=#attr-script-async>async</a></code>) to fall back to the <code title=attr-script-defer><a href=#attr-script-defer>defer</a></code> behavior instead of the
  synchronous blocking behavior that is the default.</p>

  <p>Changing the <code title=attr-script-src><a href=#attr-script-src>src</a></code>, <code title=attr-script-type><a href=#attr-script-type>type</a></code>, <code title=attr-script-charset><a href=#attr-script-charset>charset</a></code>, <code title=attr-script-async><a href=#attr-script-async>async</a></code>, and <code title=attr-script-defer><a href=#attr-script-defer>defer</a></code> attributes dynamically has no
  direct effect; these attribute are only used at specific times
  described below (namely, when the element is <a href=#insert-an-element-into-a-document title="insert an
  element into a document">inserted into the document</a>).</p>
  <!-- by implication, changes to the base URL also have no effect -->

  <p><code><a href=#script>script</a></code> elements have four associated pieces of
  metadata. The first is a flag indicating whether or not the script
  block has been <dfn id=already-executed>"already executed"</dfn>. Initially,
  <code><a href=#script>script</a></code> elements must have this flag unset (script
  blocks, when created, are not "already executed"). When a
  <code><a href=#script>script</a></code> element is cloned, the "already executed" flag,
  if set, must be propagated to the clone when it is created. The
  second is a flag indicating whether the element was
  <dfn id=parser-inserted>"parser-inserted"</dfn>. This flag is set by the <a href=#html-parser>HTML
  parser</a> and is used to handle <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> calls. The third
  and fourth pieces of metadata are <dfn id="the-script-block's-type"><var>the script block's
  type</var></dfn> and <dfn id="the-script-block's-character-encoding"><var>the script block's character
  encoding</var></dfn>. They are determined when the script is run,
  based on the attributes on the element at that time.</p>

  <p>When a <code><a href=#script>script</a></code> element that is marked as neither
  having <a href=#already-executed>"already executed"</a> nor being
  <a href=#parser-inserted>"parser-inserted"</a> is <a href=#insert-an-element-into-a-document title="insert an element
  into a document">inserted into a document</a>, the user agent
  must <a href=#running-a-script title="running a script">run</a> the
  <code><a href=#script>script</a></code> element.</p>

  <p><dfn id=running-a-script title="running a script">Running a script</dfn>: When a
  <code><a href=#script>script</a></code> element is to be run, the user agent must act as
  follows:</p>

  <ol><li>

    <p>If either:</p>

    <ul class=brief><li>the <code><a href=#script>script</a></code> element has a <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute and its value is
     the empty string, or</li>

     <li>the <code><a href=#script>script</a></code> element has no <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute but it has a <code title=attr-script-language>language</code> attribute and
     <em>that</em> attribute's value is the empty string, or</li>

     <li>the <code><a href=#script>script</a></code> element has neither a <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute nor a <code title=attr-script-language>language</code> attribute, then</li>

    </ul><p>...let <var><a href="#the-script-block's-type">the script block's type</a></var> for this
    <code><a href=#script>script</a></code> element be "<code title="">text/javascript</code>".</p>

    <p>Otherwise, if the <code><a href=#script>script</a></code> element has a <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute, let <var><a href="#the-script-block's-type">the
    script block's type</a></var> for this <code><a href=#script>script</a></code> element be
    the value of that attribute.</p>

    <p>Otherwise, the element has a non-empty <code title=attr-script-language>language</code> attribute; let
    <var><a href="#the-script-block's-type">the script block's type</a></var> for this <code><a href=#script>script</a></code>
    element be the concatenation of the string "<code title="">text/</code>" followed by the value of the <code title=attr-script-language>language</code> attribute.</p> <!--
    user agents already support, e.g., type="text/javascript1.3", so
    we don't have to support that separately. -->

    <p class=note>The <code title=attr-script-language>language</code> attribute is never
    conforming, and is always ignored if there is a <code title=attr-script-type><a href=#attr-script-type>type</a></code> attribute present.</p>

   </li>

   <li>

    <p>If the <code><a href=#script>script</a></code> element has a <code title=attr-script-charset><a href=#attr-script-charset>charset</a></code> attribute, then let
    <var><a href="#the-script-block's-character-encoding">the script block's character encoding</a></var> for this
    <code><a href=#script>script</a></code> element be the encoding given by the <code title=attr-script-charset><a href=#attr-script-charset>charset</a></code> attribute.</p>

    <p>Otherwise, let <var><a href="#the-script-block's-character-encoding">the script block's character encoding</a></var>
    for this <code><a href=#script>script</a></code> element be the same as <a href="#document's-character-encoding" title="document's character encoding">the encoding of the document
    itself</a>.</p>

   </li>

   <li>

    <p>If <a href=#concept-n-noscript title=concept-n-noscript>scripting is
    disabled</a> for the <code><a href=#script>script</a></code> element, or if the
    user agent does not <a href=#support-the-scripting-language>support the scripting language</a>
    given by <var><a href="#the-script-block's-type">the script block's type</a></var> for this
    <code><a href=#script>script</a></code> element, then the user agent must abort these
    steps at this point. The script is not executed.</p>

   </li>

   <li>

    <p>The user agent must set the element's <a href=#already-executed>"already
    executed"</a> flag.</p>

   </li>

   <li>

    <p>If the element has a <code title=attr-script-src><a href=#attr-script-src>src</a></code>
    attribute, then the value of that attribute must be <a href=#resolve-a-url title="resolve a url">resolved</a> relative to the element, and
    if that is successful, the specified resource must then be <a href=#fetch title=fetch>fetched</a>.</p>

    <p>For historical reasons, if the <a href=#url>URL</a> is a <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code>
    URL</a>, then the user agent must not, despite the requirements
    in the definition of the <a href=#fetch title=fetch>fetching</a>
    algorithm, actually execute the given script; instead the user
    agent must act as if it had received an empty HTTP 400
    response.</p>

    <p>Once the resource's <a href=#content-type-0 title=Content-Type>Content Type
    metadata</a> is available, if it ever is, apply the
    <a href=#algorithm-for-extracting-an-encoding-from-a-content-type>algorithm for extracting an encoding from a
    Content-Type</a> to it. If this returns an encoding, and the
    user agent supports that encoding, then let <var><a href="#the-script-block's-character-encoding">the script
    block's character encoding</a></var> be that encoding.</p>

    <p>Once the fetching process has completed, and the script has
    <dfn id=completed-loading>completed loading</dfn>, the user agent will have to complete
    <a href=#when-a-script-completes-loading title="when a script completes loading">the steps described
    below</a>. (If the parser is still active at that time, those
    steps defer to the parser to handle the execution of pending
    scripts.)</p>

    <p>For performance reasons, user agents may start fetching the
    script as soon as the attribute is set, instead, in the hope that
    the element will be inserted into the document. Either way, once
    the element is <a href=#insert-an-element-into-a-document title="insert an element into a
    document">inserted into the document</a>, the load must have
    started. If the UA performs such prefetching, but the element is
    never inserted in the document, or the <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute is dynamically
    changed,<!-- or the base URL is dynamically changed,--> then the
    user agent will not execute the script, and the fetching process
    will have been effectively wasted.</p>

   </li>

   <li>

    <p>Then, the first of the following options that describes the
    situation must be followed:</p>

    <dl class=switch><dt>If the document is still being parsed, and the element has a
     <code title=attr-script-defer><a href=#attr-script-defer>defer</a></code> attribute, and the
     element does not have an <code title=attr-script-async><a href=#attr-script-async>async</a></code> attribute</dt>

     <dd>The element must be added to the end of the <a href=#list-of-scripts-that-will-execute-when-the-document-has-finished-parsing>list of
     scripts that will execute when the document has finished
     parsing</a>.
 
     <p class=XXX>This isn't compatible with IE for inline
     deferred scripts, but then what IE does is pretty hard to pin down
     exactly. Do we want to keep this like it is? Be more compatible?</p>
     <!--XXX  
     http://www.websiteoptimization.com/speed/tweak/defer/test/
     internal deferred scripts execute before any external scripts execute, or before the LOAD if there are none
     external deferred scripts execute before the LOAD
     -->

     </dd>


     <dt>If the element has an <code title=attr-script-async><a href=#attr-script-async>async</a></code> attribute and a <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute</dt>

     <dd>The element must be added to the end of the <a href=#list-of-scripts-that-will-execute-asynchronously>list of
     scripts that will execute asynchronously</a>.</dd>


     <dt>If the element has an <code title=attr-script-async><a href=#attr-script-async>async</a></code> attribute but no <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute, and the <a href=#list-of-scripts-that-will-execute-asynchronously>list
     of scripts that will execute asynchronously</a> is not
     empty</dt>

     <dd>The element must be added to the end of the <a href=#list-of-scripts-that-will-execute-asynchronously>list of
     scripts that will execute asynchronously</a>.</dd>


     <dt>If the element has a <code title=attr-script-src><a href=#attr-script-src>src</a></code>
     attribute and has been flagged as
     <a href=#parser-inserted>"parser-inserted"</a></dt>

     <dd>The element is the <dfn id=pending-external-script>pending external script</dfn>. (There
     can only be one such script at a time.)</dd>


     <dt>If the element has a <code title=attr-script-src><a href=#attr-script-src>src</a></code>
     attribute</dt>

     <dd>The element must be added to the end of the <a href=#list-of-scripts-that-will-execute-as-soon-as-possible>list of
     scripts that will execute as soon as possible</a>.</dd>


     <dt>Otherwise</dt>

     <dd>The user agent must immediately <a href=#executing-a-script-block title="executing a
     script block">execute the script block</a>, even if other
     scripts are already executing.</dd>

    </dl></li>

  </ol><p><dfn id=when-a-script-completes-loading>When a script completes loading</dfn>: If the
  <code><a href=#script>script</a></code> element was added to one of the lists mentioned
  above and the document is still being parsed, then the parser
  handles it. Otherwise, the UA must run the following steps as the
  <a href=#concept-task title=concept-task>task</a> that the <a href=#networking-task-source>networking
  task source</a> places on the <a href=#task-queue>task queue</a>:</p>

  <dl class=switch><dt>If the <code><a href=#script>script</a></code> element was added to the <dfn id=list-of-scripts-that-will-execute-when-the-document-has-finished-parsing>list
   of scripts that will execute when the document has finished
   parsing</dfn>:</dt>

   <dd>

    <ol><li>

      <p>If the <code><a href=#script>script</a></code> element is not the first element
      in the list, then do nothing yet. Stop going through these
      steps.</p>

     </li>

     <li>

      <p>Otherwise, <a href=#executing-a-script-block title="executing a script block">execute the
      script block</a> (the first element in the list).</p>

     </li>

     <li>

      <p>Remove the <code><a href=#script>script</a></code> element from the list
      (i.e. shift out the first entry in the list).</p>

     </li>

     <li>

      <p>If there are any more entries in the list, and if the script
      associated with the element that is now the first in the list is
      already loaded, then jump back to step two to execute it.</p>

     </li>

    </ol></dd>

   <dt>If the <code><a href=#script>script</a></code> element was added to the <dfn id=list-of-scripts-that-will-execute-asynchronously>list
   of scripts that will execute asynchronously</dfn>:</dt>

   <dd>

    <ol><li>

      <p>If the script is not the first element in the list, then do
      nothing yet. Stop going through these steps.</p>

     </li>

     <li>

      <p><a href=#executing-a-script-block title="executing a script block">Execute the script
      block</a> (the first element in the list).</p>

     </li>

     <li>

      <p>Remove the <code><a href=#script>script</a></code> element from the list
      (i.e. shift out the first entry in the list).</p>

     </li>

     <li>

      <p>If there are any more scripts in the list, and the element
      now at the head of the list had no <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute when it was added
      to the list, or had one, but its associated script has finished
      loading, then jump back to step two to execute the script
      associated with this element.</p>

     </li>

    </ol></dd>

   <dt>If the <code><a href=#script>script</a></code> element was added to the <dfn id=list-of-scripts-that-will-execute-as-soon-as-possible>list
   of scripts that will execute as soon as possible</dfn>:</dt>

   <dd>

    <ol><li>

      <p><a href=#executing-a-script-block title="executing a script block">Execute the
      script block</a>.</p>

     </li>

     <li>

      <p>Remove the <code><a href=#script>script</a></code> element from the list.</p>

     </li>

    </ol></dd>

  </dl><p>Fetching an external script must <a href=#delay-the-load-event>delay the <code title=event-load>load</code> event</a>.</p>

  <p><dfn id=executing-a-script-block title="executing a script block">Executing a script
  block</dfn>: When the steps above require that the script block be
  executed, the user agent must act as follows:</p>

  <dl class=switch><dt>If the load resulted in an error (for example a DNS error, or
   an HTTP 404 error)</dt>

   <dd><p>Executing the script block must just consist of <a href=#fire-an-error-event title="fire an error event">firing an <code title=event-error>error</code> event</a> at the
   element.</dd>

   <dt>If the load was successful</dt>

   <!-- SCRIPT EXEC -->
   <dd>

    <ol><li>

      <p>Initialize <dfn id="the-script-block's-source"><var>the script block's source</var></dfn> as
      follows:</p>

      <dl class=switch><dt>If the script is from an external file</dt>

       <dd>

        <p>The contents of that file, interpreted as string of
        Unicode characters, are the script source.</p>

        <p>The file must be converted to Unicode using the character
        encoding given by <var><a href="#the-script-block's-character-encoding">the script block's character
        encoding</a></var>.</p>

       </dd>

       <dt>If the script is inline and <var><a href="#the-script-block's-type">the script block's type</a></var> is a text-based language</dt>

       <dd>

        <p>The value of the DOM <code title=dom-script-text><a href=#dom-script-text>text</a></code> attribute at the time the
        "<a href=#running-a-script>running a script</a>" algorithm was first invoked is
        the script source.</p>

       </dd>

       <dt>If the script is inline and <var><a href="#the-script-block's-type">the script block's type</a></var> is an XML-based language</dt>

       <dd>

        <p>The child nodes of the <code><a href=#script>script</a></code> element at the
        time the "<a href=#running-a-script>running a script</a>" algorithm was first
        invoked are the script source.</p>

       </dd>

      </dl></li>

     <li>

      <p><a href=#create-a-script-from-a-node title="create a script from a node">Create a
      script</a> from the <code><a href=#script>script</a></code> element node, using
      the <var><a href="#the-script-block's-source">the script block's source</a></var> and the <var><a href="#the-script-block's-type">the script
      block's type</a></var>.</p>

      <p class=note>This is where the script is compiled and
      actually executed.</p>

     </li>

     <li>

      <p><a href=#fire-a-load-event>Fire a <code title=event-load>load</code>
      event</a> at the <code><a href=#script>script</a></code> element.</p>

     </li>

    </ol></dd>

  </dl><p>The DOM attributes <dfn id=dom-script-src title=dom-script-src><code>src</code></dfn>, <dfn id=dom-script-type title=dom-script-type><code>type</code></dfn>, <dfn id=dom-script-charset title=dom-script-charset><code>charset</code></dfn>, <dfn id=dom-script-async title=dom-script-async><code>async</code></dfn>, and <dfn id=dom-script-defer title=dom-script-defer><code>defer</code></dfn>, each must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>

  <p>The DOM attribute <dfn id=dom-script-text title=dom-script-text><code>text</code></dfn> must return a
  concatenation of the contents of all the <a href=#text-node title="text
  node">text nodes</a> that are direct children of the
  <code><a href=#script>script</a></code> element (ignoring any other nodes such as
  comments or elements), in tree order. On setting, it must act the
  same way as the <code><a href=#textcontent>textContent</a></code> DOM attribute.</p>


  <div class=example>

   <p>In this example, two <code><a href=#script>script</a></code> elements are used. One
   embeds an external script, and the other includes some data.</p>

   <pre>&lt;script src="game-engine.js"&gt;&lt;/script&gt;
&lt;script type="text/x-game-map"&gt;
........U.........e
o............A....e
.....A.....AAA....e
.A..AAA...AAAAA...e
&lt;/script&gt;</pre>

   <p>The data in this case might be used by the script to generate
   the map of a video game. The data doesn't have to be used that way,
   though; maybe the map data is actually embedded in other parts of
   the page's markup, and the data block here is just used by the
   site's search engine to help users who are looking for particular
   features in their game maps.</p>

  </div>

  <p class=note>When inserted using the <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> method,
  <code><a href=#script>script</a></code> elements execute (typically synchronously), but
  when inserted using <code title=dom-innerHTML><a href=#dom-innerhtml>innerHTML</a></code> and <code title=dom-outerHTML><a href=#dom-outerhtml>outerHTML</a></code> attributes, they do not
  execute at all.</p>




  <h5 id=scriptingLanguages><span class=secno>4.3.1.1 </span>Scripting languages</h5>

  <p>A user agent is said to <dfn id=support-the-scripting-language>support the scripting language</dfn>
  if <var><a href="#the-script-block's-type">the script block's type</a></var> matches the MIME type of a
  scripting language that the user agent implements.</p>

  <p>The following lists some MIME types and the languages to which
  they refer:</p>

  <dl><dt><code>text/javascript</code></dt>
   <dt><code>text/javascript1.1</code></dt>
   <dt><code>text/javascript1.2</code></dt>
   <dt><code>text/javascript1.3</code></dt>
   <dd>ECMAScript. <a href=#refsECMA262>[ECMA262]</a></dd>

   <dt><code>text/javascript;e4x=1</code></dt>
   <dd>ECMAScript with ECMAScript for XML. <a href=#refsECMA357>[ECMA357]</a></dd>

  </dl><p>User agents may support other MIME types and other languages.</p>

  <p>When examining types to determine if they support the language,
  user agents must not ignore unknown MIME parameters &mdash; types
  with unknown parameters must be assumed to be unsupported.</p>

  <!--
   XXX we should reference #refsRFC4329 http://www.ietf.org/rfc/rfc4329
  -->


  <h5 id=inline-documentation-for-external-scripts><span class=secno>4.3.1.2 </span><dfn title="script documentation">Inline documentation for external scripts</dfn></h5>

  <p>If a <code><a href=#script>script</a></code> element's <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute is specified, then the
  contents of the <code><a href=#script>script</a></code> element, if any, must be such
  that the value of the DOM <code title=dom-script-text><a href=#dom-script-text>text</a></code>
  attribute, which is derived from the element's contents, matches the
  <code title="">documentation</code> production in the following
  ABNF, the character set for which is Unicode. <a href=#refsABNF>[ABNF]</a></p> <!-- XXX
  ftp://ftp.rfc-editor.org/in-notes/std/std68.txt -->

  <pre>documentation = *( *( space / tab / comment ) [ line-comment ] newline )
comment       = slash star *( not-star / star not-slash ) 1*star slash
line-comment  = slash slash *not-newline

; characters
tab           = %x0009 ; U+0009 TAB
newline       = %x000A ; U+000A LINE FEED
space         = %x0020 ; U+0020 SPACE
star          = %x002A ; U+002A ASTERISK
slash         = %x002F ; U+002F SOLIDUS
not-newline   = %x0000-0009 / %x000B-%10FFFF
                ; a Unicode character other than U+000A LINE FEED
not-star      = %x0000-0029 / %x002B-%10FFFF
                ; a Unicode character other than U+002A ASTERISK
not-slash     = %x0000-002E / %x0030-%10FFFF
                ; a Unicode character other than U+002F SOLIDUS</pre>

  <div class=example>

   <p>This allows authors to include documentation, such as license
   information or API information, inside their documents while still
   referring to external script files. The syntax is constrained so
   that authors don't accidentally include what looks like valid
   script while also providing a <code title=attr-script-src><a href=#attr-script-src>src</a></code> attribute.</p>

   <pre>&lt;script src="cool-effects.js"&gt;
 // create new instances using:
 //    var e = new Effect();
 // start the effect using .play, stop using .stop:
 //    e.play();
 //    e.stop();
&lt;/script&gt;</pre>

  </div>



  <h4 id=the-noscript-element><span class=secno>4.3.2 </span>The <dfn><code>noscript</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>In a <code><a href=#the-head-element>head</a></code> element of an <a href=#html-documents title="HTML documents">HTML document</a>, if there are no ancestor <code><a href=#the-noscript-element>noscript</a></code> elements.</dd>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected in <a href=#html-documents>HTML documents</a>, if there are no ancestor <code><a href=#the-noscript-element>noscript</a></code> elements.</dd>
   <dt>Content model:</dt>
   <dd>When <a href=#concept-n-noscript title=concept-n-noscript>scripting is disabled</a>, in a <code><a href=#the-head-element>head</a></code> element: in any order, zero or more <code><a href=#the-link-element>link</a></code> elements, zero or more <code><a href=#the-style-element>style</a></code> elements, and zero or more <code><a href=#meta>meta</a></code> elements.</dd>
   <dd>When <a href=#concept-n-noscript title=concept-n-noscript>scripting is disabled</a>, not in a <code><a href=#the-head-element>head</a></code> element: <a href=#transparent>transparent</a>, but there must be no <code><a href=#the-noscript-element>noscript</a></code> element descendants.</dd>
   <dd>Otherwise: text that conforms to the requirements given in the prose.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-noscript-element>noscript</a></code> element <a href=#represents>represents</a> nothing
  if <a href=#concept-n-script title=concept-n-script>scripting is enabled</a>, and
  <a href=#represents>represents</a> its children if <a href=#concept-n-noscript title=concept-n-noscript>scripting is disabled</a>. It is used
  to present different markup to user agents that support scripting
  and those that don't support scripting, by affecting how the
  document is parsed.</p>

  <p>When used in <a href=#html-documents>HTML documents</a>, the allowed content
  model is as follows:</p>

  <dl><dt>In a <code><a href=#the-head-element>head</a></code> element, if <a href=#concept-n-noscript title=concept-n-noscript>scripting is disabled</a> for the
   <code><a href=#the-noscript-element>noscript</a></code> element</dt>

   <dd><p>The <code><a href=#the-noscript-element>noscript</a></code> element must contain only
   <code><a href=#the-link-element>link</a></code>, <code><a href=#the-style-element>style</a></code>, and <code><a href=#meta>meta</a></code>
   elements.</dd>

   <dt>In a <code><a href=#the-head-element>head</a></code> element, if <a href=#concept-n-script title=concept-n-script>scripting is enabled</a> for the
   <code><a href=#the-noscript-element>noscript</a></code> element</dt>

   <dd><p>The <code><a href=#the-noscript-element>noscript</a></code> element must contain only text,
   except that invoking the <a href=#html-fragment-parsing-algorithm>HTML fragment parsing
   algorithm</a> with the <code><a href=#the-noscript-element>noscript</a></code> element as the <var title="">context</var> element and the text contents as the <var title="">input</var> must result in a list of nodes that consists
   only of <code><a href=#the-link-element>link</a></code>, <code><a href=#the-style-element>style</a></code>, and
   <code><a href=#meta>meta</a></code> elements, and no <a href=#parse-error title="parse error">parse
   errors</a>.</dd>

   <dt>Outside of <code><a href=#the-head-element>head</a></code> elements, if <a href=#concept-n-noscript title=concept-n-noscript>scripting is disabled</a> for the
   <code><a href=#the-noscript-element>noscript</a></code> element</dt>

   <dd><p>The <code><a href=#the-noscript-element>noscript</a></code> element's content model is
   <a href=#transparent>transparent</a>, with the additional restriction that a
   <code><a href=#the-noscript-element>noscript</a></code> element must not have a <code><a href=#the-noscript-element>noscript</a></code>
   element as an ancestor (that is, <code><a href=#the-noscript-element>noscript</a></code> can't be
   nested).</dd>

   <dt>Outside of <code><a href=#the-head-element>head</a></code> elements, if <a href=#concept-n-script title=concept-n-script>scripting is enabled</a> for the
   <code><a href=#the-noscript-element>noscript</a></code> element</dt>

   <dd>

    <p>The <code><a href=#the-noscript-element>noscript</a></code> element must contain only text,
    except that the text must be such that running the following
    algorithm results in a conforming document with no
    <code><a href=#the-noscript-element>noscript</a></code> elements and no <code><a href=#script>script</a></code>
    elements, and such that no step in the algorithm causes an
    <a href=#html-parser>HTML parser</a> to flag a <a href=#parse-error>parse error</a>:</p>

    <ol><li>Remove every <code><a href=#script>script</a></code> element from the
     document.</li>

     <li>Make a list of every <code><a href=#the-noscript-element>noscript</a></code> element in the
     document. For every <code><a href=#the-noscript-element>noscript</a></code> element in that list,
     perform the following steps:

      <ol><li>Let the <var title="">parent element</var> be the parent
       element of the <code><a href=#the-noscript-element>noscript</a></code> element.</li>

       <li>Take all the children of the <var title="">parent element</var>
       that come before the <code><a href=#the-noscript-element>noscript</a></code> element, and call these
       elements <var title="">the before children</var>.</li>

       <li>Take all the children of the <var title="">parent element</var>
       that come <em>after</em> the <code><a href=#the-noscript-element>noscript</a></code> element, and
       call these elements <var title="">the after children</var>.</li>

       <li>Let <var title="">s</var> be the concatenation of all the
       <a href=#text-node>text node</a> children of the <code><a href=#the-noscript-element>noscript</a></code>
       element.</li>

       <li>Set the <code title=dom-innerHTML><a href=#dom-innerhtml>innerHTML</a></code>
       attribute of the <var title="">parent element</var> to the value
       of <var title="">s</var>. (This, as a side-effect, causes the
       <code><a href=#the-noscript-element>noscript</a></code> element to be removed from the
       document.)</li>

       <li>Insert <var title="">the before children</var> at the start of
       the <var title="">parent element</var>, preserving their original
       relative order.</li>

       <li>Insert <var title="">the after children</var> at the end of the
       <var title="">parent element</var>, preserving their original
       relative order.</li>

      </ol></li>

    </ol></dd>

  </dl><p class=note>All these contortions are required because, for
  historical reasons, the <code><a href=#the-noscript-element>noscript</a></code> element is handled
  differently by the <a href=#html-parser>HTML parser</a> based on whether <a href=#scripting-flag title="scripting flag">scripting was enabled or not</a> when the
  parser was invoked. The element is not allowed in XML, because in
  XML the parser is not affected by such state, and thus the element
  would not have the desired effect.</p>

  <p>The <code><a href=#the-noscript-element>noscript</a></code> element must not be used in <a href=#xml-documents>XML
  documents</a>.</p>

  <p class=note><strong>The <code><a href=#the-noscript-element>noscript</a></code> element is only
  effective in the <span>HTML serialization</span><!-- XXX xref -->,
  it has no effect in the <span>XML serialization</span><!-- XXX xref
  -->.</strong></p>

  <p>The <code><a href=#the-noscript-element>noscript</a></code> element has no other requirements. In
  particular, children of the <code><a href=#the-noscript-element>noscript</a></code> element are not
  exempt from <a href=#form-submission-0>form submission</a>, scripting, and so forth,
  even when <a href=#concept-n-script title=concept-n-script>scripting is enabled</a>
  for the element.</p>



  <h4 id=the-eventsource-element><span class=secno>4.3.3 </span>The <dfn><code>eventsource</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#metadata-content-0>metadata content</a> is expected.</dd>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmleventsourceelement>HTMLEventSourceElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-eventsource-src title=dom-eventsource-src>src</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-eventsource-element>eventsource</a></code> element <a href=#represents>represents</a> a
  target for events generated by a remote server.</p>

  <p>The <dfn id=attr-eventsource-src title=attr-eventsource-src><code>src</code></dfn>
  attribute, if specified, must give a <a href=#valid-url>valid URL</a>
  identifying a resource that uses the <code>text/event-stream</code>
  format.</p>

  <p>When an <code><a href=#the-eventsource-element>eventsource</a></code> element with a <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code> attribute specified is <a href=#insert-an-element-into-a-document title="insert an element into a document">inserted into the
  document</a>, and when an <code><a href=#the-eventsource-element>eventsource</a></code> element that
  is already in the document<!--XXX xref--> has a <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code> attribute added, the user
  agent must run the <a href=#add-declared-event-source>add declared event source</a>
  algorithm.</p>

  <p>While an <code><a href=#the-eventsource-element>eventsource</a></code> element is in a document<!--
  XXX xref -->, if its <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code>
  attribute is mutated, the user agent must must run the <a href=#remove-declared-event-source>remove
  declared event source</a> algorithm followed by the <a href=#add-declared-event-source>add
  declared event source</a> algorithm.</p>

  <p>When an <code><a href=#the-eventsource-element>eventsource</a></code> element with a <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code> attribute specified is
  removed from a document<!-- XXX xref -->, and when an
  <code><a href=#the-eventsource-element>eventsource</a></code> element that is in a document<!--XXX
  xref--> with a <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code>
  attribute specified has its <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code> attribute removed, the user
  agent must run the <a href=#remove-declared-event-source>remove declared event source</a>
  algorithm.</p>

  <!-- changing the base URL doesn't trigger these algorithms -->

  <p>When it is created, an <code><a href=#the-eventsource-element>eventsource</a></code> element must
  have its <i>current declared event source</i> set to
  "undefined".</p>

  <p>The <dfn id=add-declared-event-source>add declared event source</dfn> algorithm is as
  follows:</p>

  <ol><li><a href=#resolve-a-url title="resolve a url">Resolve</a> the <a href=#url>URL</a>
   specified by the <code><a href=#the-eventsource-element>eventsource</a></code> element's <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code> attribute, relative to the
   element.</li>

   <li>If that fails, then set the element's <i>current declared event
   source</i> to "undefined" and abort these steps.</li>

   <li>Otherwise, add the resulting <a href=#absolute-url>absolute URL</a> to the
   <a href=#concept-eventsource-list title=concept-eventsource-list>list of event sources</a>
   for the element.</li>

   <li>Let the element's <i>current declared event source</i> be that
   <a href=#absolute-url>absolute URL</a>.</li>

  </ol><p>The <dfn id=remove-declared-event-source>remove declared event source</dfn> algorithm is as
  follows:</p>

  <ol><li>If the element's <i>current declared event source</i> is
   "undefined", abort these steps.</li>

   <li>Otherwise, remove the element's <i>current declared event
   source</i> from the <a href=#concept-eventsource-list title=concept-eventsource-list>list of
   event sources</a> for the element.</li>

   <li>Let the element's <i>current declared event source</i> be
   "undefined".</li>

  </ol><p>There can be more than one <code><a href=#the-eventsource-element>eventsource</a></code> element per
  document, but authors should take care to avoid opening multiple
  connections to the same server as HTTP recommends a limit to the
  number of simultaneous connections that a user agent can open per
  server.</p>

  <!-- v2: make 'load', 'error', 'abort' events fire on this element -->

  <p>The <dfn id=dom-eventsource-src title=dom-eventsource-src><code>src</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>



  <h3 id=sections><span class=secno>4.4 </span>Sections</h3>

  <p id=applyToSection>Some elements, for example
  <code><a href=#the-address-element>address</a></code> elements, are scoped to their nearest ancestor
  <a href=#sectioning-content-0>sectioning content</a>. For such elements <var title="">x</var>, the elements that apply to a <a href=#sectioning-content-0>sectioning
  content</a> element <var title="">e</var> are all the <var title="">x</var> elements whose nearest <a href=#sectioning-content-0>sectioning
  content</a> ancestor is <var title="">e</var>.</p>


  <h4 id=the-body-element><span class=secno>4.4.1 </span>The <dfn><code>body</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#sectioning-root>Sectioning root</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As the second element in an <code><a href=#the-html-element>html</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=handler-window-onbeforeunload><a href=#handler-window-onbeforeunload>onbeforeunload</a></code></dd>
   <dd><code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code></dd>
   <dd><code title=handler-window-onhashchange><a href=#handler-window-onhashchange>onhashchange</a></code></dd>
   <dd><code title=handler-window-onload><a href=#handler-window-onload>onload</a></code></dd>
   <dd><code title=handler-window-onmessage><a href=#handler-window-onmessage>onmessage</a></code></dd>
   <dd><code title=handler-window-onoffline><a href=#handler-window-onoffline>onoffline</a></code></dd>
   <dd><code title=handler-window-ononline><a href=#handler-window-ononline>ononline</a></code></dd>
   <dd><code title=handler-window-onpopstate><a href=#handler-window-onpopstate>onpopstate</a></code></dd>
   <dd><code title=handler-window-onresize><a href=#handler-window-onresize>onresize</a></code></dd>
   <dd><code title=handler-window-onstorage><a href=#handler-window-onstorage>onstorage</a></code></dd>
   <dd><code title=handler-window-onunload><a href=#handler-window-onunload>onunload</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlbodyelement>HTMLBodyElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute <a href=#function>Function</a> <a href=#handler-window-onbeforeunload title=handler-window-onbeforeunload>onbeforeunload</a>;
           attribute any     <!--      --> <a href=#handler-window-onerror title=handler-window-onerror>onerror</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onhashchange title=handler-window-onhashchange>onhashchange</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onload title=handler-window-onload>onload</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onmessage title=handler-window-onmessage>onmessage</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onoffline title=handler-window-onoffline>onoffline</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-ononline title=handler-window-ononline>ononline</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onpopstate title=handler-window-onpopstate>onpopstate</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onresize title=handler-window-onresize>onresize</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onstorage title=handler-window-onstorage>onstorage</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onunload title=handler-window-onunload>onunload</a>;
};</pre>
</dd>
  </dl><p>The <code><a href=#the-body-element>body</a></code> element <a href=#represents>represents</a> the main
  content of the document.</p>

  <p>In conforming documents, there is only one <code><a href=#the-body-element>body</a></code>
  element. The <code title=dom-document-body><a href=#dom-document-body>document.body</a></code>
  DOM attribute provides scripts with easy access to a document's
  <code><a href=#the-body-element>body</a></code> element.</p>

  <p class=note>Some DOM operations (for example, parts of the
  <a href=#dnd>drag and drop</a> model) are defined in terms of "<a href=#the-body-element-0>the
  body element</a>". This refers to a particular element in the
  DOM, as per the definition of the term, and not any arbitrary
  <code><a href=#the-body-element>body</a></code> element.</p>

  <p>The <code><a href=#the-body-element>body</a></code> element exposes as <a href=#event-handler-content-attributes>event handler
  content attributes</a> a number of the <a href=#event-handler-attributes-0>event handler
  attributes</a> of the <code><a href=#window>Window</a></code> object. It also mirrors
  their <a href=#event-handler-dom-attributes>event handler DOM attributes</a>.</p>

  <p>The <code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code> and <code title=handler-window-onmessage><a href=#handler-window-onmessage>onmessage</a></code> <a href=#event-handler-attributes-0>event
  handler attributes</a> of the <code><a href=#window>Window</a></code> object, exposed
  on the <code><a href=#the-body-element>body</a></code> element, shadow the generic <code title=handler-onerror><a href=#handler-onerror>onerror</a></code> and <code title=handler-onmessage><a href=#handler-onmessage>onmessage</a></code> <a href=#event-handler-attributes-0>event handler
  attributes</a> normally supported by <a href=#html-elements>HTML
  elements</a>.</p>

  <p class=example>Thus, for example, a bubbling <code title=event-message><a href=#event-message>message</a></code> event fired on a child of
  <a href=#the-body-element-0>the body element</a> of a <code>Document</code> would first
  trigger the <code title=handler-onmessage><a href=#handler-onmessage>onmessage</a></code>
  <a href=#event-handler-content-attributes>event handler content attributes</a> of that element, then
  that of the root <code><a href=#the-html-element>html</a></code> element, and only <em>then</em>
  would it trigger the <code title=handler-window-onmessage><a href=#handler-window-onmessage>onmessage</a></code> <a href=#event-handler-content-attributes title="event
  handler content attributes">event handler content attribute</a>
  on the <code><a href=#the-body-element>body</a></code> element. This is because the event would
  bubble from the target, to the <code><a href=#the-body-element>body</a></code>, to the
  <code><a href=#the-html-element>html</a></code>, to the <code>Document</code>, to the
  <code><a href=#window>Window</a></code>, and the event handler attribute on the
  <code><a href=#the-body-element>body</a></code> is watching the <code><a href=#window>Window</a></code> not the
  <code><a href=#the-body-element>body</a></code>. A regular event listener attached to the
  <code><a href=#the-body-element>body</a></code> using <code title="">addEventListener()</code>,
  however, would fire when the event bubbled through the
  <code><a href=#the-body-element>body</a></code> and not when it reaches the <code><a href=#window>Window</a></code>
  object.</p>


  <h4 id=the-section-element><span class=secno>4.4.2 </span>The <dfn><code>section</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#sectioning-content-0>Sectioning content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-section-element>section</a></code> element <a href=#represents>represents</a> a
  generic document or application section. A section, in this context,
  is a thematic grouping of content, typically with a header, possibly
  with a footer.</p>

  <p class=example>Examples of sections would be chapters, the
  various tabbed pages in a tabbed dialog box, or the numbered
  sections of a thesis. A Web site's home page could be split into
  sections for an introduction, news items, contact information.</p>

  <div class=example>

   <p>In the following example, we see an article (part of a larger
   Web page) about apples, containing two short sections.</p>

   <pre>&lt;article&gt;
 &lt;header&gt;
  &lt;h1&gt;Apples&lt;/h1&gt;
  &lt;p&gt;Tasty, delicious fruit!&lt;/p&gt;
 &lt;/header&gt;
 &lt;p&gt;The apple is the pomaceous fruit of the apple tree.&lt;/p&gt;
 &lt;section&gt;
  &lt;h1&gt;Red Delicious&lt;/h1&gt;
  &lt;p&gt;These bright red apples are the most common found in many
  supermarkets.&lt;/p&gt;
 &lt;/section&gt;
 &lt;section&gt;
  &lt;h1&gt;Granny Smith&lt;/h1&gt;
  &lt;p&gt;These juicy, green apples and make a great filling for
  apple pies.&lt;/p&gt;
 &lt;/section&gt;
&lt;/article&gt;</pre>

  </div>

  <h4 id=the-nav-element><span class=secno>4.4.3 </span>The <dfn><code>nav</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#sectioning-content-0>Sectioning content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-nav-element>nav</a></code> element <a href=#represents>represents</a> a section of
  a page that links to other pages or to parts within the page: a
  section with navigation links. Not all groups of links on a page
  need to be in a <code><a href=#the-nav-element>nav</a></code> element &mdash; only sections that
  consist of primary navigation blocks are appropriate for the
  <code><a href=#the-nav-element>nav</a></code> element. In particular, it is common for footers to
  have a list of links to various key parts of a site, but the
  <code><a href=#the-footer-element>footer</a></code> element is more appropriate in such cases.</p>

  <div class=example>

   <p>In the following example, the page has several places where
   links are present, but only one of those places is considered a
   navigation section.</p>

   <pre>&lt;body&gt;
 &lt;header&gt;
  &lt;h1&gt;Wake up sheeple!&lt;/h1&gt;
  &lt;p&gt;&lt;a href="news.html"&gt;News&lt;/a&gt; -
     &lt;a href="blog.html"&gt;Blog&lt;/a&gt; -
     &lt;a href="forums.html"&gt;Forums&lt;/a&gt;&lt;/p&gt;
 &lt;/header&gt;
 &lt;nav&gt;
  &lt;h1&gt;Navigation&lt;/h1&gt;
  &lt;ul&gt;
   &lt;li&gt;&lt;a href="articles.html"&gt;Index of all articles&lt;/a&gt;&lt;li&gt;
   &lt;li&gt;&lt;a href="today.html"&gt;Things sheeple need to wake up for today&lt;/a&gt;&lt;li&gt;
   &lt;li&gt;&lt;a href="successes.html"&gt;Sheeple we have managed to wake&lt;/a&gt;&lt;li&gt;
  &lt;/ul&gt;
 &lt;/nav&gt;
 &lt;article&gt;
  &lt;p&gt;...<em>page content would be here</em>...&lt;/p&gt;
 &lt;/article&gt;
 &lt;footer&gt;
  &lt;p&gt;Copyright &copy; 2006 The Example Company&lt;/p&gt;
  &lt;p&gt;&lt;a href="about.html"&gt;About&lt;/a&gt; -
     &lt;a href="policy.html"&gt;Privacy Policy&lt;/a&gt; -
     &lt;a href="contact.html"&gt;Contact Us&lt;/a&gt;&lt;/p&gt;
 &lt;/footer&gt;
&lt;/body&gt;</pre>

  </div>


  <h4 id=the-article-element><span class=secno>4.4.4 </span>The <dfn><code>article</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#sectioning-content-0>Sectioning content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
<!--
XXX attributes to give the date authored, date published
-->
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-article-element>article</a></code> element <a href=#represents>represents</a> a
  section of a page that consists of a composition that forms an
  independent part of a document, page, or site. This could be a forum
  post, a magazine or newspaper article, a Web log entry, a
  user-submitted comment, or any other independent item of
  content.</p>

  <p class=note>An <code><a href=#the-article-element>article</a></code> element is "independent" in
  that its contents could stand alone, for example in syndication.
  However, the element is still associated with its ancestors; for
  instance, contact information that <a href=#applyToSection>applies</a> to a parent <code><a href=#the-body-element>body</a></code>
  element still covers the <code><a href=#the-article-element>article</a></code> as well.</p> <!-- XXX
  or should we apply the rules in the last paragraph to all articles?
  -->

  <p>When <code><a href=#the-article-element>article</a></code> elements are nested, the inner
  <code><a href=#the-article-element>article</a></code> elements represent articles that are in
  principle related to the contents of the outer article. For
  instance, a Web log entry on a site that accepts user-submitted
  comments could represent the comments as <code><a href=#the-article-element>article</a></code>
  elements nested within the <code><a href=#the-article-element>article</a></code> element for the Web
  log entry.</p>

  <p>Author information associated with an <code><a href=#the-article-element>article</a></code>
  element (q.v. the <code><a href=#the-address-element>address</a></code> element) does not apply to
  nested <code><a href=#the-article-element>article</a></code> elements.</p>



  <h4 id=the-aside-element><span class=secno>4.4.5 </span>The <dfn><code>aside</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#sectioning-content-0>Sectioning content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-aside-element>aside</a></code> element <a href=#represents>represents</a> a section
  of a page that consists of content that is tangentially related to
  the content around the <code><a href=#the-aside-element>aside</a></code> element, and which could
  be considered separate from that content. Such sections are often
  represented as sidebars in printed typography.</p>

  <div class=example>

   <p>The following example shows how an aside is used to mark up
   background material on Switzerland in a much longer news story on Europe.</p>

   <pre>&lt;aside&gt;
 &lt;h1&gt;Switzerland&lt;/h1&gt;
 &lt;p&gt;Switzerland, a land-locked country in the middle of geographic
 Europe, has not joined the geopolitical European Union, though it is
 a signatory to a number of European treaties.&lt;/p&gt;
&lt;/aside&gt;</pre>

  </div>

  <div class=example>

   <p>The following example shows how an aside is used to mark up
   a pull quote in a longer article.</p>

   <pre>...

&lt;p&gt;He later joined a large company, continuing on the same work.
&lt;q&gt;I love my job. People ask me what I do for fun when I'm not at
work. But I'm paid to do my hobby, so I never know what to
answer. Some people wonder what they would do if they didn't have to
work... but I know what I would do, because I was unemployed for a
year, and I filled that time doing exactly what I do
now.&lt;/q&gt;&lt;/p&gt;

&lt;aside&gt;
 &lt;q&gt; People ask me what I do for fun when I'm not at work. But I'm
 paid to do my hobby, so I never know what to answer. &lt;/q&gt;
&lt;/aside&gt;

&lt;p&gt;Of course his work &mdash; or should that be hobby? &mdash;
isn't his only passion. He also enjoys other pleasures.&lt;/p&gt;

...</pre>

  </div>



  <h4 id=the-h1,-h2,-h3,-h4,-h5,-and-h6-elements><span class=secno>4.4.6 </span>The <dfn><code>h1</code></dfn>, <dfn><code>h2</code></dfn>,
  <dfn><code>h3</code></dfn>, <dfn><code>h4</code></dfn>,
  <dfn><code>h5</code></dfn>, and <dfn><code>h6</code></dfn>
  elements</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#heading-content-0>Heading content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>These elements define headers for their sections.</p>

  <p>The semantics and meaning of these elements are defined in the
  section on <a href=#headings-and-sections>headings and sections</a>.</p>

  <p>These elements have a <dfn id=rank>rank</dfn> given by the number in
  their name. The <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code> element is said to have the highest
  rank, the <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code> element has the lowest rank, and two
  elements with the same name have equal rank.</p>


  <h4 id=the-header-element><span class=secno>4.4.7 </span>The <dfn><code>header</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#heading-content-0>Heading content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>, including at least one descendant
   that is <a href=#heading-content-0>heading content</a>, but no <a href=#sectioning-content-0>sectioning
   content</a> descendants, no <code><a href=#the-header-element>header</a></code> element
   descendants, and no <code><a href=#the-footer-element>footer</a></code> element descendants.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-header-element>header</a></code> element <a href=#represents>represents</a> the
  header of a section. The element is typically used to group a set of
  <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>&ndash;<code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code> elements to mark up a page's
  title with its subtitle or tagline. However, <code><a href=#the-header-element>header</a></code>
  elements may contain more than just the section's headings and
  subheadings &mdash; for example it would be reasonable for the
  header to include version history information.

  <p>For the purposes of document summaries, outlines, and the like,
  the text of <code><a href=#the-header-element>header</a></code> elements is defined to be the text
  of the highest <a href=#rank title=rank>ranked</a>
  <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>&ndash;<code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code> element descendant of the
  <code><a href=#the-header-element>header</a></code> element, if there are any such elements, and the
  first such element if there are multiple elements with that
  <a href=#rank>rank</a>. If there are no such elements, then the text of
  the <code><a href=#the-header-element>header</a></code> element is the empty string.</p>

  <p>Other heading elements in the <code><a href=#the-header-element>header</a></code> element
  indicate subheadings or subtitles.</p>

  <p>The <a href=#rank>rank</a> of a <code><a href=#the-header-element>header</a></code> element is the
  same as for an <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code> element (the highest rank).</p>

  <p>The section on <a href=#headings-and-sections>headings and sections</a>
  defines how <code><a href=#the-header-element>header</a></code> elements are assigned to individual
  sections.</p>

  <div class=example>

   <p>Here are some examples of valid headers. In each case, the
   emphasised text represents the text that would be used as the
   header in an application extracting header data and ignoring
   subheadings.</p>

   <pre>&lt;header&gt;
 &lt;h1&gt;<strong>The reality dysfunction</strong>&lt;/h1&gt;
 &lt;h2&gt;Space is not the only void&lt;/h2&gt;
&lt;/header&gt;</pre>

   <pre>&lt;header&gt;
 &lt;h1&gt;<strong>Dr. Strangelove</strong>&lt;/h1&gt;
 &lt;h2&gt;Or: How I Learned to Stop Worrying and Love the Bomb&lt;/h2&gt;
&lt;/header&gt;</pre>

   <pre>&lt;header&gt;
 &lt;p&gt;Welcome to...&lt;/p&gt;
 &lt;h1&gt;<strong>Voidwars!</strong>&lt;/h1&gt;
&lt;/header&gt;</pre>

   <pre>&lt;header&gt;
 &lt;h1&gt;<strong>Scalable Vector Graphics (SVG) 1.2</strong>&lt;/h1&gt;
 &lt;h2&gt;W3C Working Draft 27 October 2004&lt;/h2&gt;
 &lt;dl&gt;
  &lt;dt&gt;This version:&lt;/dt&gt;
  &lt;dd&gt;&lt;a href="http://www.w3.org/TR/2004/WD-SVG12-20041027/"&gt;http://www.w3.org/TR/2004/WD-SVG12-20041027/&lt;/a&gt;&lt;/dd&gt;
  &lt;dt&gt;Previous version:&lt;/dt&gt;
  &lt;dd&gt;&lt;a href="http://www.w3.org/TR/2004/WD-SVG12-20040510/"&gt;http://www.w3.org/TR/2004/WD-SVG12-20040510/&lt;/a&gt;&lt;/dd&gt;
  &lt;dt&gt;Latest version of SVG 1.2:&lt;/dt&gt;
  &lt;dd&gt;&lt;a href="http://www.w3.org/TR/SVG12/"&gt;http://www.w3.org/TR/SVG12/&lt;/a&gt;&lt;/dd&gt;
  &lt;dt&gt;Latest SVG Recommendation:&lt;/dt&gt;
  &lt;dd&gt;&lt;a href="http://www.w3.org/TR/SVG/"&gt;http://www.w3.org/TR/SVG/&lt;/a&gt;&lt;/dd&gt;
  &lt;dt&gt;Editor:&lt;/dt&gt;
  &lt;dd&gt;Dean Jackson, W3C, &lt;a href="mailto:dean@w3.org"&gt;dean@w3.org&lt;/a&gt;&lt;/dd&gt;
  &lt;dt&gt;Authors:&lt;/dt&gt;
  &lt;dd&gt;See &lt;a href="#authors"&gt;Author List&lt;/a&gt;&lt;/dd&gt;
 &lt;/dl&gt;
 &lt;p class="copyright"&gt;&lt;a href="http://www.w3.org/Consortium/Legal/ipr-notic <em>...</em>
&lt;/header&gt;</pre>
  </div>


  <h4 id=the-footer-element><span class=secno>4.4.8 </span>The <dfn><code>footer</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>, but with no <a href=#heading-content-0>heading
   content</a> descendants, no <a href=#sectioning-content-0>sectioning content</a>
   descendants, and no <code><a href=#the-footer-element>footer</a></code> element descendants.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-footer-element>footer</a></code> element <a href=#represents>represents</a> a footer
  for the section it <a href=#applyToSection>applies</a> to. A
  footer typically contains information about its section such as who
  wrote it, links to related documents, copyright data, and the
  like.</p>

  <p>Contact information for the section given in a
  <code><a href=#the-footer-element>footer</a></code> should be marked up using the
  <code><a href=#the-address-element>address</a></code> element.</p>

  <p>Footers don't necessarily have to appear at the end of a section,
  though they usually do.</p>

  <div class=example>

   <p>Here is a page with two footers, one at the top and one at the
   bottom, with the same content:</p>

   <pre>&lt;body&gt;
 &lt;footer&gt;&lt;a href="../"&gt;Back to index...&lt;/a&gt;&lt;/footer&gt;
 &lt;header&gt;
  &lt;h1&gt;Lorem ipsum&lt;/h1&gt;
  &lt;h2&gt;The ipsum of all lorems&lt;/h2&gt;
 &lt;/header&gt;
 &lt;p&gt;A dolor sit amet, consectetur adipisicing elit, sed do eiusmod
 tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
 veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
 ea commodo consequat. Duis aute irure dolor in reprehenderit in
 voluptate velit esse cillum dolore eu fugiat nulla
 pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
 culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
 &lt;footer&gt;&lt;a href="../"&gt;Back to index...&lt;/a&gt;&lt;/footer&gt;
&lt;/body&gt;</pre>

  </div>


  <h4 id=the-address-element><span class=secno>4.4.9 </span>The <dfn><code>address</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>, but with no <a href=#heading-content-0>heading
   content</a> descendants, no <a href=#sectioning-content-0>sectioning content</a>
   descendants, no <code><a href=#the-footer-element>footer</a></code> element descendants, and no
   <code><a href=#the-address-element>address</a></code> element descendants.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-address-element>address</a></code> element <a href=#represents>represents</a> the
  contact information for the section it <a href=#applyToSection>applies</a> to. If it applies to <a href=#the-body-element-0>the
  body element</a>, then it instead applies to the document as a
  whole.</p>

  <div class=example>
   <p>For example, a page at the W3C Web site related to HTML might
   include the following contact information:</p>
   <pre>&lt;ADDRESS&gt;
 &lt;A href="../People/Raggett/"&gt;Dave Raggett&lt;/A&gt;, 
 &lt;A href="../People/Arnaud/"&gt;Arnaud Le Hors&lt;/A&gt;, 
 contact persons for the &lt;A href="Activity"&gt;W3C HTML Activity&lt;/A&gt;
&lt;/ADDRESS&gt;</pre>
  </div>

  <p>The <code><a href=#the-address-element>address</a></code> element must not be used to represent
  arbitrary addresses (e.g. postal addresses), unless those addresses
  are contact information for the section. (The <code><a href=#the-p-element>p</a></code> element
  is the appropriate element for marking up such addresses.)</p>

  <p>The <code><a href=#the-address-element>address</a></code> element must not contain information
  other than contact information.</p>

  <div class=example>
   <p>For example, the following is non-conforming use of the
   <code><a href=#the-address-element>address</a></code> element:</p>
   <pre>&lt;ADDRESS&gt;Last Modified: 1999/12/24 23:37:50&lt;/ADDRESS&gt;</pre>
  </div>

  <p>Typically, the <code><a href=#the-address-element>address</a></code> element would be included
  with other information in a <code><a href=#the-footer-element>footer</a></code> element.</p>

  <p>To determine the contact information for a <a href=#sectioning-content-0>sectioning
  content</a> element (such as a document's <code><a href=#the-body-element>body</a></code>
  element, which would give the contact information for the page), UAs
  must collect all the <code><a href=#the-address-element>address</a></code> elements that <a href=#applyToSection>apply</a> to that <a href=#sectioning-content-0>sectioning
  content</a> element and its ancestor <a href=#sectioning-content-0>sectioning
  content</a> elements. The contact information is the collection
  of all the information given by those elements.</p> <!-- XXX
  exception for nested article elements? -->

  <p class=note>Contact information for one <a href=#sectioning-content-0>sectioning
  content</a> element, e.g.  an <code><a href=#the-aside-element>aside</a></code> element, does
  not apply to its ancestor elements, e.g. the page's
  <code><a href=#the-body-element>body</a></code>.</p>



  <h4 id=headings-and-sections><span class=secno>4.4.10 </span><dfn>Headings and sections</dfn></h4>

  <p>The <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>&ndash;<code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code> elements and the
  <code><a href=#the-header-element>header</a></code> element are headings.</p>

  <p>The first element of <a href=#heading-content-0>heading content</a> in an element
  of <a href=#sectioning-content-0>sectioning content</a> <a href=#represents>represents</a> the
  header for that section. Subsequent headers of equal or higher
  <a href=#rank>rank</a> start new (implied) sections, headers of lower
  <a href=#rank>rank</a> start implied subsections that are part of the
  previous one. In both cases, the element <a href=#represents>represents</a> the
  header of the implied section.</p>

  <p><a href=#sectioning-content-0>Sectioning content</a> elements are always considered
  subsections of their nearest ancestor element of <a href=#sectioning-content-0>sectioning
  content</a>, regardless of what implied sections other headings
  may have created.</p>

  <p>Certain elements are said to be <dfn id=sectioning-root title="sectioning
  root">sectioning roots</dfn>, including <code><a href=#the-blockquote-element>blockquote</a></code> and
  <code><a href=#the-td-element>td</a></code> elements. These elements can have their own
  outlines, but the sections and headers inside these elements do not
  contribute to the outlines of their ancestors.</p>

  <div class=example>
   <p>For the following fragment:</p>
   <pre>&lt;body&gt;
 &lt;h1&gt;Foo&lt;/h1&gt;
 &lt;h2&gt;Bar&lt;/h2&gt;
 &lt;blockquote&gt;
  &lt;h3&gt;Bla&lt;/h3&gt;
 &lt;/blockquote&gt;
 &lt;p&gt;Baz&lt;/p&gt;
 &lt;h2&gt;Quux&lt;/h2&gt;
 &lt;section&gt;
  &lt;h3&gt;Thud&lt;/h3&gt;
 &lt;/section&gt;
 &lt;p&gt;Grunt&lt;/p&gt;
&lt;/body&gt;</pre>
   <p>...the structure would be:</p>
   <ol><li>
     Foo (heading of explicit <code><a href=#the-body-element>body</a></code> section, containing the "Grunt" paragraph)
     <ol><li>
       Bar (heading starting implied section, containing a block quote and the "Baz" paragraph)
      </li>
      <li>
       Quux (heading starting implied section)
      </li>
      <li>
       Thud (heading of explicit <code><a href=#the-section-element>section</a></code> section)
      </li>
     </ol></li>
   </ol><p>Notice how the <code><a href=#the-section-element>section</a></code> ends the earlier implicit
   section so that a later paragraph ("Grunt") is back at the top
   level.</p>
  </div>

  <p>Sections may contain headers of any <a href=#rank>rank</a>, but
  authors are strongly encouraged to either use only <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>
  elements, or to use elements of the appropriate <a href=#rank>rank</a>
  for the section's nesting level.</p>

  <p>Authors are also encouraged to explicitly wrap sections in
  elements of <a href=#sectioning-content-0>sectioning content</a>, instead of relying on
  the implicit sections generated by having multiple heading in one
  element of <a href=#sectioning-content-0>sectioning content</a>.</p>

  <div class=example>
   <p>For example, the following is correct:</p>

   <pre>&lt;body&gt;
 &lt;h4&gt;Apples&lt;/h4&gt;
 &lt;p&gt;Apples are fruit.&lt;/p&gt;
 &lt;section&gt;
  &lt;h2&gt;Taste&lt;/h2&gt;
  &lt;p&gt;They taste lovely.&lt;/p&gt;
  &lt;h6&gt;Sweet&lt;/h6&gt;
  &lt;p&gt;Red apples are sweeter than green ones.&lt;/p&gt;
  &lt;h1&gt;Color&lt;/h1&gt;
  &lt;p&gt;Apples come in various colors.&lt;/p&gt;
 &lt;/section&gt;
&lt;/body&gt;</pre>

   <p>However, the same document would be more clearly expressed
   as:</p>

   <pre>&lt;body&gt;
 &lt;h1&gt;Apples&lt;/h1&gt;
 &lt;p&gt;Apples are fruit.&lt;/p&gt;
 &lt;section&gt;
  &lt;h2&gt;Taste&lt;/h2&gt;
  &lt;p&gt;They taste lovely.&lt;/p&gt;
  &lt;section&gt;
   &lt;h3&gt;Sweet&lt;/h3&gt;
   &lt;p&gt;Red apples are sweeter than green ones.&lt;/p&gt;
  &lt;/section&gt;
 &lt;/section&gt;
 &lt;section&gt;
  &lt;h2&gt;Color&lt;/h2&gt;
  &lt;p&gt;Apples come in various colors.&lt;/p&gt;
 &lt;/section&gt;
&lt;/body&gt;</pre>

   <p>Both of the documents above are semantically identical and would
   produce the same outline in compliant user agents.</p>

  </div>


  <h5 id=outlines><span class=secno>4.4.10.1 </span>Creating an outline</h5>

  <p>This section defines an algorithm for creating an outline for a
  <a href=#sectioning-content-0>sectioning content</a> element or a <a href=#sectioning-root>sectioning
  root</a> element. It is defined in terms of a walk over the nodes
  of a DOM tree, in tree order, with each node being visited when it
  is <i>entered</i> and when it is <i>exited</i> during the walk.</p>

  <p>The <dfn id=outline>outline</dfn> for a <a href=#sectioning-content-0>sectioning content</a>
  element or a <a href=#sectioning-root>sectioning root</a> element consists of a list
  of one or more potentially nested <a href=#concept-section title=concept-section>sections</a>. A <dfn id=concept-section title=concept-section>section</dfn> is a container that
  corresponds to some nodes in the original DOM tree. Each section can
  have one heading associated with it, and can contain any number of
  further nested sections. The algorithm for the outline also
  associates each node in the DOM tree with a particular section and
  potentially a heading. (The sections in the outline aren't
  <code><a href=#the-section-element>section</a></code> elements, though some may correspond to such
  elements &mdash; they are merely conceptual sections.)</p>

  <div class=example>

   <p>The following markup fragment:</p>

   <pre>&lt;body&gt;
 &lt;h1&gt;A&lt;/h1&gt;
 &lt;p&gt;B&lt;/p&gt;
 &lt;h2&gt;C&lt;/h2&gt;
 &lt;p&gt;D&lt;/p&gt;
 &lt;h2&gt;E&lt;/h2&gt;
 &lt;p&gt;F&lt;/p&gt;
&lt;/body&gt;</pre>

   <p>...results in the following outline being created for the
   <code><a href=#the-body-element>body</a></code> node (and thus the entire document):</p>

   <ol class=brief><li>
     <p>Section created for <code><a href=#the-body-element>body</a></code> node.</p>
     <p>Associated with heading "A".</p>
     <p>Also associated with paragraph "B".</p>
     <p>Nested sections:</p>
     <ol class=brief><li>
       <p>Section implied for first <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h2</a></code> element.</p>
       <p>Associated with heading "C".</p>
       <p>Also associated with paragraph "D".</p>
       <p>No nested sections.</p>
      </li>
      <li>
       <p>Section implied for second <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h2</a></code> element.</p>
       <p>Associated with heading "E".</p>
       <p>Also associated with paragraph "F".</p>
       <p>No nested sections.</p>
      </li>
     </ol></li>
   </ol></div>

  <p>The algorithm that must be followed during a walk of a DOM
  subtree rooted at a <a href=#sectioning-content-0>sectioning content</a> element or a
  <a href=#sectioning-root>sectioning root</a> element to determine that element's
  <a href=#outline>outline</a> is as follows:</p>

  <ol><li><p>Let <var title="">current outlinee</var> be null. (It holds
   the element whose <a href=#outline>outline</a> is being created.)</li>

   <li><p>Let <var title="">current section</var> be null. (It holds a
   pointer to a <a href=#concept-section title=concept-section>section</a>, so that
   elements in the DOM can all be associated with a section.)</li>

   <li><p>Create a stack to hold elements, which is used to handle
   nesting. Initialize this stack to empty.</li>

   <li>

    <p>As you walk over the DOM in <a href=#tree-order>tree order</a>, trigger
    the first relevant step below for each element as you enter and
    exit it.</p>

    <dl class=switch><dt>If the top of the stack is an element, and you are exiting
     that element</dt>

     <dd>

      <p class=note>The element being exited is a <a href=#heading-content-0>heading
      content</a> element.</p>

      <p>Pop that element from the stack.</p>

     </dd>


     <dt>If the top of the stack is a <a href=#heading-content-0>heading content</a>
     element</dt>

     <dd><p>Do nothing.</dd>


     <dt>When entering a <a href=#sectioning-content-0>sectioning content</a> element or a
     <a href=#sectioning-root>sectioning root</a> element</dt>

     <dd>

      <p>If <var title="">current outlinee</var> is not null, push
      <var title="">current outlinee</var> onto the stack.</p>

      <p>Let <var title="">current outlinee</var> be the element
      that is being entered.</p>

      <p>Let <var title="">current section</var> be a newly created
      <a href=#concept-section title=concept-section>section</a> for the <var title="">current outlinee</var> element.</p>

      <p>Let there be a new <a href=#outline>outline</a> for the new <var title="">current outlinee</var>, initialized with just the new
      <var title="">current section</var> as the only <a href=#concept-section title=concept-section>section</a> in the outline.</p>

     </dd>


     <dt>When exiting a <a href=#sectioning-content-0>sectioning content</a> element, if
     the stack is not empty</dt>

     <dd>

      <p>Pop the top element from the stack, and let the <var title="">current outlinee</var> be that element.</p>

      <p>Let <var title="">current section</var> be the last section
      in the <a href=#outline>outline</a> of the <var title="">current
      outlinee</var> element.</p>

      <p>Append the <a href=#outline>outline</a> of the <a href=#sectioning-content-0>sectioning
      content</a> element being exited to the <var title="">current
      section</var>. (This does not change which section is the last
      section in the <a href=#outline>outline</a>.)</p>

     </dd>


     <dt>When exiting a <a href=#sectioning-root>sectioning root</a> element, if the
     stack is not empty</dt>

     <dd>

      <p>Run these steps:</p>

      <ol><li><p>Pop the top element from the stack, and let the <var title="">current outlinee</var> be that element.</li>

       <li><p>Let <var title="">current section</var> be the last
       section in the <a href=#outline>outline</a> of the <var title="">current
       outlinee</var> element.</li>

       <li><p><i>Finding the deepest child:</i> If <var title="">current section</var> has no child sections, stop
       these steps.</li>

       <li><p>Let <var title="">current section</var> be the last
       child <a href=#concept-section title=concept-section>section</a> of the
       current <var title="">current section</var>.</li>

       <li><p>Go back to the substep labeled <i>finding the deepest
       child</i>.</li>

      </ol></dd>


     <dt>When exiting a <a href=#sectioning-content-0>sectioning content</a> element or a
     <a href=#sectioning-root>sectioning root</a> element</dt>

     <dd>

      <p class=note>The <var title="">current outlinee</var> is
      the element being exited.</p>

      <p>Let <var title="">current section</var> be the first <a href=#concept-section title=concept-section>section</a> in the
      <a href=#outline>outline</a> of the <var title="">current outlinee</var>
      element.</p>

      <p>Skip to the next step in the overall set of steps. (The walk
      is over.)</p>

     </dd>


     <dt>If the <var title="">current outlinee</var> is null.</dt>

     <dd><p>Do nothing.</dd>


     <dt>When entering a <a href=#heading-content-0>heading content</a> element</dt>

     <dd>

      <p>If the <var title="">current section</var> has no heading,
      let the element being entered be the heading for the <var title="">current section</var>.</p>

      <p>Otherwise, if the element being entered has a
      <a href=#rank>rank</a> equal to or greater than the heading of the
      last section of the <a href=#outline>outline</a> of the <var title="">current outlinee</var>, then create a new <a href=#concept-section title=concept-section>section</a> and append it to the
      <a href=#outline>outline</a> of the <var title="">current outlinee</var>
      element, so that this new section is the new last section of
      that outline. Let <var title="">current section</var> be that
      new section. Let the element being entered be the new heading
      for the <var title="">current section</var>.</p>

      <p>Otherwise, run these substeps:</p>

      <ol><li><p>Let <var title="">candidate section</var> be <var title="">current section</var>.</li>

       <li><p>If the element being entered has a <a href=#rank>rank</a>
       lower than the <a href=#rank>rank</a> of the heading of the <var title="">candidate section</var>, then create a new <a href=#concept-section title=concept-section>section</a>, and append it to <var title="">candidate section</var>. (This does not change which
       section is the last section in the outline.) Let <var title="">current section</var> be this new section.  Let the
       element being entered be the new heading for the <var title="">current section</var>. Abort these substeps.</p>

       <li><p>Let <var title="">new candidate section</var> be the
       <a href=#concept-section title=concept-section>section</a> that contains <var title="">candidate section</var> in the <a href=#outline>outline</a> of
       <var title="">current outlinee</var>.</li>

       <li><p>Let <var title="">candidate section</var> be <var title="">new candidate section</var>.</li>

       <li><p>Return to step 2.</li>

      </ol><p>Push the element being entered onto the stack. (This causes
      the algorithm to skip any descendants of the element.)</p>

      <p class=note>Recall that <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code> has the
      <em>highest</em> rank, and <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code> has the lowest
      rank.</p>

     </dd>


     <dt>Otherwise</dt>

     <dd><p>Do nothing.</dd>

    </dl><p id=associatedSection>In addition, whenever you exit a node,
    after doing the steps above, if <var title="">current
    section</var> is not null, associate the node with the <a href=#concept-section title=concept-section>section</a> <var title="">current
    section</var>.</p>

   </li>

   <li><p>If the <var title="">current outlinee</var> is null,
   then there was no <a href=#sectioning-content-0>sectioning content</a> element or
   <a href=#sectioning-root>sectioning root</a> element in the DOM. There is no
   <a href=#outline>outline</a>. Abort these steps.</li>

   <li><p>Associate any nodes that were not associated with a <a href=#concept-section title=concept-section>section</a> in the steps above with <var title="">current outlinee</var> as their section.</li>

   <li><p>Associate all nodes with the heading of the <a href=#concept-section title=concept-section>section</a> with which they are
   associated, if any.</li>

   <li><p>If <var title="">current outlinee</var> is <a href=#the-body-element-0>the body
   element</a>, then the outline created for that element is the
   <a href=#outline>outline</a> of the entire document.</li>

  </ol><p>The tree of sections created by the algorithm above, or a proper
  subset thereof, must be used when generating document outlines, for
  example when generating tables of contents.</p>

  <p>When creating an interactive table of contents, entries should
  jump the user to the relevant <a href=#sectioning-content-0>sectioning content</a>
  element, if the <a href=#concept-section title=concept-section>section</a> was
  created for a real element in the original document, or to the
  relevant <a href=#heading-content-0>heading content</a> element, if the <a href=#concept-section title=concept-section>section</a> in the tree was generated for
  a heading in the above process.</p>

  <p class=note>Selecting the first <a href=#concept-section title=concept-section>section</a> of the document therefore
  always takes the user to the top of the document, regardless of
  where the first header in the <code><a href=#the-body-element>body</a></code> is to be found.</p>
  <!-- XXX assuming there is a body, anyway -->

  <div class=note>

   <p>The following JavaScript function shows how the tree walk could
   be implemented. The <var title="">root</var> argument is the root
   of the tree to walk, and the <var title="">enter</var> and <var title="">exit</var> arguments are callbacks that are called with
   the nodes as they are entered and exited. <a href=#refsECMA262>[ECMA262]</a></p>

   <pre>function (root, enter, exit) {
  var node = root;
  start: while (node) {
    enter(node);
    if (node.firstChild) {
      node = node.firstChild;
      continue start;
    }
    while (node) {
      exit(node);
      if (node.nextSibling) {
        node = node.nextSibling;
        continue start;
      }
      if (node == root)
        node = null;
      else
        node = node.parentNode;
    }
  }
}</pre>

  </div>


  <h5 id=distinguishing-site-wide-headings-from-page-headings><span class=secno>4.4.10.2 </span>Distinguishing site-wide headings from page headings</h5>

  <p>Given the <a href=#outline>outline</a> of a document, but ignoring any
  sections created for <code><a href=#the-nav-element>nav</a></code> and <code><a href=#the-aside-element>aside</a></code>
  elements, and any of their descendants, if the only root of the tree
  is <a href=#the-body-element-0>the body element</a>'s <a href=#concept-section title=concept-section>section</a>, and it has only a single
  subsection which is created by an <code><a href=#the-article-element>article</a></code> element, then
  the heading of <a href=#the-body-element-0>the body element</a> should be assumed to be
  a site-wide heading, and the heading of the <code><a href=#the-article-element>article</a></code>
  element should be assumed to be the page's heading.</p>

  <p>If a page starts with a heading that is common to the whole site,
  the document must be authored such that, in the document's
  <a href=#outline>outline</a>, ignoring any sections created for
  <code><a href=#the-nav-element>nav</a></code> and <code><a href=#the-aside-element>aside</a></code> elements and any of their
  descendants, the tree has only one root <a href=#concept-section title=concept-section>section</a>, <a href=#the-body-element-0>the body
  element</a>'s section, its heading is the site-wide heading,
  <a href=#the-body-element-0>the body element</a> has just one subsection, that
  subsection is created by an <code><a href=#the-article-element>article</a></code> element, and that
  <code><a href=#the-article-element>article</a></code>'s heading is the page heading.</p>

  <p>If a page does not contain a site-wide heading, then the page
  must be authored such that, in the document's <a href=#outline>outline</a>,
  ignoring any sections created for <code><a href=#the-nav-element>nav</a></code> and
  <code><a href=#the-aside-element>aside</a></code> elements and any of their descendants, either
  <a href=#the-body-element-0>the body element</a> has no subsections, or it has more
  than one subsection, or it has a single subsection but that
  subsection is not created by an <code><a href=#the-article-element>article</a></code> element, or
  there is more than one <a href=#concept-section title=concept-section>section</a>
  at the root of the outline.</p>

  <p class=note>Conceptually, a site is thus a document with many
  articles &mdash; when those articles are split into many pages, the
  heading of the original single page becomes the heading of the site,
  repeated on every page.</p>



  <h3 id=grouping-content><span class=secno>4.5 </span>Grouping content</h3><!-- XXX ew, find a better section name -->

  <h4 id=the-p-element><span class=secno>4.5.1 </span>The <dfn><code>p</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-p-element>p</a></code> element <a href=#represents>represents</a> a
  <a href=#paragraph>paragraph</a>.</p>

  <div class=example>
   <p>The following examples are conforming HTML fragments:</p>
   <pre>&lt;p&gt;The little kitten gently seated himself on a piece of
carpet. Later in his life, this would be referred to as the time the
cat sat on the mat.&lt;/p&gt;</pre>
   <pre>&lt;fieldset&gt;
 &lt;legend&gt;Personal information&lt;/legend&gt;
 &lt;p&gt;
   &lt;label&gt;Name: &lt;input name="n"&gt;&lt;/label&gt;
   &lt;label&gt;&lt;input name="anon" type="checkbox"&gt; Hide from other users&lt;/label&gt;
 &lt;/p&gt;
 &lt;p&gt;&lt;label&gt;Address: &lt;textarea name="a"&gt;&lt;/textarea&gt;&lt;/label&gt;&lt;/p&gt;
&lt;/fieldset&gt;</pre>
   <pre>&lt;p&gt;There was once an example from Femley,&lt;br&gt;
Whose markup was of dubious quality.&lt;br&gt;
The validator complained,&lt;br&gt;
So the author was pained,&lt;br&gt;
To move the error from the markup to the rhyming.&lt;/p&gt;</pre>
  </div>

  <p>The <code><a href=#the-p-element>p</a></code> element should not be used when a more
  specific element is more appropriate.</p>

  <div class=example>

   <p>The following example is technically correct:</p>

<pre>&lt;section&gt;
 &lt;!-- ... --&gt;
 &lt;p&gt;Last modified: 2001-04-23&lt;/p&gt;
 &lt;p&gt;Author: fred@example.com&lt;/p&gt;
&lt;/section&gt;</pre>

   <p>However, it would be better marked-up as:</p>

<pre>&lt;section&gt;
 &lt;!-- ... --&gt;
 &lt;footer&gt;Last modified: 2001-04-23&lt;/footer&gt;
 &lt;address&gt;Author: fred@example.com&lt;/address&gt;
&lt;/section&gt;</pre>

   <p>Or:</p>

<pre>&lt;section&gt;
 &lt;!-- ... --&gt;
 &lt;footer&gt;
  &lt;p&gt;Last modified: 2001-04-23&lt;/p&gt;
  &lt;address&gt;Author: fred@example.com&lt;/address&gt;
 &lt;/footer&gt;
&lt;/section&gt;</pre>

  </div>


  <h4 id=the-hr-element><span class=secno>4.5.2 </span>The <dfn><code>hr</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-hr-element>hr</a></code> element <a href=#represents>represents</a> a
  <a href=#paragraph>paragraph</a>-level thematic break, e.g. a scene change in
  a story, or a transition to another topic within a section of a
  reference book.</p>


  <h4 id=the-br-element><span class=secno>4.5.3 </span>The <dfn><code>br</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-br-element>br</a></code> element <a href=#represents>represents</a> a line
  break.</p>

  <p><code><a href=#the-br-element>br</a></code> elements must be empty. Any content inside
  <code><a href=#the-br-element>br</a></code> elements must not be considered part of the
  surrounding text.</p>

  <p><code><a href=#the-br-element>br</a></code> elements must be used only for line breaks that
  are actually part of the content, as in poems or addresses.</p>

  <div class=example>

  <p>The following example is correct usage of the <code><a href=#the-br-element>br</a></code>
  element:</p>

   <pre>&lt;p&gt;P. Sherman&lt;br&gt;
42 Wallaby Way&lt;br&gt;
Sydney&lt;/p&gt;</pre>

  </div>

  <p><code><a href=#the-br-element>br</a></code> elements must not be used for separating thematic
  groups in a paragraph.</p>

  <div class=example>

   <p>The following examples are non-conforming, as they abuse the
   <code><a href=#the-br-element>br</a></code> element:</p>

   <pre>&lt;p&gt;&lt;a ...&gt;34 comments.&lt;/a&gt;&lt;br&gt;
&lt;a ...&gt;Add a comment.&lt;a&gt;&lt;/p&gt;</pre>

   <pre>&lt;p&gt;Name: &lt;input name="name"&gt;&lt;br&gt;
Address: &lt;input name="address"&gt;&lt;/p&gt;</pre>

   <p>Here are alternatives to the above, which are correct:</p>

   <pre>&lt;p&gt;&lt;a ...&gt;34 comments.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a ...&gt;Add a comment.&lt;a&gt;&lt;/p&gt;</pre>

   <pre>&lt;p&gt;Name: &lt;input name="name"&gt;&lt;/p&gt;
&lt;p&gt;Address: &lt;input name="address"&gt;&lt;/p&gt;</pre>

   <!-- XXX should have labels in the examples above -->

  </div>

  <p>If a <a href=#paragraph>paragraph</a> consists of nothing but a single
  <code><a href=#the-br-element>br</a></code> element, it represents a placeholder blank line
  (e.g. as in a template). Such blank lines must not be used for
  presentation purposes.</p> <!-- XXX i'm uncomfortable about
  this. The use case is editing, e.g. contentEditable, where a user
  has created a new paragraph but not added any text to it yet. Such
  content shouldn't go over the wire, though. We need to make it
  illegal while still defining what it means. Maybe. -->


  <h4 id=the-pre-element><span class=secno>4.5.4 </span>The <dfn><code>pre</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-pre-element>pre</a></code> element <a href=#represents>represents</a> a block of
  preformatted text, in which structure is represented by typographic
  conventions rather than by elements.</p>

  <p class=note><strong>In the <span title="">HTML
  serialization</span><!-- XXX xref -->, a leading newline character
  immediately following the <code><a href=#the-pre-element>pre</a></code> element start tag is
  stripped.</strong></p>

  <p>Some examples of cases where the <code><a href=#the-pre-element>pre</a></code> element could
  be used:</p>

  <ul><li>Including an e-mail, with paragraphs indicated by blank lines,
   lists indicated by lines prefixed with a bullet, and so on.</li>

   <li>Including fragments of computer code, with structure indicated
   according to the conventions of that language.</li>

   <li>Displaying ASCII art.</li> <!-- XXX need a note about non-visual UAs -->

  </ul><p>To represent a block of computer code, the <code><a href=#the-pre-element>pre</a></code>
  element can be used with a <code><a href=#the-code-element>code</a></code> element; to represent a
  block of computer output the <code><a href=#the-pre-element>pre</a></code> element can be used
  with a <code><a href=#the-samp-element>samp</a></code> element. Similarly, the <code><a href=#the-kbd-element>kbd</a></code>
  element can be used within a <code><a href=#the-pre-element>pre</a></code> element to indicate
  text that the user is to enter.</p>

  <div class=example>

   <p>In the following snippet, a sample of computer code is
   presented.</p>

   <pre>&lt;p&gt;This is the &lt;code&gt;Panel&lt;/code&gt; constructor:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function Panel(element, canClose, closeHandler) {
  this.element = element;
  this.canClose = canClose;
  this.closeHandler = function () { if (closeHandler) closeHandler() };
}&lt;/code&gt;&lt;/pre&gt;</pre>

  </div>

  <div class=example>

   <p>In the following snippet, <code><a href=#the-samp-element>samp</a></code> and <code><a href=#the-kbd-element>kbd</a></code>
   elements are mixed in the contents of a <code><a href=#the-pre-element>pre</a></code> element to
   show a session of Zork I.</p>

   <pre>&lt;pre&gt;&lt;samp&gt;You are in an open field west of a big white house with a boarded
front door.
There is a small mailbox here.

&gt;&lt;/samp&gt; &lt;kbd&gt;open mailbox&lt;/kbd&gt;

&lt;samp&gt;Opening the mailbox reveals:
A leaflet.

&gt;&lt;/samp&gt;&lt;/pre&gt;</pre>

  </div>

  <div class=example>

   <p>The following shows a contemporary poem that uses the
   <code><a href=#the-pre-element>pre</a></code> element to preserve its unusual formatting, which
   forms an intrinsic part of the poem itself.</p>

   <pre>&lt;pre&gt;                maxling

it is with a          heart
               heavy

that i admit loss of a feline
        so           loved

a friend lost to the
        unknown
                                (night)

~cdr 11dec07&lt;/pre&gt;</pre>

  </div>


  <h4 id=the-dialog-element><span class=secno>4.5.5 </span>The <dfn><code>dialog</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more pairs of one <code><a href=#the-dt-element>dt</a></code> element followed by
   one <code><a href=#the-dd-element>dd</a></code> element.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-dialog-element>dialog</a></code> element <a href=#represents>represents</a> a
  conversation, meeting minutes, a chat transcript, a dialog in a
  screenplay, an instant message log, or some other construct in which
  different players take turns in discourse.</p>

  <p>Each part of the conversation must have an explicit talker (or
  speaker) given by a <code><a href=#the-dt-element>dt</a></code> element, and a discourse (or
  quote) given by a <code><a href=#the-dd-element>dd</a></code> element.</p>

  <div class=example>
   <p>This example demonstrates this using an extract from Abbot and
   Costello's famous sketch, <cite>Who's on first</cite>:</p>
<pre>&lt;dialog&gt;
 &lt;dt&gt; Costello
 &lt;dd&gt; Look, you gotta first baseman?
 &lt;dt&gt; Abbott
 &lt;dd&gt; Certainly.
 &lt;dt&gt; Costello
 &lt;dd&gt; Who's playing first?
 &lt;dt&gt; Abbott
 &lt;dd&gt; That's right.
 &lt;dt&gt; Costello
 &lt;dd&gt; When you pay off the first baseman every month, who gets the money?
 &lt;dt&gt; Abbott
 &lt;dd&gt; Every dollar of it. 
&lt;/dialog&gt;</pre>
  </div>

  <p class=note>Text in a <code><a href=#the-dt-element>dt</a></code> element in a
  <code><a href=#the-dialog-element>dialog</a></code> element is implicitly the source of the text
  given in the following <code><a href=#the-dd-element>dd</a></code> element, and the contents of
  the <code><a href=#the-dd-element>dd</a></code> element are implicitly a quote from that
  speaker. There is thus no need to include <code><a href=#the-cite-element>cite</a></code>,
  <code><a href=#the-q-element>q</a></code>, or <code><a href=#the-blockquote-element>blockquote</a></code> elements in this
  markup. Indeed, a <code><a href=#the-q-element>q</a></code> element inside a <code><a href=#the-dd-element>dd</a></code>
  element in a conversation would actually imply the people talking
  were themselves quoting another work. See the <code><a href=#the-cite-element>cite</a></code>,
  <code><a href=#the-q-element>q</a></code>, and <code><a href=#the-blockquote-element>blockquote</a></code> elements for other ways
  to cite or quote.</p>



  <h4 id=the-blockquote-element><span class=secno>4.5.6 </span>The <dfn><code>blockquote</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#sectioning-root>Sectioning root</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-blockquote-cite><a href=#attr-blockquote-cite>cite</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlquoteelement>HTMLQuoteElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-quote-cite title=dom-quote-cite>cite</a>;
};</pre>
    <p class=note>The <code><a href=#htmlquoteelement>HTMLQuoteElement</a></code> interface is
    also used by the <code><a href=#the-q-element>q</a></code> element.</p>
   </dd>
  </dl><p>The <code><a href=#the-blockquote-element>blockquote</a></code> element <a href=#represents>represents</a> a
  section that is quoted from another source.</p>

  <p>Content inside a <code><a href=#the-blockquote-element>blockquote</a></code> must be quoted from
  another source, whose address, if it has one, should be cited in the
  <dfn id=attr-blockquote-cite title=attr-blockquote-cite><code>cite</code></dfn>
  attribute.</p>

  <p>If the <code title=attr-blockquote-cite><a href=#attr-blockquote-cite>cite</a></code> attribute
  is present, it must be a <a href=#valid-url>valid URL</a>. To obtain the
  corresponding citation link, the value of the attribute must be
  <a href=#resolve-a-url title="resolve a url">resolved</a> relative to the
  element. User agents should allow users to follow such citation
  links.</p>

  <p>The <dfn id=dom-quote-cite title=dom-quote-cite><code>cite</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the element's <code title="">cite</code> content attribute.</p>

  <p class=note>The best way to represent a conversation is not with
  the <code><a href=#the-cite-element>cite</a></code> and <code><a href=#the-blockquote-element>blockquote</a></code> elements, but with
  the <code><a href=#the-dialog-element>dialog</a></code> element.</p>

  <div class=example>

   <p>This next example shows the use of <code><a href=#the-cite-element>cite</a></code> alongside
   <code><a href=#the-blockquote-element>blockquote</a></code>:</p>

   <pre>&lt;p&gt;His next piece was the aptly named &lt;cite&gt;Sonnet 130&lt;/cite&gt;:&lt;/p&gt;
&lt;blockquote cite="http://quotes.example.org/s/sonnet130.html"&gt;
  &lt;p&gt;My mistress' eyes are nothing like the sun,&lt;br&gt;
  Coral is far more red, than her lips red,&lt;br&gt;
  ...</pre>

  </div>



  <h4 id=the-ol-element><span class=secno>4.5.7 </span>The <dfn><code>ol</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-li-element>li</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-ol-reversed><a href=#attr-ol-reversed>reversed</a></code></dd>
   <dd><code title=attr-ol-start><a href=#attr-ol-start>start</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlolistelement>HTMLOListElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-ol-reversed title=dom-ol-reversed>reversed</a>;
           attribute long <a href=#dom-ol-start title=dom-ol-start>start</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-ol-element>ol</a></code> element <a href=#represents>represents</a> a list of
  items, where the items have been intentionally ordered, such that
  changing the order would change the meaning of the document.</p>

  <p>The items of the list are the <code><a href=#the-li-element>li</a></code> element child nodes
  of the <code><a href=#the-ol-element>ol</a></code> element, in <a href=#tree-order>tree order</a>.</p>

  <p>The <dfn id=attr-ol-reversed title=attr-ol-reversed><code>reversed</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. If present, it
  indicates that the list is a descending list (..., 3, 2, 1). If the
  attribute is omitted, the list is an ascending list (1, 2, 3,
  ...).</p>

  <p>The <dfn id=attr-ol-start title=attr-ol-start><code>start</code></dfn>
  attribute, if present, must be a <a href=#valid-integer>valid integer</a> giving
  the ordinal value of the first list item.</p>

  <p>If the <code title=attr-ol-start><a href=#attr-ol-start>start</a></code> attribute is
  present, user agents must <a href=#rules-for-parsing-integers title="rules for parsing
  integers">parse it as an integer</a>, in order to determine the
  attribute's value. The default value, used if the attribute is
  missing or if the value cannot be converted to a number according to
  the referenced algorithm, is 1 if the element has no <code title=attr-ol-reversed><a href=#attr-ol-reversed>reversed</a></code> attribute, and is the
  number of child <code><a href=#the-li-element>li</a></code> elements otherwise.</p>

  <p>The first item in the list has the ordinal value given by the
  <code><a href=#the-ol-element>ol</a></code> element's <code title=attr-ol-start><a href=#attr-ol-start>start</a></code>
  attribute, unless that <code><a href=#the-li-element>li</a></code> element has a <code title=attr-li-value><a href=#attr-li-value>value</a></code> attribute with a value that can
  be successfully parsed, in which case it has the ordinal value given
  by that <code title=attr-li-value><a href=#attr-li-value>value</a></code> attribute.</p>

  <p>Each subsequent item in the list has the ordinal value given by
  its <code title=attr-li-value><a href=#attr-li-value>value</a></code> attribute, if it has
  one, or, if it doesn't, the ordinal value of the previous item, plus
  one if the <code title=attr-ol-reversed><a href=#attr-ol-reversed>reversed</a></code> is absent,
  or minus one if it is present.</p>

  <p>The <dfn id=dom-ol-reversed title=dom-ol-reversed><code>reversed</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the value of the <code title=attr-ol-reversed><a href=#attr-ol-reversed>reversed</a></code> content attribute.</p>

  <p>The <dfn id=dom-ol-start title=dom-ol-start><code>start</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the value of the <code title=attr-ol-start><a href=#attr-ol-start>start</a></code> content attribute.</p>

  <!-- XXX resuming numbering of lists from previous lists? -->

  <div class=example>

   <p>The following markup shows a list where the order matters, and
   where the <code><a href=#the-ol-element>ol</a></code> element is therefore appropriate. Compare
   this list to the equivalent list in the <code><a href=#the-ul-element>ul</a></code> section to
   see an example of the same items using the <code><a href=#the-ul-element>ul</a></code>
   element.</p>

   <pre>&lt;p&gt;I have lived in the following countries (given in the order of when
I first lived there):&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Switzerland
 &lt;li&gt;United Kingdom
 &lt;li&gt;United States
 &lt;li&gt;Norway
&lt;/ol&gt;</pre>

   <p>Note how changing the order of the list changes the meaning of
   the document. In the following example, changing the relative order
   of the first two items has changed the birthplace of the
   author:</p>

   <pre>&lt;p&gt;I have lived in the following countries (given in the order of when
I first lived there):&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;United Kingdom
 &lt;li&gt;Switzerland
 &lt;li&gt;United States
 &lt;li&gt;Norway
&lt;/ol&gt;</pre>

  </div>


  <h4 id=the-ul-element><span class=secno>4.5.8 </span>The <dfn><code>ul</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-li-element>li</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-ul-element>ul</a></code> element <a href=#represents>represents</a> a list of
  items, where the order of the items is not important &mdash; that
  is, where changing the order would not materially change the meaning
  of the document.</p>

  <p>The items of the list are the <code><a href=#the-li-element>li</a></code> element child nodes
  of the <code><a href=#the-ul-element>ul</a></code> element.</p>

  <div class=example>

   <p>The following markup shows a list where the order does not
   matter, and where the <code><a href=#the-ul-element>ul</a></code> element is therefore
   appropriate. Compare this list to the equivalent list in the
   <code><a href=#the-ol-element>ol</a></code> section to see an example of the same items using
   the <code><a href=#the-ol-element>ol</a></code> element.</p>

   <pre>&lt;p&gt;I have lived in the following countries:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Norway
 &lt;li&gt;Switzerland
 &lt;li&gt;United Kingdom
 &lt;li&gt;United States
&lt;/ul&gt;</pre>

   <p>Note that changing the order of the list does not change the
   meaning of the document. The items in the snippet above are given
   in alphabetical order, but in the snippet below they are given in
   order of the size of their current account balance in 2007, without
   changing the meaning of the document whatsoever:</p>

   <pre>&lt;p&gt;I have lived in the following countries:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Switzerland
 &lt;li&gt;Norway
 &lt;li&gt;United Kingdom
 &lt;li&gt;United States
&lt;/ul&gt;</pre>

  </div>


  <h4 id=the-li-element><span class=secno>4.5.9 </span>The <dfn><code>li</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Inside <code><a href=#the-ol-element>ol</a></code> elements.</dd>
   <dd>Inside <code><a href=#the-ul-element>ul</a></code> elements.</dd>
   <dd>Inside <code><a href=#menus>menu</a></code> elements.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd>If the element is a child of an <code><a href=#the-ol-element>ol</a></code> element: <code title=attr-li-value><a href=#attr-li-value>value</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmllielement>HTMLLIElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute long <a href=#dom-li-value title=dom-li-value>value</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-li-element>li</a></code> element <a href=#represents>represents</a> a list
  item. If its parent element is an <code><a href=#the-ol-element>ol</a></code>, <code><a href=#the-ul-element>ul</a></code>,
  or <code><a href=#menus>menu</a></code> element, then the element is an item of the
  parent element's list, as defined for those elements. Otherwise, the
  list item has no defined list-related relationship to any other
  <code><a href=#the-li-element>li</a></code> element.</p>

  <p>The <dfn id=attr-li-value title=attr-li-value><code>value</code></dfn>
  attribute, if present, must be a <a href=#valid-integer>valid integer</a> giving
  the ordinal value of the list item.</p>

  <p>If the <code title=attr-li-value><a href=#attr-li-value>value</a></code> attribute is
  present, user agents must <a href=#rules-for-parsing-integers title="rules for parsing
  integers">parse it as an integer</a>, in order to determine the
  attribute's value. If the attribute's value cannot be converted to a
  number, the attribute must be treated as if it was absent. The
  attribute has no default value.</p>

  <p>The <code title=attr-li-value><a href=#attr-li-value>value</a></code> attribute is
  processed relative to the element's parent <code><a href=#the-ol-element>ol</a></code> element
  (q.v.), if there is one. If there is not, the attribute has no
  effect.</p>

  <p>The <dfn id=dom-li-value title=dom-li-value><code>value</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the value of the <code title=dom-li-value><a href=#dom-li-value>value</a></code> content attribute.</p>

  <div class=example>
   <p>The following example, the top ten movies are listed (in reverse
   order). Note the way the list is given a title by using a
   <code><a href=#the-figure-element>figure</a></code> element and its <code><a href=#the-legend-element>legend</a></code>.</p>
   <pre>&lt;figure&gt;
 &lt;legend&gt;The top 10 movies of all time&lt;/legend&gt;
 &lt;ol&gt;
  &lt;li value="10"&gt;&lt;cite&gt;Josie and the Pussycats&lt;/cite&gt;, 2001&lt;/li&gt;
  &lt;li value="9"&gt;&lt;cite lang="sh"&gt;&#1062;&#1088;&#1085;&#1072; &#1084;&#1072;&#1095;&#1082;&#1072;, &#1073;&#1077;&#1083;&#1080; &#1084;&#1072;&#1095;&#1086;&#1088;&lt;/cite&gt;, 1998&lt;/li&gt;
  &lt;li value="8"&gt;&lt;cite&gt;A Bug's Life&lt;/cite&gt;, 1998&lt;/li&gt;
  &lt;li value="7"&gt;&lt;cite&gt;Toy Story&lt;/cite&gt;, 1995&lt;/li&gt;
  &lt;li value="6"&gt;&lt;cite&gt;Monsters, Inc&lt;/cite&gt;, 2001&lt;/li&gt;
  &lt;li value="5"&gt;&lt;cite&gt;Cars&lt;/cite&gt;, 2006&lt;/li&gt;
  &lt;li value="4"&gt;&lt;cite&gt;Toy Story 2&lt;/cite&gt;, 1999&lt;/li&gt;
  &lt;li value="3"&gt;&lt;cite&gt;Finding Nemo&lt;/cite&gt;, 2003&lt;/li&gt;
  &lt;li value="2"&gt;&lt;cite&gt;The Incredibles&lt;/cite&gt;, 2004&lt;/li&gt;
  &lt;li value="1"&gt;&lt;cite&gt;Ratatouille&lt;/cite&gt;, 2007&lt;/li&gt;
 &lt;/ol&gt;
&lt;/figure&gt;</pre>

   <p>The markup could also be written as follows, using the <code title=attr-ol-reversed><a href=#attr-ol-reversed>reversed</a></code> attribute on the
   <code><a href=#the-ol-element>ol</a></code> element:</p>
 
   <pre>&lt;figure&gt;
 &lt;legend&gt;The top 10 movies of all time&lt;/legend&gt;
 &lt;ol reversed&gt;
  &lt;li&gt;&lt;cite&gt;Josie and the Pussycats&lt;/cite&gt;, 2001&lt;/li&gt;
  &lt;li&gt;&lt;cite lang="sh"&gt;&#1062;&#1088;&#1085;&#1072; &#1084;&#1072;&#1095;&#1082;&#1072;, &#1073;&#1077;&#1083;&#1080; &#1084;&#1072;&#1095;&#1086;&#1088;&lt;/cite&gt;, 1998&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;A Bug's Life&lt;/cite&gt;, 1998&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;Toy Story&lt;/cite&gt;, 1995&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;Monsters, Inc&lt;/cite&gt;, 2001&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;Cars&lt;/cite&gt;, 2006&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;Toy Story 2&lt;/cite&gt;, 1999&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;Finding Nemo&lt;/cite&gt;, 2003&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;The Incredibles&lt;/cite&gt;, 2004&lt;/li&gt;
  &lt;li&gt;&lt;cite&gt;Ratatouille&lt;/cite&gt;, 2007&lt;/li&gt;
 &lt;/ol&gt;
&lt;/figure&gt;</pre>
  </div>

  <p class=note>If the <code><a href=#the-li-element>li</a></code> element is the child of a
  <code><a href=#menus>menu</a></code> element and itself has a child that defines a
  <a href=#concept-command title=concept-command>command</a>, then the
  <code><a href=#the-li-element>li</a></code> element will match the <code title=selector-enabled><a href=#selector-enabled>:enabled</a></code> and <code title=selector-disabled><a href=#selector-disabled>:disabled</a></code> pseudo-classes in the
  same way as the first such child element does.</p>



  <h4 id=the-dl-element><span class=secno>4.5.10 </span>The <dfn><code>dl</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more groups each consisting of one or more
   <code><a href=#the-dt-element>dt</a></code> elements followed by one or more <code><a href=#the-dd-element>dd</a></code>
   elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-dl-element>dl</a></code> element <a href=#represents>represents</a> an
  association list consisting of zero or more name-value groups (a
  description list). Each group must consist of one or more names
  (<code><a href=#the-dt-element>dt</a></code> elements) followed by one or more values
  (<code><a href=#the-dd-element>dd</a></code> elements).</p>

  <p>Name-value groups may be terms and definitions, metadata topics
  and values, or any other groups of name-value data.</p>

  <p>The values within a group are alternatives; multiple paragraphs
  forming part of the same value must all be given within the same
  <code><a href=#the-dd-element>dd</a></code> element.</p>

  <p>The order of the list of groups, and of the names and values
  within each group, may be significant.</p>

  <p>If a <code><a href=#the-dl-element>dl</a></code> element is empty, it contains no groups.</p>

  <p>If a <code><a href=#the-dl-element>dl</a></code> element contains non-<a href=#inter-element-whitespace title="inter-element whitespace">whitespace</a> <a href=#text-node title="text
  node">text nodes</a>, or elements other than <code><a href=#the-dt-element>dt</a></code> and
  <code><a href=#the-dd-element>dd</a></code>, then those elements or <a href=#text-node title="text node">text
  nodes</a> do not form part of any groups in that
  <code><a href=#the-dl-element>dl</a></code>.</p>

  <p>If a <code><a href=#the-dl-element>dl</a></code> element contains only <code><a href=#the-dt-element>dt</a></code>
  elements, then it consists of one group with names but no
  values.</p>

  <p>If a <code><a href=#the-dl-element>dl</a></code> element contains only <code><a href=#the-dd-element>dd</a></code>
  elements, then it consists of one group with values but no
  names.</p>

  <p>If a <code><a href=#the-dl-element>dl</a></code> element starts with one or more
  <code><a href=#the-dd-element>dd</a></code> elements, then the first group has no associated
  name.</p>

  <p>If a <code><a href=#the-dl-element>dl</a></code> element ends with one or more
  <code><a href=#the-dt-element>dt</a></code> elements, then the last group has no associated
  value.</p>

  <p class=note>When a <code><a href=#the-dl-element>dl</a></code> element doesn't match its
  content model, it is often due to accidentally using <code><a href=#the-dd-element>dd</a></code>
  elements in the place of <code><a href=#the-dt-element>dt</a></code> elements and vice
  versa. Conformance checkers can spot such mistakes and might be able
  to advise authors how to correctly use the markup.</p>


  <div class=example>
   <p>In the following example, one entry ("Authors") is linked to two
   values ("John" and "Luke").</p>
   <pre>&lt;dl&gt;
 &lt;dt&gt; Authors
 &lt;dd&gt; John
 &lt;dd&gt; Luke
 &lt;dt&gt; Editor
 &lt;dd&gt; Frank
&lt;/dl&gt;</pre>
  </div>

  <div class=example>
   <p>In the following example, one definition is linked to two
   terms.</p>
   <pre>&lt;dl&gt;
 &lt;dt lang="en-US"&gt; &lt;dfn&gt;color&lt;/dfn&gt; &lt;/dt&gt;
 &lt;dt lang="en-GB"&gt; &lt;dfn&gt;colour&lt;/dfn&gt; &lt;/dt&gt;
 &lt;dd&gt; A sensation which (in humans) derives from the ability of
 the fine structure of the eye to distinguish three differently
 filtered analyses of a view. &lt;/dd&gt;
&lt;/dl&gt;</pre>
  </div>

  <div class=example>
   <p>The following example illustrates the use of the <code><a href=#the-dl-element>dl</a></code>
   element to mark up metadata of sorts. At the end of the example,
   one group has two metadata labels ("Authors" and "Editors") and two
   values ("Robert Rothman" and "Daniel Jackson").</p>
   <pre>&lt;dl&gt;
 &lt;dt&gt; Last modified time &lt;/dt&gt;
 &lt;dd&gt; 2004-12-23T23:33Z &lt;/dd&gt;
 &lt;dt&gt; Recommended update interval &lt;/dt&gt;
 &lt;dd&gt; 60s &lt;/dd&gt;
 &lt;dt&gt; Authors &lt;/dt&gt;
 &lt;dt&gt; Editors &lt;/dt&gt;
 &lt;dd&gt; Robert Rothman &lt;/dd&gt;
 &lt;dd&gt; Daniel Jackson &lt;/dd&gt;
&lt;/dl&gt;</pre>
  </div>

  <div class=example>

   <p>The following example shows the <code><a href=#the-dl-element>dl</a></code> element used to
   give a set of instructions. The order of the instructions here is
   important (in the other examples, the order of the blocks was not
   important).</p>

   <pre>&lt;p&gt;Determine the victory points as follows (use the
first matching case):&lt;/p&gt;
&lt;dl&gt;
 &lt;dt&gt; If you have exactly five gold coins &lt;/dt&gt;
 &lt;dd&gt; You get five victory points &lt;/dd&gt;
 &lt;dt&gt; If you have one or more gold coins, and you have one or more silver coins &lt;/dt&gt;
 &lt;dd&gt; You get two victory points &lt;/dd&gt;
 &lt;dt&gt; If you have one or more silver coins &lt;/dt&gt;
 &lt;dd&gt; You get one victory point &lt;/dd&gt;
 &lt;dt&gt; Otherwise &lt;/dt&gt;
 &lt;dd&gt; You get no victory points &lt;/dd&gt;
&lt;/dl&gt;</pre>
  </div>

  <div class=example>
   <p>The following snippet shows a <code><a href=#the-dl-element>dl</a></code> element being used
   as a glossary. Note the use of <code><a href=#the-dfn-element>dfn</a></code> to indicate the
   word being defined.</p>
   <pre>&lt;dl&gt;
 &lt;dt&gt;&lt;dfn&gt;Apartment&lt;/dfn&gt;, n.&lt;/dt&gt;
 &lt;dd&gt;An execution context grouping one or more threads with one or
 more COM objects.&lt;/dd&gt;
 &lt;dt&gt;&lt;dfn&gt;Flat&lt;/dfn&gt;, n.&lt;/dt&gt;
 &lt;dd&gt;A deflated tire.&lt;/dd&gt;
 &lt;dt&gt;&lt;dfn&gt;Home&lt;/dfn&gt;, n.&lt;/dt&gt;
 &lt;dd&gt;The user's login directory.&lt;/dd&gt;
&lt;/dl&gt;</pre>
  </div>

  <p class=note>The <code><a href=#the-dl-element>dl</a></code> element is inappropriate for
  marking up dialogue, since dialogue is ordered (each speaker/line
  pair comes after the next). For an example of how to mark up
  dialogue, see the <code><a href=#the-dialog-element>dialog</a></code> element.</p>


  <h4 id=the-dt-element><span class=secno>4.5.11 </span>The <dfn><code>dt</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Before <code><a href=#the-dd-element>dd</a></code> or <code><a href=#the-dt-element>dt</a></code> elements inside <code><a href=#the-dl-element>dl</a></code> elements.</dd>
   <dd>Before a <code><a href=#the-dd-element>dd</a></code> element inside a <code><a href=#the-dialog-element>dialog</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-dt-element>dt</a></code> element <a href=#represents>represents</a> the term, or
  name, part of a term-description group in a description list
  (<code><a href=#the-dl-element>dl</a></code> element), and the talker, or speaker, part of a
  talker-discourse pair in a conversation (<code><a href=#the-dialog-element>dialog</a></code>
  element).</p>

  <p class=note>The <code><a href=#the-dt-element>dt</a></code> element itself, when used in a
  <code><a href=#the-dl-element>dl</a></code> element, does not indicate that its contents are a
  term being defined, but this can be indicated using the
  <code><a href=#the-dfn-element>dfn</a></code> element.</p>

  <p>If the <code><a href=#the-dt-element>dt</a></code> element is the child of a
  <code><a href=#the-dialog-element>dialog</a></code> element, and it further contains a
  <code><a href=#the-time-element>time</a></code> element, then that <code><a href=#the-time-element>time</a></code> element
  represents a timestamp for when the associated discourse
  (<code><a href=#the-dd-element>dd</a></code> element) was said, and is not part of the name of
  the talker.</p>

  <div class=example>

   <p>The following extract shows how an IM conversation log could be
   marked up.</p>

   <pre>&lt;dialog&gt;
 &lt;dt&gt; &lt;time&gt;14:22&lt;/time&gt; egof
 &lt;dd&gt; I'm not that nerdy, I've only seen 30% of the star trek episodes
 &lt;dt&gt; &lt;time&gt;14:23&lt;/time&gt; kaj
 &lt;dd&gt; if you know what percentage of the star trek episodes you have seen, you are inarguably nerdy
 &lt;dt&gt; &lt;time&gt;14:23&lt;/time&gt; egof
 &lt;dd&gt; it's unarguably
 &lt;dt&gt; &lt;time&gt;14:24&lt;/time&gt; kaj
 &lt;dd&gt; you are not helping your case
&lt;/dialog&gt;</pre>
   <!-- with thanks to http://bash.org/?854262 -->

  </div>


  <h4 id=the-dd-element><span class=secno>4.5.12 </span>The <dfn><code>dd</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>After <code><a href=#the-dt-element>dt</a></code> or <code><a href=#the-dd-element>dd</a></code> elements inside <code><a href=#the-dl-element>dl</a></code> elements.</dd>
   <dd>After a <code><a href=#the-dt-element>dt</a></code> element inside a <code><a href=#the-dialog-element>dialog</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-dd-element>dd</a></code> element <a href=#represents>represents</a> the
  description, definition, or value, part of a term-description group
  in a description list (<code><a href=#the-dl-element>dl</a></code> element), and the discourse,
  or quote, part in a conversation (<code><a href=#the-dialog-element>dialog</a></code> element).</p>

  <div class=example>

   <p>A <code><a href=#the-dl-element>dl</a></code> can be used to define a vocabulary list, like
   in a dictionary. In the following example, each entry, given by a
   <code><a href=#the-dt-element>dt</a></code> with a <code><a href=#the-dfn-element>dfn</a></code>, has several
   <code><a href=#the-dd-element>dd</a></code>s, showing the various parts of the definition.</p>

   <!-- the actual pronunciations below are nonsense. -->
   <pre>&lt;dl&gt;
 &lt;dt&gt;&lt;dfn&gt;happiness&lt;/dfn&gt;&lt;/dt&gt;
 &lt;dd class="pronunciation"&gt;/'h&aelig; p. nes/&lt;/dd&gt;
 &lt;dd class="part-of-speech"&gt;&lt;i&gt;&lt;abbr&gt;n.&lt;/abbr&gt;&lt;/i&gt;&lt;/dd&gt;
 &lt;dd&gt;The state of being happy.&lt;/dd&gt;
 &lt;dd&gt;Good fortune; success. &lt;q&gt;Oh &lt;b&gt;happiness&lt;/b&gt;! It worked!&lt;/q&gt;&lt;/dd&gt;
 &lt;dt&gt;&lt;dfn&gt;rejoice&lt;/dfn&gt;&lt;/dt&gt;
 &lt;dd class="pronunciation"&gt;/ri jois'/&lt;/dd&gt;
 &lt;dd&gt;&lt;i class="part-of-speech"&gt;&lt;abbr&gt;v.intr.&lt;/abbr&gt;&lt;/i&gt; To be delighted oneself.&lt;/dd&gt;
 &lt;dd&gt;&lt;i class="part-of-speech"&gt;&lt;abbr&gt;v.tr.&lt;/abbr&gt;&lt;/i&gt; To cause one to be delighted.&lt;/dd&gt;
&lt;/dl&gt;</pre>
  </div>


  <h4 id=common-grouping-idioms><span class=secno>4.5.13 </span>Common grouping idioms</h4>

  <h5 id=tag-clouds><span class=secno>4.5.13.1 </span>Tag clouds</h5>

  <p id=tag-cloud>This specification does not define any markup
  specifically for marking up lists of keywords that apply to a group
  of pages (also known as <i>tag clouds</i>). In general, authors are
  encouraged to either mark up such lists using <code><a href=#the-ul-element>ul</a></code>
  elements with explicit inline counts that are then hidden and turned
  into a presentational effect using a style sheet, or to use SVG.</p>

  <div class=example>

   <p>Here, three tags are included in a short tag cloud:</p>

   <pre>&lt;style&gt;
@media screen, print, handheld, tv {
  /* should be ignored by non-visual browsers */
  .tag-cloud &gt; li &gt; span { display: none; }
  .tag-cloud &gt; li { display: inline; }
  .tag-cloud-1 { font-size: 0.7em; }
  .tag-cloud-2 { font-size: 0.9em; }
  .tag-cloud-3 { font-size: 1.1em; }
  .tag-cloud-4 { font-size: 1.3em; }
  .tag-cloud-5 { font-size: 1.5em; }
}
&lt;/style&gt;
...
&lt;ul class="tag-cloud"&gt;
 &lt;li class="tag-cloud-4"&gt;&lt;a title="28 instances" href="/t/apple"&gt;apple&lt;/a&gt; &lt;span&gt;(popular)&lt;/span&gt;
 &lt;li class="tag-cloud-2"&gt;&lt;a title="6 instances"  href="/t/kiwi"&gt;kiwi&lt;/a&gt; &lt;span&gt;(rare)&lt;/span&gt;
 &lt;li class="tag-cloud-5"&gt;&lt;a title="41 instances" href="/t/pear"&gt;pear&lt;/a&gt; &lt;span&gt;(very popular)&lt;/span&gt;
&lt;/ul&gt;</pre>

   <p>The actual frequency of each tag is given using the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute. A CSS style sheet is
   provided to convert the markup into a cloud of differently-sized
   words, but for user agents that do not support CSS or are not
   visual, the markup contains annotations like "(popular)" or
   "(rare)" to categorise the various tags by frequency, thus enabling
   all users to benefit from the information.</p>

   <p>The <code><a href=#the-ul-element>ul</a></code> element is used (rather than
   <code><a href=#the-ol-element>ol</a></code>) because the order is not particular important:
   while the list is in fact ordered alphabetically, it would convey
   the same information if ordered by, say, the length of the tag.</p>

   <p>The <code title=rel-tag><a href=#link-type-tag>tag</a></code> <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code>-keyword is <em>not</em> used
   on these <code><a href=#the-a-element>a</a></code> elements because they do not represent tags
   that apply to the page itself; they are just part of an index
   listing the tags themselves.</p>

  </div>




  <h3 id=text-level-semantics><span class=secno>4.6 </span>Text-level semantics</h3><!-- XXX ew, find a better section name -->

  <h4 id=the-a-element><span class=secno>4.6.1 </span>The <dfn><code>a</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd>When the element only contains <a href=#phrasing-content-0>phrasing content</a>: <a href=#phrasing-content-0>phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#transparent>Transparent</a>, but there must be no <a href=#interactive-content-0>interactive content</a> descendant.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code></dd>
   <dd><code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code></dd>
   <dd><code title=attr-hyperlink-ping><a href=#ping>ping</a></code></dd>
   <dd><code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code></dd>
   <dd><code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code></dd>
   <dd><code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code></dd>
   <dd><code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>[Stringifies=href] interface <dfn id=htmlanchorelement>HTMLAnchorElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-a-href title=dom-a-href>href</a>;
           attribute DOMString <a href=#dom-a-target title=dom-a-target>target</a>;
           attribute DOMString <a href=#dom-a-ping title=dom-a-ping>ping</a>;
           attribute DOMString <a href=#dom-a-rel title=dom-a-rel>rel</a>;
  readonly attribute DOMTokenList <a href=#dom-a-rellist title=dom-a-relList>relList</a>;
           attribute DOMString <a href=#dom-a-media title=dom-a-media>media</a>;
           attribute DOMString <a href=#dom-a-hreflang title=dom-a-hreflang>hreflang</a>;
           attribute DOMString <a href=#dom-a-type title=dom-a-type>type</a>;
};</pre><!-- XXX also support the URL decomposition attributes -->
    <p>The <code title=command-ro><a href=#command-ro>Command</a></code> interface must also be implemented by
    this element.</p>
   </dd>
  </dl><p>If the <code><a href=#the-a-element>a</a></code> element has an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute, then it
  <a href=#represents>represents</a> a <a href=#hyperlink>hyperlink</a> (a hypertext
  anchor).</p>

  <!-- v2: Eric Meyer requests the ability to nest links so that a big
  hyperlink, e.g. representing a calendar event, can be clickable,
  while within it there are subareas that represent links to distinct
  areas, e.g. a link to see photos of the event, or to edit the event,
  or some such. -->

  <p>If the <code><a href=#the-a-element>a</a></code> element has no <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute, then the element
  <a href=#represents>represents</a> a placeholder for where a link might
  otherwise have been placed, if it had been relevant.</p>

  <p>The <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code>, <code title=attr-hyperlink-ping><a href=#ping>ping</a></code>, <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code>, <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code>, <code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code>, and <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code> attributes must be omitted
  if the <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute is
  not present.</p>

  <div class=example>
   <p>If a site uses a consistent navigation tool bar on every page,
   then the link that would normally link to the page itself could be
   marked up using an <code><a href=#the-a-element>a</a></code> element:</p>
   <pre>&lt;nav&gt;
 &lt;ul&gt;
  &lt;li&gt; &lt;a href="/"&gt;Home&lt;/a&gt; &lt;/li&gt;
  &lt;li&gt; &lt;a href="/news"&gt;News&lt;/a&gt; &lt;/li&gt;
  &lt;li&gt; &lt;a&gt;Examples&lt;/a&gt; &lt;/li&gt;
  &lt;li&gt; &lt;a href="/legal"&gt;Legal&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/nav&gt;</pre>
  </div>

  <p>Interactive user agents should allow users to <a href=#following-hyperlinks title="following hyperlinks">follow hyperlinks</a> created using
  the <code><a href=#the-a-element>a</a></code> element. The <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code>, <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code> and <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attributes decide how the
  link is followed. The <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code>,
  <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code>, <code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code>, and <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code> attributes may be used to
  indicate to the user the likely nature of the target resource before
  the user follows the link.</p>

  <p>The <a href=#activation-behavior>activation behavior</a> of <code><a href=#the-a-element>a</a></code> elements
  that represent <span>hyperlinks</span> is to run the following
  steps:</p>

  <ol><li><p>If the <code title=event-DOMActivate>DOMActivate</code>
   event in question is not <span title=concept-events-trusted>trusted</span> (i.e. a <code title=dom-click><a href=#dom-click>click()</a></code> method call was the reason for the
   event being dispatched), and the <code><a href=#the-a-element>a</a></code> element's <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code> attribute is <span class=XXX>...</span> then raise an
   <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception and abort these
   steps.</li>

   <li><p>If the target of the <code title=event-click>click</code>
   event is an <code><a href=#the-img-element>img</a></code> element with an <code title=attr-img-ismap><a href=#attr-img-ismap>ismap</a></code> attribute specified, then
   server-side image map processing must be performed, as follows:</p>

    <ol><!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E%0A...%3Ca%20href%3D%22%23%22%3E%3Cimg%20ismap%20usemap%3D%22%23a%22%20src%3D/resources/images/smallcats%3E%3C/a%3E%0A%3Cmap%20name%3Da%3E%3Carea%20shape%3Drect%20coords%3D0%2C0%2C50%2C50%20href%3Db%3E%3C/map%3E --><li>If the <code title=event-DOMActivate>DOMActivate</code>
     event was dispatched as the result of a real
     pointing-device-triggered <code title=event-click>click</code>
     event on the <code><a href=#the-img-element>img</a></code> element, then let <var title="">x</var> be the distance in CSS pixels from the left edge
     of the image's left border, if it has one, or the left edge of
     the image otherwise, to the location of the click, and let <var title="">y</var> be the distance in CSS pixels from the top edge
     of the image's top border, if it has one, or the top edge of the
     image otherwise, to the location of the click. Otherwise, let
     <var title="">x</var> and <var title="">y</var> be zero.</li>

     <li>Let the <dfn id=hyperlink-suffix><var>hyperlink suffix</var></dfn> be a U+003F
     QUESTION MARK character, the value of <var title="">x</var>
     expressed as a base-ten integer using ASCII digits (U+0030 DIGIT
     ZERO to U+0039 DIGIT NINE), a U+002C COMMA character, and the
     value of <var title="">y</var> expressed as a base-ten integer
     using ASCII digits.</li>

    </ol></li>

   <li><p>Finally, the user agent must <a href=#following-hyperlinks title="following
   hyperlinks">follow the hyperlink</a> defined by the
   <code><a href=#the-a-element>a</a></code> element. If the steps above defined a <var><a href=#hyperlink-suffix>hyperlink
   suffix</a></var>, then take that into account when following the
   hyperlink.</li>

  </ol><p>The DOM attributes <dfn id=dom-a-href title=dom-a-href><code>href</code></dfn>, <dfn id=dom-a-ping title=dom-a-ping><code>ping</code></dfn>, <dfn id=dom-a-target title=dom-a-target><code>target</code></dfn>, <dfn id=dom-a-rel title=dom-a-rel><code>rel</code></dfn>, <dfn id=dom-a-media title=dom-a-media><code>media</code></dfn>, <dfn id=dom-a-hreflang title=dom-a-hreflang><code>hreflang</code></dfn>, and <dfn id=dom-a-type title=dom-a-type><code>type</code></dfn>, must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>

  <p>The DOM attribute <dfn id=dom-a-rellist title=dom-a-rellist><code>relList</code></dfn> must
  <a href=#reflect>reflect</a> the <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code>
  content attribute.</p>

  <div class=example>

   <p>The <code><a href=#the-a-element>a</a></code> element may be wrapped around entire
   paragraphs, lists, tables, and so forth, even entire sections, so
   long as there is no interactive content within (e.g. buttons or
   other links). This example shows how this can be used to make an
   entire advertising block into a link:</p>

   <pre>&lt;aside class="advertising"&gt;
 &lt;h1&gt;Advertising&lt;/h1&gt;
 &lt;a href="http://ad.example.com/?adid=1929&amp;amp;pubid=1422"&gt;
  &lt;section&gt;
   &lt;h1&gt;Mellblomatic 9000!&lt;/h1&gt;
   &lt;p&gt;Turn all your widgets into mellbloms!&lt;/p&gt;
   &lt;p&gt;Only $9.99 plus shipping and handling.&lt;/p&gt;
  &lt;/section&gt;
 &lt;/a&gt;
 &lt;a href="http://ad.example.com/?adid=375&amp;amp;pubid=1422"&gt;
  &lt;section&gt;
   &lt;h1&gt;The Mellblom Browser&lt;/h1&gt;
   &lt;p&gt;Web browsing at the speed of light.&lt;/p&gt;
   &lt;p&gt;No other browser goes faster!&lt;/p&gt;
  &lt;/section&gt;
 &lt;/a&gt;
&lt;/aside&gt;</pre>

  </div>



  <h4 id=the-q-element><span class=secno>4.6.2 </span>The <dfn><code>q</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-q-cite><a href=#attr-q-cite>cite</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
    The <code><a href=#the-q-element>q</a></code> element uses the <code><a href=#htmlquoteelement>HTMLQuoteElement</a></code> interface.
   </dd>
  </dl><p>The <code><a href=#the-q-element>q</a></code> element <a href=#represents>represents</a> some <a href=#phrasing-content-0 title="phrasing content">phrasing content</a> quoted from another
  source.</p>

  <p>Quotation punctuation (such as quotation marks) must not appear
  immediately before, after, or inside <code><a href=#the-q-element>q</a></code> elements; they
  will be inserted into the rendering by the user agent.</p>

  <p>Content inside a <code><a href=#the-q-element>q</a></code> element must be quoted from
  another source, whose address, if it has one, should be cited in the
  <dfn id=attr-q-cite title=attr-q-cite><code>cite</code></dfn> attribute. The
  source may be fictional, as when quoting characters in a novel or
  screenplay.</p>

  <p>If the <code title=attr-q-cite><a href=#attr-q-cite>cite</a></code> attribute is
  present, it must be a <a href=#valid-url>valid URL</a>. To obtain the
  corresponding citation link, the value of the attribute must be
  <a href=#resolve-a-url title="resolve a url">resolved</a> relative to the
  element. User agents should allow users to follow such citation
  links.</p>

  <p>The <code><a href=#the-q-element>q</a></code> element must not be used in place of quotation
  marks that do not represent quotes; for example, it is inappropriate
  to use the <code><a href=#the-q-element>q</a></code> element for marking up sarcastic
  statements.</p>

  <p>The use of <code><a href=#the-q-element>q</a></code> elements to mark up quotations is
  entirely optional; using explicit quotation punctuation without
  <code><a href=#the-q-element>q</a></code> elements is just as correct.</p>

  <div class=example>

   <p>Here is a simple example of the use of the <code><a href=#the-q-element>q</a></code>
   element:</p>

   <pre>&lt;p&gt;The man said &lt;q&gt;Things that are impossible just take
longer&lt;/q&gt;. I disagreed with him.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>Here is an example with both an explicit citation link in the
   <code><a href=#the-q-element>q</a></code> element, and an explicit citation outside:</p>

   <pre>&lt;p&gt;The W3C page &lt;cite&gt;About W3C&lt;/cite&gt; says the W3C's
mission is &lt;q cite="http://www.w3.org/Consortium/"&gt;To lead the
World Wide Web to its full potential by developing protocols and
guidelines that ensure long-term growth for the Web&lt;/q&gt;. I
disagree with this mission.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>In the following example, the quotation itself contains a
   quotation:</p>

   <pre>&lt;p&gt;In &lt;cite&gt;Example One&lt;/cite&gt;, he writes &lt;q&gt;The man
said &lt;q&gt;Things that are impossible just take longer&lt;/q&gt;. I
disagreed with him&lt;/q&gt;. Well, I disagree even more!&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>In the following example, quotation marks are used instead of
   the <code><a href=#the-q-element>q</a></code> element:</p>

   <pre>&lt;p&gt;His best argument was &#10077;I disagree&#10078;, which
I thought was laughable.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>In the following example, there is no quote &mdash; the
   quotation marks are used to name a word. Use of the <code><a href=#the-q-element>q</a></code>
   element in this case would be inappropriate.</p>

   <pre>&lt;p&gt;The word "ineffable" could have been used to describe the disaster
resulting from the campaign's mismanagement.&lt;/p&gt;</pre>

  </div>


  <h4 id=the-cite-element><span class=secno>4.6.3 </span>The <dfn><code>cite</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
   <!-- XXX should the cite element have a cite attribute? -->
  </dl><p>The <code><a href=#the-cite-element>cite</a></code> element <a href=#represents>represents</a> the title
  of a work (e.g.
  a book,
  a paper,
  an essay,
  a poem,
  a score,
  a song,
  a script,
  a film,
  a TV show,
  a game,
  a sculpture,
  a painting,
  a theatre production,
  a play,
  an opera,
  a musical,
  an exhibition,
  etc). This can be a work that is being quoted or
  referenced in detail (i.e. a citation), or it can just be a work
  that is mentioned in passing.</p>

  <p>A person's name is not the title of a work &mdash; even if people
  call that person a piece of work &mdash; and the element must
  therefore not be used to mark up people's names. (In some cases, the
  <code><a href=#the-b-element>b</a></code> element might be appropriate for names; e.g. in a
  gossip article where the names of famous people are keywords
  rendered with a different style to draw attention to them. In other
  cases, if an element is <em>really</em> needed, the
  <code><a href=#the-span-element>span</a></code> element can be used.)</p>

  <p>A ship is similarly not a work, and the element must not be used
  to mark up ship names (the <code><a href=#the-i-element>i</a></code> element can be used for
  that purpose).</p>

  <div class=example>

   <p>This next example shows a typical use of the <code><a href=#the-cite-element>cite</a></code>
   element:</p>

   <pre>&lt;p&gt;My favourite book is &lt;cite&gt;The Reality Dysfunction&lt;/cite&gt; by
Peter F. Hamilton. My favourite comic is &lt;cite&gt;Pearls Before
Swine&lt;/cite&gt; by Stephan Pastis. My favourite track is &lt;cite&gt;Jive
Samba&lt;/cite&gt; by the Cannonball Adderley Sextet.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>This is correct usage:</p>

   <pre>&lt;p&gt;According to the Wikipedia article &lt;cite&gt;HTML&lt;/cite&gt;, as it
stood in mid-February 2008, leaving attribute values unquoted is
unsafe. This is obviously an over-simplification.&lt;/p&gt;</pre>

   <p>The following, however, is incorrect usage, as the
   <code><a href=#the-cite-element>cite</a></code> element here is containing far more than the
   title of the work:</p>

   <pre class=bad>&lt;!-- do not copy this example, it is an example of bad usage! --&gt;
&lt;p&gt;According to &lt;cite&gt;the Wikipedia article on HTML&lt;/cite&gt;, as it
stood in mid-February 2008, leaving attribute values unquoted is
unsafe. This is obviously an over-simplification.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>The <code><a href=#the-cite-element>cite</a></code> element is obviously a key part of any
   citation in a bibliography, but it is only used to mark the
   title:</p>

   <pre>&lt;p&gt;&lt;cite&gt;Universal Declaration of Human Rights&lt;/cite&gt;, United Nations,
December 1948.  Adopted by General Assembly resolution 217 A (III).&lt;/p&gt;</pre>

  </div>

  <p class=note>A <em>citation</em> is not a <em>quote</em> (for
  which the <code><a href=#the-q-element>q</a></code> element is appropriate).</p>

  <div class=example>

   <p>This is incorrect usage, because <code><a href=#the-cite-element>cite</a></code> is not for
   quotes:</p>

   <pre>&lt;p&gt;&lt;cite&gt;This is wrong!&lt;/cite&gt;, said Ian.&lt;/p&gt;</pre>

   <p>This is also incorrect usage, because a person is not a
   work:</p>

   <pre>&lt;p&gt;&lt;q&gt;This is still wrong!&lt;/q&gt;, said &lt;cite&gt;Ian&lt;/cite&gt;.&lt;/p&gt;</pre>

   <p>The correct usage does not use a <code><a href=#the-cite-element>cite</a></code> element:</p>

   <pre>&lt;p&gt;&lt;q&gt;This is correct&lt;/q&gt;, said Ian.&lt;/p&gt;</pre>

   <p>As mentioned above, the <code><a href=#the-b-element>b</a></code> element might be relevant
   for marking names as being keywords in certain kinds of
   documents:</p>

   <pre>&lt;p&gt;And then &lt;b&gt;Ian&lt;/b&gt; said &lt;q&gt;this might be right, in a
gossip column, maybe!&lt;/q&gt;.&lt;/p&gt;</pre>

  </div>


  <h4 id=the-em-element><span class=secno>4.6.4 </span>The <dfn><code>em</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-em-element>em</a></code> element <a href=#represents>represents</a> stress
  emphasis of its contents.</p>

  <p>The level of emphasis that a particular piece of content has is
  given by its number of ancestor <code><a href=#the-em-element>em</a></code> elements.</p>

  <p>The placement of emphasis changes the meaning of the sentence.
  The element thus forms an integral part of the content. The precise
  way in which emphasis is used in this way depends on the
  language.</p>

  <div class=example>

   <p>These examples show how changing the emphasis changes the
   meaning. First, a general statement of fact, with no emphasis:</p>

   <pre>&lt;p&gt;Cats are cute animals.&lt;/p&gt;</pre>

   <p>By emphasizing the first word, the statement implies that the
   kind of animal under discussion is in question (maybe someone is
   asserting that dogs are cute):</p>

   <pre>&lt;p&gt;&lt;em&gt;Cats&lt;/em&gt; are cute animals.&lt;/p&gt;</pre>

   <p>Moving the emphasis to the verb, one highlights that the truth
   of the entire sentence is in question (maybe someone is saying cats
   are not cute):</p>

   <pre>&lt;p&gt;Cats &lt;em&gt;are&lt;/em&gt; cute animals.&lt;/p&gt;</pre>

   <p>By moving it to the adjective, the exact nature of the cats
   is reasserted (maybe someone suggested cats were <em>mean</em>
   animals):</p>

   <pre>&lt;p&gt;Cats are &lt;em&gt;cute&lt;/em&gt; animals.&lt;/p&gt;</pre>

   <p>Similarly, if someone asserted that cats were vegetables,
   someone correcting this might emphasize the last word:</p>

   <pre>&lt;p&gt;Cats are cute &lt;em&gt;animals&lt;/em&gt;.&lt;/p&gt;</pre>

   <p>By emphasizing the entire sentence, it becomes clear that the
   speaker is fighting hard to get the point across. This kind of
   emphasis also typically affects the punctuation, hence the
   exclamation mark here.</p>

   <pre>&lt;p&gt;&lt;em&gt;Cats are cute animals!&lt;/em&gt;&lt;/p&gt;</pre>

   <p>Anger mixed with emphasizing the cuteness could lead to markup
   such as:</p>

   <pre>&lt;p&gt;&lt;em&gt;Cats are &lt;em&gt;cute&lt;/em&gt; animals!&lt;/em&gt;&lt;/p&gt;</pre>

  </div>

  <!-- XXX should say it is wrong to use as in:

   <p><em>Note</em>: ...</p>

  -->


  <h4 id=the-strong-element><span class=secno>4.6.5 </span>The <dfn><code>strong</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-strong-element>strong</a></code> element <a href=#represents>represents</a> strong
  importance for its contents.</p>

  <p>The relative level of importance of a piece of content is given
  by its number of ancestor <code><a href=#the-strong-element>strong</a></code> elements; each
  <code><a href=#the-strong-element>strong</a></code> element increases the importance of its
  contents.</p>

  <p>Changing the importance of a piece of text with the
  <code><a href=#the-strong-element>strong</a></code> element does not change the meaning of the
  sentence.</p>

  <div class=example>
   <p>Here is an example of a warning notice in a game, with the
   various parts marked up according to how important they are:</p>
   <!-- DO NOT REFLOW THIS EXAMPLE it has been carefully balanced -->
   <pre>&lt;p&gt;&lt;strong&gt;Warning.&lt;/strong&gt; This dungeon is dangerous.
&lt;strong&gt;Avoid the ducks.&lt;/strong&gt; Take any gold you find.
&lt;strong&gt;&lt;strong&gt;Do not take any of the diamonds&lt;/strong&gt;,
they are explosive and &lt;strong&gt;will destroy anything within
ten meters.&lt;/strong&gt;&lt;/strong&gt; You have been warned.&lt;/p&gt;</pre>
  </div>


  <h4 id=the-small-element><span class=secno>4.6.6 </span>The <dfn><code>small</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-small-element>small</a></code> element <a href=#represents>represents</a> small
  print (part of a document often describing legal restrictions, such
  as copyrights or other disadvantages), or other side comments.</p>

  <p class=note>The <code><a href=#the-small-element>small</a></code> element does not
  "de-emphasize" or lower the importance of text emphasised by the
  <code><a href=#the-em-element>em</a></code> element or marked as important with the
  <code><a href=#the-strong-element>strong</a></code> element.</p>

  <div class=example>

   <p>In this example the footer contains contact information and a
   copyright.</p>

   <pre>&lt;footer&gt;
 &lt;address&gt;
  For more details, contact
  &lt;a href="mailto:js@example.com"&gt;John Smith&lt;/a&gt;.
 &lt;/address&gt;
 &lt;p&gt;&lt;small&gt;&copy; copyright 2038 Example Corp.&lt;/small&gt;&lt;/p&gt;
&lt;/footer&gt;</pre>

   <p>In this second example, the <code><a href=#the-small-element>small</a></code> element is used
   for a side comment.</p>

   <pre>&lt;p&gt;Example Corp today announced record profits for the
second quarter &lt;small&gt;(Full Disclosure: Foo News is a subsidiary of
Example Corp)&lt;/small&gt;, leading to speculation about a third quarter
merger with Demo Group.&lt;/p&gt;</pre>

   <p>In this last example, the <code><a href=#the-small-element>small</a></code> element is marked
   as being <em>important</em> small print.</p>

   <pre>&lt;p&gt;&lt;strong&gt;&lt;small&gt;Continued use of this service will result in a kiss.&lt;/small&gt;&lt;/strong&gt;&lt;/p&gt;</pre>

  </div>


  <h4 id=the-mark-element><span class=secno>4.6.7 </span>The <dfn><code>mark</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-mark-element>mark</a></code> element <a href=#represents>represents</a> a run of
  text in one document marked or highlighted for reference purposes,
  due to its relevance in another context. When used in a quotation or
  other block of text referred to from the prose, it indicates a
  highlight that was not originally present but which has been added
  to bring the reader's attention to a part of the text that might not
  have been considered important by the original author when the block
  was originally written, but which is now under previously unexpected
  scrutiny. When used in the main prose of a document, it indicates a
  part of the document that has been highlighted due to its likely
  relevance to the user's current activity.</p>

  <div class=example>
   <p>This example shows how the <code><a href=#the-mark-element>mark</a></code> example can be used
   to bring attention to a particular part of a quotation:</p>
   <pre>&lt;p lang="en-US"&gt;Consider the following quote:&lt;/p&gt;
&lt;blockquote lang="en-GB"&gt;
 &lt;p&gt;Look around and you will find, no-one's really
 &lt;mark&gt;colour&lt;/mark&gt; blind.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p lang="en-US"&gt;As we can tell from the &lt;em&gt;spelling&lt;/em&gt; of the word,
the person writing this quote is clearly not American.&lt;/p&gt;</pre>
  </div>

  <div class=example>

   <p>Another example of the <code><a href=#the-mark-element>mark</a></code> element is highlighting
   parts of a document that are matching some search string. If
   someone looked at a document, and the server knew that the user was
   searching for the word "kitten", then the server might return the
   document with one paragraph modified as follows:</p>

   <pre>&lt;p&gt;I also have some &lt;mark&gt;kitten&lt;/mark&gt;s who are visiting me
these days. They're really cute. I think they like my garden! Maybe I
should adopt a &lt;mark&gt;kitten&lt;/mark&gt;.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>In the following snippet, a paragraph of text refers to a
   specific part of a code fragment.</p>

   <pre>&lt;p&gt;The highlighted part below is where the error lies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var i: Integer;
begin
   i := &lt;mark&gt;1.1&lt;/mark&gt;;
end.&lt;/code&gt;&lt;/pre&gt;</pre>

  </div>

  <div class=example>

   <p>This is another example showing the use of <code><a href=#the-mark-element>mark</a></code> to
   highlight a part of quoted text that was originally not
   emphasised. In this example, common typographic conventions have
   led the author to explicitly style <code><a href=#the-mark-element>mark</a></code> elements in
   quotes to render in italics.</p>

   <pre>&lt;article&gt;
 &lt;style&gt;
  blockquote mark, q mark {
    font: inherit; font-style: italic;
    text-decoration: none;
    background: transparent; color: inherit;
  }
  .bubble em {
    font: inherit; font-size: larger;
    text-decoration: underline;
  }
 &lt;/style&gt;
 &lt;h1&gt;She knew&lt;/h1&gt;
 &lt;p&gt;Did you notice the subtle joke in the joke on panel 4?&lt;/p&gt;
 &lt;blockquote&gt;
  &lt;p class="bubble"&gt;I didn't &lt;em&gt;want&lt;/em&gt; to believe. &lt;mark&gt;Of course
  on some level I realized it was a known-plaintext attack.&lt;/mark&gt; But I
  couldn't admit it until I saw for myself.&lt;/p&gt;
 &lt;/blockquote&gt;
 &lt;p&gt;(Emphasis mine.) I thought that was great. It's so pedantic, yet it
 explains everything neatly.&lt;/p&gt;
&lt;/article&gt;</pre>

   <p>Note, incidentally, the distinction between the <code><a href=#the-em-element>em</a></code>
   element in this example, which is part of the original text being
   quoted, and the <code><a href=#the-mark-element>mark</a></code> element, which is highlighting a
   part for comment.</p>

  </div>

  <div class=example>

   <p>The following example shows the difference between denoting the
   <em>importance</em> of a span of text (<code><a href=#the-strong-element>strong</a></code>) as
   opposed to denoting the <em>relevance</em> of a span of text
   (<code><a href=#the-mark-element>mark</a></code>). It is an extract from a textbook, where the
   extract has had the parts relevant to the exam highlighted. The
   safety warnings, important though they may be, are apparently not
   relevant to the exam.</p>

   <pre>&lt;h3&gt;Wormhole Physics Introduction&lt;/h3&gt;

&lt;p&gt;&lt;mark&gt;A wormhole in normal conditions can be held open for a
maximum of just under 39 minutes.&lt;/mark&gt; Conditions that can increase
the time include a powerful energy source coupled to one or both of
the gates connecting the wormhole, and a large gravity well (such as a
black hole).&lt;/p&gt;

&lt;p&gt;&lt;mark&gt;Momentum is preserved across the wormhole. Electromagnetic
radiation can travel in both directions through a wormhole,
but matter cannot.&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;When a wormhole is created, a vortex normally forms.
&lt;strong&gt;Warning: The vortex caused by the wormhole opening will
annihilate anything in its path.&lt;/strong&gt; Vortexes can be avoided when
using sufficiently advanced dialing technology.&lt;/p&gt;

&lt;p&gt;&lt;mark&gt;An obstruction in a gate will prevent it from accepting a
wormhole connection.&lt;/mark&gt;&lt;/p&gt;</pre>

  </div>



  <h4 id=the-dfn-element><span class=secno>4.6.8 </span>The <dfn><code>dfn</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>, but there must be no descendant <code><a href=#the-dfn-element>dfn</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd>Also, the <code title=attr-dfn-title><a href=#attr-dfn-title>title</a></code> attribute has special semantics on this element.</dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-dfn-element>dfn</a></code> element <a href=#represents>represents</a> the defining
  instance of a term. The <a href=#paragraph title=paragraph>paragraph</a>,
  <a href=#the-dl-element title=dl>description list group</a>, or <a href=#sectioning-content-0 title="sectioning content">section</a> that is the nearest
  ancestor of the <code><a href=#the-dfn-element>dfn</a></code> element must also contain the
  definition(s) for the <a href=#defining-term title="defining term">term</a> given
  by the <code><a href=#the-dfn-element>dfn</a></code> element.</p>

  <p><dfn id=defining-term>Defining term</dfn>: If the <code><a href=#the-dfn-element>dfn</a></code> element has a
  <dfn id=attr-dfn-title title=attr-dfn-title><code>title</code></dfn> attribute, then
  the exact value of that attribute is the term being defined.
  Otherwise, if it contains exactly one element child node and no
  child <a href=#text-node title="text node">text nodes</a>, and that child
  element is an <code><a href=#the-abbr-element>abbr</a></code> element with a <code title=attr-abbr-title><a href=#attr-abbr-title>title</a></code> attribute, then the exact value
  of <em>that</em> attribute is the term being defined. Otherwise, it
  is the exact <code><a href=#textcontent>textContent</a></code> of the <code><a href=#the-dfn-element>dfn</a></code>
  element that gives the term being defined.</p>

  <!-- XXX that means <dfn>x \n x</dfn> won't match <span>x x</span> -->

  <p>If the <code title=attr-dfn-title><a href=#attr-dfn-title>title</a></code> attribute of the
  <code><a href=#the-dfn-element>dfn</a></code> element is present, then it must contain only the
  term being defined.</p>

  <p class=note>The <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute
  of ancestor elements does not affect <code><a href=#the-dfn-element>dfn</a></code> elements.</p>

  <p>An <code><a href=#the-a-element>a</a></code> element that links to a <code><a href=#the-dfn-element>dfn</a></code>
  element represents an instance of the term defined by the
  <code><a href=#the-dfn-element>dfn</a></code> element.</p>

  <div class=example>

   <p>In the following fragment, the term "GDO" is first defined in
   the first paragraph, then used in the second.</p>

   <pre>&lt;p&gt;The &lt;dfn&gt;&lt;abbr title="Garage Door Opener"&gt;GDO&lt;/abbr&gt;&lt;/dfn&gt;
is a device that allows off-world teams to open the iris.&lt;/p&gt;
&lt;!-- ... later in the document: --&gt;
&lt;p&gt;Teal'c activated his &lt;abbr title="Garage Door Opener"&gt;GDO&lt;/abbr&gt;
and so Hammond ordered the iris to be opened.&lt;/p&gt;</pre>

   <p>With the addition of an <code><a href=#the-a-element>a</a></code> element, the reference
   can be made explicit:</p>

   <pre>&lt;p&gt;The &lt;dfn id=gdo&gt;&lt;abbr title="Garage Door Opener"&gt;GDO&lt;/abbr&gt;&lt;/dfn&gt;
is a device that allows off-world teams to open the iris.&lt;/p&gt;
&lt;!-- ... later in the document: --&gt;
&lt;p&gt;Teal'c activated his &lt;a href=#gdo&gt;&lt;abbr title="Garage Door Opener"&gt;GDO&lt;/abbr&gt;&lt;/a&gt;
and so Hammond ordered the iris to be opened.&lt;/p&gt;</pre>

  </div>



  <h4 id=the-abbr-element><span class=secno>4.6.9 </span>The <dfn><code>abbr</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd>Also, the <code title=attr-abbr-title><a href=#attr-abbr-title>title</a></code> attribute has special semantics on this element.</dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-abbr-element>abbr</a></code> element <a href=#represents>represents</a> an
  abbreviation or acronym, optionally with its expansion. The <dfn id=attr-abbr-title title=attr-abbr-title><code>title</code></dfn> attribute may be
  used to provide an expansion of the abbreviation. The attribute, if
  specified, must contain an expansion of the abbreviation, and
  nothing else.</p>

  <div class=example>
   <p>The paragraph below contains an abbreviation marked up with the
   <code><a href=#the-abbr-element>abbr</a></code> element. This paragraph <a href=#defining-term title="defining
   term">defines the term</a> "Web Hypertext Application Technology
   Working Group".</p>
   <pre>&lt;p&gt;The &lt;dfn id=whatwg&gt;&lt;abbr title="Web Hypertext Application
Technology Working Group"&gt;WHATWG&lt;/abbr&gt;&lt;/dfn&gt; is a loose
unofficial collaboration of Web browser manufacturers and interested
parties who wish to develop new technologies designed to allow authors
to write and deploy Applications over the World Wide Web.&lt;/p&gt;</pre>
   <p>An alternative way to write this would be:</p>
   <pre>&lt;p&gt;The &lt;dfn id=whatwg&gt;Web Hypertext Application Technology
Working Group&lt;/dfn&gt; (&lt;abbr title="Web Hypertext Application
Technology Working Group"&gt;WHATWG&lt;/abbr&gt;) is a loose unofficial
collaboration of Web browser manufacturers and interested parties who
wish to develop new technologies designed to allow authors to write
and deploy Applications over the World Wide Web.&lt;/p&gt;</pre>
  </div>

  <div class=example>
   <p>This paragraph has two abbreviations. Notice how only one is
   defined; the other, with no expansion associated with it, does not
   use the <code><a href=#the-abbr-element>abbr</a></code> element.</p>
   <pre>&lt;p&gt;The &lt;abbr title="Web Hypertext Application Technology Working
Group"&gt;WHATWG&lt;/abbr&gt; started working on HTML5 in 2004.&lt;/p&gt;</pre>
  </div>

  <div class=example>
   <p>This paragraph links an abbreviation to its definition.</p>
   <pre>&lt;p&gt;The &lt;a href="#whatwg"&gt;&lt;abbr title="Web Hypertext Application
Technology Working Group"&gt;WHATWG&lt;/abbr&gt;&lt;/a&gt; community does not
have much representation from Asia.&lt;/p&gt;</pre>
  </div>

  <div class=example>
   <p>This paragraph marks up an abbreviation without giving an
   expansion, possibly as a hook to apply styles for abbreviations
   (e.g. smallcaps).</p>
   <pre>&lt;p&gt;Philip` and Dashiva both denied that they were going to
get the issue counts from past revisions of the specification to
backfill the &lt;abbr&gt;WHATWG&lt;/abbr&gt; issue graph.&lt;/p&gt;</pre>
  </div>

  <p>If an abbreviation is pluralized, the expansion's grammatical
  number (plural vs singular) must match the grammatical number of the
  contents of the element.</p>

  <div class=example>

   <p>Here the plural is outside the element, so the expansion is in
   the singular:</p>

   <pre>&lt;p&gt;Two &lt;abbr title="Working Group"&gt;WG&lt;/abbr&gt;s worked on
this specification: the &lt;abbr&gt;WHATWG&lt;/abbr&gt; and the
&lt;abbr&gt;HTMLWG&lt;/abbr&gt;.&lt;/p&gt;</pre>

   <p>Here the plural is inside the element, so the expansion is in
   the plural:</p>

   <pre>&lt;p&gt;Two &lt;abbr title="Working Groups"&gt;WGs&lt;/abbr&gt; worked on
this specification: the &lt;abbr&gt;WHATWG&lt;/abbr&gt; and the
&lt;abbr&gt;HTMLWG&lt;/abbr&gt;.&lt;/p&gt;</pre>

  </div>

  <p>Abbreviations do not have to be marked up using this element. It
  is expected to be useful in the following cases:</p>

  <ul><li>Abbreviations for which the author wants to give expansions,
   where using the <code><a href=#the-abbr-element>abbr</a></code> element with a <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute is an alternative to
   including the expansion inline (e.g. in parentheses).</li>

   <li>Abbreviations that are likely to be unfamiliar to the
   document's readers, for which authors are encouraged to either mark
   up the abbreviation using a <code><a href=#the-abbr-element>abbr</a></code> element with a <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute or include the expansion
   inline in the text the first time the abbreviation is used.</li>

   <li>Abbreviations whose presence needs to be semantically
   annotated, e.g. so that they can be identified from a style sheet
   and given specific styles, for which the <code><a href=#the-abbr-element>abbr</a></code> element
   can be used without a <code title=attr-title><a href=#the-title-attribute>title</a></code>
   attribute.</li>

  </ul><p title=note>Providing an expansion in a <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute once will not necessarily
  cause other <code><a href=#the-abbr-element>abbr</a></code> elements in the same document with the
  same contents but without a <code title=attr-title><a href=#the-title-attribute>title</a></code>
  attribute to behave as if they had the same expansion. Every
  <code><a href=#the-abbr-element>abbr</a></code> element is independent.</p>



  <h4 id=the-time-element><span class=secno>4.6.10 </span>The <dfn><code>time</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-time-datetime><a href=#attr-time-datetime>datetime</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmltimeelement>HTMLTimeElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-time-datetime title=dom-time-datetime>dateTime</a>;
  readonly attribute <a href=#domtimestamp>DOMTimeStamp</a> <a href=#dom-time-date title=dom-time-date>date</a>;
  readonly attribute <a href=#domtimestamp>DOMTimeStamp</a> <a href=#dom-time-time title=dom-time-time>time</a>;
  readonly attribute <a href=#domtimestamp>DOMTimeStamp</a> <a href=#dom-time-timezone title=dom-time-timezone>timezone</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-time-element>time</a></code> element <a href=#represents>represents</a> a precise
  date and/or a time in the proleptic Gregorian calendar. <a href=#refsGREGORIAN>[GREGORIAN]</a></p>

  <p>The <dfn id=attr-time-datetime title=attr-time-datetime><code>datetime</code></dfn>
  attribute, if present, must contain a <a href=#valid-date-or-time-string>valid date or time
  string</a> that identifies the date or time being specified.</p>

  <p>If the <code title=attr-time-datetime><a href=#attr-time-datetime>datetime</a></code> attribute
  is not present, then the date or time must be specified in the
  content of the element, such that the element's
  <code><a href=#textcontent>textContent</a></code> is a <a href=#valid-date-or-time-string-in-content>valid date or time string in
  content</a>.</p>

  <p>The <dfn id=dom-time-datetime title=dom-time-datetime><code>dateTime</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-time-datetime><a href=#attr-time-datetime>datetime</a></code> content attribute.</p>

  <p>User agents, to obtain the <dfn id=concept-time-date title=concept-time-date>date</dfn>, <dfn id=concept-time-time title=concept-time-time>time</dfn>, and <dfn id=concept-time-timezone title=concept-time-timezone>timezone</dfn> represented by a
  <code><a href=#the-time-element>time</a></code> element, must follow these steps:</p>

  <ol><li>If the <code title=attr-time-datetime><a href=#attr-time-datetime>datetime</a></code>
   attribute is present, then use the rules to <a href=#parse-a-date-or-time-string>parse a date or
   time string</a> with the flag <i>in attribute</i> from the value
   of that attribute, and let the result be <var title="">result</var>.</li>

   <li>Otherwise, use the rules to <a href=#parse-a-date-or-time-string>parse a date or time
   string</a> with the flag <i>in content</i> from the element's
   <code><a href=#textcontent>textContent</a></code>, and let the result be <var title="">result</var>.</li>

   <li>If <var title="">result</var> is empty (because the parsing
   failed), then the <a href=#concept-time-date title=concept-time-date>date</a> is
   unknown, the <a href=#concept-time-time title=concept-time-time>time</a> is unknown,
   and the <a href=#concept-time-timezone title=concept-time-timezone>timezone</a> is
   unknown.</li>

   <li>Otherwise: if <var title="">result</var> contains a date, then
   that is the <a href=#concept-time-date title=concept-time-date>date</a>; if <var title="">result</var> contains a time, then that is the <a href=#concept-time-time title=concept-time-time>time</a>; and if <var title="">result</var> contains a timezone, then the timezone is the
   element's <a href=#concept-time-timezone title=concept-time-timezone>timezone</a>. (A
   timezone can only be present if both a date and a time are also
   present.)</li>

  </ol><p>The <dfn id=dom-time-date title=dom-time-date><code>date</code></dfn> DOM
  attribute must return null if the <a href=#concept-time-date title=concept-time-date>date</a> is unknown, and otherwise must
  return the time corresponding to midnight UTC (i.e. the first
  second) of the given <a href=#concept-time-date title=concept-time-date>date</a>.</p>

  <p>The <dfn id=dom-time-time title=dom-time-time><code>time</code></dfn> DOM attribute
  must return null if the <a href=#concept-time-time title=concept-time-time>time</a> is
  unknown, and otherwise must return the time corresponding to the
  given <a href=#concept-time-time title=concept-time-time>time</a> of 1970-01-01, with
  the timezone UTC.</p>

  <p>The <dfn id=dom-time-timezone title=dom-time-timezone><code>timezone</code></dfn> DOM
  attribute must return null if the <a href=#concept-time-timezone title=concept-time-timezone>timezone</a> is unknown, and otherwise
  must return the time corresponding to 1970-01-01 00:00 UTC in the
  given <a href=#concept-time-timezone title=concept-time-timezone>timezone</a>, with the
  timezone set to UTC (i.e. the time corresponding to 1970-01-01 at
  00:00 UTC plus the offset corresponding to the timezone).</p>

  <div class=example>

   <p>In the following snippet:</p>

   <pre>&lt;p&gt;Our first date was &lt;time datetime="2006-09-23"&gt;a Saturday&lt;/time&gt;.&lt;/p&gt;</pre>

   <p>...the <code><a href=#the-time-element>time</a></code> element's <code title=dom-time-date><a href=#dom-time-date>date</a></code> attribute would have the value
   1,158,969,600,000ms, and the <code title=dom-time-time><a href=#dom-time-time>time</a></code>
   and <code title=dom-time-timezone><a href=#dom-time-timezone>timezone</a></code> attributes would
   return null.</p>


   <p>In the following snippet:</p>

   <pre>&lt;p&gt;We stopped talking at &lt;time datetime="2006-09-24T05:00-07:00"&gt;5am the next morning&lt;/time&gt;.&lt;/p&gt;</pre>

   <p>...the <code><a href=#the-time-element>time</a></code> element's <code title=dom-time-date><a href=#dom-time-date>date</a></code> attribute would have the value
   1,159,056,000,000ms, the <code title=dom-time-time><a href=#dom-time-time>time</a></code>
   attribute would have the value 18,000,000ms, and the <code title=dom-time-timezone><a href=#dom-time-timezone>timezone</a></code> attribute would return
   &minus;25,200,000ms. To obtain the actual time, the three attributes can
   be added together, obtaining 1,159,048,800,000, which is the
   specified date and time in UTC.</p>


   <p>Finally, in the following snippet:</p>

   <pre>&lt;p&gt;Many people get up at &lt;time&gt;08:00&lt;/time&gt;.&lt;/p&gt;</pre>

   <p>...the <code><a href=#the-time-element>time</a></code> element's <code title=dom-time-date><a href=#dom-time-date>date</a></code> attribute would have the value null,
   the <code title=dom-time-time><a href=#dom-time-time>time</a></code> attribute would have the
   value 28,800,000ms, and the <code title=dom-time-timezone><a href=#dom-time-timezone>timezone</a></code> attribute would return
   null.</p>

  </div>

  <p class=note>The <code><a href=#the-time-element>time</a></code> element is not intended for
  encoding times for which a precise date or time cannot be
  established. For example, it would be inappropriate for encoding
  times like "one millisecond after the big bang", "the early part of
  the Jurassic period", or "a winter around 250 BCE".</p>



  <h4 id=the-progress-element><span class=secno>4.6.11 </span>The <dfn><code>progress</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-progress-value><a href=#attr-progress-value>value</a></code></dd>
   <dd><code title=attr-progress-max><a href=#attr-progress-max>max</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlprogresselement>HTMLProgressElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute float <a href=#dom-progress-value title=dom-progress-value>value</a>;
           attribute float <a href=#dom-progress-max title=dom-progress-max>max</a>;
  readonly attribute float <a href=#dom-progress-position title=dom-progress-position>position</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-progress-element>progress</a></code> element <a href=#represents>represents</a> the
  completion progress of a task. The progress is either indeterminate,
  indicating that progress is being made but that it is not clear how
  much more work remains to be done before the task is complete
  (e.g. because the task is waiting for a remote host to respond), or
  the progress is a number in the range zero to a maximum, giving the
  fraction of work that has so far been completed.</p>

  <p>There are two attributes that determine the current task
  completion represented by the element.</p>

  <p>The <dfn id=attr-progress-value title=attr-progress-value><code>value</code></dfn>
  attribute specifies how much of the task has been completed, and the
  <dfn id=attr-progress-max title=attr-progress-max><code>max</code></dfn> attribute
  specifies how much work the task requires in total. The units are
  arbitrary and not specified.</p>

  <p>Instead of using the attributes, authors are recommended to
  include the current value and the maximum value inline as text
  inside the element.</p>

  <div class=example>
   <p>Here is a snippet of a Web application that shows the progress
   of some automated task:</p>
   <pre>&lt;section&gt;
 &lt;h2&gt;Task Progress&lt;/h2&gt;
 &lt;p&gt;Progress: &lt;progress&gt;&lt;span id="p"&gt;0&lt;/span&gt;%&lt;/progress&gt;&lt;/p&gt;
 &lt;script&gt;
  var progressBar = document.getElementById('p');
  function updateProgress(newValue) {
    progressBar.textContent = newValue;
  }
 &lt;/script&gt;
&lt;/section&gt;</pre>
   <p>(The <code>updateProgress()</code> method in this example would
   be called by some other code on the page to update the actual
   progress bar as the task progressed.)</p>
  </div>

  <p><strong>Author requirements</strong>: The <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> and <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> attributes, when present,
  must have values that are <a href=#valid-floating-point-number title="valid floating point
  number">valid floating point numbers</a>. The <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> attribute, if present, must
  have a value greater than zero. The <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> attribute, if present, must
  have a value equal to or greater than zero, and less than or equal
  to the value of the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code>
  attribute, if present, or 1, otherwise.</p>

  <p class=note>The <code><a href=#the-progress-element>progress</a></code> element is the wrong
  element to use for something that is just a gauge, as opposed to
  task progress. For instance, indicating disk space usage using
  <code><a href=#the-progress-element>progress</a></code> would be inappropriate. Instead, the
  <code><a href=#the-meter-element>meter</a></code> element is available for such use cases.</p>

  <p><strong>User agent requirements</strong>: User agents must parse
  the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> and <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> attributes' values
  according to the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing floating point number
  values</a>.</p>

  <p>If the <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> attribute
  is omitted, then user agents must also parse the
  <code><a href=#textcontent>textContent</a></code> of the <code><a href=#the-progress-element>progress</a></code> element in
  question using the <a href=#steps-for-finding-one-or-two-numbers-of-a-ratio-in-a-string>steps for finding one or two numbers of a
  ratio in a string</a>. These steps will return nothing, one
  number, one number with a denominator punctuation character, or two
  numbers.</p>

  <p>Using the results of this processing, user agents must determine
  whether the progress bar is an indeterminate progress bar, or
  whether it is a determinate progress bar, and in the latter case,
  what its current and maximum values are, all as follows:</p>

  <ol><li>If the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> attribute is
   omitted, and the <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> is
   omitted, and the results of parsing the <code><a href=#textcontent>textContent</a></code>
   was nothing, then the progress bar is an indeterminate progress
   bar. Abort these steps.</li>

   <li>Otherwise, it is a determinate progress bar.</li>

   <li>If the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> attribute is
   included, then, if a value could be parsed out of it, then the
   maximum value is that value.</li>

   <li>Otherwise, if the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code>
   attribute is absent but the <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> attribute is present, or,
   if the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> attribute is
   present but no value could be parsed from it, then the maximum is
   1.</li>

   <li>Otherwise, if neither attribute is included, then, if the
   <code><a href=#textcontent>textContent</a></code> contained one number with an associated
   denominator punctuation character, then the maximum value is the
   <span>value associated with that denominator punctuation
   character</span>; otherwise, if the <code><a href=#textcontent>textContent</a></code>
   contained two numbers, the maximum value is the higher of the two
   values; otherwise, the maximum value is 1.</li>

   <li>If the <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> attribute
   is present on the element and a value could be parsed out of it,
   that value is the current value of the progress bar. Otherwise, if
   the attribute is present but no value could be parsed from it, the
   current value is zero.</li>

   <li>Otherwise if the <code title=attr-progress-value><a href=#attr-progress-value>value</a></code>
   attribute is absent and the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> attribute is present, then, if
   the <code><a href=#textcontent>textContent</a></code> was parsed and found to contain just
   one number, with no associated denominator punctuation character,
   then the current value is that number. Otherwise, if the <code title=attr-progress-value><a href=#attr-progress-value>value</a></code> attribute is absent and
   the <code title=attr-progress-max><a href=#attr-progress-max>max</a></code> attribute is present
   then the current value is zero.</li>

   <li>Otherwise, if neither attribute is present, then the current
   value is the lower of the one or two numbers that were found in the
   <code><a href=#textcontent>textContent</a></code> of the element.</li>

   <li>If the maximum value is less than or equal to zero, then it is
   reset to 1.</li>

   <li>If the current value is less than zero, then it is reset to
   zero.</li>

   <li>Finally, if the current value is greater than the maximum
   value, then the current value is reset to the maximum value.</li>

  </ol><p><strong>UA requirements for showing the progress bar</strong>:
  When representing a <code><a href=#the-progress-element>progress</a></code> element to the user, the
  UA should indicate whether it is a determinate or indeterminate
  progress bar, and in the former case, should indicate the relative
  position of the current value relative to the maximum value.</p>

  <p>The <dfn id=dom-progress-max title=dom-progress-max><code>max</code></dfn> and <dfn id=dom-progress-value title=dom-progress-value><code>value</code></dfn> DOM attributes
  must <a href=#reflect>reflect</a> the respective content attributes of the
  same name. When the relevant content attributes are absent, the DOM
  attributes must return zero. The value parsed from the
  <code><a href=#textcontent>textContent</a></code> never affects the DOM values.</p>

  <p class=XXX>Would be cool to have the <code title=dom-progress-value><a href=#dom-progress-value>value</a></code> DOM attribute update the
  <code><a href=#textcontent>textContent</a></code> in-line...</p>

  <p>If the progress bar is an indeterminate progress bar, then the
  <dfn id=dom-progress-position title=dom-progress-position><code>position</code></dfn> DOM
  attribute must return &minus;1. Otherwise, it must return the result of
  dividing the current value by the maximum value.</p>



  <h4 id=the-meter-element><span class=secno>4.6.12 </span>The <dfn><code>meter</code></dfn> element</h4>
  <!-- Keep this after <progress> and NOT close to <time> -->

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-meter-value><a href=#attr-meter-value>value</a></code></dd>
   <dd><code title=attr-meter-min><a href=#attr-meter-min>min</a></code></dd>
   <dd><code title=attr-meter-low><a href=#attr-meter-low>low</a></code></dd>
   <dd><code title=attr-meter-high><a href=#attr-meter-high>high</a></code></dd>
   <dd><code title=attr-meter-max><a href=#attr-meter-max>max</a></code></dd>
   <dd><code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlmeterelement>HTMLMeterElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute float <a href=#dom-meter-value title=dom-meter-value>value</a>;
           attribute float <a href=#dom-meter-min title=dom-meter-min>min</a>;
           attribute float <a href=#dom-meter-max title=dom-meter-max>max</a>;
           attribute float <a href=#dom-meter-low title=dom-meter-low>low</a>;
           attribute float <a href=#dom-meter-high title=dom-meter-high>high</a>;
           attribute float <a href=#dom-meter-optimum title=dom-meter-optimum>optimum</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-meter-element>meter</a></code> element <a href=#represents>represents</a> a scalar
  measurement within a known range, or a fractional value; for example
  disk usage, the relevance of a query result, or the fraction of a
  voting population to have selected a particular candidate.</p>

  <p>This is also known as a gauge.</p>

  <p class=note>The <code><a href=#the-meter-element>meter</a></code> element should not be used to
  indicate progress (as in a progress bar). For that role, HTML
  provides a separate <code><a href=#the-progress-element>progress</a></code> element.</p>

  <p class=note>The <code><a href=#the-meter-element>meter</a></code> element also does not
  represent a scalar value of arbitrary range &mdash; for example, it
  would be wrong to use this to report a weight, or height, unless
  there is a known maximum value.</p>

  <p>There are six attributes that determine the semantics of the
  gauge represented by the element.</p>

  <p>The <dfn id=attr-meter-min title=attr-meter-min><code>min</code></dfn> attribute
  specifies the lower bound of the range, and the <dfn id=attr-meter-max title=attr-meter-max><code>max</code></dfn> attribute specifies
  the upper bound. The <dfn id=attr-meter-value title=attr-meter-value><code>value</code></dfn> attribute
  specifies the value to have the gauge indicate as the "measured"
  value.</p>

  <p>The other three attributes can be used to segment the gauge's
  range into "low", "medium", and "high" parts, and to indicate which
  part of the gauge is the "optimum" part. The <dfn id=attr-meter-low title=attr-meter-low><code>low</code></dfn> attribute specifies
  the range that is considered to be the "low" part, and the <dfn id=attr-meter-high title=attr-meter-high><code>high</code></dfn> attribute specifies
  the range that is considered to be the "high" part. The <dfn id=attr-meter-optimum title=attr-meter-optimum><code>optimum</code></dfn> attribute
  gives the position that is "optimum"; if that is higher than the
  "high" value  then this indicates that the higher the value, the
  better; if it's lower than the "low" mark then it indicates that
  lower values are better, and naturally if it is in between then it
  indicates that neither high nor low values are good.</p>

  <p><strong>Authoring requirements</strong>: The recommended way of
  giving the value is to include it as contents of the element, either
  as two numbers (the higher number represents the maximum, the other
  number the current value, and the minimum is assumed to be zero), or
  as a percentage or similar (using one of the characters such as
  "%"), or as a fraction. However, it is also possible to use the
  attributes to specify these values.</p>

  <p>One of the following conditions, along with all the requirements
  that are listed with that condition, must be met:</p>

  <dl><dt>There are exactly two numbers in the contents of the element,
   and the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code>, <code title=attr-meter-min><a href=#attr-meter-min>min</a></code>, and <code title=attr-meter-max><a href=#attr-meter-max>max</a></code> attributes are all omitted</dt>

   <dd>

    <p>If specified, the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code>,
    <code title=attr-meter-high><a href=#attr-meter-high>high</a></code>, and <code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code> attributes must have
    values greater than or equal to zero and less than or equal to the
    bigger of the two numbers in the contents of the element.</p>

    <p>If both the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> and <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> attributes are specified, then
    the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> attribute's value must
    be less than or equal to the value of the <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> attribute.</p>

   </dd>

   <dt>There is exactly one number followed by zero or more
   <a href=#white_space>White_Space</a> characters and a <a href=#valid-denominator-punctuation-character>valid denominator
   punctuation character</a> in the contents of the element, and
   the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code>, <code title=attr-meter-min><a href=#attr-meter-min>min</a></code>, and <code title=attr-meter-max><a href=#attr-meter-max>max</a></code> attributes are all omitted</dt>

   <dd>

    <p>If specified, the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code>,
    <code title=attr-meter-high><a href=#attr-meter-high>high</a></code>, and <code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code> attributes must have
    values greater than or equal to zero and less than or equal to the
    <a href=#values-associated-with-denominator-punctuation-characters title="values associated with denominator punctuation
    characters">value associated with the denominator punctuation
    character</a>.</p>

    <p>If both the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> and <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> attributes are specified, then
    the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> attribute's value must
    be less than or equal to the value of the <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> attribute.</p>

   </dd>

   <dt>There is exactly one number in the contents of the element, and
   the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attribute is
   omitted</dt>

   <dt>There are no numbers in the contents of the element, and the
   <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attribute is
   specified</dt>

   <dd>

    <p>If the <code title=attr-meter-min><a href=#attr-meter-min>min</a></code> attribute
    attribute is specified, then the <var title="">minimum</var> is
    that attribue's value; otherwise, it is 0.</p>

    <p>If the <code title=attr-meter-max><a href=#attr-meter-max>max</a></code> attribute
    attribute is specified, then the <var title="">maximum</var> is
    that attribue's value; otherwise, it is 1.</p>

    <p>If there is exactly one number in the contents of the element,
    then <var title="">value</var> is that number; otherwise, <var title="">value</var> is the value of the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attribute.</p>

    <p>The following inequalities must hold, as applicable:</p>

    <ul class=brief><li><var title="">minimum</var> &le; <var title="">value</var> &le; <var title="">maximum</var></li>
     <li><var title="">minimum</var> &le; <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> &le; <var title="">maximum</var> (if <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> is specified)</li>
     <li><var title="">minimum</var> &le; <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> &le; <var title="">maximum</var> (if <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> is specified)</li>
     <li><var title="">minimum</var> &le; <code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code> &le; <var title="">maximum</var> (if <code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code> is specified)</li>
    </ul><p>If both the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> and <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> attributes are specified, then
    the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> attribute's value must
    be less than or equal to the value of the <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> attribute.</p>

   </dd>

  </dl><p>For the purposes of these requirements, a number is a sequence of
  characters in the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE
  (9), optionally including with a single U+002E FULL STOP character
  (.), and separated from other numbers by at least one character that
  isn't any of those; interpreted as a base ten number.</p>

  <p>The <code title=attr-meter-value><a href=#attr-meter-value>value</a></code>, <code title=attr-meter-min><a href=#attr-meter-min>min</a></code>, <code title=attr-meter-low><a href=#attr-meter-low>low</a></code>, <code title=attr-meter-high><a href=#attr-meter-high>high</a></code>, <code title=attr-meter-max><a href=#attr-meter-max>max</a></code>, and <code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code> attributes, when present,
  must have values that are <a href=#valid-floating-point-number title="valid floating point
  number">valid floating point numbers</a>.</p>

  <p class=note>If no minimum or maximum is specified, then the
  range is assumed to be 0..1, and the value thus has to be within
  that range.</p>

  <div class=example>

   <p>The following examples all represent a measurement of three
   quarters (of the maximum of whatever is being measured):</p>

   <pre>&lt;meter&gt;75%&lt;/meter&gt;
&lt;meter&gt;750&permil;&lt;/meter&gt;
&lt;meter&gt;3/4&lt;/meter&gt;
&lt;meter&gt;6 blocks used (out of 8 total)&lt;/meter&gt;
&lt;meter&gt;max: 100; current: 75&lt;/meter&gt;
&lt;meter&gt;&lt;object data="graph75.png"&gt;0.75&lt;/object&gt;&lt;/meter&gt;
&lt;meter min="0" max="100" value="75"&gt;&lt;/meter&gt;</pre>

   <p>The following example is incorrect use of the element, because
   it doesn't give a range (and since the default maximum is 1, both
   of the gauges would end up looking maxed out):</p>

   <pre class=bad>&lt;p&gt;The grapefruit pie had a radius of &lt;meter&gt;12cm&lt;/meter&gt;
and a height of &lt;meter&gt;2cm&lt;/meter&gt;.&lt;/p&gt; &lt;!-- <strong>BAD!</strong> --&gt;</pre>

   <p>Instead, one would either not include the meter element, or use
   the meter element with a defined range to give the dimensions in
   context compared to other pies:</p>

   <pre>&lt;p&gt;The grapefruit pie had a radius of 12cm and a height of
2cm.&lt;/p&gt;
&lt;dl&gt;
 &lt;dt&gt;Radius: &lt;dd&gt; &lt;meter min=0 max=20 value=12&gt;12cm&lt;/meter&gt;
 &lt;dt&gt;Height: &lt;dd&gt; &lt;meter min=0 max=10 value=2&gt;2cm&lt;/meter&gt;
&lt;/dl&gt;</pre>

  </div>

  <p>There is no explicit way to specify units in the
  <code><a href=#the-meter-element>meter</a></code> element, but the units may be specified in the
  <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute in free-form text.</p>

  <div class=example>

   <p>The example above could be extended to mention the units:</p>

   <pre>&lt;dl&gt;
 &lt;dt&gt;Radius: &lt;dd&gt; &lt;meter min=0 max=20 value=12 title="centimeters"&gt;12cm&lt;/meter&gt;
 &lt;dt&gt;Height: &lt;dd&gt; &lt;meter min=0 max=10 value=2 title="centimeters"&gt;2cm&lt;/meter&gt;
&lt;/dl&gt;</pre>

  </div>

  <p><strong>User agent requirements</strong>: User agents must parse
  the <code title=attr-meter-min><a href=#attr-meter-min>min</a></code>, <code title=attr-meter-max><a href=#attr-meter-max>max</a></code>, <code title=attr-meter-value><a href=#attr-meter-value>value</a></code>, <code title=attr-meter-low><a href=#attr-meter-low>low</a></code>, <code title=attr-meter-high><a href=#attr-meter-high>high</a></code>, and <code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code> attributes using the
  <a href=#rules-for-parsing-floating-point-number-values>rules for parsing floating point number values</a>.</p>

  <p>If the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attribute has
  been omitted, the user agent must also process the
  <code><a href=#textcontent>textContent</a></code> of the element according to the <a href=#steps-for-finding-one-or-two-numbers-of-a-ratio-in-a-string>steps
  for finding one or two numbers of a ratio in a string</a>. These
  steps will return nothing, one number, one number with a denominator
  punctuation character, or two numbers.</p>

  <p>User agents must then use all these numbers to obtain values for
  six points on the gauge, as follows. (The order in which these are
  evaluated is important, as some of the values refer to earlier
  ones.)</p>

  <dl><dt>The minimum value</dt>

   <dd>
    <p>If the <code title=attr-meter-min><a href=#attr-meter-min>min</a></code> attribute is
    specified and a value could be parsed out of it, then the minimum
    value is that value. Otherwise, the minimum value is zero.</p>
   </dd>

   <dt>The maximum value</dt>

   <dd>

    <p>If the <code title=attr-meter-max><a href=#attr-meter-max>max</a></code> attribute is
    specified and a value could be parsed out of it, the maximum
    value is that value.</p>

    <p>Otherwise, if the <code title=attr-meter-max><a href=#attr-meter-max>max</a></code>
    attribute is specified but no value could be parsed out of it, or
    if it was not specified, but either or both of the <code title=attr-meter-min><a href=#attr-meter-min>min</a></code> or <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attributes <em>were</em>
    specified, then the maximum value is 1.</p>

    <p>Otherwise, none of the <code title=attr-meter-max><a href=#attr-meter-max>max</a></code>,
    <code title=attr-meter-min><a href=#attr-meter-min>min</a></code>, and <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attributes were
    specified. If the result of processing the
    <code><a href=#textcontent>textContent</a></code> of the element was either nothing or just
    one number with no denominator punctuation character, then the
    maximum value is 1; if the result was one number but it had an
    associated denominator punctuation character, then the maximum
    value is the <a href=#values-associated-with-denominator-punctuation-characters title="values associated with denominator
    punctuation characters">value associated with that denominator
    punctuation character</a>; and finally, if there were two
    numbers parsed out of the <code><a href=#textcontent>textContent</a></code>, then the
    maximum is the higher of those two numbers.</p>

    <p>If the above machinations result in a maximum value less than
    the minimum value, then the maximum value is actually the same as
    the minimum value.</p>

   </dd>

   <dt>The actual value</dt>

   <dd>

    <p>If the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attribute is
    specified and a value could be parsed out of it, then that value
    is the actual value.</p>

    <p>If the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code> attribute is
    not specified but the <code title=attr-meter-max><a href=#attr-meter-max>max</a></code>
    attribute <em>is</em> specified and the result of processing the
    <code><a href=#textcontent>textContent</a></code> of the element was one number with no
    associated denominator punctuation character, then that number is
    the actual value.</p>

    <p>If neither of the <code title=attr-meter-value><a href=#attr-meter-value>value</a></code>
    and <code title=attr-meter-max><a href=#attr-meter-max>max</a></code> attributes are
    specified, then, if the result of processing the
    <code><a href=#textcontent>textContent</a></code> of the element was one number (with or
    without an associated denominator punctuation character), then
    that is the actual value, and if the result of processing the
    <code><a href=#textcontent>textContent</a></code> of the element was two numbers, then the
    actual value is the lower of the two numbers found.</p>

    <p>Otherwise, if none of the above apply, the actual value is
    zero.</p>

    <p>If the above procedure results in an actual value less than
    the minimum value, then the actual value is actually the same as
    the minimum value.</p>

    <p>If, on the other hand, the result is an actual value greater
    than the maximum value, then the actual value is the maximum
    value.</p>

   </dd>

   <dt>The low boundary</dt>

   <dd>

    <p>If the <code title=attr-meter-low><a href=#attr-meter-low>low</a></code> attribute is
    specified and a value could be parsed out of it, then the low
    boundary is that value. Otherwise, the low boundary is the same as
    the minimum value.</p>

    <p>If the low boundary is then less than the minimum value, then
    the low boundary is actually the same as the minimum
    value. Similarly, if the low boundary is greater than the maximum
    value, then it is actually the maximum value instead.</p>

   </dd>

   <dt>The high boundary</dt>

   <dd>

    <p>If the <code title=attr-meter-high><a href=#attr-meter-high>high</a></code> attribute is
    specified and a value could be parsed out of it, then the high
    boundary is that value. Otherwise, the high boundary is the same
    as the maximum value.</p>

    <p>If the high boundary is then less than the low boundary, then
    the high boundary is actually the same as the low
    boundary. Similarly, if the high boundary is greater than the
    maximum value, then it is actually the maximum value instead.</p>

   </dd>

   <dt>The optimum point</dt>

   <dd>

    <p>If the <code title=attr-meter-optimum><a href=#attr-meter-optimum>optimum</a></code>
    attribute is specified and a value could be parsed out of it, then
    the optimum point is that value. Otherwise, the optimum point is
    the midpoint between the minimum value and the maximum value.</p>

    <p>If the optimum point is then less than the minimum value, then
    the optimum point is actually the same as the minimum
    value. Similarly, if the optimum point is greater than the maximum
    value, then it is actually the maximum value instead.</p>

   </dd>

  </dl><p>All of which will result in the following inequalities all being
  true:</p>

  <ul class=brief><li>minimum value &le; actual value &le; maximum value</li>
   <li>minimum value &le; low boundary &le; high boundary &le; maximum value</li>
   <li>minimum value &le; optimum point &le; maximum value</li>
  </ul><p><strong>UA requirements for regions of the gauge</strong>: If the
  optimum point is equal to the low boundary or the high boundary, or
  anywhere in between them, then the region between the low and high
  boundaries of the gauge must be treated as the optimum region, and
  the low and high parts, if any, must be treated as
  suboptimal. Otherwise, if the optimum point is less than the low
  boundary, then the region between the minimum value and the low
  boundary must be treated as the optimum region, the region between
  the low boundary and the high boundary must be treated as a
  suboptimal region, and the region between the high boundary and the
  maximum value must be treated as an even less good region. Finally,
  if the optimum point is higher than the high boundary, then the
  situation is reversed; the region between the high boundary and the
  maximum value must be treated as the optimum region, the region
  between the high boundary and the low boundary must be treated as a
  suboptimal region, and the remaining region between the low boundary
  and the minimum value must be treated as an even less good
  region.</p>

  <p><strong>UA requirements for showing the gauge</strong>: When
  representing a <code><a href=#the-meter-element>meter</a></code> element to the user, the UA should
  indicate the relative position of the actual value to the minimum
  and maximum values, and the relationship between the actual value
  and the three regions of the gauge.</p>

  <div class=example>
   <p>The following markup:</p>
   <pre>
&lt;h3&gt;Suggested groups&lt;/h3&gt;
&lt;menu type="toolbar"&gt;
 &lt;a href="?cmd=hsg" onclick="hideSuggestedGroups()"&gt;Hide suggested groups&lt;/a&gt;
&lt;/menu&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;a href="/group/comp.infosystems.www.authoring.stylesheets/view"&gt;comp.infosystems.www.authoring.stylesheets&lt;/a&gt; -
     &lt;a href="/group/comp.infosystems.www.authoring.stylesheets/subscribe"&gt;join&lt;/a&gt;&lt;/p&gt;
  &lt;p&gt;Group description: &lt;strong&gt;Layout/presentation on the WWW.&lt;/strong&gt;&lt;/p&gt;
  &lt;p&gt;<strong>&lt;meter value="0.5"&gt;Moderate activity,&lt;/meter&gt;</strong> Usenet, 618 subscribers&lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;a href="/group/netscape.public.mozilla.xpinstall/view"&gt;netscape.public.mozilla.xpinstall&lt;/a&gt; -
     &lt;a href="/group/netscape.public.mozilla.xpinstall/subscribe"&gt;join&lt;/a&gt;&lt;/p&gt;
  &lt;p&gt;Group description: &lt;strong&gt;Mozilla XPInstall discussion.&lt;/strong&gt;&lt;/p&gt;
  &lt;p&gt;<strong>&lt;meter value="0.25"&gt;Low activity,&lt;/meter&gt;</strong> Usenet, 22 subscribers&lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;a href="/group/mozilla.dev.general/view"&gt;mozilla.dev.general&lt;/a&gt; -
     &lt;a href="/group/mozilla.dev.general/subscribe"&gt;join&lt;/a&gt;&lt;/p&gt;
  &lt;p&gt;<strong>&lt;meter value="0.25"&gt;Low activity,&lt;/meter&gt;</strong> Usenet, 66 subscribers&lt;/p&gt;
 &lt;/li&gt;
&lt;/ul&gt;
</pre>
   <p>Might be rendered as follows:</p>
   <p><img alt="With the <meter> elements rendered as inline green bars of varying lengths." src=images/sample-meter.png></p>
  </div>

  <p>User agents may combine the value of the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute and the other attributes
  to provide context-sensitive help or inline text detailing the
  actual values.</p>

  <div class=example>
   <p>For example, the following snippet:</p>
   <pre>&lt;meter min=0 max=60 value=23.2 title=seconds&gt;&lt;/meter&gt;</pre>
   <p>...might cause the user agent to display a gauge with a tooltip
   saying "Value: 23.2 out of 60." on one line and "seconds" on a
   second line.</p>
  </div>

  <p>The <dfn id=dom-meter-min title=dom-meter-min><code>min</code></dfn>, <dfn id=dom-meter-max title=dom-meter-max><code>max</code></dfn>, <dfn id=dom-meter-value title=dom-meter-value><code>value</code></dfn>, <dfn id=dom-meter-low title=dom-meter-low><code>low</code></dfn>, <dfn id=dom-meter-high title=dom-meter-high><code>high</code></dfn>, and <dfn id=dom-meter-optimum title=dom-meter-optimum><code>optimum</code></dfn> DOM attributes
  must <a href=#reflect>reflect</a> the respective content attributes of the
  same name. When the relevant content attributes are absent, the DOM
  attributes must return zero. The value parsed from the
  <code><a href=#textcontent>textContent</a></code> never affects the DOM values.</p>

  <p class=XXX>Would be cool to have the <code title=dom-meter-value><a href=#dom-meter-value>value</a></code> DOM attribute update the
  <code><a href=#textcontent>textContent</a></code> in-line...</p>

<!-- XXX
should we also look inside the title="" attribute?
   Disk usage: &lt;meter title="985MB of 986MB total" high="980">Full!&lt;/meter>
should we make the contents accessible in some way, e.g. as a tooltip?
-->



  <h4 id=the-code-element><span class=secno>4.6.13 </span>The <dfn><code>code</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-code-element>code</a></code> element <a href=#represents>represents</a> a fragment
  of computer code. This could be an XML element name, a filename, a
  computer program, or any other string that a computer would
  recognize.</p>

  <p>Although there is no formal way to indicate the language of
  computer code being marked up, authors who wish to mark
  <code><a href=#the-code-element>code</a></code> elements with the language used, e.g. so that
  syntax highlighting scripts can use the right rules, may do so by
  adding a class prefixed with "<code title="">language-</code>" to
  the element.</p>

  <div class=example>

   <p>The following example shows how the element can be used in a
   paragraph to mark up element names and computer code, including
   punctuation.</p>

   <pre>&lt;p&gt;The &lt;code&gt;code&lt;/code&gt; element represents a fragment of computer
code.&lt;/p&gt;

&lt;p&gt;When you call the &lt;code&gt;activate()&lt;/code&gt; method on the
&lt;code&gt;robotSnowman&lt;/code&gt; object, the eyes glow.&lt;/p&gt;

&lt;p&gt;The example below uses the &lt;code&gt;begin&lt;/code&gt; keyword to indicate
the start of a statement block. It is paired with an &lt;code&gt;end&lt;/code&gt;
keyword, which is followed by the &lt;code&gt;.&lt;/code&gt; punctuation character
(full stop) to indicate the end of the program.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>The following example shows how a block of code could be marked
   up using the <code><a href=#the-pre-element>pre</a></code> and <code><a href=#the-code-element>code</a></code> elements.</p>

   <pre>&lt;pre&gt;&lt;code class="language-pascal"&gt;var i: Integer;
begin
   i := 1;
end.&lt;/code&gt;&lt;/pre&gt;</pre>

   <p>A class is used in that example to indicate the language
   used.</p>

  </div>

  <p class=note>See the <code><a href=#the-pre-element>pre</a></code> element for more details.</p>


  <h4 id=the-var-element><span class=secno>4.6.14 </span>The <dfn><code>var</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-var-element>var</a></code> element <a href=#represents>represents</a> a
  variable. This could be an actual variable in a mathematical
  expression or programming context, or it could just be a term used
  as a placeholder in prose.</p>

  <div class=example>
   <p>In the paragraph below, the letter "n" is being used as a
   variable in prose:</p>
   <pre>&lt;p&gt;If there are &lt;var&gt;n&lt;/var&gt; pipes leading to the ice
cream factory then I expect at &lt;em&gt;least&lt;/em&gt; &lt;var&gt;n&lt;/var&gt;
flavours of ice cream to be available for purchase!&lt;/p&gt;</pre>
  </div>

  <p>For mathematics, in particular for anything beyond the simplest
  of expressions, MathML is more appropriate. However, the
  <code><a href=#the-var-element>var</a></code> element can still be used to refer to specific
  variables that are then mentioned in MathML expressions.</p>

  <div class=example>

   <p>In this example, an equation is shown, with a legend that
   references the variables in the equation. The expression itself is
   marked up with MathML, but the variables are mentioned in the
   figure's legend using <code><a href=#the-var-element>var</a></code>.</p>

   <pre>&lt;figure&gt;
 &lt;math&gt;
  &lt;mi&gt;a&lt;/mi&gt;
  &lt;mo&gt;=&lt;/mo&gt;
  &lt;msqrt&gt;
   &lt;msup&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;
   &lt;mi&gt;+&lt;/mi&gt;
   &lt;msup&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;
  &lt;/msqrt&gt;
 &lt;/math&gt;
 &lt;legend&gt; 
  Using Pythagoras' theorem to solve for the hypotenuse &lt;var&gt;a&lt;/var&gt; of
  a triangle with sides &lt;var&gt;b&lt;/var&gt; and &lt;var&gt;c&lt;/var&gt;
 &lt;/legend&gt;
&lt;/figure&gt;</pre>


  </div>


  <h4 id=the-samp-element><span class=secno>4.6.15 </span>The <dfn><code>samp</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-samp-element>samp</a></code> element <a href=#represents>represents</a> (sample)
  output from a program or computing system.</p>

  <p class=note>See the <code><a href=#the-pre-element>pre</a></code> and <code><a href=#the-kbd-element>kbd</a></code>
  elements for more details.</p>

  <div class=example>
   <p>This example shows the <code><a href=#the-samp-element>samp</a></code> element being used
   inline:</p>
   <pre>&lt;p&gt;The computer said &lt;samp&gt;Too much cheese in tray
two&lt;/samp&gt; but I didn't know what that meant.&lt;/p&gt;</pre>

   <p>This second example shows a block of sample output. Nested
   <code><a href=#the-samp-element>samp</a></code> and <code><a href=#the-kbd-element>kbd</a></code> elements allow for the
   styling of specific elements of the sample output using a
   style sheet.</p>

   <!-- XXX should those nested SAMPs be SPANs? -->
   <pre>&lt;pre&gt;&lt;samp&gt;&lt;samp class="prompt"&gt;jdoe@mowmow:~$&lt;/samp&gt; &lt;kbd&gt;ssh demo.example.com&lt;/kbd&gt;
Last login: Tue Apr 12 09:10:17 2005 from mowmow.example.com on pts/1
Linux demo 2.6.10-grsec+gg3+e+fhs6b+nfs+gr0501+++p3+c4a+gr2b-reslog-v6.189 #1 SMP Tue Feb 1 11:22:36 PST 2005 i686 unknown

&lt;samp class="prompt"&gt;jdoe@demo:~$&lt;/samp&gt; &lt;samp class="cursor"&gt;_&lt;/samp&gt;&lt;/samp&gt;&lt;/pre&gt;</pre>
  </div>


  <h4 id=the-kbd-element><span class=secno>4.6.16 </span>The <dfn><code>kbd</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-kbd-element>kbd</a></code> element <a href=#represents>represents</a> user input
  (typically keyboard input, although it may also be used to represent
  other input, such as voice commands).</p>

  <p>When the <code><a href=#the-kbd-element>kbd</a></code> element is nested inside a
  <code><a href=#the-samp-element>samp</a></code> element, it represents the input as it was echoed
  by the system.</p>

  <p>When the <code><a href=#the-kbd-element>kbd</a></code> element <em>contains</em> a
  <code><a href=#the-samp-element>samp</a></code> element, it represents input based on system
  output, for example invoking a menu item.</p>

  <p>When the <code><a href=#the-kbd-element>kbd</a></code> element is nested inside another
  <code><a href=#the-kbd-element>kbd</a></code> element, it represents an actual key or other
  single unit of input as appropriate for the input mechanism.</p>

  <div class=example>
   <p>Here the <code><a href=#the-kbd-element>kbd</a></code> element is used to indicate keys to press:</p>
   <pre>&lt;p&gt;To make George eat an apple, press &lt;kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;F3&lt;/kbd&gt;&lt;/kbd&gt;&lt;/p&gt;</pre>

   <p>In this second example, the user is told to pick a particular
   menu item. The outer <code><a href=#the-kbd-element>kbd</a></code> element marks up a block of
   input, with the inner <code><a href=#the-kbd-element>kbd</a></code> elements representing each
   individual step of the input, and the <code><a href=#the-samp-element>samp</a></code> elements
   inside them indicating that the steps are input based on something
   being displayed by the system, in this case menu labels:</p>

   <pre>&lt;p&gt;To make George eat an apple, select
    &lt;kbd&gt;&lt;kbd&gt;&lt;samp&gt;File&lt;/samp&gt;&lt;/kbd&gt;|&lt;kbd&gt;&lt;samp&gt;Eat Apple...&lt;/samp&gt;&lt;/kbd&gt;&lt;/kbd&gt;
&lt;/p&gt;</pre>
  </div>


  <h4 id=the-sub-and-sup-elements><span class=secno>4.6.17 </span>The <dfn><code>sub</code></dfn> and <dfn><code>sup</code></dfn> elements</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which these elements may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-sub-and-sup-elements>sup</a></code> element <a href=#represents>represents</a> a
  superscript and the <code><a href=#the-sub-and-sup-elements>sub</a></code> element <a href=#represents>represents</a>
  a subscript.</p>

  <p>These elements must be used only to mark up typographical
  conventions with specific meanings, not for typographical
  presentation for presentation's sake. For example, it would be
  inappropriate for the <code><a href=#the-sub-and-sup-elements>sub</a></code> and <code><a href=#the-sub-and-sup-elements>sup</a></code> elements
  to be used in the name of the LaTeX document preparation system. In
  general, authors should use these elements only if the
  <em>absence</em> of those elements would change the meaning of the
  content.</p>

  <p>When the <code><a href=#the-sub-and-sup-elements>sub</a></code> element is used inside a
  <code><a href=#the-var-element>var</a></code> element, it represents the subscript that
  identifies the variable in a family of variables.</p>

  <div class=example>
   <pre>&lt;p&gt;The coordinate of the &lt;var&gt;i&lt;/var&gt;th point is
(&lt;var&gt;x&lt;sub&gt;&lt;var&gt;i&lt;/var&gt;&lt;/sub&gt;&lt;/var&gt;, &lt;var&gt;y&lt;sub&gt;&lt;var&gt;i&lt;/var&gt;&lt;/sub&gt;&lt;/var&gt;).
For example, the 10th point has coordinate
(&lt;var&gt;x&lt;sub&gt;10&lt;/sub&gt;&lt;/var&gt;, &lt;var&gt;y&lt;sub&gt;10&lt;/sub&gt;&lt;/var&gt;).&lt;/p&gt;</pre>
  </div>

  <p>In certain languages, superscripts are part of the typographical
  conventions for some abbreviations.</p>

  <div class=example>
   <pre>&lt;p&gt;The most beautiful women are
&lt;span lang="fr"&gt;&lt;abbr&gt;M&lt;sup&gt;lle&lt;/sup&gt;&lt;/abbr&gt; Gwendoline&lt;/span&gt; and 
&lt;span lang="fr"&gt;&lt;abbr&gt;M&lt;sup&gt;me&lt;/sup&gt;&lt;/abbr&gt; Denise&lt;/span&gt;.&lt;/p&gt;</pre>
  </div>

  <p>Mathematical expressions often use subscripts and superscripts.
  Authors are encouraged to use MathML for marking up mathematics, but
  authors may opt to use <code><a href=#the-sub-and-sup-elements>sub</a></code> and <code><a href=#the-sub-and-sup-elements>sup</a></code> if
  detailed mathematical markup is not desired. <a href=#refsMathML>[MathML]</a></p>

  <div class=example>
   <pre>&lt;var&gt;E&lt;/var&gt;=&lt;var&gt;m&lt;/var&gt;&lt;var&gt;c&lt;/var&gt;&lt;sup&gt;2&lt;/sup&gt;</pre>
   <pre>f(&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;) = log&lt;sub&gt;4&lt;/sub&gt;&lt;var&gt;x&lt;/var&gt;&lt;sup&gt;&lt;var&gt;n&lt;/var&gt;&lt;/sup&gt;</pre>
  </div>


  <h4 id=the-span-element><span class=secno>4.6.18 </span>The <dfn><code>span</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-span-element>span</a></code> element doesn't mean anything on its own,
  but can be useful when used together with other attributes,
  e.g. <code title=attr-class><a href=#classes>class</a></code>, <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code>, or <code title=attr-dir><a href=#the-dir-attribute>dir</a></code>. It <a href=#represents>represents</a> its
  children.</p>


  <h4 id=the-i-element><span class=secno>4.6.19 </span>The <dfn><code>i</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-i-element>i</a></code> element <a href=#represents>represents</a> a span of text
  in an alternate voice or mood, or otherwise offset from the normal
  prose, such as a taxonomic designation, a technical term, an
  idiomatic phrase from another language, a thought, a ship name, or
  some other prose whose typical typographic presentation is
  italicized.</p>

  <p>Terms in languages different from the main text should be
  annotated with <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code> attributes (<code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code> in XML).</p>

  <div class=example>
   <p>The examples below show uses of the <code><a href=#the-i-element>i</a></code> element:</p>
   <pre>&lt;p&gt;The &lt;i class="taxonomy"&gt;Felis silvestris catus&lt;/i&gt; is cute.&lt;/p&gt;
&lt;p&gt;The term &lt;i&gt;prose content&lt;/i&gt; is defined above.&lt;/p&gt;
&lt;p&gt;There is a certain &lt;i lang="fr"&gt;je ne sais quoi&lt;/i&gt; in the air.&lt;/p&gt;</pre>
   <p>In the following example, a dream sequence is marked up using
   <code><a href=#the-i-element>i</a></code> elements.</p>
   <pre>&lt;p&gt;Raymond tried to sleep.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;The ship sailed away on Thursday&lt;/i&gt;, he
dreamt. &lt;i&gt;The ship had many people aboard, including a beautiful
princess called Carey. He watched her, day-in, day-out, hoping she
would notice him, but she never did.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Finally one night he picked up the courage to speak with
her&mdash;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Raymond woke with a start as the fire alarm rang out.&lt;/p&gt;</pre>
  </div>

  <p>Authors are encouraged to use the <code title=attr-class><a href=#classes>class</a></code> attribute on the <code><a href=#the-i-element>i</a></code>
  element to identify why the element is being used, so that if the
  style of a particular use (e.g. dream sequences as opposed to
  taxonomic terms) is to be changed at a later date, the author
  doesn't have to go through the entire document (or series of related
  documents) annotating each use. Similarly, authors are encouraged to
  consider whether other elements might be more applicable than the
  <code><a href=#the-i-element>i</a></code> element, for instance the <code><a href=#the-em-element>em</a></code> element for
  marking up stress emphasis, or the <code><a href=#the-dfn-element>dfn</a></code> element to mark
  up the defining instance of a term.</p>

  <p class=note>Style sheets can be used to format <code><a href=#the-i-element>i</a></code>
  elements, just like any other element can be restyled. Thus, it is
  not the case that content in <code><a href=#the-i-element>i</a></code> elements will
  necessarily be italicized.</p>


  <h4 id=the-b-element><span class=secno>4.6.20 </span>The <dfn><code>b</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-b-element>b</a></code> element <a href=#represents>represents</a> a span of text
  to be stylistically offset from the normal prose without conveying
  any extra importance, such as key words in a document abstract,
  product names in a review, or other spans of text whose typical
  typographic presentation is boldened.</p>

  <div class=example>
   <p>The following example shows a use of the <code><a href=#the-b-element>b</a></code> element
   to highlight key words without marking them up as important:</p>
   <pre>&lt;p&gt;The &lt;b&gt;frobonitor&lt;/b&gt; and &lt;b&gt;barbinator&lt;/b&gt; components are fried.&lt;/p&gt;</pre>
  </div>

  <div class=example>
   <p>In the following example, objects in a text adventure are
   highlighted as being special by use of the <code><a href=#the-b-element>b</a></code>
   element.</p>
   <pre>&lt;p&gt;You enter a small room. Your &lt;b&gt;sword&lt;/b&gt; glows
brighter. A &lt;b&gt;rat&lt;/b&gt; scurries past the corner wall.&lt;/p&gt;</pre>
  </div>

  <div class=example>
   <p>Another case where the <code><a href=#the-b-element>b</a></code> element is appropriate is
   in marking up the lede (or lead) sentence or paragraph. The
   following example shows how a <a href=http://news.bbc.co.uk/2/hi/uk_news/scotland/north_east/7101506.stm>BBC
   article about kittens adopting a rabbit as their own</a> could be
   marked up using HTML5 elements:</p>
   <pre>&lt;article&gt;
 &lt;h2&gt;Kittens 'adopted' by pet rabbit&lt;/h2&gt;
 &lt;p&gt;&lt;b&gt;Six abandoned kittens have found an unexpected new
 mother figure &mdash; a pet rabbit.&lt;/b&gt;&lt;/p&gt;
 &lt;p&gt;Veterinary nurse Melanie Humble took the three-week-old
 kittens to her Aberdeen home.&lt;/p&gt;
<i>[...]</i></pre>
  </div>

  <p>The <code><a href=#the-b-element>b</a></code> element should be used as a last resort when
  no other element is more appropriate. In particular, headers should
  use the <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code> to <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code> elements, stress emphasis
  should use the <code><a href=#the-em-element>em</a></code> element, importance should be denoted
  with the <code><a href=#the-strong-element>strong</a></code> element, and text marked or highlighted
  should use the <code><a href=#the-mark-element>mark</a></code> element.</p>

  <div class=example>
   <p>The following would be <em>incorrect</em> usage:</p>
   <pre>&lt;p&gt;&lt;b&gt;WARNING!&lt;/b&gt; Do not frob the barbinator!&lt;/p&gt;</pre>
   <p>In the previous example, the correct element to use would have
   been <code><a href=#the-strong-element>strong</a></code>, not <code><a href=#the-b-element>b</a></code>.</p>
  </div>

  <p class=note>Style sheets can be used to format <code><a href=#the-b-element>b</a></code>
  elements, just like any other element can be restyled. Thus, it is
  not the case that content in <code><a href=#the-b-element>b</a></code> elements will
  necessarily be boldened.</p>


  <h4 id=the-bdo-element><span class=secno>4.6.21 </span>The <dfn><code>bdo</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd>Also, the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code> global attribute has special semantics on this element.</dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-bdo-element>bdo</a></code> element <a href=#represents>represents</a> explicit
  text directionality formatting control for its children. It allows
  authors to override the Unicode bidi algorithm by explicitly
  specifying a direction override. <a href=#refsBIDI>[BIDI]</a></p>

  <p>Authors must specify the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code>
  attribute on this element, with the value <code>ltr</code> to
  specify a left-to-right override and with the value <code>rtl</code>
  to specify a right-to-left override.</p>

  <p>If the element has the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code>
  attribute set to the exact value <code>ltr</code>, then for the
  purposes of the bidi algorithm, the user agent must act as if there
  was a U+202D LEFT-TO-RIGHT OVERRIDE character at the start of the
  element, and a U+202C POP DIRECTIONAL FORMATTING at the end of the
  element.</p>

  <p>If the element has the <code title=attr-dir><a href=#the-dir-attribute>dir</a></code>
  attribute set to the exact value <code>rtl</code>, then for the
  purposes of the bidi algorithm, the user agent must act as if there
  was a U+202E RIGHT-TO-LEFT OVERRIDE character at the start of the
  element, and a U+202C POP DIRECTIONAL FORMATTING at the end of the
  element.</p>

  <p>The requirements on handling the <code><a href=#the-bdo-element>bdo</a></code> element for the
  bidi algorithm may be implemented indirectly through the style
  layer. For example, an HTML+CSS user agent should implement these
  requirements by implementing the CSS <code>unicode-bidi</code>
  property. <a href=#refsCSS21>[CSS21]</a></p>

  <!-- XXX need examples -->



  <h4 id=the-ruby-element><span class=secno>4.6.22 </span>The <dfn><code>ruby</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>One or more groups of: <a href=#phrasing-content-0>phrasing content</a> followed either by a single <code><a href=#the-rt-element>rt</a></code> element, or an <code><a href=#the-rp-element>rp</a></code> element, an <code><a href=#the-rt-element>rt</a></code> element, and another <code><a href=#the-rp-element>rp</a></code> element.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-ruby-element>ruby</a></code> element allows one or more spans of
  phrasing content to be marked with ruby annotations. Ruby
  annotations are short runs of text presented alongside base text,
  primarily used in East Asian typography as a guide for
  pronounciation or to include other annotations. In Japanese, this
  form of typography is also known as <i>furigana</i>.</p>

  <p>A <code><a href=#the-ruby-element>ruby</a></code> element <a href=#represents>represents</a> the spans of
  phrasing content it contains, ignoring all the child <code><a href=#the-rt-element>rt</a></code>
  and <code><a href=#the-rp-element>rp</a></code> elements and their descendants. Those spans of
  phrasing content have associated annotations created using the
  <code><a href=#the-rt-element>rt</a></code> element.</p>

  <div class=example>

   <!-- this is the kanji for the word "kanji" ("chinese character") in japanese -->
   <!-- in japanese, ruby-like typography is called "furigana" -->

   <p>In this example, each ideograph in the Japanese text <span lang=ja>&#28450;&#23383;</span> is annotated with its kanji
   reading.</p>

   <pre lang=ja>... 
&lt;ruby&gt;
 &#28450; &lt;rt&gt; &#12363;&#12435; &lt;/rt&gt;
 &#23383; &lt;rt&gt; &#12376;&#12288; &lt;/rt&gt;
&lt;/ruby&gt;
...</pre>

   <p>This might be rendered as:</p>

   <p><img alt="The two main ideographs, each with its kanji annotation rendered in a smaller font above it." src=images/sample-ruby-ja.png></p>

  </div>

  <div class=example>

   <!-- this is the bopomofo for the word "hanzi" ("chinese character") in traditional chinese, as used in taiwan -->

   <p>In this example, each ideograph in the traditional Chinese text
   <span lang=zh-TW>&#28450;&#23383;</span> is annotated with its
   bopomofo reading.</p>

   <pre lang=zh-TW>&lt;ruby&gt;
 &#28450; &lt;rt&gt; &#12559;&#12578;&#715; &lt;/rt&gt;
 &#23383; &lt;rt&gt; &#12567;&#715;&#12288; &lt;/rt&gt;
&lt;/ruby&gt;</pre>

   <p>This might be rendered as:</p>

   <p><img alt="The two main ideographs, each with its bopomofo annotation rendered in a smaller font next to it." src=images/sample-ruby-bopomofo.png></p>

  </div>

  <div class=example>

   <!-- this is the pinyin for the word "hanzi" ("chinese character") in simplified chinese, as used in mainland china -->

   <p>In this example, each ideograph in the simplified Chinese text
   <span lang=zh-CN>&#27721;&#23383;</span> is annotated with its
   pinyin reading.</p>

   <pre lang=zh-CN>...
&lt;ruby&gt;
 &#27721; &lt;rt&gt; h&agrave;n &lt;/rt&gt;
 &#23383; &lt;rt&gt; z&igrave;&nbsp; &lt;/rt&gt;
&lt;/ruby&gt;
...</pre>

   <p>This might be rendered as:</p>

   <p><img alt="The two main ideographs, each with its pinyin annotation rendered in a smaller font above it." src=images/sample-ruby-pinyin.png></p>

  </div>

  <!-- Note: Examples are 32px/16px Stone Sans Sem ITC TT -->


  <h4 id=the-rt-element><span class=secno>4.6.23 </span>The <dfn><code>rt</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-ruby-element>ruby</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-rt-element>rt</a></code> element marks the ruby text component of a
  ruby annotation.</p>

  <p>An <code><a href=#the-rt-element>rt</a></code> element that is a child of a <code><a href=#the-ruby-element>ruby</a></code>
  element <a href=#represents>represents</a> an annotation (given by its
  children) for the zero or more nodes of phrasing content that
  immediately precedes it in the <code><a href=#the-ruby-element>ruby</a></code> element, ignoring
  <code><a href=#the-rp-element>rp</a></code> elements.</p>

  <p>An <code><a href=#the-rt-element>rt</a></code> element that is not a child of a
  <code><a href=#the-ruby-element>ruby</a></code> element represents the same thing as its
  children.</p>


  <h4 id=the-rp-element><span class=secno>4.6.24 </span>The <dfn><code>rp</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-ruby-element>ruby</a></code> element, either immediately before or immediately after an <code><a href=#the-rt-element>rt</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>If the <code><a href=#the-rp-element>rp</a></code> element is immediately after an <code><a href=#the-rt-element>rt</a></code> element that is immediately preceded by another <code><a href=#the-rp-element>rp</a></code> element: a single character from Unicode character class Pe.</dd>
   <dd>Otherwise: a single character from Unicode character class Ps.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-rp-element>rp</a></code> element can be used to provide parentheses
  around a ruby text component of a ruby annotation, to be shown by
  user agents that don't support ruby annotations.</p>

  <p>An <code><a href=#the-rp-element>rp</a></code> element that is a child of a <code><a href=#the-ruby-element>ruby</a></code>
  element <a href=#represents>represents</a> nothing and it and its contents must
  be ignored. An <code><a href=#the-rp-element>rp</a></code> element whose parent element is not a
  <code><a href=#the-ruby-element>ruby</a></code> element <a href=#represents>represents</a> its children.</p>

  <div class=example>

   <p>The example above, in which each ideograph in the text <span lang=ja>&#28450;&#23383;</span> is annotated with its kanji
   reading, could be expanded to use <code><a href=#the-rp-element>rp</a></code> so that in legacy
   user agents the readings are in parentheses:</p>

   <pre lang=ja>... 
&lt;ruby&gt;
 &#28450; &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;&#12363;&#12435;&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;
 &#23383; &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;&#12376;&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;
&lt;/ruby&gt;
...</pre>

   <p>In conforming user agents the rendering would be as above, but
   in user agents that do not support ruby, the rendering would
   be:</p>

   <pre lang=ja>... &#28450; (&#12363;&#12435;) &#23383; (&#12376;) ...</pre>

  </div>


  <h4 id=usage-summary><span class=secno>4.6.25 </span>Usage summary</h4>

  <p class=XXX>We need to summarize the various elements, in
  particular to distinguish b/i/em/strong/var/q/mark/cite.</p>

  <!-- XXX when you do this, also reorder the elements in this section
  to bring the related ones closer together. -->


  <h4 id=footnotes><span class=secno>4.6.26 </span>Footnotes</h4>

  <p>HTML does not have a dedicated mechanism for marking up
  footnotes. Here are the recommended alternatives.</p>

  <p>For short inline annotations, the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute should be used.</p>

  <div class=example>

   <p>In this example, two parts of a dialog are annotated.</p>

   <pre>&lt;dialog&gt;
 &lt;dt&gt;Customer
 &lt;dd&gt;Hello! I wish to register a complaint. Hello. Miss?
 &lt;dt&gt;Shopkeeper
 &lt;dd&gt;&lt;span title="Colloquial pronunciation of 'What do you'"
 &gt;Watcha&lt;/span&gt; mean, miss?
 &lt;dt&gt;Customer
 &lt;dd&gt;Uh, I'm sorry, I have a cold. I wish to make a complaint.
 &lt;dt&gt;Shopkeeper
 &lt;dd&gt;Sorry, &lt;span title="This is, of course, a lie."&gt;we're
 closing for lunch&lt;/span&gt;.
&lt;/dialog&gt;</pre>

  </div>

  <p>For longer annotations, the <code><a href=#the-a-element>a</a></code> element should be
  used, pointing to an element later in the document. The convention
  is that the contents of the link be a number in square brackets.</p>

  <div class=example>

   <p>In this example, a footnote in the dialog links to a paragraph
   below the dialog. The paragraph then reciprocally links back to the
   dialog, allowing the user to return to the location of the
   footnote.</p>

   <pre>&lt;dialog&gt;
 &lt;dt&gt;Announcer
 &lt;dd&gt;Number 16: The &lt;i&gt;hand&lt;/i&gt;.
 &lt;dt&gt;Interviewer
 &lt;dd&gt;Good evening. I have with me in the studio tonight Mr
 Norman St John Polevaulter, who for the past few years has
 been contradicting people. Mr Polevaulter, why &lt;em&gt;do&lt;/em&gt;
 you contradict people?
 &lt;dt&gt;Norman
 &lt;dd&gt;I don't. &lt;a href="#fn1" id="r1"&gt;[1]&lt;/a&gt;
 &lt;dt&gt;Interviewer
 &lt;dd&gt;You told me you did!
&lt;/dialog&gt;
&lt;section&gt;
 &lt;p id="fn1"&gt;&lt;a href="#r1"&gt;[1]&lt;/a&gt; This is, naturally, a lie,
 but paradoxically if it were true he could not say so without
 contradicting the interviewer and thus making it false.&lt;/p&gt;
&lt;/section&gt;</pre>

  </div>

  <p>For side notes, longer annotations that apply to entire sections
  of the text rather than just specific words or sentences, the
  <code><a href=#the-aside-element>aside</a></code> element should be used.</p>

  <div class=example>

   <p>In this example, a sidebar is given after a dialog, giving some
   context to the dialog.</p>

   <pre>&lt;dialog&gt;
 &lt;dt&gt;Customer
 &lt;dd&gt;I will not buy this record, it is scratched.
 &lt;dt&gt;Shopkeeper
 &lt;dd&gt;I'm sorry?
 &lt;dt&gt;Customer
 &lt;dd&gt;I will not buy this record, it is scratched.
 &lt;dt&gt;Shopkeeper
 &lt;dd&gt;No no no, this's'a tobacconist's.
&lt;/dialog&gt;
&lt;aside&gt;
 &lt;p&gt;In 1970, the British Empire lay in ruins, and foreign
 nationalists frequented the streets &mdash; many of them Hungarians
 (not the streets &mdash; the foreign nationals). Sadly, Alexander
 Yalt has been publishing incompetently-written phrase books.
&lt;/aside&gt;</pre>

  </div>



  <h3 id=edits><span class=secno>4.7 </span>Edits</h3>

  <p>The <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements represent
  edits to the document.</p>


  <h4 id=the-ins-element><span class=secno>4.7.1 </span>The <dfn><code>ins</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd>When the element only contains <a href=#phrasing-content-0>phrasing content</a>: <a href=#phrasing-content-0>phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#transparent>Transparent</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-mod-cite><a href=#attr-mod-cite>cite</a></code></dd>
   <dd><code title=attr-mod-datetime><a href=#attr-mod-datetime>datetime</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>Uses the <code><a href=#htmlmodelement>HTMLModElement</a></code> interface.</dd>
  </dl><p>The <code><a href=#the-ins-element>ins</a></code> element <a href=#represents>represents</a> an addition
  to the document.</p>

  <div class=example>

   <p>The following represents the addition of a single paragraph:</p>

   <pre>&lt;aside&gt;
 &lt;ins&gt;
  &lt;p&gt; I like fruit. &lt;/p&gt;
 &lt;/ins&gt;
&lt;/aside&gt;</pre>

   <p>As does this, because everything in the <code><a href=#the-aside-element>aside</a></code>
   element here counts as <a href=#phrasing-content-0>phrasing content</a> and therefore
   there is just one <a href=#paragraph>paragraph</a>:</p>

   <pre>&lt;aside&gt;
 &lt;ins&gt;
  Apples are &lt;em&gt;tasty&lt;/em&gt;.
 &lt;/ins&gt;
 &lt;ins&gt;
  So are pears.
 &lt;/ins&gt;
&lt;/aside&gt;</pre>

  </div>

  <p><code><a href=#the-ins-element>ins</a></code> elements should not cross <a href=#paragraph title=paragraph>implied paragraph</a> boundaries.</p>

  <div class=example>

   <p>The following example represents the addition of two paragraphs,
   the second of which was inserted in two parts. The first
   <code><a href=#the-ins-element>ins</a></code> element in this example thus crosses a paragraph
   boundary, which is considered poor form.</p>

   <pre>&lt;aside&gt;
 &lt;ins datetime="2005-03-16T00:00Z"&gt;
  &lt;p&gt; I like fruit. &lt;/p&gt;
  Apples are &lt;em&gt;tasty&lt;/em&gt;.
 &lt;/ins&gt;
 &lt;ins datetime="2007-12-19T00:00Z"&gt;
  So are pears.
 &lt;/ins&gt;
&lt;/aside&gt;</pre>

   <p>Here is a better way of marking this up. It uses more elements,
   but none of the elements cross implied paragraph boundaries.</p>

   <pre>&lt;aside&gt;
 &lt;ins datetime="2005-03-16T00:00Z"&gt;
  &lt;p&gt; I like fruit. &lt;/p&gt;
 &lt;/ins&gt;
 &lt;ins datetime="2005-03-16T00:00Z"&gt;
  Apples are &lt;em&gt;tasty&lt;/em&gt;.
 &lt;/ins&gt;
 &lt;ins datetime="2007-12-19T00:00Z"&gt;
  So are pears.
 &lt;/ins&gt;
&lt;/aside&gt;</pre>

   <!-- Those dates aren't random. They're the start and end of
   something. Can you guess what? -->

  </div>


  <h4 id=the-del-element><span class=secno>4.7.2 </span>The <dfn><code>del</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd>When the element only contains <a href=#phrasing-content-0>phrasing content</a>: <a href=#phrasing-content-0>phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#transparent>Transparent</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-mod-cite><a href=#attr-mod-cite>cite</a></code></dd>
   <dd><code title=attr-mod-datetime><a href=#attr-mod-datetime>datetime</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>Uses the <code><a href=#htmlmodelement>HTMLModElement</a></code> interface.</dd>
  </dl><p>The <code><a href=#the-del-element>del</a></code> element <a href=#represents>represents</a> a removal
  from the document.</p>

  <p><code><a href=#the-del-element>del</a></code> elements should not cross <a href=#paragraph title=paragraph>implied paragraph</a> boundaries.</p>


  <h4 id=attributes-common-to-ins-and-del-elements><span class=secno>4.7.3 </span>Attributes common to <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements</h4>

  <p>The <dfn id=attr-mod-cite title=attr-mod-cite><code>cite</code></dfn> attribute
  may be used to specify the address of a document that explains the
  change. When that document is long, for instance the minutes of a
  meeting, authors are encouraged to include a fragment identifier
  pointing to the specific part of that document that discusses the
  change.</p>

  <p>If the <code title=attr-mod-cite><a href=#attr-mod-cite>cite</a></code> attribute is
  present, it must be a <a href=#valid-url>valid URL</a> that explains the
  change. To obtain the corresponding citation link, the value of the
  attribute must be <a href=#resolve-a-url title="resolve a url">resolved</a>
  relative to the element. User agents should allow users to follow
  such citation links.</p>

  <p>The <dfn id=attr-mod-datetime title=attr-mod-datetime><code>datetime</code></dfn>
  attribute may be used to specify the time and date of the change.</p>

  <p>If present, the <code title=attr-mod-datetime><a href=#attr-mod-datetime>datetime</a></code>
  attribute must be a <a href=#valid-global-date-and-time-string>valid global date and time string</a>
  value.</p>

  <p>User agents must parse the <code title=attr-mod-datetime><a href=#attr-mod-datetime>datetime</a></code> attribute according to the
  <a href=#parse-a-global-date-and-time-string>parse a global date and time string</a> algorithm. If that
  doesn't return a time, then the modification has no associated
  timestamp (the value is non-conforming; it is not a <a href=#valid-global-date-and-time-string>valid
  global date and time string</a>). Otherwise, the modification is
  marked as having been made at the given datetime. User agents should
  use the associated timezone information to determine which timezone
  to present the given datetime in.</p>

  <p>The <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements must implement
  the <code><a href=#htmlmodelement>HTMLModElement</a></code> interface:</p>

  <pre class=idl>interface <dfn id=htmlmodelement>HTMLModElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-mod-cite title=dom-mod-cite>cite</a>;
           attribute DOMString <a href=#dom-mod-datetime title=dom-mod-datetime>dateTime</a>;
};</pre>

  <p>The <dfn id=dom-mod-cite title=dom-mod-cite><code>cite</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the element's <code title=attr-mod-cite><a href=#attr-mod-cite>cite</a></code> content attribute. The <dfn id=dom-mod-datetime title=dom-mod-datetime><code>dateTime</code></dfn> DOM attribute
  must <a href=#reflect>reflect</a> the element's <code title="">datetime</code> content attribute.</p>


  <h4 id=edits-and-paragraphs><span class=secno>4.7.4 </span>Edits and paragraphs</h4>

  <p>Since the <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements do not
  affect <a href=#paragraph title=paragraph>paragraphing</a>, it is possible,
  in some cases where paragraphs are <a href=#paragraph title=paragraph>implied</a> (without explicit <code><a href=#the-p-element>p</a></code>
  elements), for an <code><a href=#the-ins-element>ins</a></code> or <code><a href=#the-del-element>del</a></code> element to
  span both an entire paragraph or other non-<a href=#phrasing-content-0>phrasing
  content</a> elements and part of another paragraph.</p>

  <p>For example:</p>

  <pre>&lt;section&gt;
 &lt;ins&gt;
  &lt;p&gt;
   This is a paragraph that was inserted.
  &lt;/p&gt;
  This is another paragraph whose first sentence was inserted
  at the same time as the paragraph above.
 &lt;/ins&gt;
 This is a second sentence, which was there all along.
&lt;/section&gt;</pre>

  <p>By only wrapping some paragraphs in <code><a href=#the-p-element>p</a></code> elements, one
  can even get the end of one paragraph, a whole second paragraph,
  and the start of a third paragraph to be covered by the same
  <code><a href=#the-ins-element>ins</a></code> or <code><a href=#the-del-element>del</a></code> element (though this is very
  confusing, and not considered good practice):</p>

  <pre>&lt;section&gt;
 This is the first paragraph. &lt;ins&gt;This sentence was
 inserted.
 &lt;p&gt;This second paragraph was inserted.&lt;/p&gt;
 This sentence was inserted too.&lt;/ins&gt; This is the
 third paragraph in this example.
&lt;/section&gt;</pre>

  <p>However, due to the way <a href=#paragraph title=paragraph>implied
  paragraphs</a> are defined, it is not possible to mark up the
  end of one paragraph and the start of the very next one using the
  same <code><a href=#the-ins-element>ins</a></code> or <code><a href=#the-del-element>del</a></code> element. You instead have
  to use one (or two) <code><a href=#the-p-element>p</a></code> element(s) and two
  <code><a href=#the-ins-element>ins</a></code> or <code><a href=#the-del-element>del</a></code> elements:

  <p>For example:</p>

  <pre>&lt;section&gt;
 &lt;p&gt;This is the first paragraph. &lt;del&gt;This sentence was
 deleted.&lt;/del&gt;&lt;/p&gt;
 &lt;p&gt;&lt;del&gt;This sentence was deleted too.&lt;/del&gt; That
 sentence needed a separate &amp;lt;del&amp;gt; element.&lt;/p&gt;
&lt;/section&gt;</pre>

  <p>Partly because of the confusion described above, authors are
  strongly recommended to always mark up all paragraphs with the
  <code><a href=#the-p-element>p</a></code> element, and to not have any <code><a href=#the-ins-element>ins</a></code> or
  <code><a href=#the-del-element>del</a></code> elements that cross across any <a href=#paragraph title=paragraph>implied paragraphs</a>.</p>


  <h4 id=edits-and-lists><span class=secno>4.7.5 </span>Edits and lists</h4>

  <p>The content models of the <code><a href=#the-ol-element>ol</a></code> and <code><a href=#the-ul-element>ul</a></code>
  elements do not allow <code><a href=#the-ins-element>ins</a></code> and <code><a href=#the-del-element>del</a></code> elements
  as children. Lists always represent all their items, including items
  that would otherwise have been marked as deleted.</p>

  <p>To indicate that an item is inserted or deleted, an
  <code><a href=#the-ins-element>ins</a></code> or <code><a href=#the-del-element>del</a></code> element can be wrapped around
  the contents of the <code><a href=#the-li-element>li</a></code> element. To indicate that an
  item has been replaced by another, a single <code><a href=#the-li-element>li</a></code> element
  can have one or more <code><a href=#the-del-element>del</a></code> elements followed by one or
  more <code><a href=#the-ins-element>ins</a></code> elements.</p>

  <div class=example>

   <p>In the following example, a list that started empty had items
   added and removed from it over time. The bits in the example that
   have been emphasised show the parts that are the "current" state of
   the list. The list item numbers don't take into account the edits,
   though.</p>

   <pre>&lt;h1&gt;Stop-ship bugs&lt;/h1&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;ins datetime="2008-02-12T15:20Z"&gt;<em>Bug 225:
 Rain detector doesn't work in snow</em>&lt;/ins&gt;&lt;/li&gt;
 &lt;li&gt;&lt;del datetime="2008-03-01T20:22Z"&gt;&lt;ins datetime="2008-02-14T12:02Z"&gt;Bug 228:
 Water buffer overflows in April&lt;/ins&gt;&lt;/del&gt;&lt;/li&gt;
 &lt;li&gt;&lt;ins datetime="2008-02-16T13:50Z"&gt;<em>Bug 230:
 Water heater doesn't use renewable fuels</em>&lt;/ins&gt;&lt;/li&gt;
 &lt;li&gt;&lt;del datetime="2008-02-20T21:15Z"&gt;&lt;ins datetime="2008-02-16T14:25Z"&gt;Bug 232:
 Carbon dioxide emissions detected after startup&lt;/ins&gt;&lt;/del&gt;&lt;/li&gt;
&lt;/ol&gt;</pre>

  </div>

  <div class=example>

   <p>In the following example, a list that started with just fruit
   was replaced by a list with just colors.</p>

   <pre>&lt;h1&gt;List of &lt;del&gt;fruits&lt;/del&gt;&lt;ins&gt;colors&lt;/ins&gt;&lt;/h1&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;del&gt;Lime&lt;/del&gt;&lt;ins&gt;Green&lt;/ins&gt;&lt;/li&gt;
 &lt;li&gt;&lt;del&gt;Apple&lt;/del&gt;&lt;/li&gt;
 &lt;li&gt;Orange&lt;/li&gt;
 &lt;li&gt;&lt;del&gt;Pear&lt;/del&gt;&lt;/li&gt;
 &lt;li&gt;&lt;ins&gt;Teal&lt;/ins&gt;&lt;/li&gt;
 &lt;li&gt;&lt;del&gt;Lemon&lt;/del&gt;&lt;ins&gt;Yellow&lt;/ins&gt;&lt;/li&gt;
 &lt;li&gt;Olive&lt;/li&gt;
 &lt;li&gt;&lt;ins&gt;Purple&lt;/ins&gt;
&lt;/ul&gt;</pre>

  </div>




  <h3 id=embedded-content-0><span class=secno>4.8 </span>Embedded content</h3>

  <h4 id=the-figure-element><span class=secno>4.8.1 </span>The <dfn><code>figure</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#sectioning-root>Sectioning root</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Either: one <code><a href=#the-legend-element>legend</a></code> element followed by <a href=#flow-content-0>flow content</a>.</dd>
   <dd>Or: <a href=#flow-content-0>Flow content</a> followed by one <code><a href=#the-legend-element>legend</a></code> element.</dd>
   <dd>Or: <a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><!-- v2: Add a <credit> element for photo credits --><p>The <code><a href=#the-figure-element>figure</a></code> element <a href=#represents>represents</a> some
  <a href=#flow-content-0>flow content</a>, optionally with a caption, which can be
  moved away from the main flow of the document without affecting the
  document's meaning.</p>

  <p>The element can thus be used to annotate illustrations, diagrams,
  photos, code listings, etc, that are referred to from the main
  content of the document, but that could, without affecting the flow
  of the document, be moved away from that primary content, e.g. to
  the side of the page, to dedicated pages, or to an appendix.</p>

  <p>The first <code><a href=#the-legend-element>legend</a></code> element child of the element, if
  any, represents the caption of the <code><a href=#the-figure-element>figure</a></code> element's
  contents. If there is no child <code><a href=#the-legend-element>legend</a></code> element, then
  there is no caption.</p>

  <p>The remainder of the element's contents, if any, represents the
  content.</p>

  <div class=example>

   <p>This example shows the <code><a href=#the-figure-element>figure</a></code> element to mark up a
   code listing.</p>

   <pre>&lt;p&gt;In &lt;a href="#l4"&gt;listing 4&lt;/a&gt; we see the primary core interface
API declaration.&lt;/p&gt;
&lt;figure id="l4"&gt;
 &lt;legend&gt;Listing 4. The primary core interface API declaration.&lt;/legend&gt;
 &lt;pre&gt;&lt;code&gt;interface PrimaryCore {
  boolean verifyDataLine();
  void sendData(in sequence&amp;lt;byte&gt; data);
  void initSelfDestruct();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;
&lt;p&gt;The API is designed to use UTF-8.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>Here we see a <code><a href=#the-figure-element>figure</a></code> element to mark up a
   photo.</p>

   <pre>&lt;figure&gt;
 &lt;img src="bubbles-work.jpeg"
      alt="Bubbles, sitting in his office chair, works on his
           latest project intently."&gt;
 &lt;legend&gt;Bubbles at work&lt;/legend&gt;
&lt;/figure&gt;</pre>

  </div>

  <div class=example>

   <p>In this example, we see an image that is <em>not</em>
   a figure, as well as an image and a video that are.</p>

   <pre>&lt;h2&gt;Malinko's comics&lt;/h2&gt;

&lt;p&gt;This case centered on some sort of "intellectual property"
infringement related to a comic (see Exhibit A). The suit started
after a trailer ending with these words:&lt;/p&gt;

&lt;img src="promblem-packed-action.png" alt="ROUGH COPY! Promblem-Packed Action!"&gt;

&lt;p&gt;...was aired. A lawyer, armed with a Bigger Notebook, launched a
preemptive strike using snowballs. A complete copy of the trailer is
included with Exhibit B.&lt;/p&gt;

&lt;figure&gt;
 &lt;img src="ex-a.png" alt="Two squiggles on a dirty piece of paper."&gt;
 &lt;legend&gt;Exhibit A. The alleged &lt;cite&gt;rough copy&lt;/cite&gt; comic.&lt;/legend&gt;
&lt;/figure&gt;

&lt;figure&gt;
 &lt;video src="ex-b.mov"&gt;&lt;/video&gt;
 &lt;legend&gt;Exhibit B. The &lt;code&gt;Rough Copy&lt;/cite&gt; trailer.&lt;/legend&gt;
&lt;/figure&gt;

&lt;p&gt;The case was resolved out of court.&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>Here, a part of a poem is marked up using
   <code><a href=#the-figure-element>figure</a></code>.</p>

   <pre>&lt;figure&gt;
 &lt;p&gt;'Twas brillig, and the slithy toves&lt;br&gt;
Did gyre and gimble in the wabe;&lt;br&gt;
All mimsy were the borogoves,&lt;br&gt;
And the mome raths outgrabe.&lt;/p&gt;
 &lt;legend&gt;&lt;cite&gt;Jabberwocky&lt;/cite&gt; (first verse). Lewis Carroll, 1832-98&lt;/legend&gt;
&lt;/figure&gt;</pre>

  </div>

  <div class=example>

   <p>In this example, which could be part of a much larger work
   discussing a castle, the figure has three images in it.</p>

   <pre>&lt;figure&gt;
 &lt;img src="castle1423.jpeg" title="Etching. Anonymous, ca. 1423."
      alt="The castle has one tower, and a tall wall around it."&gt;
 &lt;img src="castle1858.jpeg" title="Oil-based paint on canvas. Maria Towle, 1858."
      alt="The castle now has two towers and two walls."&gt;
 &lt;img src="castle1999.jpeg" title="Film photograph. Peter Jankle, 1999."
      alt="The castle lies in ruins, the original tower all that remains in one piece."&gt;
 &lt;legend&gt;The castle through the ages: 1423, 1858, and 1999 respectively.&lt;/legend&gt;
&lt;/figure&gt;</pre>

  </div>


  <h4 id=the-img-element><span class=secno>4.8.2 </span>The <dfn><code>img</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#embedded-content-2>Embedded content</a>.</dd>
   <dd>If the element has an <code title=attr-hyperlink-usemap><a href=#attr-hyperlink-usemap>usemap</a></code> attribute: <a href=#interactive-content-0>Interactive content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#embedded-content-2>embedded content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-img-alt><a href=#attr-img-alt>alt</a></code></dd>
   <dd><code title=attr-img-src><a href=#attr-img-src>src</a></code></dd>
   <dd><code title=attr-hyperlink-usemap><a href=#attr-hyperlink-usemap>usemap</a></code></dd>
   <dd><code title=attr-img-ismap><a href=#attr-img-ismap>ismap</a></code></dd>
   <dd><code title=attr-dim-width><a href=#attr-dim-width>width</a></code></dd>
   <dd><code title=attr-dim-height><a href=#attr-dim-height>height</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>[NamedConstructor=<a href=#dom-image title=dom-image>Image</a>(),
 NamedConstructor=<a href=#dom-image-w title=dom-image-w>Image</a>(in unsigned long width),
 NamedConstructor=<a href=#dom-image-wh title=dom-image-wh>Image</a>(in unsigned long width, in unsigned long height)]
interface <dfn id=htmlimageelement>HTMLImageElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-img-alt title=dom-img-alt>alt</a>;
           attribute DOMString <a href=#dom-img-src title=dom-img-src>src</a>;
           attribute DOMString <a href=#dom-img-usemap title=dom-img-useMap>useMap</a>;
           attribute boolean <a href=#dom-img-ismap title=dom-img-isMap>isMap</a>;
           attribute unsigned long <a href=#dom-img-width title=dom-img-width>width</a>;
           attribute unsigned long <a href=#dom-img-height title=dom-img-height>height</a>;
  readonly attribute boolean <a href=#dom-img-complete title=dom-img-complete>complete</a>;
};</pre>
   </dd>
  </dl><p>An <code><a href=#the-img-element>img</a></code> element represents an image.</p>

  <p>The image given by the <dfn id=attr-img-src title=attr-img-src><code>src</code></dfn> attribute is the
  embedded content, and the value of the <dfn id=attr-img-alt title=attr-img-alt><code>alt</code></dfn> attribute is the
  <code><a href=#the-img-element>img</a></code> element's <a href=#fallback-content>fallback content</a>.</p>

  <p>The <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute must be
  present, and must contain a <a href=#valid-url>valid URL</a> referencing a
  non-interactive, optionally animated, image resource that is neither
  paged nor scripted. If the <i>base URI of the element</i> is the
  same as <a href="#the-document's-address">the document's address</a>, then the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute's value must not be the
  empty string.</p>

  <p class=note>Images can thus be static bitmaps (e.g. PNGs, GIFs,
  JPEGs), single-page vector documents (single-page PDFs, XML files
  with an SVG root element), animated bitmaps (APNGs, animated GIFs),
  animated vector graphics (XML files with an SVG root element that
  use declarative SMIL animation), and so forth. However, this also
  precludes SVG files with script, multipage PDF files, interactive
  MNG files, HTML documents, plain text documents, and so forth.</p>

  <p>The requirements on the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
  attribute's value are described <a href=#alt>in the next
  section</a>.</p>

  <p class=XXX>There has been some suggestion that the <code title="">longdesc</code> attribute from HTML4 should be
  included. This has been considered and rejected in the past, but if
  new evidence is found showing the attribute to actually help users
  rather than harm them, it may be reconsidered.</p>

  <p>The <code><a href=#the-img-element>img</a></code> must not be used as a layout tool. In
  particular, <code><a href=#the-img-element>img</a></code> elements should not be used to display
  fully transparent images, as they rarely convey meaning and rarely
  add anything useful to the document.</p>

  <hr><p>Unless the user agent cannot support images, or its support for
  images has been disabled, or the user agent only fetches elements on
  demand, or the element's <code title=attr-img-src><a href=#attr-img-src>src</a></code>
  attribute has a value that is an <i>ignored self-reference</i>,
  then, when an <code><a href=#the-img-element>img</a></code> is created with a <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute, and whenever the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute is set subsequently, the
  user agent must <a href=#resolve-a-url title="resolve a url">resolve</a> the value
  of that attribute, relative to the element, and if that is
  successful must then <a href=#fetch>fetch</a> that resource.</p> <!-- Note
  how this does NOT happen when the base URL changes. -->

  <p>The <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute's value is an
  <i>ignored self-reference</i> if its value is the empty string, and
  the <i>base URI of the element</i> is the same as <a href="#the-document's-address">the
  document's address</a>.</p>

  <p>Fetching the image must <a href=#delay-the-load-event>delay the <code title=event-load>load</code> event</a>.</p>

  <p class=warning>This, unfortunately, can be used to perform a
  rudimentary port scan of the user's local network (especially in
  conjunction with scripting, though scripting isn't actually
  necessary to carry out such an attack). User agents may implement
  <a href=#origin-0 title=origin>cross-origin</a> access control policies
  that mitigate this attack.</p>

  <p>If the image's type is a supported image type, and the image is a
  valid image of that type, then the image is said to be
  <i>available</i> (this affects exactly what the element represents,
  as defined below). This can be true even before the image is
  completely downloaded, if the user agent supports incremental
  rendering of images; in such cases, each <a href=#concept-task title=concept-task>task</a> that is <a href=#queue-a-task title="queue a
  task">queued</a> by the <a href=#networking-task-source>networking task source</a> while
  the image is being <a href=#fetch title=fetch>fetched</a> must update
  the presentation of the image appropriately.</p>

  <p>If the image was not fetched (e.g. because the UA's image support
  is disabled, or because the <code title=attr-img-src><a href=#attr-img-src>src</a></code>
  attribute's value is an <i>ignored self-reference</i>), or if the
  conditions in the previous paragraph are not met, then the image is
  <em>not</em> <i>available</i>.</p>

  <p class=note>An image might be <i>available</i> in one
  <a href=#view>view</a> but not another. For instance, a
  <code>Document</code> could be rendered by a screen reader providing
  a speech synthesis view of the output of a Web browser using the
  screen media. In this case, the image would be <i>available</i> in
  the Web browser's screen view, but <em>not</em> <i>available</i> in
  the screen reader's view.</p>

  <p>Whether the image is fetched successfully or not (e.g. whether
  the response code was a 2xx code <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a>) must be
  ignored when determining the image's type and whether it is a valid
  image.</p>

  <p class=note>This allows servers to return images with error
  responses, and have them displayed.</p>

  <p>The user agents should apply the <a href=#content-type-sniffing:-image title="Content-Type
  sniffing: image">image sniffing rules</a> to determine the type
  of the image, with the image's <a href=#content-type-0 title=Content-Type>associated
  Content-Type headers</a> giving the <var title="">official
  type</var>. If these rules are not applied, then the type of the
  image must be the type given by the image's <a href=#content-type-0 title=Content-Type>associated Content-Type headers</a>.</p>

  <p>User agents must not support non-image resources with the
  <code><a href=#the-img-element>img</a></code> element (e.g. XML files whose root element is an
  HTML element). User agents must not run executable code
  (e.g. scripts) embedded in the image resource. User agents must only
  display the first page of a multipage resource (e.g. a PDF
  file). User agents must not allow the resource to act in an
  interactive fashion, but should honour any animation in the
  resource.</p>

  <p>This specification does not specify which image types are to be
  supported.</p>

  <p>The <a href=#concept-task title=concept-task>task</a> that is <a href=#queue-a-task title="queue a task">queued</a> by the <a href=#networking-task-source>networking task
  source</a> once the resource has been <a href=#fetch title=fetch>fetched</a>, must, if the download was successful
  and the image is <i>available</i>, <a href=#queue-a-task>queue a task</a> to
  <a href=#fire-a-load-event>fire a <code title=event-load>load</code> event</a> on
  the <code><a href=#the-img-element>img</a></code> element (this happens after <code title=dom-img-complete><a href=#dom-img-complete>complete</a></code> starts returning true); and
  otherwise, if the fetching process fails without a response from the
  remote server, or completes but the image is not a valid or
  supported image, <a href=#queue-a-task>queue a task</a> to <a href=#fire-an-error-event>fire an <code title=event-error>error</code> event</a> on the
  <code><a href=#the-img-element>img</a></code> element.</p>

  <hr><p>What an <code><a href=#the-img-element>img</a></code> element represents depends on the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute and the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute.</p>

  <dl class=switch><dt>If the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute is set
   and the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute is set to
   the empty string</dt>

   <dd>

    <p>The image is either decorative or supplemental to the rest of
    the content, redundant with some other information in the
    document.</p>

    <p>If the image is <i>available</i> and the user agent is
    configured to display that image, then the element
    <a href=#represents>represents</a> the image specified by the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute.</p>

    <p>Otherwise, the element <a href=#represents>represents</a> nothing, and may
    be omitted completely from the rendering. User agents may provide
    the user with a notification that an image is present but has been
    omitted from the rendering.</p>

   </dd>

   <dt>If the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute is set
   and the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute is set to a
   value that isn't empty</dt>

   <dd>

    <p>The image is a key part of the content; the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute gives a textual
    equivalent or replacement for the image.</p>

    <p>If the image is <i>available</i> and the user agent is
    configured to display that image, then the element
    <a href=#represents>represents</a> the image specified by the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute.</p>

    <p>Otherwise, the element <a href=#represents>represents</a> the text given
    by the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute. User
    agents may provide the user with a notification that an image is
    present but has been omitted from the rendering.</p>

   </dd>

   <dt>If the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute is set
   and the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute is not</dt>

   <dd>

    <p>The image might be a key part of the content, and there is no
    textual equivalent of the image available.</p>

    <p class=note>In a conforming document, the absence of the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute indicates that the image
    is a key part of the content but that a textual replacement for
    the image was not available when the image was generated.</p>

    <p>If the image is <i>available</i>, the element
    <a href=#represents>represents</a> the image specified by the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute.</p>

    <p>If the image is not <i>available</i> or if the user agent is
    not configured to display the image, then the user agent should
    display some sort of indicator that there is an image that is not
    being rendered, and may, if requested by the user, or if so
    configured, or when required to provide contextual information in
    response to navigation, provide caption information for the image,
    derived as follows:</p>

    <ol><li><p>If the image has a <code title=attr-title><a href=#the-title-attribute>title</a></code>
     attribute whose value is not the empty string, then the value of
     that attribute is the caption information; abort these
     steps.</li>

     <li><p>If the image is the child of a <code><a href=#the-figure-element>figure</a></code> element
     that has a child <code><a href=#the-legend-element>legend</a></code> element, then the contents
     of the first such <code><a href=#the-legend-element>legend</a></code> element are the caption
     information; abort these steps.</li>

     <!-- aria processing goes here -->

     <li><p>Run the algorithm to create the <a href=#outline>outline</a> for
     the document.</li>

     <li><p>If the <code><a href=#the-img-element>img</a></code> element did not end up associated
     with a heading in the outline, or if there are any other images
     that are lacking an <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
     attribute and that are associated with the same heading in the
     outline as the <code><a href=#the-img-element>img</a></code> element in question, then there
     is no caption information; abort these steps.</li>

     <li><p>The caption information is the heading with which the
     image is associated according to the outline.</li>

    </ol></dd>

   <dt>If the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute is not
   set and either the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute
   is set to the empty string or the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute is not set at all</dt>

   <dd>

    <p>The element <a href=#represents>represents</a> nothing.</p>

   </dd>

   <dt>Otherwise</dt>

   <dd>

    <p>The element <a href=#represents>represents</a> the text given by the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute.</p>

   </dd>

  </dl><p>The <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute does not
  represent advisory information. User agents must not present the
  contents of the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute in
  the same way as content of the <code title=attr-title><a href=#the-title-attribute>title</a></code>
  attribute.</p>

  <p>User agents may always provide the user with the option to
  display any image, or to prevent any image from being
  displayed. User agents may also apply image analysis heuristics to
  help the user make sense of the image when the user is unable to
  make direct use of the image, e.g. due to a visual disability or
  because they are using a text terminal with no graphics
  capabilities.</p>

  <p>The <em>contents</em> of <code><a href=#the-img-element>img</a></code> elements, if any, are
  ignored for the purposes of rendering.</p>

  <hr><p>The <code title=attr-hyperlink-usemap><a href=#attr-hyperlink-usemap>usemap</a></code> attribute,
  if present, can indicate that the image has an associated
  <a href=#image-map>image map</a>.</p>

  <p>The <dfn id=attr-img-ismap title=attr-img-ismap><code>ismap</code></dfn>
  attribute, when used on an element that is a descendant of an
  <code><a href=#the-a-element>a</a></code> element with an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute, indicates by its
  presence that the element provides access to a server-side image
  map. This affects how events are handled on the corresponding
  <code><a href=#the-a-element>a</a></code> element.</p>

  <p>The <code title=attr-img-ismap><a href=#attr-img-ismap>ismap</a></code> attribute is a
  <a href=#boolean-attribute>boolean attribute</a>. The attribute must not be specified
  on an element that does not have an ancestor <code><a href=#the-a-element>a</a></code> element
  with an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute.</p>

  <p>The <code><a href=#the-img-element>img</a></code> element supports <a href=#dimension-attributes>dimension
  attributes</a>.</p>

  <p>The DOM attributes <dfn id=dom-img-alt title=dom-img-alt><code>alt</code></dfn>, <dfn id=dom-img-src title=dom-img-src><code>src</code></dfn>, <dfn id=dom-img-usemap title=dom-img-useMap><code>useMap</code></dfn>, and <dfn id=dom-img-ismap title=dom-img-isMap><code>isMap</code></dfn> each must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>

  <p>The DOM attributes <dfn id=dom-img-width title=dom-img-width><code>width</code></dfn> and <dfn id=dom-img-height title=dom-img-height><code>height</code></dfn> must return the
  rendered width and height of the image, in CSS pixels, if the image
  is being rendered, and is being rendered to a visual medium; or else
  the intrinsic width and height of the image, in CSS pixels, if the
  image is <i>available</i> but not being rendered to a visual medium;
  or else 0, if the image is not <i>available</i> or its dimensions
  are not known. <a href=#refsCSS21>[CSS21]</a></p>

  <p>The DOM attribute <dfn id=dom-img-complete title=dom-img-complete><code>complete</code></dfn> must return
  true if the user agent has fetched the image specified in the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute, and it is a valid image,
  even if the final <a href=#concept-task title=concept-task>task</a> queued by
  the <a href=#networking-task-source>networking task source</a> for the <a href=#fetch title=fetch>fetching</a> of the image resource has not yet been
  processed. Otherwise, the attribute must return false.</p>

  <p class=note>The value of <code title=dom-img-complete><a href=#dom-img-complete>complete</a></code> can thus change while a
  <a href=#concept-script title=concept-script>script</a> is executing.</p>

  <p>Three constructors are provided for creating
  <code><a href=#htmlimageelement>HTMLImageElement</a></code> objects (in addition to the factory
  methods from DOM Core such as <code title="">createElement()</code>): <dfn id=dom-image title=dom-image><code>Image()</code></dfn>, <dfn id=dom-image-w title=dom-image-w><code>Image(<var title="">width</var>)</code></dfn>, and <dfn id=dom-image-wh title=dom-image-wh><code>Image(<var title="">width</var>, <var title="">height</var>)</code></dfn>. When invoked as constructors,
  these must return a new <code><a href=#htmlimageelement>HTMLImageElement</a></code> object (a new
  <code><a href=#the-img-element>img</a></code> element). If the <var title="">width</var> argument
  is present, the new object's <code title=attr-dim-width><a href=#attr-dim-width>width</a></code> content attribute must be set to
  <var title="">width</var>. If the <var title="">height</var>
  argument is also present, the new object's <code title=attr-dim-height><a href=#attr-dim-height>height</a></code> content attribute must be set
  to <var title="">height</var>.</p>


  <div class=example>

   <p>A single image can have different appropriate alternative text
   depending on the context.</p>

   <p>In each of the following cases, the same image is used, yet the
   <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> text is different each
   time. The image is the coat of arms of the Canton Geneva in
   Switzerland.</p>

   <p>Here it is used as a supplementary icon:</p>
   <pre>&lt;p&gt;I lived in &lt;img src="carouge.svg" alt=""&gt; Carouge.&lt;/p&gt;</pre>

   <p>Here it is used as an icon representing the town:</p>
   <pre>&lt;p&gt;Home town: &lt;img src="carouge.svg" alt="Carouge"&gt;&lt;/p&gt;</pre>

   <p>Here it is used as part of a text on the town:</p>

   <pre>&lt;p&gt;Carouge has a coat of arms.&lt;/p&gt;
&lt;p&gt;&lt;img src="carouge.svg" alt="The coat of arms depicts a lion, sitting in front of a tree."&gt;&lt;/p&gt;
&lt;p&gt;It is used as decoration all over the town.&lt;/p&gt;</pre>

   <p>Here it is used as a way to support a similar text where the
   description is given as well as, instead of as an alternative to,
   the image:</p>

   <pre>&lt;p&gt;Carouge has a coat of arms.&lt;/p&gt;
&lt;p&gt;&lt;img src="carouge.svg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;The coat of arms depicts a lion, sitting in front of a tree.
It is used as decoration all over the town.&lt;/p&gt;</pre>

   <p>Here it is used as part of a story:</p>

   <pre>&lt;p&gt;He picked up the folder and a piece of paper fell out.&lt;/p&gt;
&lt;p&gt;&lt;img src="carouge.svg" alt="Shaped like a shield, the paper had a
red background, a green tree, and a yellow lion with its tongue
hanging out and whose tail was shaped like an S."&gt;&lt;/p&gt;
&lt;p&gt;He stared at the folder. S! The answer he had been looking for all
this time was simply the letter S! How had he not seen that before? It all
came together now. The phone call where Hector had referred to a lion's tail,
the time Marco had stuck his tongue out...&lt;/p&gt;</pre>

   <p>Here it is not known at the time of publication what the image
   will be, only that it will be a coat of arms of some kind, and thus
   no replacement text can be provided, and instead only a brief
   caption for the image is provided, in the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute:</p>

   <pre>&lt;p&gt;The last user to have uploaded a coat of arms uploaded this one:&lt;/p&gt;
&lt;p&gt;&lt;img src="last-uploaded-coat-of-arms.cgi" title="User-uploaded coat of arms."&gt;&lt;/p&gt;</pre>

   <p>Ideally, the author would find a way to provide real replacement
   text even in this case, e.g. by asking the previous user. Not
   providing replacement text makes the document more difficult to use
   for people who are unable to view images, e.g. blind users, or
   users or very low-bandwidth connections or who pay by the byte, or
   users who are forced to use a text-only Web browser.</p>

  </div>

  <div class=example>

   <p>Here are some more examples showing the same picture used in
   different contexts, with different appropriate alternate texts each
   time.</p>

   <pre>&lt;article&gt;
 &lt;h1&gt;My cats&lt;/h1&gt;
 &lt;h2&gt;Fluffy&lt;/h2&gt;
 &lt;p&gt;Fluffy is my favourite.&lt;/p&gt;
 &lt;img src="fluffy.jpg" alt="She likes playing with a ball of yarn."&gt;
 &lt;p&gt;She's just too cute.&lt;/p&gt;
 &lt;h2&gt;Miles&lt;/h2&gt;
 &lt;p&gt;My other cat, Miles just eats and sleeps.&lt;/p&gt;
&lt;/article&gt;</pre>

   <pre>&lt;article&gt;
 &lt;h1&gt;Photography&lt;/h1&gt;
 &lt;h2&gt;Shooting moving targets indoors&lt;/h2&gt;
 &lt;p&gt;The trick here is to know how to anticipate; to know at what speed and
 what distance the subject will pass by.&lt;/p&gt;
 &lt;img src="fluffy.jpg" alt="A cat flying by, chasing a ball of yarn, can be
 photographed quite nicely using this technique."&gt;
 &lt;h2&gt;Nature by night&lt;/h2&gt;
 &lt;p&gt;To achieve this, you'll need either an extremely sensitive film, or
 immense flash lights.&lt;/p&gt;
&lt;/article&gt;</pre>

   <pre>&lt;article&gt;
 &lt;h1&gt;About me&lt;/h1&gt;
 &lt;h2&gt;My pets&lt;/h2&gt;
 &lt;p&gt;I've got a cat named Fluffy and a dog named Miles.&lt;/p&gt;
 &lt;img src="fluffy.jpg" alt="Fluffy, my cat, tends to keep itself busy."&gt;
 &lt;p&gt;My dog Miles and I like go on long walks together.&lt;/p&gt;
 &lt;h2&gt;music&lt;/h2&gt;
 &lt;p&gt;After our walks, having emptied my mind, I like listening to Bach.&lt;/p&gt;
&lt;/article&gt;</pre>

   <pre>&lt;article&gt;
 &lt;h1&gt;Fluffy and the Yarn&lt;/h1&gt;
 &lt;p&gt;Fluffy was a cat who liked to play with yarn. He also liked to jump.&lt;/p&gt;
 &lt;aside&gt;&lt;img src="fluffy.jpg" alt="" title="Fluffy"&gt;&lt;/aside&gt;
 &lt;p&gt;He would play in the morning, he would play in the evening.&lt;/p&gt;
&lt;/article&gt;</pre>

  </div>



  <h5 id=alt><span class=secno>4.8.2.1 </span>Requirements for providing text to act as an alternative for images</h5>

  <p>The requirements for the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
  attribute depend on what the image is intended to represent, as
  described in the following sections.</p>


  <h6 id=a-link-or-button-containing-nothing-but-the-image><span class=secno>4.8.2.1.1 </span>A link or button containing nothing but the image</h6>

  <p>When an <a href=#the-a-element>a</a> element that is a <a href=#hyperlink>hyperlink</a>,
  or a <code><a href=#the-button-element>button</a></code> element, has no textual content but
  contains one or more images, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attributes must contain text that
  together convey the purpose of the link or button.</p>

  <div class=example>

   <p>In this example, a user is asked to pick his preferred color
   from a list of three. Each color is given by an image, but for
   users who have configured their user agent not to display images,
   the color names are used instead:</p>

   <pre>&lt;h1&gt;Pick your color&lt;/h1&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href="green.html"&gt;<strong>&lt;img src="green.jpeg" alt="Green"&gt;</strong>&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="blue.html"&gt;<strong>&lt;img src="blue.jpeg" alt="Blue"&gt;</strong>&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="red.html"&gt;<strong>&lt;img src="red.jpeg" alt="Red"&gt;</strong>&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</pre>

  </div>

  <div class=example>

   <p>In this example, each button has a set of images to indicate the
   kind of color output desired by the user. The first image is used
   in each case to give the alternative text.</p>

   <pre>&lt;button name="rgb"&gt;<strong>&lt;img src="red" alt="RGB"&gt;&lt;img src="green" alt=""&gt;&lt;img src="blue" alt=""&gt;</strong>&lt;/button&gt;
&lt;button name="cmyk"&gt;<strong>&lt;img src="cyan" alt="CMYK"&gt;&lt;img src="magenta" alt=""&gt;&lt;img src="yellow" alt=""&gt;&lt;img src="black" alt=""&gt;</strong>&lt;/button&gt;</pre>

   <p>Since each image represents one part of the text, it could also
   be written like this:</p>

   <pre>&lt;button name="rgb"&gt;<strong>&lt;img src="red" alt="R"&gt;&lt;img src="green" alt="G"&gt;&lt;img src="blue" alt="B"&gt;</strong>&lt;/button&gt;
&lt;button name="cmyk"&gt;<strong>&lt;img src="cyan" alt="C"&gt;&lt;img src="magenta" alt="M"&gt;&lt;img src="yellow" alt="Y"&gt;&lt;img src="black" alt="K"&gt;</strong>&lt;/button&gt;</pre>

   <p>However, with other alternative text, this might not work, and
   putting all the alternative text into one image in each case might
   make more sense:</p>

   <pre>&lt;button name="rgb"&gt;<strong>&lt;img src="red" alt="sRGB profile"&gt;&lt;img src="green" alt=""&gt;&lt;img src="blue" alt=""&gt;</strong>&lt;/button&gt;
&lt;button name="cmyk"&gt;<strong>&lt;img src="cyan" alt="CMYK profile"&gt;&lt;img src="magenta" alt=""&gt;&lt;img src="yellow" alt=""&gt;&lt;img src="black" alt=""&gt;</strong>&lt;/button&gt;</pre>

  </div>



  <h6 id=a-phrase-or-paragraph-with-an-alternative-graphical-representation:-charts,-diagrams,-graphs,-maps,-illustrations><span class=secno>4.8.2.1.2 </span>A phrase or paragraph with an alternative graphical representation: charts, diagrams, graphs, maps, illustrations</h6>

  <p>Sometimes something can be more clearly stated in graphical
  form, for example as a flowchart, a diagram, a graph, or a simple
  map showing directions. In such cases, an image can be given using
  the <code><a href=#the-img-element>img</a></code> element, but the lesser textual version must
  still be given, so that users who are unable to view the image
  (e.g. because they have a very slow connection, or because they
  are using a text-only browser, or because they are listening to
  the page being read out by a hands-free automobile voice Web
  browser, or simply because they are blind) are still able to
  understand the message being conveyed.</p>

  <p>The text must be given in the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute, and must convey the
  same message as the image specified in the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute.</p>

  <p>It is important to realize that the alternative text is a
  <em>replacement</em> for the image, not a description of the
  image.</p>

  <div class=example>

   <p>In the following example we have <a href=images/parsing-model-overview.png>a flowchart</a> in image
   form, with text in the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
   attribute rephrasing the flowchart in prose form:</p>

   <pre>&lt;p&gt;In the common case, the data handled by the tokenization stage
comes from the network, but it can also come from script.&lt;/p&gt;
&lt;p&gt;<strong>&lt;img src="images/parsing-model-overview.png" alt="The network
passes data to the Tokeniser stage, which passes data to the Tree
Construction stage. From there, data goes to both the DOM and to
Script Execution. Script Execution is linked to the DOM, and, using
document.write(), passes data to the Tokeniser."&gt;</strong>&lt;/p&gt;</pre>

  </div>

  <div class=example>

   <p>Here's another example, showing a good solution and a bad
   solution to the problem of including an image in a
   description.</p>

   <p>First, here's the good solution. This sample shows how the
   alternative text should just be what you would have put in the
   prose if the image had never existed.</p>

   <pre>&lt;!-- This is the correct way to do things. --&gt;
&lt;p&gt;
 You are standing in an open field west of a house.
 <strong>&lt;img src="house.jpeg" alt="The house is white, with a boarded front door."&gt;</strong>
 There is a small mailbox here.
&lt;/p&gt;</pre>

   <p>Second, here's the bad solution. In this incorrect way of
   doing things, the alternative text is simply a description of the
   image, instead of a textual replacement for the image. It's bad
   because when the image isn't shown, the text doesn't flow as well
   as in the first example.</p>

   <pre class=bad>&lt;!-- <em>This is the wrong way to do things.</em> --&gt;
&lt;p&gt;
 You are standing in an open field west of a house.
 &lt;img src="house.jpeg" alt="A white house, with a boarded front door."&gt;
 There is a small mailbox here.
&lt;/p&gt;</pre>

  </div>


  <h6 id=a-short-phrase-or-label-with-an-alternative-graphical-representation:-icons,-logos><span class=secno>4.8.2.1.3 </span>A short phrase or label with an alternative graphical representation: icons, logos</h6>

  <p>A document can contain information in iconic form. The icon is
  intended to help users of visual browsers to recognize features at
  a glance.</p>

  <p>In some cases, the icon is supplemental to a text label
  conveying the same meaning. In those cases, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute must be present but must
  be empty.</p>

  <div class=example>

   <p>Here the icons are next to text that conveys the same meaning,
   so they have an empty <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
   attribute:</p>

   <pre>&lt;nav&gt;
 &lt;p&gt;&lt;a href="/help/"&gt;<strong>&lt;img src="/icons/help.png" alt=""&gt;</strong> Help&lt;/a&gt;&lt;/p&gt;
 &lt;p&gt;&lt;a href="/configure/"&gt;<strong>&lt;img src="/icons/configuration.png" alt=""&gt;</strong>
 Configuration Tools&lt;/a&gt;&lt;/p&gt;
&lt;/nav&gt;</pre>

  </div>

  <p>In other cases, the icon has no text next to it describing what
  it means; the icon is supposed to be self-explanatory. In those
  cases, an equivalent textual label must be given in the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute.</p>

  <div class=example>

   <p>Here, posts on a news site are labeled with an icon
   indicating their topic.</p>

   <pre>&lt;body&gt;
 &lt;article&gt;
  &lt;header&gt;
   &lt;h1&gt;Ratatouille wins &lt;i&gt;Best Movie of the Year&lt;/i&gt; award&lt;/h1&gt;
   &lt;p&gt;<strong>&lt;img src="movies.png" alt="Movies"&gt;</strong>&lt;/p&gt;
  &lt;/header&gt;
  &lt;p&gt;Pixar has won yet another &lt;i&gt;Best Movie of the Year&lt;/i&gt; award,
  making this its 8th win in the last 12 years.&lt;/p&gt;
 &lt;/article&gt;
 &lt;article&gt;
  &lt;header&gt;
   &lt;h1&gt;Latest TWiT episode is online&lt;/h1&gt;
   &lt;p&gt;<strong>&lt;img src="podcasts.png" alt="Podcasts"&gt;</strong>&lt;/p&gt;
  &lt;/header&gt;
  &lt;p&gt;The latest TWiT episode has been posted, in which we hear
  several tech news stories as well as learning much more about the
  iPhone. This week, the panelists compare how reflective their
  iPhones' Apple logos are.&lt;/p&gt;
 &lt;/article&gt;
&lt;/body&gt;</pre>

  </div>

  <p>Many pages include logos, insignia, flags, or emblems, which
  stand for a particular entity such as a company, organization,
  project, band, software package, country, or some such.</p>

  <p>If the logo is being used to represent the entity, e.g. as a page
  header, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute must
  contain the name of the entity being represented by the logo. The
  <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute must <em>not</em>
  contain text like the word "logo", as it is not the fact that it is
  a logo that is being conveyed, it's the entity itself.</p>

  <p>If the logo is being used next to the name of the entity that
  it represents, then the logo is supplemental, and its <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute must instead be
  empty.</p>

  <p>If the logo is merely used as decorative material (as branding,
  or, for example, as a side image in an article that mentions the
  entity to which the logo belongs), then the entry below on purely
  decorative images applies. If the logo is actually being
  discussed, then it is being used as a phrase or paragraph (the
  description of the logo) with an alternative graphical
  representation (the logo itself), and the first entry above
  applies.</p>

  <div class=example>

   <p>In the following snippets, all four of the above cases are
   present. First, we see a logo used to represent a company:</p>

   <pre>&lt;h1&gt;<strong>&lt;img src="XYZ.gif" alt="The XYZ company"&gt;</strong>&lt;/h1&gt;</pre>

   <p>Next, we see a paragraph which uses a logo right next to the
   company name, and so doesn't have any alternative text:

   <pre>&lt;article&gt;
 &lt;h2&gt;News&lt;/h2&gt;
 &lt;p&gt;We have recently been looking at buying the <strong>&lt;img src="alpha.gif"
 alt=""&gt; &Alpha;&Beta;&Gamma; company</strong>, a small Greek company
 specializing in our type of product.&lt;/p&gt;</pre>

   <p>In this third snippet, we have a logo being used in an aside,
   as part of the larger article discussing the acquisition:</p>

<pre> <strong>&lt;aside&gt;&lt;p&gt;&lt;img src="alpha-large.gif" alt=""&gt;&lt;/p&gt;&lt;/aside&gt;</strong>
 &lt;p&gt;The &Alpha;&Beta;&Gamma; company has had a good quarter, and our
 pie chart studies of their accounts suggest a much bigger blue slice
 than its green and orange slices, which is always a good sign.&lt;/p&gt;
&lt;/article&gt;</pre>

   <p>Finally, we have an opinion piece talking about a logo, and
   the logo is therefore described in detail in the alternative
   text.</p>

   <pre>&lt;p&gt;Consider for a moment their logo:&lt;/p&gt;

<strong>&lt;p&gt;&lt;img src="/images/logo" alt="It consists of a green circle with a
green question mark centered inside it."&gt;&lt;/p&gt;</strong>

&lt;p&gt;How unoriginal can you get? I mean, oooooh, a question mark, how
&lt;em&gt;revolutionary&lt;/em&gt;, how utterly &lt;em&gt;ground-breaking&lt;/em&gt;, I'm
sure everyone will rush to adopt those specifications now! They could
at least have tried for some sort of, I don't know, sequence of
rounded squares with varying shades of green and bold white outlines,
at least that would look good on the cover of a blue book.&lt;/p&gt;</pre>

   <p>This example shows how the alternative text should be written
   such that if the image isn't <i>available</i>, and the text is used
   instead, the text flows seamlessly into the surrounding text, as
   if the image had never been there in the first place.</p>

  </div>


  <h6 id=text-that-has-been-rendered-to-a-graphic-for-typographical-effect><span class=secno>4.8.2.1.4 </span>Text that has been rendered to a graphic for typographical effect</h6>

  <p>Sometimes, an image just consists of text, and the purpose of the
  image is not to highlight the actual typographic effects used to
  render the text, but just to convey the text itself.</p>

  <p>In such cases, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
  attribute must be present but must consist of the same text as
  written in the image itself.</p>

  <div class=example>

   <p>Consider a graphic containing the text "Earth Day", but with the
   letters all decorated with flowers and plants. If the text is
   merely being used as a header, to spice up the page for graphical
   users, then the correct alternative text is just the same text
   "Earth Day", and no mention need be made of the decorations:</p>

   <pre>&lt;h1&gt;<strong>&lt;img src="earthdayheader.png" alt="Earth Day"&gt;</strong>&lt;/h1&gt;</pre>

  </div>



  <h6 id=a-graphical-representation-of-some-of-the-surrounding-text><span class=secno>4.8.2.1.5 </span>A graphical representation of some of the surrounding text</h6>

  <p>In many cases, the image is actually just supplementary, and
  its presence merely reinforces the surrounding text. In these
  cases, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute must be
  present but its value must be the empty string.</p>

  <p>In general, an image falls into this category if removing the
  image doesn't make the page any less useful, but including the
  image makes it a lot easier for users of visual browsers to
  understand the concept.</p>

  <div class=example>

   <p>A flowchart that repeats the previous paragraph in graphical form:</p>

   <pre>&lt;p&gt;The network passes data to the Tokeniser stage, which
passes data to the Tree Construction stage. From there, data goes
to both the DOM and to Script Execution. Script Execution is
linked to the DOM, and, using document.write(), passes data to
the Tokeniser.&lt;/p&gt;
<strong>&lt;p&gt;&lt;img src="images/parsing-model-overview.png" alt=""&gt;&lt;/p&gt;</strong></pre>

   <p>In these cases, it would be wrong to include alternative text
   that consists of just a caption. If a caption is to be included,
   then either the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute can
   be used, or the <code><a href=#the-figure-element>figure</a></code> and <code><a href=#the-legend-element>legend</a></code>
   elements can be used. In the latter case, the image would in fact
   be a phrase or paragraph with an alternative graphical
   representation, and would thus require alternative text.</p>

   <pre>&lt;!-- Using the title="" attribute --&gt;
&lt;p&gt;The network passes data to the Tokeniser stage, which
passes data to the Tree Construction stage. From there, data goes
to both the DOM and to Script Execution. Script Execution is
linked to the DOM, and, using document.write(), passes data to
the Tokeniser.&lt;/p&gt;
&lt;p&gt;<strong>&lt;img src="images/parsing-model-overview.png" alt=""
        title="Flowchart representation of the parsing model."&gt;</strong>&lt;/p&gt;</pre>

   <pre>&lt;!-- Using &lt;figure&gt; and &lt;legend&gt; --&gt;
&lt;p&gt;The network passes data to the Tokeniser stage, which
passes data to the Tree Construction stage. From there, data goes
to both the DOM and to Script Execution. Script Execution is
linked to the DOM, and, using document.write(), passes data to
the Tokeniser.&lt;/p&gt;
&lt;figure&gt;
 <strong>&lt;img src="images/parsing-model-overview.png" alt="The Network leads
 to the Tokeniser, which leads to the Tree Construction. The Tree
 Construction leads to two items. The first is Script Execution, which
 leads via document.write() back to the Tokeniser. The second item
 from which Tree Construction leads is the DOM. The DOM is related to
 the Script Execution."&gt;</strong>
 &lt;legend&gt;Flowchart representation of the parsing model.&lt;/legend&gt;
&lt;/figure&gt;</pre>

   <pre class=bad>&lt;!-- This is WRONG. Do not do this. Instead, do what the above examples do. --&gt;
&lt;p&gt;The network passes data to the Tokeniser stage, which
passes data to the Tree Construction stage. From there, data goes
to both the DOM and to Script Execution. Script Execution is
linked to the DOM, and, using document.write(), passes data to
the Tokeniser.&lt;/p&gt;
&lt;p&gt;&lt;img src="images/parsing-model-overview.png"
        alt="Flowchart representation of the parsing model."&gt;&lt;/p&gt;
&lt;!-- Never put the image's caption in the alt="" attribute! --&gt;</pre>

  </div>

  <div class=example>

   <p>A graph that repeats the previous paragraph in graphical form:</p>

   <pre>&lt;p&gt;According to a study covering several billion pages,
about 62% of documents on the Web in 2007 triggered the Quirks
rendering mode of Web browsers, about 30% triggered the Almost
Standards mode, and about 9% triggered the Standards mode.&lt;/p&gt;
<strong>&lt;p&gt;&lt;img src="rendering-mode-pie-chart.png" alt=""&gt;&lt;/p&gt;</strong></pre>

  </div>



  <h6 id="a-purely-decorative-image-that-doesn't-add-any-information"><span class=secno>4.8.2.1.6 </span>A purely decorative image that doesn't add any information</h6>

  <p>In general, if an image is decorative but isn't especially
  page-specific, for example an image that forms part of a site-wide
  design scheme, the image should be specified in the site's CSS,
  not in the markup of the document.</p>

  <p>However, a decorative image that isn't discussed by the
  surrounding text still has some relevance can be included in a page
  using the <code><a href=#the-img-element>img</a></code> element. Such images are decorative, but
  still form part of the content. In these cases, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute must be present but its
  value must be the empty string.</p>

  <div class=example>

   <p>Examples where the image is purely decorative despite being
   relevant would include things like a photo of the Black Rock City
   landscape in a blog post about an event at Burning Man, or an
   image of a painting inspired by a poem, on a page reciting that
   poem. The following snippet shows an example of the latter
   case (only the first verse is included in this snippet):</p>

   <pre>&lt;h1&gt;The Lady of Shalott&lt;/h1&gt;
<strong>&lt;p&gt;&lt;img src="shalott.jpeg" alt=""&gt;&lt;/p&gt;</strong>
&lt;p&gt;On either side the river lie&lt;br&gt;
Long fields of barley and of rye,&lt;br&gt;
That clothe the wold and meet the sky;&lt;br&gt;
And through the field the road run by&lt;br&gt;
To many-tower'd Camelot;&lt;br&gt;
And up and down the people go,&lt;br&gt;
Gazing where the lilies blow&lt;br&gt;
Round an island there below,&lt;br&gt;
The island of Shalott.&lt;/p&gt;</pre>

  </div>



  <h6 id=a-group-of-images-that-form-a-single-larger-picture-with-no-links><span class=secno>4.8.2.1.7 </span>A group of images that form a single larger picture with no links</h6>

  <p>When a picture has been sliced into smaller image files that are
  then displayed together to form the complete picture again, one of
  the images must have its <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
  attribute set as per the relevant rules that would be appropriate
  for the picture as a whole, and then all the remaining images must
  have their <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute set to
  the empty string.</p>

  <div class=example>

   <p>In the following example, a picture representing a company logo
   for <span title="">XYZ Corp</span> has been split into two pieces,
   the first containing the letters "XYZ" and the second with the word
   "Corp". The alternative text ("XYZ Corp") is all in the first
   image.</p>

   <pre>&lt;h1&gt;<strong>&lt;img src="logo1.png" alt="XYZ Corp"&gt;&lt;img src="logo2.png" alt=""&gt;</strong>&lt;/h1&gt;</pre>

  </div>

  <div class=example>

   <p>In the following example, a rating is shown as three filled
   stars and two empty stars. While the alternative text could have
   been "&#9733;&#9733;&#9733;&#9734;&#9734;", the author has
   instead decided to more helpfully give the rating in the form "3
   out of 5". That is the alternative text of the first image, and the
   rest have blank alternative text.</p>

   <pre>&lt;p&gt;Rating: &lt;meter max=5 value=3&gt;<strong>&lt;img src="1" alt="3 out of 5"
  &gt;&lt;img src="1" alt=""&gt;&lt;img src="1" alt=""&gt;&lt;img src="0" alt=""
  &gt;&lt;img src="0" alt=""&gt;</strong>&lt;/meter&gt;&lt;/p&gt;</pre>

  </div>



  <h6 id=a-group-of-images-that-form-a-single-larger-picture-with-links><span class=secno>4.8.2.1.8 </span>A group of images that form a single larger picture with links</h6>

  <p>Generally, <a href=#image-map title="image map">image maps</a> should be
  used instead of slicing an image for links.</p>

  <p>However, if an image is indeed sliced and any of the components
  of the sliced picture are the sole contents of links, then one image
  per link must have alternative text in its <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute representing the purpose
  of the link.</p>

  <div class=example>

   <p>In the following example, a picture representing the flying
   spaghetti monster emblem, with each of the left noodly appendages
   and the right noodly appendages in different images, so that the
   user can pick the left side or the right side in an adventure.</p>

   <pre>&lt;h1&gt;The Church&lt;/h1&gt;
&lt;p&gt;You come across a flying spaghetti monster. Which side of His
Noodliness do you wish to reach out for?&lt;/p&gt;
<strong>&lt;p&gt;&lt;a href="?go=left" &gt;&lt;img src="fsm-left.png"  alt="Left side. "&gt;&lt;/a
  &gt;&lt;img src="fsm-middle.png" alt=""
  &gt;&lt;a href="?go=right"&gt;&lt;img src="fsm-right.png" alt="Right side."&gt;&lt;/a&gt;&lt;/p&gt;</strong></pre>

  </div>



  <h6 id=a-key-part-of-the-content><span class=secno>4.8.2.1.9 </span>A key part of the content</h6>

  <p>In some cases, the image is a critical part of the
  content. This could be the case, for instance, on a page that is
  part of a photo gallery. The image is the whole <em>point</em> of
  the page containing it.</p>

  <p>How to provide alternative text for an image that is a key part
  of the content depends on the image's provenance.</p>

  <dl><dt>The general case</dt>

   <dd>

    <p>When it is possible for detailed alternative text to be
    provided, for example if the image is part of a series of
    screenshots in a magazine review, or part of a comic strip, or is
    a photograph in a blog entry about that photograph, text that can
    serve as a substitute for the image must be given as the contents
    of the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute.</p>

    <div class=example>

     <p>A screenshot in a gallery of screenshots for a new OS, with
     some alternative text:</p>

     <pre>&lt;figure&gt;
 <strong>&lt;img src="KDE%20Light%20desktop.png"
      alt="The desktop is blue, with icons along the left hand side in
           two columns, reading System, Home, K-Mail, etc. A window is
           open showing that menus wrap to a second line if they
           cannot fit in the window. The window has a list of icons
           along the top, with an address bar below it, a list of
           icons for tabs along the left edge, a status bar on the
           bottom, and two panes in the middle. The desktop has a bar
           at the bottom of the screen with a few buttons, a pager, a
           list of open applications, and a clock."&gt;</strong>
 &lt;legend&gt;Screenshot of a KDE desktop.&lt;/legend&gt;
&lt;/figure&gt;</pre>

    </div>

    <div class=example>

     <p>A graph in a financial report:</p>

     <pre><strong>&lt;img src="sales.gif"
     title="Sales graph"
     alt="From 1998 to 2005, sales increased by the following percentages
     with each year: 624%, 75%, 138%, 40%, 35%, 9%, 21%"&gt;</strong></pre>

     <p>Note that "sales graph" would be inadequate alternative text
     for a sales graph. Text that would be a good <em>caption</em> is
     not generally suitable as replacement text.</p>

    </div>

   </dd>


   <dt>Images that defy a complete description</dt>

   <dd>

    <p>In certain cases, the nature of the image might be such that
    providing thorough alternative text is impractical. For example,
    the image could be indistinct, or could be a complex fractal, or
    could be a detailed topographical map.</p>

    <p>In these cases, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
    attribute must contain some suitable alternative text, but it may
    be somewhat brief.</p>

    <div class=example>

     <p>Sometimes there simply is no text that can do justice to an
     image. For example, there is little that can be said to usefully
     describe a Rorschach inkblot test. However, a description, even
     if brief, is still better than nothing:</p>

     <pre>&lt;figure&gt;
 <strong>&lt;img src="/commons/a/a7/Rorschach1.jpg" alt="A shape with left-right
 symmetry with indistinct edges, with a small gap in the center, two
 larger gaps offset slightly from the center, with two similar gaps
 under them. The outline is wider in the top half than the bottom
 half, with the sides extending upwards higher than the center, and
 the center extending below the sides."&gt;</strong>
 &lt;legend&gt;A black outline of the first of the ten cards
 in the Rorschach inkblot test.&lt;/legend&gt;
&lt;/figure&gt;</pre>

     <p>Note that the following would be a very bad use of alternative
     text:</p>

     <pre class=bad>&lt;!-- This example is wrong. Do not copy it. --&gt;
&lt;figure&gt;
 &lt;img src="/commons/a/a7/Rorschach1.jpg" alt="A black outline
 of the first of the ten cards in the Rorschach inkblot test."&gt;
 &lt;legend&gt;A black outline of the first of the ten cards
 in the Rorschach inkblot test.&lt;/legend&gt;
&lt;/figure&gt;</pre>

     <p>Including the caption in the alternative text like this isn't
     useful because it effectively duplicates the caption for users
     who don't have images, taunting them twice yet not helping them
     any more than if they had only read or heard the caption
     once.</p>

    </div>

    <div class=example>

     <p>Another example of an image that defies full description is a
     fractal, which, by definition, is infinite in complexity.</p>

     <p>The following example shows one possible way of providing
     alternative text for the full view of an image of the Mandelbrot
     set.</p>

     <pre><strong>&lt;img src="ms1.jpeg" alt="The Mandelbrot set appears as a cardioid with
its cusp on the real axis in the positive direction, with a smaller
bulb aligned along the same center line, touching it in the negative
direction, and with these two shapes being surrounded by smaller bulbs
of various sizes."&gt;</strong></pre>

    </div>

   </dd>


   <dt>Images whose contents are not known</dt>

   <dd>

    <p>In some unfortunate cases, there might be no alternative text
    available at all, either because the image is obtained in some
    automated fashion without any associated alternative text (e.g. a
    Webcam), or because the page is being generated by a script using
    user-provided images where the user did not provide suitable or
    usable alternative text (e.g. photograph sharing sites), or
    because the author does not himself know what the images represent
    (e.g. a blind photographer sharing an image on his blog).</p>

    <p>In such cases, the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
    attribute's value may be omitted, but one of the following
    conditions must be met as well:</p>

    <ul><li>The <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute is
     present and has a non-empty value.</li>

     <li>The <code><a href=#the-img-element>img</a></code> element is in a <code><a href=#the-figure-element>figure</a></code>
     element that contains a <code><a href=#the-legend-element>legend</a></code> element that contains
     content other than <a href=#inter-element-whitespace>inter-element whitespace</a>.</li>

     <li>The <code><a href=#the-img-element>img</a></code> element is part of the only
     <a href=#paragraph>paragraph</a> directly in its <a href=#concept-section title=concept-section>section</a>, and is the only
     <code><a href=#the-img-element>img</a></code> element without an <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute in its section, and its
     <a href=#concept-section title=concept-section>section</a> has an associated
     heading.</li>

    </ul><p class=note>Such cases are to be kept to an absolute
    minimum. If there is even the slightest possibility of the author
    having the ability to provide real alternative text, then it would
    not be acceptable to omit the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code>
    attribute.</p>

    <div class=example>

     <p>A photo on a photo-sharing site, if the site received the
     image with no metadata other than the caption:</p>

     <pre>&lt;figure&gt;
 <strong>&lt;img src="1100670787_6a7c664aef.jpg"&gt;</strong>
 &lt;legend&gt;Bubbles traveled everywhere with us.&lt;/legend&gt;
&lt;/figure&gt;</pre>

     <p>It could also be marked up like this:</p>

     <pre>&lt;article&gt;
 &lt;h1&gt;Bubbles traveled everywhere with us.&lt;/h1&gt;
 <strong>&lt;img src="1100670787_6a7c664aef.jpg"&gt;</strong>
&lt;/article&gt;</pre>

     <p>In either case, though, it would be better if a detailed
     description of the important parts of the image obtained from the
     user and included on the page.</p>

    </div>

    <div class=example>

     <p>A blind user's blog in which a photo taken by the user is
     shown. Initially, the user might not have any idea what the photo
     he took shows:</p>

     <pre>&lt;article&gt;
 &lt;h1&gt;I took a photo&lt;/h1&gt;
 &lt;p&gt;I went out today and took a photo!&lt;/p&gt;
 &lt;figure&gt;
  <strong>&lt;img src="photo2.jpeg"&gt;</strong>
  &lt;legend&gt;A photograph taken blindly from my front porch.&lt;/legend&gt;
 &lt;/figure&gt;
&lt;/article&gt;</pre>

     <p>Eventually though, the user might obtain a description of the
     image from his friends and could then include alternative text:</p>

     <pre>&lt;article&gt;
 &lt;h1&gt;I took a photo&lt;/h1&gt;
 &lt;p&gt;I went out today and took a photo!&lt;/p&gt;
 &lt;figure&gt;
  <strong>&lt;img src="photo2.jpeg" alt="The photograph shows my hummingbird
  feeder hanging from the edge of my roof. It is half full, but there
  are no birds around. In the background, out-of-focus trees fill the
  shot. The feeder is made of wood with a metal grate, and it contains
  peanuts. The edge of the roof is wooden too, and is painted white
  with light blue streaks."&gt;</strong>
  &lt;legend&gt;A photograph taken blindly from my front porch.&lt;/legend&gt;
 &lt;/figure&gt;
&lt;/article&gt;</pre>

    </div>

    <div class=example>

     <p>Sometimes the entire point of the image is that a textual
     description is not available, and the user is to provide the
     description. For instance, the point of a CAPTCHA image is to see
     if the user can literally read the graphic. Here is one way to
     mark up a CAPTCHA (note the <code title=attr-title><a href=#the-title-attribute>title</a></code>
     attribute):</p>

     <pre>&lt;p&gt;&lt;label&gt;What does this image say?
<strong>&lt;img src="captcha.cgi?id=8934" title="CAPTCHA"&gt;</strong>
&lt;input type=text name=captcha&gt;&lt;/label&gt;
(If you cannot see the image, you can use an &lt;a
href="?audio"&gt;audio&lt;/a&gt; test instead.)&lt;/p&gt;</pre>

     <p>Another example would be software that displays images and
     asks for alternative text precisely for the purpose of then
     writing a page with correct alternative text. Such a page could
     have a table of images, like this:</p>

     <pre>&lt;table&gt;
 &lt;thead&gt;
  &lt;tr&gt; &lt;th&gt; Image &lt;th&gt; Description
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; <strong>&lt;img src="2421.png" title="Image 640 by 100, filename 'banner.gif'"&gt;</strong>
   &lt;td&gt; &lt;input name="alt2421"&gt;
  &lt;tr&gt;
   &lt;td&gt; <strong>&lt;img src="2422.png" title="Image 200 by 480, filename 'ad3.gif'"&gt;</strong>
   &lt;td&gt; &lt;input name="alt2422"&gt;
&lt;/table&gt;</pre>

     <p>Notice that even in this example, as much useful information
     as possible is still included in the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute.</p>

    </div>

    <p class=note>Since some users cannot use images at all
    (e.g. because they have a very slow connection, or because they
    are using a text-only browser, or because they are listening to
    the page being read out by a hands-free automobile voice Web
    browser, or simply because they are blind), the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute is only allowed to be
    omitted rather than being provided with replacement text when no
    alternative text is available and none can be made available, as
    in the above examples. Lack of effort from the part of the author
    is not an acceptable reason for omitting the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute.</p>

   </dd>

  </dl><h6 id=an-image-not-intended-for-the-user><span class=secno>4.8.2.1.10 </span>An image not intended for the user</h6>

  <p>Generally authors should avoid using <code><a href=#the-img-element>img</a></code> elements
  for purposes other than showing images.</p>

  <p>If an <code><a href=#the-img-element>img</a></code> element is being used for purposes other
  than showing an image, e.g. as part of a service to count page
  views, then the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute must
  be the empty string.</p>



  <h6 id=an-image-in-an-e-mail-or-document-intended-for-a-specific-person-who-is-known-to-be-able-to-view-images><span class=secno>4.8.2.1.11 </span>An image in an e-mail or document intended for a specific person who is known to be able to view images</h6>

  <p>When an image is included in a communication (such as an HTML
  e-mail) aimed at someone who is known to be able to view images,
  the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute may be
  omitted. However, even in such cases it is strongly recommended
  that alternative text be included (as appropriate according to the
  kind of image involved, as described in the above entries), so
  that the e-mail is still usable should the user use a mail client
  that does not support images, or should the e-mail be forwarded on
  to other users whose abilities might not include easily seeing
  images.</p>



  <h6 id=general-guidelines><span class=secno>4.8.2.1.12 </span>General guidelines</h6>

  <p>The most general rule for writing alternative text is that the
  intent is that replacing every image with the text of its <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute not change the meaning of
  the page.</p>

  <p>So, in general, alternative text can be written by considering
  what one would have written had one not been able to include the
  image.</p>

  <p>A corollary to this is that the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute's value should never
  contain text that could be considered the image's <em>caption</em>,
  <em>title</em>, or <em>legend</em>. It is supposed to contain
  replacement text that could be used by users <em>instead</em> of the
  image; it is not meant to supplement the image. The <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute can be used for
  supplemental information.</p>

  <p class=note>One way to think of alternative text is to think
  about how you would read the page containing the image to someone
  over the phone, without mentioning that there is an image
  present. Whatever you say instead of the image is typically a good
  start for writing the alternative text.</p>



  <h6 id=guidance-for-markup-generators><span class=secno>4.8.2.1.13 </span>Guidance for markup generators</h6>

  <p>Markup generators (such as WYSIWYG authoring tools) should,
  wherever possible, obtain alternative text from their
  users. However, it is recognised that in many cases, this will not
  be possible.</p>

  <p>For images that are the sole contents of links, markup generators
  should examine the link target to determine the title of the target,
  or the URL of the target, and use information obtained in this
  manner as the alternative text.</p>

  <p>As a last resort, implementors should either set the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute to the empty string, under
  the assumption that the image is a purely decorative image that
  doesn't add any information but is still specific to the surrounding
  content, or omit the <code title=attr-img-alt><a href=#attr-img-alt>alt</a></code> attribute
  altogther, under the assumption that the image is a key part of the
  content.</p>

  <p>Markup generators should generally avoid using the image's own
  file name as the alternative text.</p>




  <h4 id=the-iframe-element><span class=secno>4.8.3 </span>The <dfn><code>iframe</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#embedded-content-2>Embedded content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#embedded-content-2>embedded content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Text that conforms to the requirements given in the prose.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-iframe-src><a href=#attr-iframe-src>src</a></code></dd>
   <dd><code title=attr-iframe-name><a href=#attr-iframe-name>name</a></code></dd>
   <dd><code title=attr-iframe-sandbox><a href=#attr-iframe-sandbox>sandbox</a></code></dd>
   <dd><code title=attr-iframe-seamless><a href=#attr-iframe-seamless>seamless</a></code></dd>
   <dd><code title=attr-dim-width><a href=#attr-dim-width>width</a></code></dd>
   <dd><code title=attr-dim-height><a href=#attr-dim-height>height</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmliframeelement>HTMLIFrameElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-iframe-src title=dom-iframe-src>src</a>;
           attribute DOMString <a href=#dom-iframe-name title=dom-iframe-name>name</a>;
           attribute DOMString <a href=#dom-iframe-sandbox title=dom-iframe-sandbox>sandbox</a>;
           attribute boolean <a href=#dom-iframe-seamless title=dom-iframe-seamless>seamless</a>;
           attribute DOMString <a href=#dom-dim-width title=dom-dim-width>width</a>;
           attribute DOMString <a href=#dom-dim-height title=dom-dim-height>height</a>;
<!-- XXX we should bring these back since the Window spec has atrophied
  readonly attribute Document <span title="dom-iframe-contentDocument">contentDocument</span>;
  readonly attribute <span>WindowProxy</span> <span title="dom-iframe-contentWindow">contentWindow</span>;
-->};</pre>
    <p>Objects implementing the <code><a href=#htmliframeelement>HTMLIFrameElement</a></code>
    interface must also implement the <code>EmbeddingElement</code>
    interface defined in the Window Object specification. <a href=#refsWINDOW>[WINDOW]</a></p> <!-- XXX -->
   </dd>
  </dl><p>The <code><a href=#the-iframe-element>iframe</a></code> element <a href=#represents>represents</a> a
  <a href=#nested-browsing-context>nested browsing context</a>.</p>

  <p>The <dfn id=attr-iframe-src title=attr-iframe-src><code>src</code></dfn> attribute
  gives the address of a page that the <a href=#nested-browsing-context>nested browsing
  context</a> is to contain. The attribute, if present, must be a
  <a href=#valid-url>valid URL</a>. When the browsing context is created, if the
  attribute is present, the user agent must <a href=#resolve-a-url title="resolve a
  url">resolve</a> the value of that attribute, relative to the
  element, and if that is successful, must then <a href=#navigate>navigate</a>
  the element's browsing context to the resulting <a href=#absolute-url>absolute
  URL</a>, with <a href=#replacement-enabled>replacement enabled</a>, and with the
  <code><a href=#the-iframe-element>iframe</a></code> element's document's <a href=#browsing-context>browsing
  context</a> as the <a href=#source-browsing-context>source browsing context</a>. If the
  user <a href=#navigate title=navigate>navigates</a> away from this page,
  the <code><a href=#the-iframe-element>iframe</a></code>'s corresponding <code><a href=#windowproxy>WindowProxy</a></code>
  object will proxy new <code><a href=#window>Window</a></code> objects for new
  <code>Document</code> objects, but the <code title=attr-iframe-src><a href=#attr-iframe-src>src</a></code> attribute will not change.</p>

  <p>Whenever the <code title=attr-iframe-src><a href=#attr-iframe-src>src</a></code> attribute
  is set, the user agent must <a href=#resolve-a-url title="resolve a
  url">resolve</a> the value of that attribute, relative to the
  element, and if that is successful, the nested <a href=#browsing-context>browsing
  context</a> must be <a href=#navigate title=navigate>navigated</a> to
  the resulting <a href=#absolute-url>absolute URL</a>, with the
  <code><a href=#the-iframe-element>iframe</a></code> element's document's <a href=#browsing-context>browsing
  context</a> as the <a href=#source-browsing-context>source browsing context</a>.</p> <!--
  It doesn't happen when the base URL is changed, though. -->

  <p>If the <code title=attr-iframe-src><a href=#attr-iframe-src>src</a></code> attribute is not
  set when the element is created, or if its value cannot be <a href=#resolve-a-url title="resolve a url">resolved</a>, the browsing context will
  remain at the initial <code><a href=#about:blank>about:blank</a></code> page.</p>

  <p>The <dfn id=attr-iframe-name title=attr-iframe-name><code>name</code></dfn>
  attribute, if present, must be a <a href=#valid-browsing-context-name>valid browsing context
  name</a>. When the browsing context is created, if the attribute
  is present, the <a href=#browsing-context-name>browsing context name</a> must be set to
  the value of this attribute; otherwise, the <a href=#browsing-context-name>browsing context
  name</a> must be set to the empty string.</p>

  <p>Whenever the <code title=attr-iframe-name><a href=#attr-iframe-name>name</a></code> attribute
  is set, the nested <a href=#browsing-context>browsing context</a>'s <a href=#browsing-context-name title="browsing context name">name</a> must be changed to the new
  value. If the attribute is removed, the <a href=#browsing-context-name>browsing context
  name</a> must be set to the empty string.</p>

  <p>When content loads in an <code><a href=#the-iframe-element>iframe</a></code>, after any <code title=event-load><a href=#event-load>load</a></code> events are fired within the content
  itself, the user agent must <a href=#fire-a-load-event>fire a <code title=event-load>load</code> event</a> at the
  <code><a href=#the-iframe-element>iframe</a></code> element. When content fails to load (e.g. due to
  a network error), then the user agent must <a href=#fire-an-error-event>fire an <code title=event-error>error</code> event</a> at the element
  instead.</p>

  <p>When there is an active parser in the <code><a href=#the-iframe-element>iframe</a></code>, and
  when anything in the <code><a href=#the-iframe-element>iframe</a></code> that is <a href=#delay-the-load-event title="delay
  the load event">delaying the <code title=event-load>load</code>
  event</a> in the <code><a href=#the-iframe-element>iframe</a></code>'s <a href=#browsing-context>browsing
  context</a>, the <code><a href=#the-iframe-element>iframe</a></code> must <a href=#delay-the-load-event>delay the <code title=event-load>load</code> event</a>.</p>

  <p class=note>If, during the handling of the <code title=event-load><a href=#event-load>load</a></code> event, the <a href=#browsing-context>browsing
  context</a> in the <code><a href=#the-iframe-element>iframe</a></code> is again <a href=#navigate title=navigate>navigated</a>, that will further <a href=#delay-the-load-event>delay the
  <code title=event-load>load</code> event</a>.</p>



  <hr><p>The <dfn id=attr-iframe-sandbox title=attr-iframe-sandbox><code>sandbox</code></dfn>
  attribute, when specified, enables a set of extra restrictions on
  any content hosted by the <code><a href=#the-iframe-element>iframe</a></code>. Its value must be an
  <a href=#unordered-set-of-unique-space-separated-tokens>unordered set of unique space-separated tokens</a>. The
  allowed values are <code title=attr-iframe-sandbox-allow-same-origin><a href=#attr-iframe-sandbox-allow-same-origin>allow-same-origin</a></code>,
  <code title=attr-iframe-sandbox-allow-forms><a href=#attr-iframe-sandbox-allow-forms>allow-forms</a></code>,
  and <code title=attr-iframe-sandbox-allow-scripts><a href=#attr-iframe-sandbox-allow-scripts>allow-scripts</a></code>.</p>

  <p>While the <code title=attr-iframe-sandbox><a href=#attr-iframe-sandbox>sandbox</a></code>
  attribute is specified, the <code><a href=#the-iframe-element>iframe</a></code> element's
  <a href=#nested-browsing-context>nested browsing context</a>, and all the browsing contexts
  <a href=#nested-browsing-context title="nested browsing context">nested</a> within it
  (either directly or indirectly through other nested browsing
  contexts) must have the following flags set:</p>

  <dl><!-- XXX disallow cross-origin loads of any kind (networking
        override that only allows same-origin URLs or about:,
        javascript:, data:) --><!-- XXX block access to 'contentWindow.frames' from iframe owner --><!-- XXX block access to 'parent.frames' from sandbox --><dt>The <dfn id=sandboxed-navigation-browsing-context-flag>sandboxed navigation browsing context flag</dfn></dt>

   <dd>

    <p>This flag <a href=#sandboxLinks>prevents content from
    navigating browsing contexts other than the sandboxed browsing
    context itself</a> (or browsing contexts further nested inside
    it).</p>

    <p>This flag also <a href=#sandboxWindowOpen>prevents content
    from creating new auxiliary browsing contexts</a>, e.g. using the
    <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code> attribute or the
    <code title=dom-open><a href=#dom-open>window.open()</a></code> method.</p>

   </dd>


   <dt>The <dfn id=sandboxed-plugins-browsing-context-flag>sandboxed plugins browsing context flag</dfn></dt>

   <dd>

    <p>This flag prevents content from instantiating <a href=#plugin title=plugin>plugins</a>, whether using <a href=#sandboxPluginEmbed>the <code>embed</code> element</a>, <a href=#sandboxPluginObject>the <code>object</code> element</a>,
    <a href=#sandboxPluginApplet>the <code>applet</code>
    element</a>, or through <a href=#sandboxPluginNavigate>navigation</a> of a <a href=#nested-browsing-context>nested
    browsing context</a>.</p>

   </dd>

<!-- XXX-NOTIFY
   <dt>The <dfn>sandboxed annoyances browsing context flag</dfn></dt>

   <dd>

    <p>This flag prevents content from <a
    href="#sandboxNotifications">showing notifications</a> outside of
    the <span>nested browsing context</span>.</p>

   </dd>
-->


   <dt>The <dfn id=sandboxed-origin-browsing-context-flag>sandboxed origin browsing context flag</dfn>, unless
   the <code title=attr-iframe-sandbox><a href=#attr-iframe-sandbox>sandbox</a></code> attribute's
   value, when <a href=#split-a-string-on-spaces title="split a string on spaces">split on
   spaces</a>, is found to have the <dfn id=attr-iframe-sandbox-allow-same-origin title=attr-iframe-sandbox-allow-same-origin><code>allow-same-origin</code></dfn>
   keyword set</dt>

   <dd>

    <p>This flag <a href=#sandboxOrigin>forces content into a unique
    origin</a> for the purposes of the <a href=#origin-0 title=origin>same-origin policy</a>.</p>

    <p>This flag also <a href=#sandboxCookies>prevents script from
    reading the <code title=dom-document-cookies>document.cookies</code> DOM
    attribute</a>.</p>

    <div class=note>

     <p>The <code title=attr-iframe-sandbox-allow-same-origin><a href=#attr-iframe-sandbox-allow-same-origin>allow-same-origin</a></code>
     attribute is intended for two cases.</p>

     <p>First, it can be used to allow content from the same site to
     be sandboxed to disable scripting, while still allowing access to
     the DOM of the sandboxed content.</p>

     <p>Second, it can be used to embed content from a third-party
     site, sandboxed to prevent that site from opening popup windows,
     etc, without preventing the embedded page from communicating back
     to its originating site, using the database APIs to store data,
     etc.</p>

    </div>

   </dd>


   <dt>The <dfn id=sandboxed-forms-browsing-context-flag>sandboxed forms browsing context flag</dfn>, unless
   the <code title=attr-iframe-sandbox><a href=#attr-iframe-sandbox>sandbox</a></code> attribute's
   value, when <a href=#split-a-string-on-spaces title="split a string on spaces">split on
   spaces</a>, is found to have the <dfn id=attr-iframe-sandbox-allow-forms title=attr-iframe-sandbox-allow-forms><code>allow-forms</code></dfn>
   keyword set</dt>

   <dd>

    <p>This flag <a href=#sandboxSubmitBlocked>blocks form
    submission</a>.</p>

   </dd>


   <dt>The <dfn id=sandboxed-scripts-browsing-context-flag>sandboxed scripts browsing context flag</dfn>, unless
   the <code title=attr-iframe-sandbox><a href=#attr-iframe-sandbox>sandbox</a></code> attribute's
   value, when <a href=#split-a-string-on-spaces title="split a string on spaces">split on
   spaces</a>, is found to have the <dfn id=attr-iframe-sandbox-allow-scripts title=attr-iframe-sandbox-allow-scripts><code>allow-scripts</code></dfn>
   keyword set</dt>

   <dd>

    <p>This flag <a href=#sandboxScriptBlocked>blocks script
    execution</a>.</p>

   </dd>

  </dl><p>These flags must not be set unless the conditions listed above
  define them as being set.</p>

  <div class=example>

   <p>In this example, some completely-unknown, potentially hostile,
   user-provided HTML content is embedded in a page. Because it is
   sandboxed, it is treated by the user agent as being from a unique
   origin, despite the content being served from the same site. Thus
   it is affected by all the normal cross-site restrictions. In
   addition, the embedded page has scripting disabled, plugins
   disabled, forms disabled, and it cannot navigate any frames or
   windows other than itself (or any frames or windows it itself
   embeds).</p>

   <pre>&lt;p&gt;We're not scared of you! Here is your content, unedited:&lt;/p&gt;
&lt;iframe sandbox src="getusercontent.cgi?id=12193"&gt;&lt;/iframe&gt;</pre>

   <p>Note that cookies are still send to the server in the <code title="">getusercontent.cgi</code> request, though they are not
   visible in the <code title=dom-document-cookies>document.cookies</code> DOM
   attribute.</p>

  </div>

  <div class=example>

   <p>In this example, a gadget from another site is embedded. The
   gadget has scripting and forms enabled, and the origin sandbox
   restrictions are lifted, allowing the gadget to communicate with
   its originating server. The sandbox is still useful, however, as it
   disables plugins and popups, thus reducing the risk of the user
   being exposed to malware and other annoyances.</p>

   <pre>&lt;iframe sandbox="allow-same-origin allow-forms allow-scripts"
        src="http://maps.example.com/embedded.html"&gt;&lt;/iframe&gt;</pre>

  </div>



  <hr><p>The <dfn id=attr-iframe-seamless title=attr-iframe-seamless><code>seamless</code></dfn>
  attribute is a boolean attribute. When specified, it indicates that
  the <code><a href=#the-iframe-element>iframe</a></code> element's <a href=#browsing-context>browsing context</a> is
  to be rendered in a manner that makes it appear to be part of the
  containing document (seamlessly included in the parent
  document). Specifically, when the attribute is set on an element and
  while the <a href=#browsing-context>browsing context</a>'s <a href=#active-document>active
  document</a> has the <a href=#same-origin>same origin</a> as the
  <code><a href=#the-iframe-element>iframe</a></code> element's document, or the <a href=#browsing-context>browsing
  context</a>'s <a href=#active-document>active document</a>'s <em><a href="#the-document's-address" title="the
  document's address">address</a><!-- XXX xref --></em> has the
  <a href=#same-origin>same origin</a> as the <code><a href=#the-iframe-element>iframe</a></code> element's
  document, the following requirements apply:</p>

  <ul><li><p>The user agent must set the <dfn id=seamless-browsing-context-flag>seamless browsing
   context flag</dfn> to true for that <a href=#browsing-context>browsing
   context</a>. This will <a href=#seamlessLinks>cause links to
   open in the parent browsing context</a>.</li>

   <li><p>In a CSS-supporting user agent: the user agent must add all
   the style sheets that apply to the <code><a href=#the-iframe-element>iframe</a></code> element to
   the cascade of the <a href=#active-document>active document</a> of the
   <code><a href=#the-iframe-element>iframe</a></code> element's <a href=#nested-browsing-context>nested browsing context</a>,
   at the appropriate cascade levels, before any style sheets
   specified by the document itself.</li>

   <li><p>In a CSS-supporting user agent: the user agent must, for the
   purpose of CSS property inheritance only, treat the root element of
   the <a href=#active-document>active document</a> of the <code><a href=#the-iframe-element>iframe</a></code>
   element's <a href=#nested-browsing-context>nested browsing context</a> as being a child of
   the <code><a href=#the-iframe-element>iframe</a></code> element. (Thus inherited properties on the
   root element of the document in the <code><a href=#the-iframe-element>iframe</a></code> will
   inherit the computed values of those properties on the
   <code><a href=#the-iframe-element>iframe</a></code> element instead of taking their initial
   values.)</li>

   <li><p>In visual media, in a CSS-supporting user agent: the user agent
   should set the intrinsic width of the <code><a href=#the-iframe-element>iframe</a></code> to the
   width that the element would have if it was a non-replaced
   block-level element with 'width: auto'.</li>

   <li><p>In visual media, in a CSS-supporting user agent: the user agent
   should set the intrinsic height of the <code><a href=#the-iframe-element>iframe</a></code> to the
   height of the bounding box around the content rendered in the
   <code><a href=#the-iframe-element>iframe</a></code> at its current width.</li>

   <li>

    <p>In visual media, in a CSS-supporting user agent: the user agent
    must force the height of the initial containing block of the
    <a href=#active-document>active document</a> of the <a href=#nested-browsing-context>nested browsing
    context</a> of the <code><a href=#the-iframe-element>iframe</a></code> to zero.</p>

    <p class=note>This is intended to get around the otherwise
    circular dependency of percentage dimensions that depend on the
    height of the containing block, thus affecting the height of the
    document's bounding box, thus affecting the height of the
    viewport, thus affecting the size of the initial containing
    block.</p>

   </li>

   <li><p>In speech media, the user agent should render the <a href=#nested-browsing-context>nested
   browsing context</a> without announcing that it is a separate
   document.</li>

   <li>

    <p>User agents should, in general, act as if the <a href=#active-document>active
    document</a> of the <code><a href=#the-iframe-element>iframe</a></code>'s <a href=#nested-browsing-context>nested browsing
    context</a> was part of the document that the
    <code><a href=#the-iframe-element>iframe</a></code> is in.</p>

    <p class=example>For example if the user agent supports listing
    all the links in a document, links in "seamlessly" nested
    documents would be included in that list without being
    significantly distinguished from links in the document itself.</p>

   </li>

  </ul><p class=XXX>Parts of the above might get moved into the
  rendering section at some point.</p>

  <p>If the attribute is not specified, or if the <a href=#origin-0>origin</a>
  conditions listed above are not met, then the user agent should
  render the <a href=#nested-browsing-context>nested browsing context</a> in a manner that is
  clearly distinguishable as a separate <a href=#browsing-context>browsing context</a>,
  and the <a href=#seamless-browsing-context-flag>seamless browsing context flag</a> must be set to
  false for that <a href=#browsing-context>browsing context</a>.</p>

  <p class=warning>It is important that user agents recheck the
  above conditions whenever the <a href=#active-document>active document</a> of the
  <a href=#nested-browsing-context>nested browsing context</a> of the <code><a href=#the-iframe-element>iframe</a></code>
  changes, such that the <a href=#seamless-browsing-context-flag>seamless browsing context flag</a>
  gets unset if the <a href=#nested-browsing-context>nested browsing context</a> is <a href=#navigate title=navigate>navigated</a> to another origin.</p>

  <div class=example>

   <p>In this example, the site's navigation is embedded using a
   client-side include using an <code><a href=#the-iframe-element>iframe</a></code>. Any links in the
   <code><a href=#the-iframe-element>iframe</a></code> will, in new user agents, be automatically
   opened in the <code><a href=#the-iframe-element>iframe</a></code>'s parent browsing context; for
   legacy user agents, the site could also include a <code><a href=#the-base-element>base</a></code>
   element with a <code title=attr-base-target><a href=#attr-base-target>target</a></code>
   attribute with the value <code title="">_parent</code>. Similarly,
   in new user agents the styles of the parent page will be
   automatically applied to the contents of the frame, but to support
   legacy user agents authors might wish to include the styles
   explicitly.</p>

   <pre>&lt;nav&gt;&lt;iframe seamless src="nav.include.html"&gt;&lt;/iframe&gt;&lt;/nav&gt;</pre>

  </div>



  <hr><p>The <code><a href=#the-iframe-element>iframe</a></code> element supports <a href=#dimension-attributes>dimension
  attributes</a> for cases where the embedded content has specific
  dimensions (e.g. ad units have well-defined dimensions).</p>

  <p>An <code><a href=#the-iframe-element>iframe</a></code> element never has <a href=#fallback-content>fallback
  content</a>, as it will always create a nested <a href=#browsing-context>browsing
  context</a>, regardless of whether the specified initial contents
  are successfully used.</p>

  <p>Descendants of <code><a href=#the-iframe-element>iframe</a></code> elements represent
  nothing. (In legacy user agents that do not support
  <code><a href=#the-iframe-element>iframe</a></code> elements, the contents would be parsed as markup
  that could act as fallback content.)</p>

  <p>The content model of <code><a href=#the-iframe-element>iframe</a></code> elements is text, except
  that the text must be such that <span class=XXX>... anyone
  have any bright ideas?</span></p>
  <!--XXX
    Gotta handle <script> elements inside <iframe>s that screw around with the DOM on the fly, or that use document.write().
    Gotta handle <iframe> elements created from script with text contents.
    Gotta handle the XML case.
   -->

  <p class=note>The <a href=#html-parser>HTML parser</a> treats markup inside
  <code><a href=#the-iframe-element>iframe</a></code> elements as text.</p>

  <p>The DOM attributes <dfn id=dom-iframe-src title=dom-iframe-src><code>src</code></dfn>, <dfn id=dom-iframe-name title=dom-iframe-name><code>name</code></dfn>, <dfn id=dom-iframe-sandbox title=dom-iframe-sandbox><code>sandbox</code></dfn>, and <dfn id=dom-iframe-seamless title=dom-iframe-seamless><code>seamless</code></dfn> must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>


  <h4 id=the-embed-element><span class=secno>4.8.4 </span>The <dfn><code>embed</code></dfn> element</h4>

<!--
 XXX we have all kinds of quirks we should define, as e.g. shown in:
 http://mxr.mozilla.org/mozilla-central/source/layout/generic/nsObjectFrame.cpp
 http://trac.webkit.org/browser/trunk/WebCore/html/HTMLEmbedElement.cpp
 http://trac.webkit.org/browser/trunk/WebCore/rendering/RenderPartObject.cpp (updateWidget)
 e.g. - 240x200 default
      - the attributes/params are sent in a name/value pair list as follows (for Gecko):
         + attributes of the element, in source order
         + a synthesised 'src' attribute, if there was no 'src' but
           there was a 'data', with the value of the 'data' attribute
         + PARAM/null
         + the params, in source order
        (WebKit does something different still)
      - the HIDDEN attribute (might be moot now)
-->

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#embedded-content-2>Embedded content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#embedded-content-2>embedded content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-embed-src><a href=#attr-embed-src>src</a></code></dd>
   <dd><code title=attr-embed-type><a href=#attr-embed-type>type</a></code></dd>
   <dd><code title=attr-dim-width><a href=#attr-dim-width>width</a></code></dd>
   <dd><code title=attr-dim-height><a href=#attr-dim-height>height</a></code></dd>
   <dd>Any other attribute that has no namespace (see prose).</dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlembedelement>HTMLEmbedElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-embed-src title=dom-embed-src>src</a>;
           attribute DOMString <a href=#dom-embed-type title=dom-embed-type>type</a>;
           attribute DOMString <a href=#dom-dim-width title=dom-dim-width>width</a>;
           attribute DOMString <a href=#dom-dim-height title=dom-dim-height>height</a>;
};</pre>
    <p>Depending on the type of content instantiated by the
    <code><a href=#the-embed-element>embed</a></code> element, the node may also support other
    interfaces.</p>
   </dd>
  </dl><p>The <code><a href=#the-embed-element>embed</a></code> element <a href=#represents>represents</a> an
  integration point for an external (typically non-HTML) application
  or interactive content.</p>

  <p>The <dfn id=attr-embed-src title=attr-embed-src><code>src</code></dfn> attribute
  gives the address of the resource being embedded. The attribute, if
  present, must contain a <a href=#valid-url>valid URL</a>.</p>

  <p>The <dfn id=attr-embed-type title=attr-embed-type><code>type</code></dfn>
  attribute, if present, gives the MIME type of the plugin to
  instantiate.  The value must be a valid MIME type, optionally with
  parameters. If both the <code title=attr-embed-type><a href=#attr-embed-type>type</a></code>
  attribute and the <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute
  are present, then the <code title=attr-embed-type><a href=#attr-embed-type>type</a></code>
  attribute must specify the same type as the <a href=#content-type-0 title=Content-Type>explicit Content-Type metadata</a> of the
  resource given by the <code title=attr-embed-src><a href=#attr-embed-src>src</a></code>
  attribute. <a href=#refsRFC2046>[RFC2046]</a></p>

  <p>When the element is created with neither a <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute nor a <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute, and when attributes
  are removed such that neither attribute is present on the element
  anymore, any plugins instantiated for the element must be removed,
  and the <code><a href=#the-embed-element>embed</a></code> element represents nothing.</p>

  <p id=sandboxPluginEmbed>When the <a href=#sandboxed-plugins-browsing-context-flag>sandboxed plugins browsing
  context flag</a> is set on the <a href=#browsing-context>browsing context</a> for
  which the <code><a href=#the-embed-element>embed</a></code> element's document is the <a href=#active-document>active
  document</a>, then the user agent must render the
  <code><a href=#the-embed-element>embed</a></code> element in a manner that conveys that the
  <a href=#plugin>plugin</a> was disabled. The user agent may offer the user
  the option to override the sandbox and instantiate the
  <a href=#plugin>plugin</a> anyway; if the user invokes such an option, the
  user agent must act as if the <a href=#sandboxed-plugins-browsing-context-flag>sandboxed plugins browsing
  context flag</a> was not set for the purposes of this
  element.</p>

  <p class=warning>Plugins are disabled in sandboxed browsing
  contexts because they might not honor the restrictions imposed by
  the sandbox (e.g. they might allow scripting even when scripting in
  the sandbox is disabled). User agents should convey the danger of
  overriding the sandbox to the user if an option to do so is
  provided.</p>

  <p>When the element is created with a <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute, and whenever the <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute is subsequently set, and
  whenever the <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute is
  set or removed while the element has a <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute, if the element is not
  in a sandboxed browsing context, user agents must <a href=#resolve-a-url title="resolve a url">resolve</a> the value of the attribute,
  relative to the element, and if that is successful, should
  <a href=#fetch>fetch</a> the resulting <a href=#absolute-url>absolute URL</a>, find and
  instantiate an appropriate <a href=#plugin>plugin</a> based on the <a href=#concept-embed-type title=concept-embed-type>content's type</a>, and hand that
  <a href=#plugin>plugin</a> the content of the resource, replacing any
  previously instantiated plugin for the element. <!-- Note that this
  doesn't happen when the base URL changes. --></p>

  <p>Fetching the resource must <a href=#delay-the-load-event>delay the <code title=event-load>load</code> event</a>.</p>

  <p>The <dfn id=concept-embed-type title=concept-embed-type>type of the content</dfn>
  being embedded is defined as follows:</p>

  <ol><li><p>If the element has a <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute, and that attribute's
   value is a type that a <a href=#plugin>plugin</a> supports, then the value
   of the <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute is the
   <span>content's type</span>.</li>

   <li>

    <p>Otherwise, if the <a href=#url-path title=url-path>&lt;path&gt;</a>
    component of the <a href=#url>URL</a> of the specified resource <!--
    XXX before or after redirects? --> matches a pattern that a
    <a href=#plugin>plugin</a> supports, then the <span>content's type</span>
    is the type that that plugin can handle.</p>

    <p class=example>For example, a plugin might say that it can
    handle resources with <a href=#url-path title=url-path>&lt;path&gt;</a>
    components that end with the four character string "<code title="">.swf</code>".</p>

    <p class=XXX>It would be better if browsers didn't do
    extension sniffing like this, and only based their decision on the
    actual contents of the resource. Couldn't we just apply the
    <span>sniffed type of a resource</span> steps?</p>

   </li>

   <li><p>Otherwise, if the specified resource has <a href=#content-type-0 title=Content-Type>explicit Content-Type metadata</a>, then
   that is the <span>content's type</span>.</li>

   <li><p>Otherwise, the content has no type and there can be no
   appropriate <a href=#plugin>plugin</a> for it.</li>

   <!-- This algorithm is a monument to bad design. Go legacy! -->

  </ol><p>Whether the resource is fetched successfully or not (e.g. whether
  the response code was a 2xx code <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a>) must be
  ignored when determining the resource's type and when handing the
  resource to the plugin.</p>

  <p class=note>This allows servers to return data for plugins even
  with error responses (e.g. HTTP 500 Internal Server Error codes can
  still contain plugin data).</p>

  <p>When the element is created with a <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute and no <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute, and whenever the <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute is subsequently set,
  so long as no <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute is
  set, and whenever the <code title=attr-embed-src><a href=#attr-embed-src>src</a></code>
  attribute is removed when the element has a <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute, if the element is not
  in a sandboxed browsing context, user agents should find and
  instantiate an appropriate <a href=#plugin>plugin</a> based on the value of
  the <code title=attr-embed-type><a href=#attr-embed-type>type</a></code> attribute.</p>

  <p>Any (namespace-less) attribute may be specified on the
  <code><a href=#the-embed-element>embed</a></code> element, so long as its name is
  <a href=#xml-compatible>XML-compatible</a> and contains no characters in the range
  U+0041 .. U+005A (LATIN CAPITAL LETTER A LATIN CAPITAL LETTER
  Z).</p>

  <p class=note>All attributes in <a href=#html-documents>HTML documents</a> get
  lowercased automatically, so the restriction on uppercase letters
  doesn't affect such documents.</p>

  <p>The user agent should pass the names and values of all the
  attributes of the <code><a href=#the-embed-element>embed</a></code> element that have no namespace
  to the <a href=#plugin>plugin</a> used, when it is instantiated.</p>

  <p>If the <a href=#plugin>plugin</a> instantiated for the
  <code><a href=#the-embed-element>embed</a></code> element supports a scriptable interface, the
  <code><a href=#htmlembedelement>HTMLEmbedElement</a></code> object representing the element should
  expose that interface while the element is instantiated.</p>

  <p>The <code><a href=#the-embed-element>embed</a></code> element has no <a href=#fallback-content>fallback
  content</a>. If the user agent can't find a suitable plugin, then
  the user agent must use a default plugin. (This default could be as
  simple as saying "Unsupported Format".)</p>

  <p>The <code><a href=#the-embed-element>embed</a></code> element supports <a href=#dimension-attributes>dimension
  attributes</a>.</p>

  <p>The DOM attributes <dfn id=dom-embed-src title=dom-embed-src><code>src</code></dfn> and <dfn id=dom-embed-type title=dom-embed-type><code>type</code></dfn> each must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>


  <h4 id=the-object-element><span class=secno>4.8.5 </span>The <dfn><code>object</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#embedded-content-2>Embedded content</a>.</dd>
   <dd><a href=#category-listed title=category-listed>Listed</a>,  <a href=#category-submit title=category-submit>submittable</a>, <a href=#form-associated-element>form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#embedded-content-2>embedded content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-param-element>param</a></code> elements, then, <a href=#transparent>transparent</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-object-data><a href=#attr-object-data>data</a></code></dd>
   <dd><code title=attr-object-type><a href=#attr-object-type>type</a></code></dd>
   <dd><code title=attr-object-name><a href=#attr-object-name>name</a></code></dd>
   <dd><code title=attr-hyperlink-usemap><a href=#attr-hyperlink-usemap>usemap</a></code></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-dim-width><a href=#attr-dim-width>width</a></code></dd>
   <dd><code title=attr-dim-height><a href=#attr-dim-height>height</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlobjectelement>HTMLObjectElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-object-data title=dom-object-data>data</a>;
           attribute DOMString <a href=#dom-object-type title=dom-object-type>type</a>;
           attribute DOMString <a href=#dom-object-name title=dom-object-name>name</a>;
           attribute DOMString <a href=#dom-object-usemap title=dom-object-useMap>useMap</a>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute DOMString <a href=#dom-dim-width title=dom-dim-width>width</a>;
           attribute DOMString <a href=#dom-dim-height title=dom-dim-height>height</a>;
<!-- XXX we should bring these back since the Window spec has atrophied
  readonly attribute Document <span title="dom-object-contentDocument">contentDocument</span>;
  readonly attribute <span>WindowProxy</span> <span title="dom-object-contentWindow">contentWindow</span>;
-->};</pre>
    <p>Objects implementing the <code><a href=#htmlobjectelement>HTMLObjectElement</a></code>
    interface must also implement the <code>EmbeddingElement</code>
    interface defined in the Window Object specification. <a href=#refsWINDOW>[WINDOW]</a></p>
    <p>Depending on the type of content instantiated by the
    <code><a href=#the-object-element>object</a></code> element, the node may also support other
    interfaces.</p>
   </dd>
  </dl><p>The <code><a href=#the-object-element>object</a></code> element can represent an external
  resource, which, depending on the type of the resource, will either
  be treated as an image, as a nested <a href=#browsing-context>browsing context</a>,
  or as an external resource to be processed by a
  <a href=#plugin>plugin</a>.</p>

  <p>The <dfn id=attr-object-data title=attr-object-data><code>data</code></dfn>
  attribute, if present, specifies the address of the resource. If
  present, the attribute must be a <a href=#valid-url>valid URL</a>.</p>

  <p>The <dfn id=attr-object-type title=attr-object-type><code>type</code></dfn>
  attribute, if present, specifies the type of the resource. If
  present, the attribute must be a valid MIME type, optionally with
  parameters. <a href=#refsRFC2046>[RFC2046]</a></p>

  <p>One or both of the <code title=attr-object-data><a href=#attr-object-data>data</a></code> and
  <code title=attr-object-type><a href=#attr-object-type>type</a></code> attributes must be
  present.</p>

  <p>The <dfn id=attr-object-name title=attr-object-name><code>name</code></dfn>
  attribute, if present, must be a <a href=#valid-browsing-context-name>valid browsing context
  name</a>.</p>

  <p>When the element is created, and subsequently whenever the <code title=attr-object-classid>classid</code> attribute changes or is
  removed, or, if the <code title=attr-object-classid>classid</code>
  attribute is not present, whenever the <code title=attr-object-data><a href=#attr-object-data>data</a></code> attribute changes or is
  removed, or, if neither <code title=attr-object-classid>classid</code> attribute nor the <code title=attr-object-data><a href=#attr-object-data>data</a></code> attribute are present, whenever
  the <code title=attr-object-type><a href=#attr-object-type>type</a></code> attribute changes or
  is removed, the user agent must run the following steps to determine
  what the <code><a href=#the-object-element>object</a></code> element represents:</p> <!-- Changing
  the base URL doesn't trigger this. -->

  <ol><li>

    <p>If the element has an ancestor <code><a href=#the-object-element>object</a></code> element that
    is <em>not</em> showing its <a href=#fallback-content>fallback content</a>, then
    jump to the last step in the overall set of steps (fallback).</p>

   </li>

   <li>

    <p>If the <code title=attr-object-classid>classid</code>
    attribute is present, and has a value that isn't the empty string,
    then: if the user agent can find a <a href=#plugin>plugin</a> suitable
    according to the value of the <code title=attr-object-classid>classid</code> attribute, and <a href=#sandboxPluginObject>plugins aren't being sandboxed</a>,
    then that <a href=#plugin>plugin</a> <a href=#object-plugin>should be
    used</a>, and the value of the <code title=attr-object-data><a href=#attr-object-data>data</a></code> attribute, if any, should be
    passed to the <a href=#plugin>plugin</a>. If no suitable
    <a href=#plugin>plugin</a> can be found, or if the <a href=#plugin>plugin</a>
    reports an error, jump to the last step in the overall set of
    steps (fallback).</p>

    <!--
     case insensitive:
      is "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" -> application/x-shockwave-flash
      is "clsid:cfcdaa03-8be4-11cf-b84b-0020afbbccfa" -> audio/x-pn-realaudio-plugin
      is "clsid:02bf25d5-8c17-4b23-bc80-d3488abddc6b" -> video/quicktime
      is "clsid:166b1bca-3f9c-11cf-8075-444553540000" -> application/x-director
      is "clsid:6bf52a52-394a-11d3-b153-00c04f79faa6" -> application/x-mplayer2
      starts with "java:"                             -> application/x-java-vm
      starts with "clsid:"                            -> application/x-oleobject
    -->

   </li>

   <li><p>If the <code title=attr-object-data><a href=#attr-object-data>data</a></code> attribute
   is present, then:</p>

    <ol><li><p>If the <code title=attr-object-type><a href=#attr-object-type>type</a></code>
     attribute is present and its value is not a type that the user
     agent supports, and is not a type that the user agent can find a
     <a href=#plugin>plugin</a> for, then the user agent may jump to the last
     step in the overall set of steps (fallback) without fetching the
     content to examine its real type.</li>

     <li>

      <p><a href=#resolve-a-url title="resolve a url">Resolve</a> the
      <a href=#url>URL</a> specified by the <code title=attr-object-data><a href=#attr-object-data>data</a></code> attribute, relative to the
      element.</p>

      <p>If that is successful, <a href=#fetch>fetch</a> the resulting
      <a href=#absolute-url>absolute URL</a>.</p>

      <p>The fetching of the resource must <a href=#delay-the-load-event>delay the <code title=event-load>load</code> event</a>.</p>

     </li>

     <li><p>If the resource is not yet available (e.g. because the
     resource was not available in the cache, so that loading the
     resource required making a request over the network), then jump
     to the last step in the overall set of steps (fallback). When the
     resource becomes available, or if the load fails, restart this
     algorithm from this step. Resources can load incrementally; user
     agents may opt to consider a resource "available" whenever enough
     data has been obtained to begin processing the resource.</li>

     <li><p>If the load failed (e.g. the <a href=#url>URL</a> could not be
     <a href=#resolve-a-url title="resolve a url">resolved</a>, there was an HTTP
     404 error, there was a DNS error), <a href=#fire-an-error-event>fire an <code title=event-error>error</code> event</a> at the element,
     then jump to the last step in the overall set of steps
     (fallback).</li>

     <li><p>Determine the <var title="">resource type</var>, as follows:</p>

      <ol><li>

        <p>Let the <var title="">resource type</var> be unknown.</p>

       </li>

       <li>

        <p>If the resource has <a href=#content-type-0 title=Content-Type>associated
        Content-Type metadata</a>, then let the <var title="">resource type</var> be the type specified in <a href=#content-type-0 title=Content-Type>the resource's Content-Type
        metadata</a>.</p>

       </li>

       <li>

        <p>If the <var title="">resource type</var> is unknown or
        "<code title="">application/octet-stream</code>" and there is
        a <code title=attr-object-type><a href=#attr-object-type>type</a></code> attribute present
        on the <code><a href=#the-object-element>object</a></code> element, then change the <var title="">resource type</var> to instead be the type specified
        in that <code title=attr-object-type><a href=#attr-object-type>type</a></code>
        attribute.</p>

        <p>Otherwise, if the <var title="">resource type</var> is
        "<code title="">application/octet-stream</code>" but there is
        no <code title=attr-object-type><a href=#attr-object-type>type</a></code> attribute on the
        <code><a href=#the-object-element>object</a></code> element, then change the <var title="">resource type</var> to be unknown, so that the
        sniffing rules in the next step are invoked.</p>

       </li>

       <li>

        <p>If the <var title="">resource type</var> is still unknown,
        then change the <var title="">resource type</var> to instead
        be the <a href=#content-type-sniffing-0 title="content-type sniffing">sniffed type
        of the resource</a>.</p>

       </li>

      </ol></li>

     <li><p>Handle the content as given by the first of the following
     cases that matches:</p>

      <dl class=switch><dt>If the <var title="">resource type</var> can be handled by
       a <a href=#plugin>plugin</a> and <a href=#sandboxPluginObject>plugins aren't being
       sandboxed</a></dt>

       <dd>

        <p>The user agent <a href=#object-plugin>should use that
        plugin</a> and pass the content of the resource to that
        <a href=#plugin>plugin</a>. If the <a href=#plugin>plugin</a> reports an
        error, then jump to the last step in the overall set of steps
        (fallback).</p>

       </dd>


       <dt>If the <var title="">resource type</var> is an <span>XML MIME
       type</span><!-- XXX xref --></dt>
       <dt>If the <var title="">resource type</var> is HTML</dt>
       <dt>If the <var title="">resource type</var> does not start with
       "<code>image/</code>"</dt>

       <dd>

        <p>The <code><a href=#the-object-element>object</a></code> element must be associated with a
        <a href=#nested-browsing-context>nested browsing context</a>, if it does not already
        have one. The element's <a href=#nested-browsing-context>nested browsing context</a>
        must then be <a href=#navigate title=navigate>navigated</a> to the
        given resource, with <a href=#replacement-enabled>replacement enabled</a>, and
        with the <code><a href=#the-object-element>object</a></code> element's document's
        <a href=#browsing-context>browsing context</a> as the <a href=#source-browsing-context>source browsing
        context</a>. (The <code title=attr-object-data><a href=#attr-object-data>data</a></code> attribute of the
        <code><a href=#the-object-element>object</a></code> element doesn't get updated if the
        browsing context gets further navigated to other
        locations.)</p>

        <p>The <code><a href=#the-object-element>object</a></code> element <a href=#represents>represents</a> the
        <a href=#nested-browsing-context>nested browsing context</a>.</p>

        <p>If the <code title=attr-object-name><a href=#attr-object-name>name</a></code> attribute
        is present, the <a href=#browsing-context-name>browsing context name</a> must be set
        to the value of this attribute; otherwise, the <a href=#browsing-context-name>browsing
        context name</a> must be set to the empty string.</p>

        <p class=XXX>navigation might end up treating it as
        something else, because it can do sniffing. how should we
        handle that? it could also refetch the resource entirely,
        maybe from another application cache.</p>

        <!-- note that malformed XML files don't cause fallback -->

       </dd>


       <dt>If the <var title="">resource type</var> starts with
       "<code>image/</code>", and support for images has not been
       disabled</dt>

       <dd>

        <p>Apply the <a href=#content-type-sniffing:-image title="content-type sniffing: image">image
        sniffing</a> rules to determine the type of the image.</p>

        <p>The <code><a href=#the-object-element>object</a></code> element <a href=#represents>represents</a> the
        specified image. The image is not a <a href=#nested-browsing-context>nested browsing
        context</a>.</p>

        <p>If the image cannot be rendered, e.g. because it is
        malformed or in an unsupported format, jump to the last step
        in the overall set of steps (fallback).</p>

       </dd>


       <dt>Otherwise</dt>

       <dd>

        <p>The given <var title="">resource type</var> is not
        supported. Jump to the last step in the overall set of steps
        (fallback).</p>

       </dd>

      </dl></li>

     <li><p>The element's contents are not part of what the
     <code><a href=#the-object-element>object</a></code> element represents.</p>

     <li><p>Once the resource is completely loaded, <a href=#fire-a-load-event>fire a <code title=event-load>load</code> event</a> at the
     element.</li> <!-- XXX ordering of events (like with iframe)
     -->

    </ol></li>

   <li><p>If the <code title=attr-object-data><a href=#attr-object-data>data</a></code> attribute
   is absent but the <code title=attr-object-type><a href=#attr-object-type>type</a></code>
   attribute is present, <a href=#sandboxPluginObject>plugins
   aren't being sandboxed</a>, and the user agent can find a <a href=#plugin>plugin</a>
   suitable according to the value of the <code title=attr-object-type><a href=#attr-object-type>type</a></code> attribute, then that <a href=#plugin>plugin</a>
   <a href=#object-plugin>should be used</a>. If no suitable <a href=#plugin>plugin</a>
   can be found, or if the <a href=#plugin>plugin</a> reports an error, jump to the next
   step (fallback).</li>

   <li><p>(Fallback.) The <code><a href=#the-object-element>object</a></code> element
   <a href=#represents>represents</a> the element's children, ignoring any
   leading <code><a href=#the-param-element>param</a></code> element children. This is the element's
   <a href=#fallback-content>fallback content</a>.</li>

  </ol><p id=object-plugin>When the algorithm above instantiates a
  <a href=#plugin>plugin</a>, the user agent should pass the names and values
  of all the attributes on the element, and <!-- then a parameter
  named "PARAM" whose value is null, and then --> all the names and
  values of <a href=#concept-param-parameter title=concept-param-parameter>parameters</a>
  given by <code><a href=#the-param-element>param</a></code> elements that are children of the
  <code><a href=#the-object-element>object</a></code> element, in <a href=#tree-order>tree order</a>, to the
  <a href=#plugin>plugin</a> used. If the <a href=#plugin>plugin</a> supports a
  scriptable interface, the <code><a href=#htmlobjectelement>HTMLObjectElement</a></code> object
  representing the element should expose that interface. The
  <code><a href=#the-object-element>object</a></code> element <a href=#represents>represents</a> the
  <a href=#plugin>plugin</a>. The <a href=#plugin>plugin</a> is not a nested
  <a href=#browsing-context>browsing context</a>.</p>

  <p id=sandboxPluginObject>If the <a href=#sandboxed-plugins-browsing-context-flag>sandboxed plugins browsing
  context flag</a> is set on the <a href=#browsing-context>browsing context</a> for
  which the <code><a href=#the-object-element>object</a></code> element's document is the <a href=#active-document>active
  document</a>, then the steps above must always act as if they had
  failed to find a <a href=#plugin>plugin</a>, even if one would otherwise have been
  used.</p>

  <p>Due to the algorithm above, the contents of <code><a href=#the-object-element>object</a></code>
  elements act as <a href=#fallback-content>fallback content</a>, used only when
  referenced resources can't be shown (e.g. because it returned a 404
  error). This allows multiple <code><a href=#the-object-element>object</a></code> elements to be
  nested inside each other, targeting multiple user agents with
  different capabilities, with the user agent picking the first one it
  supports.</p>

<!-- XXX
<hyatt> apparently your url can come from <param>
<hyatt> not just the data attribute
<hyatt> our code looks for params with "src", "movie", "code" and "url"
<hyatt> and also tries to find the type on a param
<Hixie> oh that's you trying to have hacky activex support
<Hixie> opera does that too
<hyatt> yeah we support activex versions of plugins that are common
<hyatt> like flash and quicktime and realaudio
<Hixie> that would be a step 1b. if no data attribute, then look for a <param> to get you a URL instead.
<Hixie> and if you find one, carry on as if that was your data="".
-->

  <p>Whenever the <code title=attr-object-name><a href=#attr-object-name>name</a></code> attribute
  is set, if the <code><a href=#the-object-element>object</a></code> element has a nested
  <a href=#browsing-context>browsing context</a>, its <a href=#browsing-context-name title="browsing context
  name">name</a> must be changed to the new value. If the attribute
  is removed, if the <code><a href=#the-object-element>object</a></code> element has a <a href=#browsing-context>browsing
  context</a>, the <a href=#browsing-context-name>browsing context name</a> must be set
  to the empty string.</p>

  <p>The <code title=attr-hyperlink-usemap><a href=#attr-hyperlink-usemap>usemap</a></code> attribute,
  if present while the <code><a href=#the-object-element>object</a></code> element represents an
  image, can indicate that the object has an associated <a href=#image-map>image
  map</a>. The attribute must be ignored if the <code><a href=#the-object-element>object</a></code>
  element doesn't represent an image.</p>

  <p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-object-element>object</a></code> element with its
  <a href=#form-owner>form owner</a>.</p>

  <p><strong>Constraint validation:</strong> <code><a href=#the-object-element>object</a></code>
  elements are always <a href=#barred-from-constraint-validation>barred from constraint
  validation</a>.</p>

  <p>The <code><a href=#the-object-element>object</a></code> element supports <a href=#dimension-attributes>dimension
  attributes</a>.</p>

  <p>The DOM attributes <dfn id=dom-object-data title=dom-object-data><code>data</code></dfn>, <dfn id=dom-object-type title=dom-object-type><code>type</code></dfn>, <dfn id=dom-object-name title=dom-object-name><code>name</code></dfn>, and <dfn id=dom-object-usemap title=dom-object-useMap><code>useMap</code></dfn> each must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>

  <div class=example>

   <p>In the following example, a Java applet is embedded in a page
   using the <code><a href=#the-object-element>object</a></code> element. (Generally speaking, it is
   better to avoid using applets like these and instead use native
   JavaScript and HTML to provide the functionality, since that way
   the application will work on all Web browsers without requiring a
   third-party plugin. Many devices, especially embedded devices, do
   not support third-party technologies like Java.)</p>

   <pre>&lt;figure&gt;
 &lt;object type="application/x-java-applet"&gt;
  &lt;param name="code" value="MyJavaClass"&gt;
  &lt;p&gt;You do not have Java available, or it is disabled.&lt;/p&gt;
 &lt;/object&gt;
 &lt;legend&gt;My Java Clock&lt;/legend&gt;
&lt;/figure&gt;</pre>

  </div>

  <div class=example>

   <p>In this example, an HTML page is embedded in another using the
   <code><a href=#the-object-element>object</a></code> element.</p>

   <pre>&lt;figure&gt;
 &lt;object data="clock.html"&gt;&lt;/object&gt;
 &lt;legend&gt;My HTML Clock&lt;/legend&gt;
&lt;/figure&gt;</pre>

  </div>




  <h4 id=the-param-element><span class=secno>4.8.6 </span>The <dfn><code>param</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of an <code><a href=#the-object-element>object</a></code> element, before any <a href=#flow-content-0>flow content</a>.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-param-name><a href=#attr-param-name>name</a></code></dd>
   <dd><code title=attr-param-value><a href=#attr-param-value>value</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlparamelement>HTMLParamElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-param-name title=dom-param-name>name</a>;
           attribute DOMString <a href=#dom-param-value title=dom-param-value>value</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-param-element>param</a></code> element defines parameters for plugins
  invoked by <code><a href=#the-object-element>object</a></code> elements. It does not <a href=#represents title=represents>represent</a> anything on its own.</p>

  <p>The <dfn id=attr-param-name title=attr-param-name><code>name</code></dfn>
  attribute gives the name of the parameter.</p>

  <p>The <dfn id=attr-param-value title=attr-param-value><code>value</code></dfn>
  attribute gives the value of the parameter.</p>

  <p>Both attributes must be present. They may have any value.</p>

  <p>If both attributes are present, and if the parent element of the
  <code><a href=#the-param-element>param</a></code> is an <code><a href=#the-object-element>object</a></code> element, then the
  element defines a <dfn id=concept-param-parameter title=concept-param-parameter>parameter</dfn> with the given
  name/value pair.</p>

  <p>The DOM attributes <dfn id=dom-param-name title=dom-param-name><code>name</code></dfn> and <dfn id=dom-param-value title=dom-param-value><code>value</code></dfn> must both
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>



  <h4 id=video><span class=secno>4.8.7 </span>The <dfn><code>video</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#embedded-content-2>Embedded content</a>.</dd>
   <dd>If the element has a <code title=attr-media-controls><a href=#attr-media-controls>controls</a></code> attribute: <a href=#interactive-content-0>Interactive content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#embedded-content-2>embedded content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>If the element has a <code title=attr-media-src><a href=#attr-media-src>src</a></code> attribute: <a href=#transparent>transparent</a>.</dd>
   <dd>If the element does not have a <code title=attr-media-src><a href=#attr-media-src>src</a></code> attribute: one or more <code><a href=#the-source-element>source</a></code> elements, then, <a href=#transparent>transparent</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-media-src><a href=#attr-media-src>src</a></code></dd>
   <dd><code title=attr-video-poster><a href=#attr-video-poster>poster</a></code></dd>
   <dd><code title=attr-media-autoplay><a href=#attr-media-autoplay>autoplay</a></code></dd>
   <dd><code title=attr-media-loop><a href=#attr-media-loop>loop</a></code></dd>
   <dd><code title=attr-media-controls><a href=#attr-media-controls>controls</a></code></dd>
   <dd><code title=attr-dim-width><a href=#attr-dim-width>width</a></code></dd>
   <dd><code title=attr-dim-height><a href=#attr-dim-height>height</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>interface <dfn id=htmlvideoelement>HTMLVideoElement</dfn> : <a href=#htmlmediaelement>HTMLMediaElement</a> {
           attribute DOMString <a href=#dom-dim-width title=dom-dim-width>width</a>;
           attribute DOMString <a href=#dom-dim-height title=dom-dim-height>height</a>;
  readonly attribute unsigned long <a href=#dom-video-videowidth title=dom-video-videoWidth>videoWidth</a>;
  readonly attribute unsigned long <a href=#dom-video-videoheight title=dom-video-videoHeight>videoHeight</a>;
           attribute DOMString <a href=#dom-video-poster title=dom-video-poster>poster</a>;
};</pre>
   </dd>
  </dl><p>A <code><a href=#video>video</a></code> element represents a video or movie.</p>

  <p>Content may be provided inside the <code><a href=#video>video</a></code>
  element. User agents should not show this content to the user; it is
  intended for older Web browsers which do not support
  <code><a href=#video>video</a></code>, so that legacy video plugins can be tried, or to
  show text to the users of these older browser informing them of how
  to access the video contents.</p>

  <p class=note>In particular, this content is not <i><a href=#fallback-content>fallback
  content</a></i> intended to address accessibility concerns. To make
  video content accessible to the blind, deaf, and those with other
  physical or cognitive disabilities, authors are expected to provide
  alternative media streams and/or to embed accessibility aids (such
  as caption or subtitle tracks) into their media streams.</p>

  <p>The <code><a href=#video>video</a></code> element is a <a href=#media-element>media element</a>
  whose <a href=#media-data>media data</a> is ostensibly video data, possibly
  with associated audio data.</p>

  <p>The <code title=attr-media-src><a href=#attr-media-src>src</a></code>, <code title=attr-media-autoplay><a href=#attr-media-autoplay>autoplay</a></code>, <code title=attr-media-loop><a href=#attr-media-loop>loop</a></code>, and <code title=attr-media-controls><a href=#attr-media-controls>controls</a></code> attributes are <a href=#media-element-attributes title="media element attributes">the attributes common to all media
  elements</a>.</p>

  <p>The <dfn id=attr-video-poster title=attr-video-poster><code>poster</code></dfn>
  attribute gives the address of an image file that the user agent can
  show while no video data is available. The attribute, if present,
  must contain a <a href=#valid-url>valid URL</a>. If the specified resource is
  to be used, then, when the element is created or when the <code title=attr-video-poster><a href=#attr-video-poster>poster</a></code> attribute is set, its value
  must be <a href=#resolve-a-url title="resolve a url">resolved</a> relative to the
  element, and if that is successful, the resulting <a href=#absolute-url>absolute
  URL</a> must be <a href=#fetch title=fetch>fetched</a>. The
  <dfn id=poster-frame>poster frame</dfn> is then the image obtained from that
  resource, if any.</p> <!-- thus it is unaffected by changes to the
  base URL. -->

  <p class=note>The image given by the <code title=attr-video-poster><a href=#attr-video-poster>poster</a></code> attribute, the <i><a href=#poster-frame>poster
  frame</a></i>, is intended to be a representative frame of the video
  (typically one of the first non-blank frames) that gives the user an
  idea of what the video is like.</p>

  <p>The <dfn id=dom-video-poster title=dom-video-poster><code>poster</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-video-poster><a href=#attr-video-poster>poster</a></code> content attribute.</p>

  <hr><p>When no video data is available (the element's <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute is either
  <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code> or <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code>), the
  <code><a href=#video>video</a></code> element <a href=#represents>represents</a> either the
  <a href=#poster-frame>poster frame</a>, or nothing.</p>

  <p>When a <code><a href=#video>video</a></code> element is <a href=#dom-media-paused title=dom-media-paused>paused</a> and the <a href=#current-playback-position title="current
  playback position">current playback position</a> is the first
  frame of video, the element <a href=#represents>represents</a> either the frame
  of video corresponding to the <a href=#current-playback-position title="current playback
  position">current playback position</a> or the <a href=#poster-frame>poster
  frame</a>, at the discretion of the user agent.</p>

  <p>Notwithstanding the above, the <a href=#poster-frame>poster frame</a> should
  be preferred over nothing, but the <a href=#poster-frame>poster frame</a> should
  not be shown again after a frame of video has been shown.</p>

  <p>When a <code><a href=#video>video</a></code> element is <a href=#dom-media-paused title=dom-media-paused>paused</a> at any other position, the
  element <a href=#represents>represents</a> the frame of video corresponding to
  the <a href=#current-playback-position title="current playback position">current playback
  position</a>, or, if that is not yet available (e.g. because the
  video is seeking or buffering), the last frame of the video to have
  been rendered.</p>

  <p>When a <code><a href=#video>video</a></code> element is <a href=#potentially-playing>potentially
  playing</a>, it <a href=#represents>represents</a> the frame of video at the
  continuously increasing <a href=#current-playback-position title="current playback
  position">"current" position</a>. When the <a href=#current-playback-position>current playback
  position</a> changes such that the last frame rendered is no
  longer the frame corresponding to the <a href=#current-playback-position>current playback
  position</a> in the video, the new frame must be
  rendered. Similarly, any audio associated with the video must, if
  played, be played synchronized with the <a href=#current-playback-position>current playback
  position</a>, at the specified <a href=#dom-media-volume title=dom-media-volume>volume</a> with the specified <a href=#dom-media-muted title=dom-media-muted>mute state</a>.</p>

  <p>When a <code><a href=#video>video</a></code> element is neither <a href=#potentially-playing>potentially
  playing</a> nor <a href=#dom-media-paused title=dom-media-paused>paused</a>
  (e.g. when seeking or stalled), the element <a href=#represents>represents</a>
  the last frame of the video to have been rendered.</p>

  <p class=note>Which frame in a video stream corresponds to a
  particular playback position is defined by the video stream's
  format.</p>

  <p>In addition to the above, the user agent may provide messages to
  the user (such as "buffering", "no video loaded", "error", or more
  detailed information) by overlaying text or icons on the video or
  other areas of the element's playback area, or in another
  appropriate manner.</p>

  <p>User agents that cannot render the video may instead make the
  element <a href=#represents title=represents>represent</a> a link to an
  external video playback utility or to the video data itself.</p>

  <hr><p>The <dfn id=concept-video-intrinsic-width title=concept-video-intrinsic-width>intrinsic
  width</dfn> and <dfn id=concept-video-intrinsic-height title=concept-video-intrinsic-height>intrinsic height</dfn> of the
  <a href=#media-resource>media resource</a> are the dimensions of the resource in
  CSS pixels after taking into account the resource's dimensions,
  aspect ratio, clean aperture, resolution, and so forth, as defined
  for the format used by the resource.</p>

  <p>The <dfn id=dom-video-videowidth title=dom-video-videoWidth><code>videoWidth</code></dfn> DOM
  attribute must return the <a href=#concept-video-intrinsic-width title=concept-video-intrinsic-width>intrinsic width</a> of the
  video in CSS pixels. The <dfn id=dom-video-videoheight title=dom-video-videoHeight><code>videoHeight</code></dfn> DOM
  attribute must return the <a href=#concept-video-intrinsic-height title=concept-video-intrinsic-height>intrinsic height</a> of
  the video in CSS pixels. If the element's <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute is <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code>, then the
  attributes must return 0.</p>

  <p>The <code><a href=#video>video</a></code> element supports <a href=#dimension-attributes>dimension
  attributes</a>.</p>

  <p>Video content should be rendered inside the element's playback
  area such that the video content is shown centered in the playback
  area at the largest possible size that fits completely within it,
  with the video content's aspect ratio being preserved. Thus, if the
  aspect ratio of the playback area does not match the aspect ratio of
  the video, the video will be shown letterboxed or pillarboxed. Areas
  of the element's playback area that do not contain the video
  represent nothing.</p>

  <p>The intrinsic width of a <code><a href=#video>video</a></code> element's playback
  area is the <a href=#concept-video-intrinsic-width title=concept-video-intrinsic-width>intrinsic
  width</a> of the video resource, if that is available; otherwise
  it is the intrinsic width of the <a href=#poster-frame>poster frame</a>, if that
  is available; otherwise it is 300 CSS pixels.</p>

  <p>The intrinsic height of a <code><a href=#video>video</a></code> element's playback
  area is the <a href=#concept-video-intrinsic-height title=concept-video-intrinsic-height>intrinsic
  height</a> of the video resource, if that is available; otherwise
  it is the intrinsic height of the <a href=#poster-frame>poster frame</a>, if that
  is available; otherwise it is 150 CSS pixels.</p>

  <hr><!-- XXX
   default activation behavior is to do the play() if paused, pause()
   otherwise
  --><p>User agents should provide controls to enable or disable the
  display of closed captions associated with the video stream, though
  such features should, again, not interfere with the page's normal
  rendering.</p>

  <p>User agents may allow users to view the video content in manners
  more suitable to the user (e.g. full-screen or in an independent
  resizable window). As for the other user interface features,
  controls to enable this should not interfere with the page's normal
  rendering unless the user agent is <a href=#expose-a-user-interface-to-the-user title="expose a user
  interface to the user">exposing a user interface</a>. In such an
  independent context, however, user agents may make full user
  interfaces visible, with, e.g., play, pause, seeking, and volume
  controls, even if the <code title=attr-media-controls><a href=#attr-media-controls>controls</a></code> attribute is absent.</p>

  <p>User agents may allow video playback to affect system features
  that could interfere with the user's experience; for example, user
  agents could disable screensavers while video playback is in
  progress.</p>

  <!-- XXX rendering section should mention that resizing a video
  should in no way interrupt playback -->

  <p class=warning>User agents should not provide a public API to
  cause videos to be shown full-screen. A script, combined with a
  carefully crafted video file, could trick the user into thinking a
  system-modal dialog had been shown, and prompt the user for a
  password. There is also the danger of "mere" annoyance, with pages
  launching full-screen videos when links are clicked or pages
  navigated. Instead, user-agent specific interface features may be
  provided to easily allow the user to obtain a full-screen playback
  mode.</p>

  <p class=XXX>The spec does not currently define the
  interaction of the "controls" attribute with the "height" and
  "width" attributes. This will likely be defined in the rendering
  section based on implementation experience. So far, browsers seem to
  be making the controls overlay-only, thus somewhat sidestepping the
  issue.</p>



  <h5 id=video-and-audio-codecs-for-video-elements><span class=secno>4.8.7.1 </span>Video and audio codecs for <code><a href=#video>video</a></code> elements</h5>

  <p>User agents may support any video and audio codecs and container
  formats.</p>

  <p class=XXX>It would be helpful for interoperability if all
  browsers could support the same codecs. However, there are no known
  codecs that satisfy all the current players: we need a codec that is
  known to not require per-unit or per-distributor licensing, that is
  compatible with the open source development model, that is of
  sufficient quality as to be usable, and that is not an additional
  submarine patent risk for large companies. This is an ongoing issue
  and this section will be updated once more information is
  available.</p>

  <!-- XXX mention that this spec doesn't require native support or
  plugin support, either is fine -->

  <p class=note>Certain user agents might support no codecs at all,
  e.g. text browsers running over SSH connections.</p>






  <h4 id=audio><span class=secno>4.8.8 </span>The <dfn><code>audio</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#embedded-content-2>Embedded content</a>.</dd>
   <dd>If the element has a <code title=attr-media-controls><a href=#attr-media-controls>controls</a></code> attribute: <a href=#interactive-content-0>Interactive content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#embedded-content-2>embedded content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>If the element has a <code title=attr-media-src><a href=#attr-media-src>src</a></code> attribute: <a href=#transparent>transparent</a>.</dd>
   <dd>If the element does not have a <code title=attr-media-src><a href=#attr-media-src>src</a></code> attribute: one or more <code><a href=#the-source-element>source</a></code> elements, then, <a href=#transparent>transparent</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-media-src><a href=#attr-media-src>src</a></code></dd>
   <dd><code title=attr-media-autoplay><a href=#attr-media-autoplay>autoplay</a></code></dd>
   <dd><code title=attr-media-loop><a href=#attr-media-loop>loop</a></code></dd>
   <dd><code title=attr-media-controls><a href=#attr-media-controls>controls</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>[NamedConstructor=<a href=#dom-audio title=dom-Audio>Audio</a>(),
 NamedConstructor=<a href=#dom-audio-s title=dom-Audio-s>Audio</a>(in DOMString src)]
interface <dfn id=htmlaudioelement>HTMLAudioElement</dfn> : <a href=#htmlmediaelement>HTMLMediaElement</a> {
  // no members
};</pre>
   </dd>
  </dl><p>An <code><a href=#audio>audio</a></code> element <a href=#represents>represents</a> a sound or
  audio stream.</p>

  <p>Content may be provided inside the <code><a href=#audio>audio</a></code>
  element. User agents should not show this content to the user; it is
  intended for older Web browsers which do not support
  <code><a href=#audio>audio</a></code>, so that legacy audio plugins can be tried, or to
  show text to the users of these older browser informing them of how
  to access the audio contents.</p>

  <p class=note>In particular, this content is not <i><a href=#fallback-content>fallback
  content</a></i> intended to address accessibility concerns. To make
  audio content accessible to the deaf or to those with other physical
  or cognitive disabilities, authors are expected to provide
  alternative media streams and/or to embed accessibility aids (such
  as transcriptions) into their media streams.</p>

  <p>The <code><a href=#audio>audio</a></code> element is a <a href=#media-element>media element</a>
  whose <a href=#media-data>media data</a> is ostensibly audio data.</p>

  <p>The <code title=attr-media-src><a href=#attr-media-src>src</a></code>, <code title=attr-media-autoplay><a href=#attr-media-autoplay>autoplay</a></code>, <code title=attr-media-loop><a href=#attr-media-loop>loop</a></code>, and <code title=attr-media-controls><a href=#attr-media-controls>controls</a></code> attributes are <a href=#media-element-attributes title="media element attributes">the attributes common to all media
  elements</a>.</p>
 
  <p>When an <code><a href=#audio>audio</a></code> element is <a href=#potentially-playing>potentially
  playing</a>, it must have its audio data played synchronized with
  the <a href=#current-playback-position>current playback position</a>, at the specified <a href=#dom-media-volume title=dom-media-volume>volume</a> with the specified <a href=#dom-media-muted title=dom-media-muted>mute state</a>.</p>

  <p>When an <code><a href=#audio>audio</a></code> element is not <a href=#potentially-playing>potentially
  playing</a>, audio must not play for the element.</p>

  <p>Two constructors are provided for creating
  <code><a href=#htmlaudioelement>HTMLAudioElement</a></code> objects (in addition to the factory
  methods from DOM Core such as <code title="">createElement()</code>): <dfn id=dom-audio title=dom-Audio><code>Audio()</code></dfn> and <dfn id=dom-audio-s title=dom-Audio-s><code>Audio(<var title="">src</var>)</code></dfn>. When invoked as constructors,
  these must return a new <code><a href=#htmlaudioelement>HTMLAudioElement</a></code> object (a new
  <code><a href=#audio>audio</a></code> element). If the <var title="">src</var> argument
  is present, the object created must have its <code title=dom-media-src><a href=#dom-media-src>src</a></code> content attribute set to the
  provided value, and the user agent must invoke the <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method on the object before
  returning.</p>




  <h5 id=audio-codecs-for-audio-elements><span class=secno>4.8.8.1 </span>Audio codecs for <code><a href=#audio>audio</a></code> elements</h5>

  <p>User agents may support any audio codecs and container
  formats.</p>

  <p>User agents must support the WAVE container format with audio
  encoded using the PCM format. <!-- XXX references? #refs --> </p>

  <!-- XXX mention that this spec doesn't require native support or
  plugin support, either is fine -->



  <h4 id=the-source-element><span class=secno>4.8.9 </span>The <dfn><code>source</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <a href=#media-element>media element</a>, before any <a href=#flow-content-0>flow content</a>.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-source-src><a href=#attr-source-src>src</a></code></dd>
   <dd><code title=attr-source-type><a href=#attr-source-type>type</a></code></dd>
   <dd><code title=attr-source-media><a href=#attr-source-media>media</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlsourceelement>HTMLSourceElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-source-src title=dom-source-src>src</a>;
           attribute DOMString <a href=#dom-source-type title=dom-source-type>type</a>;
           attribute DOMString <a href=#dom-source-media title=dom-source-media>media</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-source-element>source</a></code> element allows authors to specify
  multiple <a href=#media-resource title="media resource">media resources</a> for
  <a href=#media-element title="media element">media elements</a>. It does not <a href=#represents title=represents>represent</a> anything on its own.</p>

  <p>The <dfn id=attr-source-src title=attr-source-src><code>src</code></dfn> attribute
  gives the address of the <a href=#media-resource>media resource</a>. The value must
  be a <a href=#valid-url>valid URL</a>. This attribute must be present.</p>

  <p>The <dfn id=attr-source-type title=attr-source-type><code>type</code></dfn>
  attribute gives the type of the <a href=#media-resource>media resource</a>, to help
  the user agent determine if it can play this <a href=#media-resource>media
  resource</a> before fetching it. If specified, its value must be
  a MIME type. The <code title="">codecs</code> parameter may be
  specified and might be necessary to specify exactly how the resource
  is encoded. <a href=#refsRFC2046>[RFC2046]</a> <a href=#refsRFC4281>[RFC4281]</a></p>

  <div class=example>

   <p>The following list shows some examples of how to use the <code title="">codecs=</code> MIME parameter in the <code title=attr-source-type><a href=#attr-source-type>type</a></code> attribute.</p>

   <dl><dt>H.264 Simple baseline profile video (main and extended video compatible) level 3 and Low-Complexity AAC audio in MP4 container</dt>
    <dd><pre>&lt;source src="video.mp4" type="video/mp4; codecs=&amp;quot;avc1.42E01E, mp4a.40.2&amp;quot;"&gt;</pre></dd>

    <dt>H.264 Extended profile video (baseline-compatible) level 3 and Low-Complexity AAC audio in MP4 container</dt>
    <dd><pre>&lt;source src="video.mp4" type="video/mp4; codecs=&amp;quot;avc1.58A01E, mp4a.40.2&amp;quot;"&gt;</pre></dd>

    <dt>H.264 Main profile video level 3 and Low-Complexity AAC audio in MP4 container</dt>
    <dd><pre>&lt;source src="video.mp4" type="video/mp4; codecs=&amp;quot;avc1.4D401E, mp4a.40.2&amp;quot;"&gt;</pre></dd>

    <dt>H.264 "High" profile video (incompatible with main, baseline, or extended profiles) level 3 and Low-Complexity AAC audio in MP4 container</dt>
    <dd><pre>&lt;source src="video.mp4" type="video/mp4; codecs=&amp;quot;avc1.64001E, mp4a.40.2&amp;quot;"&gt;</pre></dd>


    <dt>MPEG-4 Visual Simple Profile Level 0 video and Low-Complexity AAC audio in MP4 container</dt>
    <dd><pre>&lt;source src="video.mp4" type="video/mp4; codecs=&amp;quot;mp4v.20.8, mp4a.40.2&amp;quot;"&gt;</pre></dd>

    <dt>MPEG-4 Advanced Simple Profile Level 0 video and Low-Complexity AAC audio in MP4 container</dt>
    <dd><pre>&lt;source src="video.mp4" type="video/mp4; codecs=&amp;quot;mp4v.20.240, mp4a.40.2&amp;quot;"&gt;</pre></dd>

    <dt>MPEG-4 Visual Simple Profile Level 0 video and AMR audio in 3GPP container</dt>
    <dd><pre>&lt;source src="video.3gp" type="video/3gpp; codecs=&amp;quot;mp4v.20.8, samr&amp;quot;"&gt;</pre></dd>


    <dt>Theora video and Vorbis audio in Ogg container</dt>
    <dd><pre>&lt;source src="video.ogv" type="video/ogg; codecs=&amp;quot;theora, vorbis&amp;quot;"&gt;</pre></dd>

    <dt>Theora video and Speex audio in Ogg container</dt>
    <dd><pre>&lt;source src="video.ogv" type="video/ogg; codecs=&amp;quot;theora, speex&amp;quot;"&gt;</pre></dd>

    <dt>Vorbis audio alone in Ogg container</dt>
    <dd><pre>&lt;source src="audio.ogg" type="audio/ogg; codecs=vorbis"&gt;</pre></dd>

    <dt>Speex audio alone in Ogg container</dt>
    <dd><pre>&lt;source src="audio.spx" type="audio/ogg; codecs=speex"&gt;</pre></dd>

    <dt>FLAC audio alone in Ogg container</dt>
    <dd><pre>&lt;source src="audio.oga" type="audio/ogg; codecs=flac"&gt;</pre></dd>

    <dt>Dirac video and Vorbis audio in Ogg container</dt>
    <dd><pre>&lt;source src="video.ogv" type="video/ogg; codecs=&amp;quot;dirac, vorbis&amp;quot;"&gt;</pre></dd>

    <dt>Theora video and Vorbis audio in Matroska container</dt>
    <dd><pre>&lt;source src="video.mkv" type="video/x-matroska; codecs=&amp;quot;theora, vorbis&amp;quot;"&gt;</pre></dd>

<!-- awaiting definition by the Ogg or BBC guys:
    <dt>Dirac video and Vorbis audio in Matroska container</dt>
    <dd><pre>&lt;source src="video.mkv" type="video/x-matroska; codecs="></pre></dd>
-->


<!-- awaiting definition by the Microsoft guys:

    <dt>WMV9 video and WMA 2 audio in ASF container</dt>
    <dd><pre>&lt;source src="video.wmv" type="video/x-ms-wmv; codecs="></pre></dd>

    <dt>WMV8 video and WMA 2 audio in ASF container</dt>
    <dd><pre>&lt;source src="video.wmv" type="video/x-ms-wmv; codecs="></pre></dd>

    <dt>VC-1 video and WMA 10 Pro audio in ASF container</dt>
    <dd><pre>&lt;source src="video.wmv" type="video/x-ms-wmv; codecs="></pre></dd>

    <dt>XviD video and MP3 audio in AVI container</dt>
    <dd><pre>&lt;source src="video.avi" type="video/x-msvideo; codecs="></pre></dd>

    <dt>Motion-JPEG video and uncompressed PCM audio in AVI container</dt>
    <dd><pre>&lt;source src="video.avi" type="video/x-msvideo; codecs="></pre></dd>

-->


<!-- awaiting definition by Real:
    <dt>Real Video 10 video and High-Efficiency AAC audio in Real Media container</dt>
    <dd><pre>&lt;source src="video.rm" type="application/vnd.rn-realmedia; codecs="></pre></dd>
-->


<!--  undefined:
    <dt>MPEG-1 video and MPEG-1 Audio Layer II audio in MPEG-1 program stream</dt>
    <dd><pre>&lt;source src="video.mpg" type="video/mpeg; codecs="></pre></dd>
-->

   </dl><!-- XXX #refs https://trac.xiph.org/browser/experimental/ivo/drafts/draft-xiph-rfc3534bis.txt may be relevant --></div>

  <p>The <dfn id=attr-source-media title=attr-source-media><code>media</code></dfn>
  attribute gives the intended media type of the <a href=#media-resource>media
  resource</a>, to help the user agent determine if this
  <a href=#media-resource>media resource</a> is useful to the user before fetching
  it. Its value must be a valid <a href=#mq>media query</a>. <a href=#refsMQ>[MQ]</a></p>

  <p>If a <code><a href=#the-source-element>source</a></code> element is inserted into a <a href=#media-element>media
  element</a> that is already in a document and whose <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> is in the <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> state, the user
  agent must <a href=#queue-a-task>queue a task</a> that implicitly invokes the
  <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method on the <a href=#media-element>media
  element</a>, and ignores any resulting exceptions. The <a href=#task-source>task
  source</a> for this task is the <a href=#media-element>media element</a>'s own
  <a href=#media-element-new-resource-task-source>media element new resource task source</a>.</p>

  <p>The DOM attributes <dfn id=dom-source-src title=dom-source-src><code>src</code></dfn>, <dfn id=dom-source-type title=dom-source-type><code>type</code></dfn>, and <dfn id=dom-source-media title=dom-source-media><code>media</code></dfn> must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>



  <h4 id=media-elements><span class=secno>4.8.10 </span>Media elements</h4>

  <p><dfn id=media-element title="media element">Media elements</dfn> implement the
  following interface:</p>

  <pre class=idl>interface <dfn id=htmlmediaelement>HTMLMediaElement</dfn> : <a href=#htmlelement>HTMLElement</a> {

  // error state
  readonly attribute <a href=#mediaerror>MediaError</a> <a href=#dom-media-error title=dom-media-error>error</a>;

  // network state
           attribute DOMString <a href=#dom-media-src title=dom-media-src>src</a>;
  readonly attribute DOMString <a href=#dom-media-currentsrc title=dom-media-currentSrc>currentSrc</a>;
  const unsigned short <a href=#dom-media-network_empty title=dom-media-NETWORK_EMPTY>NETWORK_EMPTY</a> = 0;
  const unsigned short <a href=#dom-media-network_idle title=dom-media-NETWORK_IDLE>NETWORK_IDLE</a> = 1;
  const unsigned short <a href=#dom-media-network_loading title=dom-media-NETWORK_LOADING>NETWORK_LOADING</a> = 2;
  const unsigned short <a href=#dom-media-network_loaded title=dom-media-NETWORK_LOADED>NETWORK_LOADED</a> = 3;
  readonly attribute unsigned short <a href=#dom-media-networkstate title=dom-media-networkState>networkState</a>;
  readonly attribute float <a href=#dom-media-bufferingrate title=dom-media-bufferingRate>bufferingRate</a>;
  readonly attribute boolean <a href=#dom-media-bufferingthrottled title=dom-media-bufferingThrottled>bufferingThrottled</a>;
  readonly attribute <a href=#timeranges>TimeRanges</a> <a href=#dom-media-buffered title=dom-media-buffered>buffered</a>;
  void <a href=#dom-media-load title=dom-media-load>load</a>();
  DOMString <a href=#dom-navigator-canplaytype title=dom-navigator-canPlayType>canPlayType</a>(in DOMString type);

  // ready state
  const unsigned short <a href=#dom-media-have_nothing title=dom-media-HAVE_NOTHING>HAVE_NOTHING</a> = 0;
  const unsigned short <a href=#dom-media-have_metadata title=dom-media-HAVE_METADATA>HAVE_METADATA</a> = 1;
  const unsigned short <a href=#dom-media-have_current_data title=dom-media-HAVE_CURRENT_DATA>HAVE_CURRENT_DATA</a> = 2;
  const unsigned short <a href=#dom-media-have_future_data title=dom-media-HAVE_FUTURE_DATA>HAVE_FUTURE_DATA</a> = 3;
  const unsigned short <a href=#dom-media-have_enough_data title=dom-media-HAVE_ENOUGH_DATA>HAVE_ENOUGH_DATA</a> = 4;
  readonly attribute unsigned short <a href=#dom-media-readystate title=dom-media-readyState>readyState</a>;
  readonly attribute boolean <a href=#dom-media-seeking title=dom-media-seeking>seeking</a>;

  // playback state
           attribute float <a href=#dom-media-currenttime title=dom-media-currentTime>currentTime</a>;
  readonly attribute float <a href=#dom-media-duration title=dom-media-duration>duration</a>;
  readonly attribute boolean <a href=#dom-media-paused title=dom-media-paused>paused</a>;
           attribute float <a href=#dom-media-defaultplaybackrate title=dom-media-defaultPlaybackRate>defaultPlaybackRate</a>;
           attribute float <a href=#dom-media-playbackrate title=dom-media-playbackRate>playbackRate</a>;
  readonly attribute <a href=#timeranges>TimeRanges</a> <a href=#dom-media-played title=dom-media-played>played</a>;
  readonly attribute <a href=#timeranges>TimeRanges</a> <a href=#dom-media-seekable title=dom-media-seekable>seekable</a>;
  readonly attribute boolean <a href=#dom-media-ended title=dom-media-ended>ended</a>;
           attribute boolean <a href=#dom-media-autoplay title=dom-media-autoplay>autoplay</a>;
           attribute boolean <a href=#dom-media-loop title=dom-media-loop>loop</a>;
  void <a href=#dom-media-play title=dom-media-play>play</a>();
  void <a href=#dom-media-pause title=dom-media-pause>pause</a>();

  // cue ranges
  void <a href=#dom-media-addcuerange title=dom-media-addCueRange>addCueRange</a>(in DOMString className, in DOMString id, in float start, in float end, in boolean pauseOnExit, in <a href=#cuerangecallback>CueRangeCallback</a> enterCallback, in <a href=#cuerangecallback>CueRangeCallback</a> exitCallback);
  void <a href=#dom-media-removecueranges title=dom-media-removeCueRanges>removeCueRanges</a>(in DOMString className);

  // controls
           attribute boolean <a href=#dom-media-controls title=dom-media-controls>controls</a>;
           attribute float <a href=#dom-media-volume title=dom-media-volume>volume</a>;
           attribute boolean <a href=#dom-media-muted title=dom-media-muted>muted</a>;
};

[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=cuerangecallback>CueRangeCallback</dfn> {
  void <span title=dom-CueRangeCallback-handleEvent>handleEvent</span>(in DOMString id);
};</pre>

  <p>The <dfn id=media-element-attributes>media element attributes</dfn>, <code title=attr-media-src><a href=#attr-media-src>src</a></code>, <code title=attr-media-autoplay><a href=#attr-media-autoplay>autoplay</a></code>, <code title=attr-media-loop><a href=#attr-media-loop>loop</a></code>, and <code title=attr-media-controls><a href=#attr-media-controls>controls</a></code>, apply to all <a href=#media-element title="media element">media elements</a>. They are defined in
  this section.</p>

  <!-- XXXv3 features:
    * frame forward / backwards / step(n) while paused
    * hasAudio, hasVideo, hasCaptions, etc
    * per-frame control: get current frame; set current frame
    * queue of content
      - pause current stream and insert content at front of queue to play immediately
      - pre-download another stream
      - add stream(s) to play at end of current stream
      - pause playback upon reaching a certain time
      - playlists, with the ability to get metadata out of them (e.g. xspf)
    * control over closed captions:
      - enable, disable, select language
      - event that sends caption text to script
    * in-band metadata and cue points to allow:
      - Chapter markers that synchronize to playback (without having to poll
        the playhead position)
      - Annotations on video content (i.e., pop-up video)
      - General custom metadata store (ratings, etc.)
    * notification of chapter labels changing on the fly:
      - onchapterlabelupdate, which has a time and a label
    * cue points that trigger at fixed intervals, so that
      e.g. animation can be synced with the video
    * general meta data, implemented as getters (don't expose the whole thing)
      - getMetadata(key: string, language: string) => HTMLImageElement or string
      - onmetadatachanged (no context info)
    * external captions support (request from John Foliot)
    * video: applying CSS filters 
    * an event to notify people of when the video size changes
      (e.g. for chained Ogg streams of multiple independent videos)
  -->

  <p><a href=#media-element title="media element">Media elements</a> are used to
  present audio data, or video and audio data, to the user. This is
  referred to as <dfn id=media-data>media data</dfn> in this section, since this
  section applies equally to <a href=#media-element title="media element">media
  elements</a> for audio or for video. The term <dfn id=media-resource>media
  resource</dfn> is used to refer to the complete set of media data,
  e.g. the complete video file, or complete audio file.</p>

  <p><a href=#media-element title="media element">Media elements</a> use two <a href=#task-queue title="task queue">task queues</a>, the <dfn id=media-element-event-task-source>media element event
  task source</dfn> for asynchronous events and callbacks, and the
  <dfn id=media-element-new-resource-task-source>media element new resource task source</dfn> for handling
  implicit loads. Unless otherwise specified, the <a href=#task-source>task
  source</a> for all the tasks <a href=#queue-a-task title="queue a
  task">queued</a> in this section and its subsections is the
  <a href=#media-element-event-task-source>media element event task source</a>.</p>


  <h5 id=error-codes><span class=secno>4.8.10.1 </span>Error codes</h5>

  <p>All <a href=#media-element title="media element">media elements</a> have an
  associated error status, which records the last error the element
  encountered since the <code title=dom-media-load><a href=#dom-media-load>load()</a></code>
  method was last invoked. The <dfn id=dom-media-error title=dom-media-error><code>error</code></dfn> attribute, on
  getting, must return the <code><a href=#mediaerror>MediaError</a></code> object created for
  this last error, or null if there has not been an error.</p>

  <pre class=idl>interface <dfn id=mediaerror>MediaError</dfn> {
  const unsigned short <a href=#dom-mediaerror-media_err_aborted title=dom-MediaError-MEDIA_ERR_ABORTED>MEDIA_ERR_ABORTED</a> = 1;
  const unsigned short <a href=#dom-mediaerror-media_err_network title=dom-MediaError-MEDIA_ERR_NETWORK>MEDIA_ERR_NETWORK</a> = 2;
  const unsigned short <a href=#dom-mediaerror-media_err_decode title=dom-MediaError-MEDIA_ERR_DECODE>MEDIA_ERR_DECODE</a> = 3;
  const unsigned short <a href=#dom-mediaerror-media_err_none_supported title=dom-MediaError-MEDIA_ERR_NONE_SUPPORTED>MEDIA_ERR_NONE_SUPPORTED</a> = 4;
  readonly attribute unsigned short <a href=#dom-mediaerror-code title=dom-MediaError-code>code</a>;
};</pre>

  <p>The <dfn id=dom-mediaerror-code title=dom-MediaError-code><code>code</code></dfn>
  attribute of a <code><a href=#mediaerror>MediaError</a></code> object must return the code
  for the error, which must be one of the following:</p>

  <dl><dt><dfn id=dom-mediaerror-media_err_aborted title=dom-MediaError-MEDIA_ERR_ABORTED><code>MEDIA_ERR_ABORTED</code></dfn> (numeric value 1)</dt>

   <dd>The fetching process for the <a href=#media-resource>media resource</a> was
   aborted by the user agent at the user's request.</dd>

   <dt><dfn id=dom-mediaerror-media_err_network title=dom-MediaError-MEDIA_ERR_NETWORK><code>MEDIA_ERR_NETWORK</code></dfn> (numeric value 2)</dt>

   <dd>A network error of some description caused the user agent to
   stop fetching the <a href=#media-resource>media resource</a>, after the resource
   was established to be usable.</dd>

   <dt><dfn id=dom-mediaerror-media_err_decode title=dom-MediaError-MEDIA_ERR_DECODE><code>MEDIA_ERR_DECODE</code></dfn> (numeric value 3)</dt>

   <dd>An error of some description occurred while decoding the
   <a href=#media-resource>media resource</a>, after the resource was established to
   be usable.</dd>

   <dt><dfn id=dom-mediaerror-media_err_none_supported title=dom-MediaError-MEDIA_ERR_NONE_SUPPORTED><code>MEDIA_ERR_NONE_SUPPORTED</code></dfn> (numeric value 4)</dt>

   <dd>No suitable <a href=#media-resource>media resource</a> could be found.</dd>

  </dl><h5 id=location-of-the-media-resource><span class=secno>4.8.10.2 </span>Location of the media resource</h5>

  <p>The <dfn id=attr-media-src title=attr-media-src><code>src</code></dfn> content
  attribute on <a href=#media-element title="media element">media elements</a> gives
  the address of the media resource (video, audio) to show. The
  attribute, if present, must contain a <a href=#valid-url>valid URL</a>.</p>

  <p>If the <code title=attr-media-src><a href=#attr-media-src>src</a></code> attribute of a
  <a href=#media-element>media element</a> that is already in a document and whose
  <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> is in the
  <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> state is
  added, changed, or removed, the user agent must <a href=#queue-a-task>queue a
  task</a> that implicitly invokes the <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method on the <a href=#media-element>media
  element</a>, and ignores any resulting exceptions. The <a href=#task-source>task
  source</a> for this task is the <a href=#media-element>media element</a>'s own
  <a href=#media-element-new-resource-task-source>media element new resource task source</a>.</p>

  <p class=note>If a <code title=attr-media-src><a href=#attr-media-src>src</a></code>
  attribute is specified, the resource it specifies is the <a href=#media-resource>media
  resource</a> that will be used. Otherwise, the resource specified
  by the first suitable <code><a href=#the-source-element>source</a></code> element child of the
  <a href=#media-element>media element</a> is the one used.</p>

  <p>The <dfn id=dom-media-src title=dom-media-src><code>src</code></dfn> DOM
  attribute on <a href=#media-element title="media element">media elements</a> must
  <a href=#reflect>reflect</a> the respective content attribute of the same
  name.</p>

  <p>The <dfn id=dom-media-currentsrc title=dom-media-currentSrc><code>currentSrc</code></dfn> DOM
  attribute is initially the empty string. Its value is changed by the
  algorithm for the <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method
  defined below.</p>

  <p>To <dfn id=generate-the-list-of-potential-media-resources>generate the list of potential media resources</dfn> for
  a <a href=#media-element>media element</a>, a user agent must use the following
  steps. These steps return a list of <a href=#absolute-url title="absolute
  URL">absolute URLs</a> giving a resource's address.</p>

  <ol><li>

    <p>If the <a href=#media-element>media element</a> has a <code title=attr-media-src><a href=#attr-media-src>src</a></code> attribute, then run these
    substeps:</p>

    <ol><li><p><a href=#resolve-a-url title="resolve a url">Resolve</a> the
     <a href=#url>URL</a> given in that attribute, relative to the
     <a href=#media-element>media element</a>.</p>

     <li><p>If that is successful, then return a list consisting of
     only one entry, the resulting <a href=#absolute-url>absolute URL</a> as the
     resource's address.</li>

     <li><p>Otherwise, return the empty list.</li>

     <li><p>Abort the algorithm.</li>

    </ol><p>Otherwise, the <code><a href=#the-source-element>source</a></code> elements will be used.</p>

   </li>

   <li><p>If the <a href=#media-element>media element</a> has no <code><a href=#the-source-element>source</a></code>
   element children, then return the empty the list and abort these
   steps.</li>

   <li><p>Let <var title="">result</var> be an empty list.</li>

   <li><p>Let <var title="">candidate</var> be the first
   <code><a href=#the-source-element>source</a></code> element child in the <a href=#media-element>media
   element</a>.</li>

   <li><p><i>Loop</i>: this is the start of the loop that looks at the
   <code><a href=#the-source-element>source</a></code> elements.</li>

   <li>

    <p>If all the following conditions are true:</p>

    <ul><li>The <var title="">candidate</var> element has a <code title=attr-source-src><a href=#attr-source-src>src</a></code> attribute.</li>

     <li><a href=#resolve-a-url title="resolve a url">Resolving</a> the
     <a href=#url>URL</a> given by the <var title="">candidate</var>
     element's <code title=attr-source-src><a href=#attr-source-src>src</a></code> attribute
     relative to <var title="">candidate</var> does not fail.</li>

     <li>The <var title="">candidate</var> element either has no <code title=attr-source-type><a href=#attr-source-type>type</a></code> attribute, or its <code title=attr-source-type><a href=#attr-source-type>type</a></code> attribute's value, when
     parsed as a MIME type (including any codecs described by the
     <code title="">codec</code> parameter), does not represent
     <a href=#a-type-that-the-user-agent-knows-it-cannot-render>a type that the user agent knows it cannot
     render</a>.</li>

     <li>The <var title="">candidate</var> element either has no <code title=attr-source-media><a href=#attr-source-media>media</a></code> attribute, or its <code title=attr-source-media><a href=#attr-source-media>media</a></code> attribute's value, when
     processed according to the rules for <a href=#mq>media
     queries</a>, matches the current environment. <a href=#refsMQ>[MQ]</a></li>

    </ul><p>...then append the <a href=#absolute-url>absolute URL</a> resulting from
    <a href=#resolve-a-url title="resolve a url">resolving</a> the <a href=#url>URL</a>
    given in that <var title="">candidate</var> element's <code title=attr-source-src><a href=#attr-source-src>src</a></code> attribute relative to <var title="">candidate</var> to the <var title="">result</var>
    list.</p>

   </li>

   <li><p>Let <var title="">candidate</var> be the next
   <code><a href=#the-source-element>source</a></code> element child in the <a href=#media-element>media
   element</a>, or null if there are no more such
   children.</li>

   <li><p>If <var title="">candidate</var> is not null, return to the
   step labeled <i>loop</i>.</li>

   <li><p>Return <var title="">result</var>.</li>

  </ol><h5 id=media-types><span class=secno>4.8.10.3 </span>Media types</h5>

  <p>A <a href=#media-resource>media resource</a> can be described in terms of its
  <em>type</em>, specifically a MIME type, optionally with a <code title="">codecs</code> parameter. <a href=#refsRFC2046>[RFC2046]</a> <a href=#refsRFC4281>[RFC4281]</a>.</p>

  <p>Types are usually somewhat incomplete descriptions; for example
  "<code title="">video/mpeg</code>" doesn't say anything except what
  the container type is, and even a type like "<code title="">video/mp4; codecs="avc1.42E01E,
  mp4a.40.2"</code>" doesn't include information like the actual
  bitrate (only the maximum bitrate). Thus, given a type, a user agent
  can often only know whether it <em>might</em> be able to play
  media of that type (with varying levels of confidence), or whether
  it definitely <em>cannot</em> play media of that type.</p>

  <p><dfn id=a-type-that-the-user-agent-knows-it-cannot-render>A type that the user agent knows it cannot render</dfn> is
  one that describes a resource that the user agent definitely does
  not support, for example because it doesn't recognise the container
  type, or it doesn't support the listed codecs.</p>

  <p>The <dfn id=dom-navigator-canplaytype title=dom-navigator-canPlayType><code>canPlayType(<var title="">type</var>)</code></dfn> method must return the string
  "<code title="">no</code>" if <var title="">type</var> is <a href=#a-type-that-the-user-agent-knows-it-cannot-render>a
  type that the user agent knows it cannot render</a>; it must
  return "<code title="">probably</code>" if the user agent is
  confident that the type represents a <a href=#media-resource>media resource</a>
  that it can render if used in with this <code><a href=#audio>audio</a></code> or
  <code><a href=#video>video</a></code> element; and it must return "<code title="">maybe</code>" otherwise. Implementors are encouraged to
  return "<code title="">maybe</code>" unless the type can be
  confidently established as being supported or not. Generally, a user
  agent should never return "<code title="">probably</code>" if the
  type doesn't have a <code title="">codecs</code> parameter.</p>

  <div class=example>

   <p>This script tests to see if the user agent supports a
   (fictional) new format to dynamically decide whether to use a
   <code><a href=#video>video</a></code> element or a plugin:</p>

   <pre>&lt;section id="video"&gt;
 &lt;p&gt;&lt;a href="playing-cats.nfv"&gt;Download video&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;script&gt;
 var videoSection = document.getElementById('video');
 var videoElement = document.createElement('video');
 var support = videoElement.canPlayType('video/x-new-fictional-format;codecs="kittens,bunnies"');
 if (support != "probably" &amp;&amp; "New Fictional Video Plug-in" in navigator.plugins) {
   // not confident of browser support
   // but we have a plugin
   // so use plugin instead
   videoElement = document.createElement("embed");
 } else if (support == "no") {
   // no support from browser and no plugin
   // do nothing
   videoElement = null;
 }
 if (videoElement) {
   while (videoSection.hasChildNodes())
     videoSection.removeChild(videoSection.firstChild);
   videoElement.setAttribute("src", "playing-cats.nfv");
   videoSection.appendChild(videoElement);
 }
&lt;/script&gt;</pre>

  </div>

  <p class=note>To express the type of a <a href=#media-resource>media resource</a>
  to allow the user agent to avoid downloading resources it can't
  render, authors can use the <code><a href=#the-source-element>source</a></code> element's <code title=attr-source-type><a href=#attr-source-type>type</a></code> attribute.</p>


  <h5 id=network-states><span class=secno>4.8.10.4 </span>Network states</h5>

  <p>As <a href=#media-element title="media element">media elements</a> interact
  with the network, their current network activity is represented by
  the <dfn id=dom-media-networkstate title=dom-media-networkState><code>networkState</code></dfn>
  attribute. On getting, it must return the current network state of
  the element, which must be one of the following values:</p>

  <dl><dt><dfn id=dom-media-network_empty title=dom-media-NETWORK_EMPTY><code>NETWORK_EMPTY</code></dfn> (numeric value 0)</dt>

   <dd>The element has not yet been initialized. All attributes are in
   their initial states.</dd>

   <dt><dfn id=dom-media-network_idle title=dom-media-NETWORK_IDLE><code>NETWORK_IDLE</code></dfn> (numeric value 1)</dt>

   <dd>The element's <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method
   algorithm is active, but it is not actually using the network at
   this time.</dd>

   <dt><dfn id=dom-media-network_loading title=dom-media-NETWORK_LOADING><code>NETWORK_LOADING</code></dfn> (numeric value 2)</dt>

   <dd>The user agent is actively trying to download data.</dd>

   <dt><dfn id=dom-media-network_loaded title=dom-media-NETWORK_LOADED><code>NETWORK_LOADED</code></dfn> (numeric value 3)</dt>

   <dd>The entire <a href=#media-resource>media resource</a> has been obtained and is
   available to the user agent locally. Network connectivity could be
   lost without affecting the media playback.</dd>

  </dl><p>The algorithm for the <code title=dom-media-load><a href=#dom-media-load>load()</a></code>
  method defined below describes exactly when the <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute changes
  value and what events fire to indicate changes in this state.</p>

  <p class=note>Some resources, e.g. streaming Web radio, can never
  reach the <code title=dom-media-NETWORK_LOADED><a href=#dom-media-network_loaded>NETWORK_LOADED</a></code> state.</p>


  <h5 id=loading-the-media-resource><span class=secno>4.8.10.5 </span>Loading the media resource</h5>

  <p>All <a href=#media-element title="media element">media elements</a> have a
  <dfn id=begun-flag>begun flag</dfn>, which must begin in the false state, and an
  <dfn id=autoplaying-flag>autoplaying flag</dfn>, which must begin in the true state.</p>

  <p>When the <dfn id=dom-media-load title=dom-media-load><code>load()</code></dfn>
  method on a <a href=#media-element>media element</a> is invoked, the user agent
  must run the following steps. Note that this algorithm might get
  aborted, e.g. if the <code title=dom-media-load><a href=#dom-media-load>load()</a></code>
  method itself is invoked again.</p>

  <ol><li>

    <p>If there are any <a href=#concept-task title=concept-task>tasks</a> from
    the <a href=#media-element>media element</a>'s <a href=#media-element-new-resource-task-source>media element new resource
    task source</a> or its <a href=#media-element-event-task-source>media element event task
    source</a> in one of the <a href=#task-queue title="task queue">task
    queues</a>, then remove those tasks.</p>

    <p class=note>Basically, pending events, callbacks, and loads
    for the media element are discarded when the media element starts
    loading a new resource.</p>

   </li>

   <li><p>Abort any already-running instance of this algorithm for
   this element. If those method calls have not yet returned, they
   must finish the step they are on, and then immediately return. This
   is not blocking; this algorithm must not wait for the earlier
   instances to abort before continuing.</li>

   <li><p>If the element's <a href=#begun-flag>begun flag</a> is true, then set
   the <a href=#begun-flag>begun flag</a> to false, set the <code title=dom-media-error><a href=#dom-media-error>error</a></code> attribute to a new
   <code><a href=#mediaerror>MediaError</a></code> object whose <code title=dom-MediaError-code><a href=#dom-mediaerror-code>code</a></code> attribute is set to <code title=dom-MediaError-MEDIA_ERR_ABORTED><a href=#dom-mediaerror-media_err_aborted>MEDIA_ERR_ABORTED</a></code>,
   and <a href=#fire-a-progress-event>fire a progress event</a> called <code title=event-abort><a href=#event-abort>abort</a></code> at the <a href=#media-element>media
   element</a>.</li>

   <li><p>Set the <code title=dom-media-error><a href=#dom-media-error>error</a></code> attribute
   to null and the <a href=#autoplaying-flag>autoplaying flag</a> to true.</li>

   <li><p>Set the <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> attribute to the
   value of the <code title=dom-media-defaultPlaybackRate><a href=#dom-media-defaultplaybackrate>defaultPlaybackRate</a></code>
   attribute.</li>

   <li><p>If the <a href=#media-element>media element</a>'s <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> is not set to
   <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code>, then
   run these substeps:</p>

    <ol><li><p>If a fetching process is in progress for the <a href=#media-element>media
     element</a>, the user agent should stop it.</li>

     <!--<li>Let <var title="">events</var> be a list of event names,
     initially empty.</li>-->

     <li>Set the <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute to
     <a href=#dom-media-network_empty title=dom-media-NETWORK_EMPTY>NETWORK_EMPTY</a><!--,
     and add <code title="event-emptied">emptied</code> to the <var
     title="">events</var> list-->.</li>

     <li>If <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> is
     not set to <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code>, then set it
     to that state<!-- and add <code
     title="event-dataunavailable">dataunavailable</code> to the <var
     title="">events</var> list-->.</li>

     <li>If the <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> attribute
     is false, then set to true<!--, and add <code
     title="event-pause">pause</code> to the <var
     title="">events</var> list-->.</li>

     <li>If <code title=dom-media-seeking><a href=#dom-media-seeking>seeking</a></code> is true,
     set it to false.</li>

     <li>Set the <a href=#current-playback-position>current playback position</a> to 0.</li>

     <!--<li><span>Fire a simple event</span> at the <span>media
     element</span> for each event name in <var title="">events</var>,
     in the same order that they were added to that list.</li>-->

     <li><a href=#fire-a-simple-event>Fire a simple event</a> called <code title=event-emptied><a href=#event-emptied>emptied</a></code> at the <a href=#media-element>media
     element</a>.</li>

    </ol></li>

   <li><p><a href=#generate-the-list-of-potential-media-resources>Generate the list of potential media resources</a>
   and let the resulting list be <var title="">candidates</var>.</li>

   <li><p>Set the <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> to <code title=dom-media-NETWORK_LOADING><a href=#dom-media-network_loading>NETWORK_LOADING</a></code>.</li>

   <li><p>Set the <a href=#begun-flag>begun flag</a> to true and <a href=#queue-a-task>queue a
   task</a> to <a href=#fire-a-progress-event>fire a progress event</a> called <code title=event-loadstart><a href=#event-loadstart>loadstart</a></code> at the <a href=#media-element>media
   element</a>.</li>

   <li>

    <p>The method must return, but these steps must continue.</p>

    <p class=note>Playback of any previously playing <a href=#media-resource>media
    resource</a> for this element stops.</p>

   </li>


   <!-- SYNCHRONOUS / ASYNCHRONOUS BOUNDARY FOR EVENT DISPATCH -->


   <li>

    <p><i>Candidate loop</i>: For each item in <var title="">candidates</var>, if any, and in the same order as they
    were added to the list, run the following steps:</p>

    <ol><li><p>Let the <var title="">current media resource</var> be the
     resource given by the <a href=#absolute-url>absolute URL</a> for the current
     item in <var title="">candidates</var>. This is now the element's
     <a href=#media-resource>media resource</a>.</li>

     <li><p>Set the <code title=dom-media-currentSrc><a href=#dom-media-currentsrc>currentSrc</a></code> attribute to the
     <a href=#absolute-url>absolute URL</a> of the <var title="">current media
     resource</var>.</li>

     <li>

      <p>Begin to <a href=#fetch>fetch</a> the <var title="">current media
      resource</var>.</p>

      <p>Every 350ms (&plusmn;200ms) or for every byte received,
      whichever is <em>least</em> frequent, <a href=#queue-a-task>queue a task</a>
      to <a href=#fire-a-progress-event>fire a progress event</a> called <code title=event-progress><a href=#event-progress>progress</a></code> at the element.</p>

      <p>If at any point the user agent has received no data for more
      than about three seconds, then <a href=#queue-a-task>queue a task</a> to
      <a href=#fire-a-progress-event>fire a progress event</a> called <code title=event-stalled><a href=#event-stalled>stalled</a></code> at the element.</p>

      <p>User agents may allow users to selectively block or slow
      <a href=#media-data>media data</a> downloads. When a <a href=#media-element>media
      element</a>'s download has been blocked altogether, the user
      agent must act as if it was stalled (as opposed to acting as if
      the connection was closed). The rate of the download may also be
      throttled automatically by the user agent, e.g. to balance the
      download with other connections sharing the same bandwidth.</p>

      <p>User agents may decide to not download more content at any
      time, e.g. after buffering five minutes of a one hour media
      resource, while waiting for the user to decide whether to play
      the resource or not, or while waiting for user input in an
      interactive resource. When a <a href=#media-element>media element</a>'s
      download has been suspended, the user agent must set the <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> to <code title=dom-media-NETWORK_IDLE><a href=#dom-media-network_idle>NETWORK_IDLE</a></code> and
      <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-progress-event>fire a progress event</a>
      called <code title=event-suspend><a href=#event-suspend>suspend</a></code> at the
      element. If and when downloading of the resource resumes, the
      user agent must set the <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> to <code title=dom-media-NETWORK_LOADING><a href=#dom-media-network_loading>NETWORK_LOADING</a></code>.</p>

      <p>The user agent may use whatever means necessary to fetch the
      resource (within the constraints put forward by this and other
      specifications); for example, reconnecting to the server in the
      face of network errors, using HTTP partial range requests, or
      switching to a streaming protocol. The user agent must consider a
      resource erroneous only if it has given up trying to fetch it.</p>

      <p>The <a href=#networking-task-source>networking task source</a> <a href=#concept-task title=concept-task>tasks</a> to process the data as it is
      being fetched must, when appropriate, include the relevant
      substeps from the following list:</p>

      <dl class=switch><dt>If the <a href=#media-data>media data</a> cannot be fetched at all, due
       to network errors, causing the user agent to give up trying to
       fetch the resource</dt>

       <dt>If the <a href=#media-data>media data</a> can be fetched but is in an
       unsupported format, or can otherwise not be rendered at
       all</dt>

       <dd>

        <p>DNS errors, HTTP 4xx and 5xx errors (and equivalents in
        other protocols), and other fatal network errors that occur
        before the user agent has established whether the <var title="">current media resource</var> is usable, as well as
        the file using an unsupported container format, or using
        unsupported codecs for all the data, must cause the user agent
        to execute the following steps:</p>

        <ol><li><p>The user agent should cancel the fetching
         process.</li>

         <li><p>If there are more items in the <var title="">candidates</var> list, then move on to the next one,
         jumping back to the top of the <i>candidate loop</i>;
         otherwise, jump to the final step in the overall algorithm
         (the <i>failure step</i>).</p>

        </ol></dd>


       <dt id=getting-media-metadata>Once enough of the <a href=#media-data>media
       data</a> has been fetched to determine the duration of the
       <a href=#media-resource>media resource</a>, its dimensions, and other
       metadata</dt>

       <dd>

        <p>This indicates that the resource is usable. The user agent
        must follow these substeps:</p>

        <ol><li><p>Set the <a href=#current-playback-position>current playback position</a> to the
         <var><a href=#earliest-possible-position>earliest possible position</a></var>.</li>

         <li><p>Set the <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute to
         <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code>.</li>

         <li><p>For <code><a href=#video>video</a></code> elements, set the <code title=dom-video-videoWidth><a href=#dom-video-videowidth>videoWidth</a></code> and <code title=dom-video-videoHeight><a href=#dom-video-videoheight>videoHeight</a></code>
         attributes.</li>

         <li>

          <p>Set the <code title=dom-media-duration><a href=#dom-media-duration>duration</a></code>
          attribute to the duration of the resource.</p>

          <p class=note>The user agent <a href=#durationChange>will</a> <a href=#queue-a-task>queue a task</a> to
          <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-durationchange><a href=#event-durationchange>durationchange</a></code> at the
          element at this point.</p>

         </li>

         <li id=fire-loadedmetadata><p><a href=#queue-a-task>Queue a task</a> to
         <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-loadedmetadata><a href=#event-loadedmetadata>loadedmetadata</a></code> at the
         element.</li>

         <li>

          <p>If either the <a href=#media-resource>media resource</a> or the address
          of the <var title="">current media resource</var> indicate a
          particular start time, then <a href=#dom-media-seek title=dom-media-seek>seek</a> to that time. Ignore any
          resulting exceptions (if the position is out of range, it is
          effectively ignored).</p>

          <p class=example>For example, a fragment identifier could be
          used to indicate a start position.</p>

         </li>

        </ol><p class=note>The user agent is <em>required</em> to
        determine the duration of the <a href=#media-resource>media resource</a> and
        go through this step before playing.</p> <!-- actually defined
        in the 'duration' section -->

       </dd>


       <dt>If the connection is interrupted, causing the user agent to
       give up trying to fetch the resource</dt>

       <dd>

        <p>Fatal network errors that occur after the user agent has
        established whether the <var title="">current media
        resource</var> is usable must cause the user agent to execute
        the following steps:</p>

        <ol><li>The user agent should cancel the fetching process.</li>

         <li>Set the <code title=dom-media-error><a href=#dom-media-error>error</a></code>
         attribute to a new <code><a href=#mediaerror>MediaError</a></code> object whose <code title=dom-MediaError-code><a href=#dom-mediaerror-code>code</a></code> attribute is set to
         <code title=dom-MediaError-MEDIA_ERR_NETWORK><a href=#dom-mediaerror-media_err_network>MEDIA_ERR_NETWORK</a></code>.</li>

         <li>Set the <a href=#begun-flag>begun flag</a> to false and <a href=#queue-a-task>queue
         a task</a> to <a href=#fire-a-progress-event>fire a progress event</a> called
         <code title=event-error><a href=#event-error>error</a></code> at the <a href=#media-element>media
         element</a>.</li>

         <li>Set the element's <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute
         to the <a href=#dom-media-network_empty title=dom-media-NETWORK_EMPTY>NETWORK_EMPTY</a> value
         and <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
         event</a> called <code title=event-emptied><a href=#event-emptied>emptied</a></code> at the element.</li>

         <li>Abort the overall <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method algorithm.</li>

        </ol></dd>

       <dt id=fatal-decode-error>If the <a href=#media-data>media data</a> is
       corrupted</dt>

       <dd>

        <p>Fatal errors in decoding the <a href=#media-data>media data</a> that
        occur after the user agent has established whether the <var title="">current media resource</var> is usable must cause the
        user agent to execute the following steps:</p>

        <ol><li>The user agent should cancel the fetching process.</li>

         <li>Set the <code title=dom-media-error><a href=#dom-media-error>error</a></code>
         attribute to a new <code><a href=#mediaerror>MediaError</a></code> object whose <code title=dom-MediaError-code><a href=#dom-mediaerror-code>code</a></code> attribute is set to
         <code title=dom-MediaError-MEDIA_ERR_DECODE><a href=#dom-mediaerror-media_err_decode>MEDIA_ERR_DECODE</a></code>.</li>

         <li>Set the <a href=#begun-flag>begun flag</a> to false and <a href=#queue-a-task>queue
         a task</a> to <a href=#fire-a-progress-event>fire a progress event</a> called
         <code title=event-error><a href=#event-error>error</a></code> at the <a href=#media-element>media
         element</a>.</li>

         <li>Set the element's <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute
         to the <a href=#dom-media-network_empty title=dom-media-NETWORK_EMPTY>NETWORK_EMPTY</a> value
         and <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
         event</a> called <code title=event-emptied><a href=#event-emptied>emptied</a></code> at the element.</li>

         <li>Abort the overall <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method algorithm.</li>

        </ol></dd>

       <dt>If the <a href=#media-data>media data</a> fetching process is aborted by
       the user</dt>

       <dd>

        <p>The fetching process is aborted by the user, e.g. because
        the user navigated the browsing context to another page, the
        user agent must execute the following steps. These steps are
        not followed if the <code title=dom-media-load><a href=#dom-media-load>load()</a></code>
        method itself is reinvoked, as the steps above handle that
        particular kind of abort.</p>

        <ol><li>The user agent should cancel the fetching process.</li>

         <li>Set the <code title=dom-media-error><a href=#dom-media-error>error</a></code>
         attribute to a new <code><a href=#mediaerror>MediaError</a></code> object whose <code title=dom-MediaError-code><a href=#dom-mediaerror-code>code</a></code> attribute is set to
         <code title=dom-MediaError-MEDIA_ERR_ABORT>MEDIA_ERR_ABORT</code>.</li>

         <li>Set the <a href=#begun-flag>begun flag</a> to false and <a href=#queue-a-task>queue
         a task</a> to <a href=#fire-a-progress-event>fire a progress event</a> called
         <code title=event-abort><a href=#event-abort>abort</a></code> at the <a href=#media-element>media
         element</a>.</li>

         <li>If the <a href=#media-element>media element</a>'s <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute has
         a value equal to <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code>, set the
         element's <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute
         to the <a href=#dom-media-network_empty title=dom-media-NETWORK_EMPTY>NETWORK_EMPTY</a> value
         and <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
         event</a> called <code title=event-emptied><a href=#event-emptied>emptied</a></code> at the element. (If the
         <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code>
         attribute has a value greater than <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code>, then this
         doesn't happen; the available data, if any, will be
         playable.)</li>

         <li>Abort the overall <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method algorithm.</li>

        </ol></dd>

       <dt id=non-fatal-media-error>If the <a href=#media-data>media data</a> can
       be fetched but has non-fatal errors or uses, in part, codecs that
       are unsupported, preventing the user agent from rendering the
       content completely correctly but not preventing playback
       altogether</dt>

       <dd>

        <p>The server returning data that is partially usable but cannot
        be optimally rendered must cause the user agent to execute the
        following steps.</p>

        <ol><li class=XXX>Should we fire a 'warning' event? Set the
         'error' flag to 'MEDIA_ERR_SUBOPTIMAL' or something?</li>

        </ol></dd>

      </dl><p>When the user agent has completely fetched of the entire
      <a href=#media-resource>media resource</a>, it must move on to the next
      step. This might never happen, e.g. when streaming an infinite
      resource such as Web radio.</p>

     </li>

     <li><p>If the fetching process completes without errors, then set
     the <a href=#begun-flag>begun flag</a> to false, set the <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute to
     <code title=dom-media-NETWORK_LOADED><a href=#dom-media-network_loaded>NETWORK_LOADED</a></code>, and
     <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-progress-event>fire a progress event</a>
     called <code title=event-load><a href=#event-load>load</a></code> at the
     element.</li>

     <li>Then, abort the overall <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method algorithm.</li>

    </ol></li>

   <li>

    <p><i>Failure step</i>: No usable resource was found. Run the
    following steps:</p>

    <ol><li>Set the <code title=dom-media-error><a href=#dom-media-error>error</a></code> attribute
     to a new <code><a href=#mediaerror>MediaError</a></code> object whose <code title=dom-MediaError-code><a href=#dom-mediaerror-code>code</a></code> attribute is set to <code title=dom-MediaError-MEDIA_ERR_NONE_SUPPORTED><a href=#dom-mediaerror-media_err_none_supported>MEDIA_ERR_NONE_SUPPORTED</a></code>.</li>

     <li>Set the <a href=#begun-flag>begun flag</a> to false and <a href=#queue-a-task>queue a
     task</a> to <a href=#fire-a-progress-event>fire a progress event</a> called <code title=event-error><a href=#event-error>error</a></code> at the <a href=#media-element>media
     element</a>.</li>

     <li>Set the element's <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute to
     the <a href=#dom-media-network_empty title=dom-media-NETWORK_EMPTY>NETWORK_EMPTY</a>
     value and <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
     event</a> called <code title=event-emptied><a href=#event-emptied>emptied</a></code> at
     the element.</li>

    </ol></li>

  </ol><p>If a <a href=#media-element>media element</a> whose <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> has the value
  <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> is <a href=#insert-an-element-into-a-document title="insert an element into a document">inserted into a
  document</a>, the user agent must <a href=#queue-a-task>queue a task</a> that
  implicitly invokes the <code title=dom-media-load><a href=#dom-media-load>load()</a></code>
  method on the <a href=#media-element>media element</a>, and ignores any resulting
  exceptions. The <a href=#task-source>task source</a> for this task is the
  <a href=#media-element>media element</a>'s own <a href=#media-element-new-resource-task-source>media element new resource
  task source</a>.</p>

  <p>The <dfn id=dom-media-bufferingrate title=dom-media-bufferingRate><code>bufferingRate</code></dfn>
  attribute must return the average number of bits received per second
  for the current download over the past few seconds. If there is no
  download in progress, the attribute must return 0.</p>

  <p>The <dfn id=dom-media-bufferingthrottled title=dom-media-bufferingThrottled><code>bufferingThrottled</code></dfn>
  attribute must return true if the user agent is intentionally
  throttling the bandwidth used by the download (including when
  throttling to zero to pause the download altogether), and false
  otherwise.</p>

  <p>The <dfn id=dom-media-buffered title=dom-media-buffered><code>buffered</code></dfn>
  attribute must return a new static <a href=#normalized-timeranges-object>normalized
  <code>TimeRanges</code> object</a> that represents the ranges of
  the <a href=#media-resource>media resource</a>, if any, that the user agent has
  buffered, at the time the attribute is evaluated. Users agents must
  accurately determine the ranges available, even for media streams
  where this can only be determined by tedious inspection.</p>

  <p class=note>Typically this will be a single range anchored at
  the zero point, but if, e.g. the user agent uses HTTP range requests
  in response to seeking, then there could be multiple ranges.</p>

  <p>User agents may discard previously buffered data.</p>

  <p class=note>Thus, a time position included within a range of the
  objects return by the <code title=dom-media-buffered><a href=#dom-media-buffered>buffered</a></code> attribute at one time can
  end up being not included in the range(s) of objects returned by the
  same attribute at later times.</p>



  <h5 id=offsets-into-the-media-resource><span class=secno>4.8.10.6 </span>Offsets into the media resource</h5>

  <p>The <dfn id=dom-media-duration title=dom-media-duration><code>duration</code></dfn>
  attribute must return the length of the <a href=#media-resource>media resource</a>,
  in seconds. If no <a href=#media-data>media data</a> is available, then the
  attributes must return the Not-a-Number (NaN) value. If the
  <a href=#media-resource>media resource</a> is known to be unbounded (e.g. a
  streaming radio), then the attribute must return the positive
  Infinity value.</p>

  <p>The user agent must determine the duration of the <a href=#media-resource>media
  resource</a> before playing any part of the <a href=#media-data>media
  data</a> and before setting <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> to a value equal to
  or greater than <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code>, even if doing
  so requires seeking to multiple parts of the resource.</p>

  <p id=durationChange>When the length of the <a href=#media-resource>media
  resource</a> changes (e.g. from being unknown to known, or from a
  previously established length to a new length) the user agent must
  <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called
  <code title=event-durationchange><a href=#event-durationchange>durationchange</a></code> at the
  <a href=#media-element>media element</a>.</p>

  <p class=example>If an "infinite" stream ends for some reason,
  then the duration would change from positive Infinity to the time of
  the last frame or sample in the stream, and the <code title=event-durationchange><a href=#event-durationchange>durationchange</a></code> event would be
  fired. Similarly, if the user agent initially estimated the
  <a href=#media-resource>media resource</a>'s duration instead of determining it
  precisely, and later revises the estimate based on new information,
  then the duration would change and the <code title=event-durationchange><a href=#event-durationchange>durationchange</a></code> event would be
  fired.</p>

  <p><a href=#media-element title="media element">Media elements</a> have a
  <dfn id=current-playback-position>current playback position</dfn>, which must initially be
  zero. The current position is a time.</p>

  <p>The <dfn id=dom-media-currenttime title=dom-media-currentTime><code>currentTime</code></dfn>
  attribute must, on getting, return the <a href=#current-playback-position>current playback
  position</a>, expressed in seconds. On setting, the user agent
  must <a href=#dom-media-seek title=dom-media-seek>seek</a> to the new value
  (which might raise an exception).</p>

  <p>If the <a href=#media-resource>media resource</a> is a streaming resource, then
  the user agent might be unable to obtain certain parts of the
  resource after it has expired from its buffer. The
  <dfn id=earliest-possible-position><var>earliest possible position</var></dfn> is the earliest
  position in the stream that the user agent can ever obtain
  again.</p>

  <p>When the <var><a href=#earliest-possible-position>earliest possible position</a></var> changes, if the
  the <a href=#current-playback-position>current playback position</a> is before the
  <var><a href=#earliest-possible-position>earliest possible position</a></var>, the user agent must <a href=#dom-media-seek title=dom-media-seek>seek</a> to the <var><a href=#earliest-possible-position>earliest possible
  position</a></var>.</p>

  <p>The <dfn id=attr-media-loop title=attr-media-loop><code>loop</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a> that, if specified,
  indicates that the <a href=#media-element>media element</a> is to seek back to the
  start of the <a href=#media-resource>media resource</a> upon reaching the end.</p>

  <p>The <dfn id=dom-media-loop title=dom-media-loop><code>loop</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>



  <h5 id=the-ready-states><span class=secno>4.8.10.7 </span>The ready states</h5>

  <p><a href=#media-element title="media element">Media elements</a> have a
  <i>ready state</i>, which describes to what degree they are ready
  to be rendered at the <a href=#current-playback-position>current playback position</a>. The
  possible values are as follows; the ready state of a media element
  at any particular time is the greatest value describing the state of
  the element:</p>

  <dl><dt><dfn id=dom-media-have_nothing title=dom-media-HAVE_NOTHING><code>HAVE_NOTHING</code></dfn> (numeric value 0)</dt>

   <dd>No information regardig the <a href=#media-resource>media resource</a> is
   available. No data for the <a href=#current-playback-position>current playback position</a>
   is available. <a href=#media-element title="media element">Media elements</a>
   whose <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code>
   attribute is <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> are always in
   the <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code>
   state.</dd>

   <dt><dfn id=dom-media-have_metadata title=dom-media-HAVE_METADATA><code>HAVE_METADATA</code></dfn> (numeric value 1)</dt>

   <dd>Enough of the resource has been obtained that the duration of
   the resource is available. In the case of a <code><a href=#video>video</a></code>
   element, the dimensions of the video are also available. The API
   will no longer raise an exception when seeking. No <a href=#media-data>media
   data</a> is available for the immediate <a href=#current-playback-position>current playback
   position</a>.</dd>

   <dt><dfn id=dom-media-have_current_data title=dom-media-HAVE_CURRENT_DATA><code>HAVE_CURRENT_DATA</code></dfn> (numeric value 2)</dt>

   <dd>Data for the immediate <a href=#current-playback-position>current playback position</a>
   is available, but not enough data is available that the user agent
   could successfully advance the <a href=#current-playback-position>current playback
   position</a> at all without immediately reverting to the <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> state. For
   example, in video this corresponds to the user agent having data
   from the current frame, but not the next frame.</dd>

   <dt><dfn id=dom-media-have_future_data title=dom-media-HAVE_FUTURE_DATA><code>HAVE_FUTURE_DATA</code></dfn> (numeric value 3)</dt>

   <dd>Data for the immediate <a href=#current-playback-position>current playback position</a>
   is available, as well as enough data for the user agent to advance
   the <a href=#current-playback-position>current playback position</a> at least a little
   without immediately reverting to the <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> state. For
   example, In video this corresponds to the user agent having data
   for at least the current frame and the next frame.</dd>

   <dt><dfn id=dom-media-have_enough_data title=dom-media-HAVE_ENOUGH_DATA><code>HAVE_ENOUGH_DATA</code></dfn> (numeric value 4)</dt>

   <dd>Data for the immediate <a href=#current-playback-position>current playback position</a>
   is available, as well as enough data for the user agent to advance
   the <a href=#current-playback-position>current playback position</a> at least a little
   without immediately reverting to the <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> state, and,
   in addition, the user agent estimates that data is being fetched at
   a rate where the <a href=#current-playback-position>current playback position</a>, if it were
   to advance at the rate given by the <code title=dom-media-defaultPlaybackRate><a href=#dom-media-defaultplaybackrate>defaultPlaybackRate</a></code>
   attribute, would not overtake the available data before playback
   reaches the end of the <a href=#media-resource>media resource</a>.</dd>

  </dl><p>When the ready state of a <a href=#media-element>media element</a> whose <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> is not <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> changes, the
  user agent must follow the steps given below:</p>

  <dl class=switch><!-- going up to metadata --><dt>If the prevous ready state was <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code>, and the new
   ready state is <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code></dt>

   <dd>

    <p class=note>A <code title=event-loadedmetadata><a href=#event-loadedmetadata>loadedmetadata</a></code> DOM event <a href=#fire-loadedmetadata>will be fired</a> as part of the <code title=dom-event-load>load()</code> algorithm.</p>

   </dd>

   <!-- going up to current for the first time -->

   <dt id=handling-first-frame-available>If the prevous ready state
   was <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> and
   the new ready state is <code title=dom-media-HAVE_CURRENT_DATA><a href=#dom-media-have_current_data>HAVE_CURRENT_DATA</a></code></dt>

   <dd>

    <p id=fire-loadeddata>If this is the first time this occurs for
    this <a href=#media-element>media element</a> since the <code title=dom-event-load>load()</code> algorithm was last invoked,
    the user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a
    simple event</a> called <code title=event-loadeddata><a href=#event-loadeddata>loadeddata</a></code> at the element.</p>

   </dd>

   <!-- going down -->
   <dt>If the prevous ready state was <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code> or more,
   and the new ready state is <code title=dom-media-HAVE_CURRENT_DATA><a href=#dom-media-have_current_data>HAVE_CURRENT_DATA</a></code> or
   less</dt>

   <dd>

    <p class=note>A <code title=event-waiting><a href=#event-waiting>waiting</a></code> DOM
    event <a href=#fire-waiting-when-waiting>can be fired</a>,
    depending on the current state of playback.</p>

   </dd>

   <!-- going up to future -->
   <dt>If the prevous ready state was <code title=dom-media-HAVE_CURRENT_DATA><a href=#dom-media-have_current_data>HAVE_CURRENT_DATA</a></code> or
   less, and the new ready state is <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code></dt>

   <dd>

    <p>The user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a
    simple event</a> called <code title=event-canplay><a href=#event-canplay>canplay</a></code>.</p>

    <p>If the element is <a href=#potentially-playing>potentially playing</a>, the user
    agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
    event</a> called <code title=event-playing><a href=#event-playing>playing</a></code>.</p>

   </dd>

   <!-- going up to enough -->
   <dt>If the new ready state is <code title=dom-media-HAVE_ENOUGH_DATA><a href=#dom-media-have_enough_data>HAVE_ENOUGH_DATA</a></code></dt>

   <dd>

    <p>The user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a
    simple event</a> called <code title=event-canplay><a href=#event-canplay>canplay</a></code>, and then <a href=#queue-a-task>queue a
    task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-canplaythrough><a href=#event-canplaythrough>canplaythrough</a></code>.</p>

    <p>If the <a href=#autoplaying-flag>autoplaying flag</a> is true, and the <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> attribute is true, and the
    <a href=#media-element>media element</a> has an <code title=attr-media-autoplay><a href=#attr-media-autoplay>autoplay</a></code> attribute specified,
    then the user agent may also set the <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> attribute to false and
    <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
    called <code title=event-play><a href=#event-play>play</a></code>.</p>

    <p class=note>User agents are not required to autoplay, and it
    is suggested that user agents honor user preferences on the
    matter. Authors are urged to use the <code title=attr-media-autoplay><a href=#attr-media-autoplay>autoplay</a></code> attribute rather than
    using script to force the video to play, so as to allow the user
    to override the behavior if so desired.</p>

    <p>If the element is now <a href=#potentially-playing>potentially playing</a>, and the
    previous ready state was not <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code>, the
    user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
    event</a> called <code title=event-playing><a href=#event-playing>playing</a></code>.</p>

   </dd>

  </dl><p class=note>It is possible for the ready state of a media
  element to jump between these states discontinuously. For example,
  the state of a media element can jump straight from <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> to <code title=dom-media-HAVE_ENOUGH_DATA><a href=#dom-media-have_enough_data>HAVE_ENOUGH_DATA</a></code> without
  passing through the <code title=dom-media-HAVE_CURRENT_DATA><a href=#dom-media-have_current_data>HAVE_CURRENT_DATA</a></code> and
  <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code>
  states.</p>

  <p>The <dfn id=dom-media-readystate title=dom-media-readyState><code>readyState</code></dfn> DOM
  attribute must, on getting, return the value described above that
  describes the current ready state of the <a href=#media-element>media
  element</a>.</p>

  <p>The <dfn id=attr-media-autoplay title=attr-media-autoplay><code>autoplay</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. When present, the
  algorithm described herein will cause the user agent to
  automatically begin playback of the <a href=#media-resource>media resource</a> as
  soon as it can do so without stopping.</p>

  <p>The <dfn id=dom-media-autoplay title=dom-media-autoplay><code>autoplay</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>





  <h5 id=cue-ranges><span class=secno>4.8.10.8 </span>Cue ranges</h5>

  <p><a href=#media-element title="media element">Media elements</a> have a set of
  <dfn id=cue-range title="cue range">cue ranges</dfn>. Each cue range is made up
  of the following information:</p>

  <dl><dt>A class name</dt>
   <dd>A group of related ranges can be given the same class name so
   that they can all be removed at the same time.</dd>

   <dt>An identifier<dt>
   </dt><dd>A string can be assigned to each cue range for identification
   by script. The string need not be unique and can contain any
   value.</dd>

   <dt>A start time</dt>
   <dt>An end time</dt>
   <dd>The actual time range, using the same timeline as the
   <a href=#media-resource>media resource</a> itself.</dd>

   <dt>A "pause" boolean</dt>
   <dd>A flag indicating whether to pause playback on exit.</dd>

   <dt>An "enter" callback</dt>
   <dd>A callback that is called when the <a href=#current-playback-position>current playback
   position</a> enters the range.</dd>

   <dt>An "exit" callback</dt>
   <dd>A callback that is called when the <a href=#current-playback-position>current playback
   position</a> exits the range.</dd>

   <dt>An "active" boolean</dt>
   <dd>A flag indicating whether the range is active or not.</dd>

  </dl><p>The <dfn id=dom-media-addcuerange title=dom-media-addCueRange><code>addCueRange(<var title="">className</var>, <var title="">id</var>, <var title="">start</var>, <var title="">end</var>, <var title="">pauseOnExit</var>, <var title="">enterCallback</var>, <var title="">exitCallback</var>)</code></dfn> method must, when called,
  add a <a href=#cue-range>cue range</a> to the <a href=#media-element>media element</a>, that
  cue range having the class name <var title="">className</var>, the
  identifier <var title="">id</var>, the start time <var title="">start</var> (in seconds), the end time <var title="">end</var> (in seconds), the "pause" boolean with the same
  value as <var title="">pauseOnExit</var>, the "enter" callback <var title="">enterCallback</var>, the "exit" callback <var title="">exitCallback</var>, and an "active" boolean that is true if
  the <a href=#current-playback-position>current playback position</a> is equal to or greater
  than the start time and less than the end time, and false
  otherwise.</p>

  <p>The <dfn id=dom-media-removecueranges title=dom-media-removeCueRanges><code>removeCueRanges(<var title="">className</var>)</code></dfn> method must, when called,
  remove all the <a href=#cue-range title="cue range">cue ranges</a> of the
  <a href=#media-element>media element</a> which have the class name <var title="">className</var>.</p>



  <h5 id=playing-the-media-resource><span class=secno>4.8.10.9 </span>Playing the media resource</h5>

  <p>The <dfn id=dom-media-paused title=dom-media-paused><code>paused</code></dfn>
  attribute represents whether the <a href=#media-element>media element</a> is
  paused or not. The attribute must initially be true.</p>

  <p>A <a href=#media-element>media element</a> is said to be <dfn id=potentially-playing>potentially
  playing</dfn> when its <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code>
  attribute is false, the <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute is either
  <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code> or
  <code title=dom-media-HAVE_ENOUGH_DATA><a href=#dom-media-have_enough_data>HAVE_ENOUGH_DATA</a></code>,
  the element has not <a href=#ended-playback>ended playback</a>, playback has not
  <a href=#stopped-due-to-errors>stopped due to errors</a>, and the element has not
  <a href=#paused-for-user-interaction>paused for user interaction</a>.</p>

  <p>A <a href=#media-element>media element</a> is said to have <dfn id=ended-playback>ended
  playback</dfn> when the element's <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute is <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> or greater, and
  the <a href=#current-playback-position>current playback position</a> is the end of the
  <a href=#media-resource>media resource</a>, and the <a href=#media-element>media element</a> does
  not have a <code title=attr-media-loop><a href=#attr-media-loop>loop</a></code> attribute
  specified.</p>

  <p>The <dfn id=dom-media-ended title=dom-media-ended><code>ended</code></dfn>
  attribute must return true if the <a href=#media-element>media element</a> has
  <a href=#ended-playback>ended playback</a>, and false otherwise.</p>

  <p>A <a href=#media-element>media element</a> is said to have <dfn id=stopped-due-to-errors>stopped due to
  errors</dfn> when the element's <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute is <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> or greater, and
  the user agent <a href=#non-fatal-media-error>encounters a
  non-fatal error</a> during the processing of the <a href=#media-data>media
  data</a>, and due to that error, is not able to play the content
  at the <a href=#current-playback-position>current playback position</a>.</p>

  <p>A <a href=#media-element>media element</a> is said to have <dfn id=paused-for-user-interaction>paused for user
  interaction</dfn> when its <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> attribute is false, the <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute is either
  <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code> or
  <code title=dom-media-HAVE_ENOUGH_DATA><a href=#dom-media-have_enough_data>HAVE_ENOUGH_DATA</a></code> and
  the user agent has reached a point in the <a href=#media-resource>media
  resource</a> where the user has to make a selection for the
  resource to continue.</p>

  <p>It is possible for a <a href=#media-element>media element</a> to have both
  <a href=#ended-playback>ended playback</a> and <a href=#paused-for-user-interaction>paused for user
  interaction</a> at the same time.</p>

  <p>When a <a href=#media-element>media element</a> that is <a href=#potentially-playing>potentially
  playing</a> stops playing because it has <a href=#paused-for-user-interaction>paused for user
  interaction</a>, the user agent must <a href=#queue-a-task>queue a task</a> to
  <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code> at the element.</p>

  <p id=fire-waiting-when-waiting>When a <a href=#media-element>media element</a>
  that is <a href=#potentially-playing>potentially playing</a> stops playing because its
  <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute
  changes to a value lower than <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code>, without
  the element having <a href=#ended-playback>ended playback</a>, or playback having
  <a href=#stopped-due-to-errors>stopped due to errors</a>, or playback having <a href=#paused-for-user-interaction>paused
  for user interaction</a>, or the <a href=#dom-media-seek title=dom-media-seek>seeking algorithm</a> being invoked, the
  user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code>
  at the element, and <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-waiting><a href=#event-waiting>waiting</a></code> at
  the element.</p>

  <p>When the <a href=#current-playback-position>current playback position</a> reaches the end
  of the <a href=#media-resource>media resource</a>, then the user agent must follow
  these steps:</p>

  <ol><li><p>If the <a href=#media-element>media element</a> has a <code title=attr-media-loop><a href=#attr-media-loop>loop</a></code> attribute specified, then <a href=#dom-media-seek title=dom-media-seek>seek</a> to the <var><a href=#earliest-possible-position>earliest possible
   position</a></var> of the <a href=#media-resource>media resource</a> and abort these
   steps.</li>
 
   <li><p>Stop playback.<p class=note>The <code title=dom-media-ended><a href=#dom-media-ended>ended</a></code> attribute becomes
   true.</li>

   <li><p>The user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire
   a simple event</a> called <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code> at the element.</li>

   <li><p>The user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire
   a simple event</a> called <code title=event-ended><a href=#event-ended>ended</a></code>
   at the element.</li>

  </ol><p>The <dfn id=dom-media-defaultplaybackrate title=dom-media-defaultPlaybackRate><code>defaultPlaybackRate</code></dfn>
  attribute gives the desired speed at which the <a href=#media-resource>media
  resource</a> is to play, as a multiple of its intrinsic
  speed. The attribute is mutable: on getting it must return the last
  value it was set to, or 1.0 if it hasn't yet been set; on setting
  the attribute must be set to the new value.</p>

  <p>The <dfn id=dom-media-playbackrate title=dom-media-playbackRate><code>playbackRate</code></dfn>
  attribute gives the speed at which the <a href=#media-resource>media resource</a>
  plays, as a multiple of its intrinsic speed. If it is not equal to
  the <code title=dom-media-defaultPlaybackRate><a href=#dom-media-defaultplaybackrate>defaultPlaybackRate</a></code>,
  then the implication is that the user is using a feature such as
  fast forward or slow motion playback. The attribute is mutable: on
  getting it must return the last value it was set to, or 1.0 if it
  hasn't yet been set; on setting the attribute must be set to the new
  value, and the playback must change speed (if the element is
  <a href=#potentially-playing>potentially playing</a>).</p>

  <p>The "play" function in a user agent's interface must set the
  <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> attribute
  to the value of the <code title=dom-media-defaultPlaybackRate><a href=#dom-media-defaultplaybackrate>defaultPlaybackRate</a></code>
  attribute before invoking the <code title=dom-media-play><a href=#dom-media-play>play()</a></code> method's steps. Features such
  as fast-forward or rewind must be implemented by only changing the
  <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code>
  attribute.</p>

  <p id=rateUpdate>When the <code title=dom-media-defaultPlaybackRate><a href=#dom-media-defaultplaybackrate>defaultPlaybackRate</a></code> or
  <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> attributes
  change value (either by being set by script or by being changed
  directly by the user agent, e.g. in response to user control) the
  user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-ratechange><a href=#event-ratechange>ratechange</a></code>
  at the <a href=#media-element>media element</a>.</p>

  <p>The <dfn id=dom-media-played title=dom-media-played><code>played</code></dfn>
  attribute must return a new static <a href=#normalized-timeranges-object>normalized
  <code>TimeRanges</code> object</a> that represents the ranges of
  the <a href=#media-resource>media resource</a>, if any, that the user agent has so
  far rendered, at the time the attribute is evaluated.</p>

  <hr><p>When the <dfn id=dom-media-play title=dom-media-play><code>play()</code></dfn>
  method on a <a href=#media-element>media element</a> is invoked, the user agent
  must run the following steps.</p>

  <ol><li><p>If the <a href=#media-element>media element</a>'s <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute has
   the value <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code>, then the user
   agent must invoke the <code title=dom-media-load><a href=#dom-media-load>load()</a></code>
   method and wait for it to return. If that raises an exception, that
   exception must be reraised by the <code title=dom-media-play><a href=#dom-media-play>play()</a></code> method.</li>

   <li>

    <p>If the <a href=#ended-playback title="ended playback">playback has ended</a>,
    then the user agent must <a href=#dom-media-seek title=dom-media-seek>seek</a>
    to the <var><a href=#earliest-possible-position>earliest possible position</a></var> of the <a href=#media-resource>media
    resource</a>.</p>

    <p class=note>This <a href=#seekUpdate>will cause</a> the user
    agent to <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
    event</a> called <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code> at the <a href=#media-element>media
    element</a>.</p> <!-- if we're already playing at this point,
    it might also fire 'waiting' -->

   </li>

   <li>

    <p>If the <a href=#media-element>media element</a>'s <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> attribute is true, it must
    be set to false.</p>

    <p>If this changed the value of <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code>, the user agent must run the following substeps:</p>

    <ol><li><p><a href=#queue-a-task>Queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
     called <code title=event-play><a href=#event-play>play</a></code> at the element.</li>

     <li><p>If the <a href=#media-element>media element</a>'s <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute has the
     value <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code>
     or <code title=dom-media-HAVE_CURRENT_DATA><a href=#dom-media-have_current_data>HAVE_CURRENT_DATA</a></code>,
     <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
     called <code title=event-waiting><a href=#event-waiting>waiting</a></code> at the
     element.</li>

     <li><p>Otherwise, the <a href=#media-element>media element</a>'s <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> attribute has the value
     <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code>
     or <code title=dom-media-HAVE_ENOUGH_DATA><a href=#dom-media-have_enough_data>HAVE_ENOUGH_DATA</a></code>;
     <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
     called <code title=event-playing><a href=#event-playing>playing</a></code> at the
     element.</li>

    </ol></li>

   <li><p>The <a href=#media-element>media element</a>'s <a href=#autoplaying-flag>autoplaying
   flag</a> must be set to false.</li>

   <li><p>The method must then return.</li>

  </ol><hr><p>When the <dfn id=dom-media-pause title=dom-media-pause><code>pause()</code></dfn>
  method is invoked, the user agent must run the following steps:</p>

  <ol><li><p>If the <a href=#media-element>media element</a>'s <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute has
   the value <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code>, then the user
   agent must invoke the <code title=dom-media-load><a href=#dom-media-load>load()</a></code>
   method and wait for it to return. If that raises an exception, that
   exception must be reraised by the <code title=dom-media-play><a href=#dom-media-play>pause()</a></code> method.</li>

   <li><p>If the <a href=#media-element>media element</a>'s <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> attribute is false, it must
   be set to true.</li>

   <li><p>The <a href=#media-element>media element</a>'s <a href=#autoplaying-flag>autoplaying
   flag</a> must be set to false.</li>

   <li><p>The method must then return.</li>

   <li><p>If the second step above changed the value of <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code>, then the user agent must
   <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
   called <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code> at the
   element, and <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
   event</a> called <code title=event-pause><a href=#event-pause>pause</a></code> at the
   element.</li>

  </ol><hr><p id=media-playback>When a <a href=#media-element>media element</a> is
  <a href=#potentially-playing>potentially playing</a> and its <code>Document</code> is an
  <a href=#active-document>active document</a>, its <a href=#current-playback-position>current playback
  position</a> must increase monotonically at <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> units of media
  time per unit time of wall clock time.</p>

  <p class=note>This specification doesn't define how the user agent
  achieves the appropriate playback rate &mdash; depending on the
  protocol and media available, it is plausible that the user agent
  could negotiate with the server to have the server provide the media
  data at the appropriate rate, so that (except for the period between
  when the rate is changed and when the server updates the stream's
  playback rate) the client doesn't actually have to drop or
  interpolate any frames.</p>

  <p>When the <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code>
  is negative (playback is backwards), any corresponding audio must be
  muted. When the <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> is so low or so
  high that the user agent cannot play audio usefully, the
  corresponding audio must also be muted. If the <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> is not 1.0, the
  user agent may apply pitch adjustments to the audio as necessary to
  render it faithfully.</p>

  <p>The <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> can
  be 0.0, in which case the <a href=#current-playback-position>current playback position</a>
  doesn't move, despite playback not being paused (<code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> doesn't become true, and the
  <code title=event-pause><a href=#event-pause>pause</a></code> event doesn't fire).</p>

  <p><a href=#media-element title="media element">Media elements</a> that are
  <a href=#potentially-playing>potentially playing</a> while not <span>in a
  <code>Document</code></span><!-- XXX xref --> must not play any
  video, but should play any audio component. Media elements must not
  stop playing just because all references to them have been removed;
  only once a media element to which no references exist has reached a
  point where no further audio remains to be played for that element
  (e.g. because the element is paused, or because the end of the clip
  has been reached, or because its <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> is 0.0) may the
  element be <span>garbage collected</span><!-- XXX xref -->.</p>

  <hr><p>When the <a href=#current-playback-position>current playback position</a> of a <a href=#media-element>media
  element</a> changes (e.g. due to playback or seeking), the user
  agent must run the following steps. If the <a href=#current-playback-position>current playback
  position</a> changes while the steps are running, then the user
  agent must wait for the steps to complete, and then must immediately
  rerun the steps. (These steps are thus run as often as possible or
  needed &mdash; if one iteration takes a long time, this can cause
  certain ranges to be skipped over as the user agent rushes ahead to
  "catch up".)</p>

  <ol><li><p>Let <var title="">current ranges</var> be an ordered list of
   <a href=#cue-range title="cue range">cue ranges</a>, initialized to contain
   all the <a href=#cue-range title="cue range">cue ranges</a> of the
   <a href=#media-element>media element</a> whose start times are less than or equal
   to the <a href=#current-playback-position>current playback position</a> and whose end times
   are greater than the <a href=#current-playback-position>current playback position</a>, in the
   order they were added to the element.</li>

   <li><p>Let <var title="">other ranges</var> be an ordered list of
   <a href=#cue-range title="cue range">cue ranges</a>, initialized to contain
   all the <a href=#cue-range title="cue range">cue ranges</a> of the
   <a href=#media-element>media element</a> that are not present in <var title="">current ranges</var>, in the order they were added to the
   element.</li>

   <li><p>If none of the <a href=#cue-range title="cue range">cue ranges</a> in
   <var title="">current ranges</var> have their "active" boolean set
   to "false" (inactive) and none of the <a href=#cue-range title="cue range">cue
   ranges</a> in <var title="">other ranges</var> have their
   "active" boolean set to "true" (active), then abort these
   steps.</li>

   <li><p>If the time was reached through the usual monotonic increase
   of the current playback position during normal playback, and if the
   user agent has not fired a <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code> event at the element in
   the past 15 to 250ms, then the user agent must <a href=#queue-a-task>queue a
   task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code> at the element. (In the
   other cases, such as explicit seeks, relevant events get fired as
   part of the overall process of changing the current playback
   position.)</p>

   <p class=note>The event thus is not to be fired faster than about
   66Hz or slower than 4Hz. User agents are encouraged to vary the
   frequency of the event based on the system load and the average
   cost of processing the event each time, so that the UI updates are
   not any more frequent than the user agent can comfortably handle
   while decoding the video.</li>

   <li><p>If the time was reached through the usual monotonic increase
   of the current playback position during normal playback, and there
   are <a href=#cue-range title="cue range">cue ranges</a> in <var title="">other ranges</var> that have both their "active" boolean
   and their "pause" boolean set to "true", then immediately act as if
   the element's <code title=dom-media-pause><a href=#dom-media-pause>pause()</a></code> method
   had been invoked. <!-- pause() can in theory call load(), but never
   can it do so as part of this invokation, since we wouldn't be in
   this algorithm if the media element was empty. So, no need to couch
   all this in a task. --> (In the other cases, such as explicit
   seeks, playback is not paused by exiting a cue range, even if that
   cue range has its "pause" boolean set to "true".)</li>

   <li><p>For each non-null "exit" callback of the <a href=#cue-range title="cue range">cue ranges</a> in <var title="">other
   ranges</var> that have their "active" boolean set to "true"
   (active), in list order, <a href=#queue-a-task>queue a task</a> that invokes the
   callback, passing the cue range's identifier as the callback's only
   argument.</li>

   <li><p>For each non-null "enter" callback of the <a href=#cue-range title="cue
   range">cue ranges</a> in <var title="">current ranges</var> that
   have their "active" boolean set to "false" (inactive), in list
   order, <a href=#queue-a-task>queue a task</a> that invokes the callback, passing
   the cue range's identifier as the callback's only
   argument.</li>

   <li><p>Set the "active" boolean of all the <a href=#cue-range title="cue
   range">cue ranges</a> in the <var title="">current ranges</var>
   list to "true" (active), and the "active" boolean of all the <a href=#cue-range title="cue range">cue ranges</a> in the <var title="">other
   ranges</var> list to "false" (inactive).</li>

  </ol><p>When a <a href=#media-element>media element</a> is <span>removed from a
  <code>Document</code><!-- XXX xref removed --></span>, if the
  <a href=#media-element>media element</a>'s <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> attribute has a
  value other than <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> then the user
  agent must act as if the <code title=dom-media-pause><a href=#dom-media-pause>pause()</a></code> method had been invoked.</p>

  <p class=note>If the <a href=#media-element>media element</a>'s
  <code>Document</code> stops being an active document, then the
  playback will <a href=#media-playback>stop</a> until the document
  is active again.</p>




  <h5 id=seeking><span class=secno>4.8.10.10 </span>Seeking</h5>

  <p>The <dfn id=dom-media-seeking title=dom-media-seeking><code>seeking</code></dfn>
  attribute must initially have the value false.</p>

  <p>When the user agent is required to <dfn id=dom-media-seek title=dom-media-seek>seek</dfn> to a particular <var title="">new
  playback position</var> in the <a href=#media-resource>media resource</a>, it means
  that the user agent must run the following steps:</p>

  <ol><li><p>If the <a href=#media-element>media element</a>'s <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> is <code title=dom-media-HAVE_NOTHING><a href=#dom-media-have_nothing>HAVE_NOTHING</a></code>, then the user
   agent must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception (if
   the seek was in response to a DOM method call or setting of a DOM
   attribute), and abort these steps.</li>

   <li><p>If the <var title="">new playback position</var> is later
   than the end of the <a href=#media-resource>media resource</a>, then let it be the
   end of the <a href=#media-resource>media resource</a> instead.</li>

   <li><p>If the <var title="">new playback position</var> is less
   than the <var><a href=#earliest-possible-position>earliest possible position</a></var>, let it be that
   position instead.</li>

   <li><p>If the (possibly now changed) <var title="">new playback
   position</var> is not in one of the ranges given in the <code title=dom-media-seekable><a href=#dom-media-seekable>seekable</a></code> attribute, then the user
   agent must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception (if the
   seek was in response to a DOM method call or setting of a DOM
   attribute), and abort these steps.</li>

   <li><p>The <a href=#current-playback-position>current playback position</a> must be set to
   the given <var title="">new playback position</var>.</li>

   <li><p>The <code title=dom-media-seeking><a href=#dom-media-seeking>seeking</a></code> DOM
   attribute must be set to true.</li>

   <li id=seekUpdate><p>The user agent must <a href=#queue-a-task>queue a
   task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-timeupdate><a href=#event-timeupdate>timeupdate</a></code> at the element.</li>

   <li><p>If the <a href=#media-element>media element</a> was <a href=#potentially-playing>potentially
   playing</a> immediately before it started seeking, but seeking
   caused its <code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code>
   attribute to change to a value lower than <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code>, the
   user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
   event</a> called <code title=event-waiting><a href=#event-waiting>waiting</a></code> at
   the element.</li>

   <li><p>If, when it reaches this step, the user agent has still not
   established whether or not the <a href=#media-data>media data</a> for the <var title="">new playback position</var> is available, and, if it is,
   decoded enough data to play back that position, the user agent must
   <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
   called <code title=event-seeking><a href=#event-seeking>seeking</a></code> at the
   element.</li>

   <li><p>If the seek was in response to a DOM method call or setting
   of a DOM attribute, then continue the script. The remainder of
   these steps must be run asynchronously.</li>

   <li><p>The user agent must wait until it has established whether or
   not the <a href=#media-data>media data</a> for the <var title="">new playback
   position</var> is available, and, if it is, until it has decoded
   enough data to play back that position.</li>

   <li><p>The <code title=dom-media-seeking><a href=#dom-media-seeking>seeking</a></code> DOM
   attribute must be set to false.</li>

   <li><p>The user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire
   a simple event</a> called <code title=event-seeked><a href=#event-seeked>seeked</a></code> at the element.</li>

  </ol><p>The <dfn id=dom-media-seekable title=dom-media-seekable><code>seekable</code></dfn>
  attribute must return a new static <a href=#normalized-timeranges-object>normalized
  <code>TimeRanges</code> object</a> that represents the ranges of
  the <a href=#media-resource>media resource</a>, if any, that the user agent is able
  to seek to, at the time the attribute is evaluated.</p>

  <p class=note>If the user agent can seek to anywhere in the
  <a href=#media-resource>media resource</a>, e.g. because it a simple movie file and
  the user agent and the server support HTTP Range requests, then the
  attribute would return an object with one range, whose start is the
  time of the first frame (typically zero), and whose end is the same
  as the time of the first frame plus the <code title=dom-media-duration><a href=#dom-media-duration>duration</a></code> attribute's value (which
  would equal the time of the last frame).</p>

  <p class=note>The range might be continuously changing, e.g. if
  the user agent is buffering a sliding window on an infinite
  stream. This is the behavior seen with DVRs viewing live TV, for
  instance.</p>

  <p><a href=#media-resource title="media resource">Media resources</a> might be
  internally scripted or interactive. Thus, a <a href=#media-element>media
  element</a> could play in a non-linear fashion. If this happens,
  the user agent must act as if the algorithm for <a href=#dom-media-seek title=dom-media-seek>seeking</a> was used whenever the
  <a href=#current-playback-position>current playback position</a> changes in a discontinuous
  fashion (so that the relevant events fire).</p>



  <h5 id=user-interface><span class=secno>4.8.10.11 </span>User interface</h5>

  <p>The <dfn id=attr-media-controls title=attr-media-controls><code>controls</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. If the attribute is
  present, or if <a href=#concept-n-noscript title=concept-n-noscript>scripting is
  disabled</a> for the <a href=#media-element>media element</a>, then the user
  agent should <dfn id=expose-a-user-interface-to-the-user>expose a user interface to the user</dfn>. This
  user interface should include features to begin playback, pause
  playback, seek to an arbitrary position in the content (if the
  content supports arbitrary seeking), change the volume, and show the
  media content in manners more suitable to the user (e.g. full-screen
  video or in an independent resizable window). Other controls may
  also be made available.</p>

  <p>If the attribute is absent, then the user agent should avoid
  making a user interface available that could conflict with an
  author-provided user interface. User agents may make the following
  features available, however, even when the attribute is absent:</p>

  <p>User agents may provide controls to affect playback of the media
  resource (e.g. play, pause, seeking, and volume controls), but such
  features should not interfere with the page's normal rendering. For
  example, such features could be exposed in the <a href=#media-element>media
  element</a>'s context menu.</p>

  <p>Where possible (specifically, for starting, stopping, pausing,
  and unpausing playback, for muting or changing the volume of the
  audio, and for seeking), user interface features exposed by the user
  agent must be implemented in terms of the DOM API described above,
  so that, e.g., all the same events fire.</p>

  <p>The <dfn id=dom-media-controls title=dom-media-controls><code>controls</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>

  <p>The <dfn id=dom-media-volume title=dom-media-volume><code>volume</code></dfn>
  attribute must return the playback volume of any audio portions of
  the <a href=#media-element>media element</a>, in the range 0.0 (silent) to 1.0
  (loudest). Initially, the volume must be 1.0, but user agents may
  remember the last set value across sessions, on a per-site basis or
  otherwise, so the volume may start at other values. On setting, if
  the new value is in the range 0.0 to 1.0 inclusive, the attribute
  must be set to the new value and the playback volume must be
  correspondingly adjusted as soon as possible after setting the
  attribute, with 0.0 being silent, and 1.0 being the loudest setting,
  values in between increasing in loudness. The range need not be
  linear. The loudest setting may be lower than the system's loudest
  possible setting; for example the user could have set a maximum
  volume. If the new value is outside the range 0.0 to 1.0 inclusive,
  then, on setting, an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception must be
  raised instead.</p>

  <p>The <dfn id=dom-media-muted title=dom-media-muted><code>muted</code></dfn>
  attribute must return true if the audio channels are muted and false
  otherwise. Initially, the audio channels should not be muted
  (false), but user agents may remember the last set value across
  sessions, on a per-site basis or otherwise, so the muted state may
  start as muted (true). On setting, the attribute must be set to the
  new value; if the new value is true, audio playback for this
  <a href=#media-resource>media resource</a> must then be muted, and if false, audio
  playback must then be enabled.</p>

  <p>Whenever either the <code title=dom-media-muted><a href=#dom-media-muted>muted</a></code> or
  <code title=dom-media-volume><a href=#dom-media-volume>volume</a></code> attributes are changed,
  the user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-volumechange><a href=#event-volumechange>volumechange</a></code> at the <a href=#media-element>media
  element</a>.</p>



  <h5 id=time-ranges><span class=secno>4.8.10.12 </span>Time ranges</h5>

  <p>Objects implementing the <code><a href=#timeranges>TimeRanges</a></code> interface
  represent a list of ranges (periods) of time.</p>

  <pre class=idl>interface <dfn id=timeranges>TimeRanges</dfn> {
  readonly attribute unsigned long <a href=#dom-timeranges-length title=dom-TimeRanges-length>length</a>;
  float <a href=#dom-timeranges-start title=dom-TimeRanges-start>start</a>(in unsigned long index);
  float <a href=#dom-timeranges-end title=dom-TimeRanges-end>end</a>(in unsigned long index);
};</pre>

  <p>The <dfn id=dom-timeranges-length title=dom-TimeRanges-length><code>length</code></dfn>
  DOM attribute must return the number of ranges represented by the object.</p>

  <p>The <dfn id=dom-timeranges-start title=dom-TimeRanges-start><code>start(<var title="">index</var>)</code></dfn> method must return the position
  of the start of the <var title="">index</var>th range represented by
  the object, in seconds measured from the start of the timeline that
  the object covers.</p>

  <p>The <dfn id=dom-timeranges-end title=dom-TimeRanges-end><code>end(<var title="">index</var>)</code></dfn> method must return the position
  of the end of the <var title="">index</var>th range represented by
  the object, in seconds measured from the start of the timeline that
  the object covers.</p>

  <p>These methods must raise <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exceptions
  if called with an <var title="">index</var> argument greater than or
  equal to the number of ranges represented by the object.</p>

  <p>When a <code><a href=#timeranges>TimeRanges</a></code> object is said to be a
  <dfn id=normalized-timeranges-object>normalized <code>TimeRanges</code> object</dfn>, the ranges it
  represents must obey the following criteria:</p>

  <ul><li>The start of a range must be greater than the end of all
   earlier ranges.</li>

   <li>The start of a range must be less than the end of that same
   range.</li>

  </ul><p>In other words, the ranges in such an object are ordered, don't
  overlap, aren't empty, and don't touch (adjacent ranges are folded
  into one bigger range).</p>

  <p>The timelines used by the objects returned by the <code title=dom-media-buffered><a href=#dom-media-buffered>buffered</a></code>, <code title=dom-media-seekable><a href=#dom-media-seekable>seekable</a></code> and <code title=dom-media-played><a href=#dom-media-played>played</a></code> DOM attributes of <a href=#media-element title="media element">media elements</a> must be the same as that
  element's <a href=#media-resource>media resource</a>'s timeline.</p>



  <h5 id=mediaevents><span class=secno>4.8.10.13 </span>Event summary</h5>

  <p>The following events fire on <a href=#media-element title="media element">media
  elements</a> as part of the processing model described above:</p>

  <table><thead><tr><th>Event name
     <th>Interface
     <th>Dispatched when...
     <th>Preconditions

   <tbody><tr><td><dfn id=event-loadstart title=event-loadstart><code>loadstart</code></dfn>
     <td><code>ProgressEvent</code> <a href=#refsPROGRESS>[PROGRESS]</a>
     <td>The user agent begins fetching the <a href=#media-data>media data</a>, synchronously during the <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method call.
     <td><code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> equals <code title=dom-media-NETWORK_LOADING><a href=#dom-media-network_loading>NETWORK_LOADING</a></code>
    <tr><td><dfn id=event-progress title=event-progress><code>progress</code></dfn>
     <td><code>ProgressEvent</code> <a href=#refsPROGRESS>[PROGRESS]</a>
     <td>The user agent is fetching <a href=#media-data>media data</a>.
     <td><code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> equals <code title=dom-media-NETWORK_LOADING><a href=#dom-media-network_loading>NETWORK_LOADING</a></code>
    <tr><td><dfn id=event-suspend title=event-suspend><code>suspend</code></dfn>
     <td><code>ProgressEvent</code> <a href=#refsPROGRESS>[PROGRESS]</a>
     <td>The user agent is intentionally not currently fetching <a href=#media-data>media data</a>, but does not have the entire <a href=#media-resource>media resource</a> downloaded.
     <td><code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> equals <code title=dom-media-NETWORK_IDLE><a href=#dom-media-network_idle>NETWORK_IDLE</a></code>
    <tr><td><dfn id=event-load title=event-load><code>load</code></dfn>
     <td><code>ProgressEvent</code> <a href=#refsPROGRESS>[PROGRESS]</a>
     <td>The user agent finishes fetching the entire <a href=#media-resource>media resource</a>.
     <td><code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> equals <code title=dom-media-NETWORK_LOADED><a href=#dom-media-network_loaded>NETWORK_LOADED</a></code>
    <tr><td><dfn id=event-abort title=event-abort><code>abort</code></dfn>
     <td><code>ProgressEvent</code> <a href=#refsPROGRESS>[PROGRESS]</a>
     <td>The user agent stops fetching the <a href=#media-data>media data</a> before it is completely downloaded. This can be fired synchronously during the <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method call.
     <td><code title=dom-media-error><a href=#dom-media-error>error</a></code> is an object with the code <code title=dom-MediaError-MEDIA_ERR_ABORTED><a href=#dom-mediaerror-media_err_aborted>MEDIA_ERR_ABORTED</a></code>.
         <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> equals either <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> or <code title=dom-media-NETWORK_LOADED><a href=#dom-media-network_loaded>NETWORK_LOADED</a></code>, depending on when the download was aborted.
    <tr><td><dfn id=event-error title=event-error><code>error</code></dfn>
     <td><code>ProgressEvent</code> <a href=#refsPROGRESS>[PROGRESS]</a>
     <td>An error occurs while fetching the <a href=#media-data>media data</a>.
     <td><code title=dom-media-error><a href=#dom-media-error>error</a></code> is an object with the code <code title=dom-MediaError-MEDIA_ERR_NETWORK><a href=#dom-mediaerror-media_err_network>MEDIA_ERR_NETWORK</a></code> or higher.
         <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> equals either <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> or <code title=dom-media-NETWORK_LOADED><a href=#dom-media-network_loaded>NETWORK_LOADED</a></code>, depending on when the download was aborted.
    <tr><td><dfn id=event-emptied title=event-emptied><code>emptied</code></dfn>
     <td><code>Event</code>
     <td>A <a href=#media-element>media element</a> whose <code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> was previously not in the <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code> state has just switched to that state (either because of a fatal error during load that's about to be reported, or because the <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method was reinvoked, in which case it is fired synchronously during the <code title=dom-media-load><a href=#dom-media-load>load()</a></code> method call).
     <td><code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> is <code title=dom-media-NETWORK_EMPTY><a href=#dom-media-network_empty>NETWORK_EMPTY</a></code>; all the DOM attributes are in their initial states.
    <tr><td><dfn id=event-stalled title=event-stalled><code>stalled</code></dfn>
     <td><code>ProgressEvent</code>
     <td>The user agent is trying to fetch <a href=#media-data>media data</a>, but data is unexpectedly not forthcoming.
     <td><code title=dom-media-networkState><a href=#dom-media-networkstate>networkState</a></code> is <code title=dom-media-NETWORK_LOADING><a href=#dom-media-network_loading>NETWORK_LOADING</a></code>.

   <tbody><tr><td><dfn id=event-play title=event-play><code>play</code></dfn>
     <td><code>Event</code>
     <td>Playback has begun. Fired after the <code title=dom-media-play><a href=#dom-media-play>play()</a></code> method has returned.
     <td><code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> is newly false.
    <tr><td><dfn id=event-pause title=event-pause><code>pause</code></dfn>
     <td><code>Event</code>
     <td>Playback has been paused. Fired after the <code title=dom-media-pause><a href=#dom-media-pause>pause</a></code> method has returned.
     <td><code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> is newly true.

   <tbody><tr><td><dfn id=event-loadedmetadata title=event-loadedmetadata><code>loadedmetadata</code></dfn>
     <td><code>Event</code>
     <td>The user agent has just determined the the duration and dimensions of the <a href=#media-resource>media resource</a>.
     <td><code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> is newly equal to <code title=dom-media-HAVE_METADATA><a href=#dom-media-have_metadata>HAVE_METADATA</a></code> or greater for the first time.
    <tr><td><dfn id=event-loadeddata title=event-loadeddata><code>loadeddata</code></dfn>
     <td><code>Event</code>
     <td>The user agent can render the <a href=#media-data>media data</a> at the <a href=#current-playback-position>current playback position</a> for the first time.
     <td><code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> newly increased to <code title=dom-media-HAVE_CURRENT_DATA><a href=#dom-media-have_current_data>HAVE_CURRENT_DATA</a></code> or greater for the first time.
    <tr><td><dfn id=event-waiting title=event-waiting><code>waiting</code></dfn>
     <td><code>Event</code>
     <td>Playback has stopped because the next frame is not available, but the user agent expects that frame to become available in due course.
     <td><code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> is newly equal to or less than <code title=dom-media-HAVE_CURRENT_DATA><a href=#dom-media-have_current_data>HAVE_CURRENT_DATA</a></code>, and <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> is false. Either <code title=dom-media-seeking><a href=#dom-media-seeking>seeking</a></code> is true, or the <a href=#current-playback-position>current playback position</a> is not contained in any of the ranges in <code title=dom-media-buffered><a href=#dom-media-buffered>buffered</a></code>. It is possible for playback to stop for two other reasons without <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> being false, but those two reasons do not fire this event: maybe <a href=#ended-playback title="ended playback">playback ended</a>, or playback <a href=#stopped-due-to-errors>stopped due to errors</a>.
    <tr><td><dfn id=event-playing title=event-playing><code>playing</code></dfn>
     <td><code>Event</code>
     <td>Playback has started.
     <td><code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> is newly equal to or greater than <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code>, <code title=dom-media-paused><a href=#dom-media-paused>paused</a></code> is false, <code title=dom-media-seeking><a href=#dom-media-seeking>seeking</a></code> is false, or the <a href=#current-playback-position>current playback position</a> is contained in one of the ranges in <code title=dom-media-buffered><a href=#dom-media-buffered>buffered</a></code>.
    <tr><td><dfn id=event-canplay title=event-canplay><code>canplay</code></dfn>
     <td><code>Event</code>
     <td>The user agent can resume playback of the <a href=#media-data>media data</a>, but estimates that if playback were to be started now, the <a href=#media-resource>media resource</a> could not be rendered at the current playback rate up to its end without having to stop for further buffering of content.
     <td><code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> newly increased to <code title=dom-media-HAVE_FUTURE_DATA><a href=#dom-media-have_future_data>HAVE_FUTURE_DATA</a></code> or greater.
    <tr><td><dfn id=event-canplaythrough title=event-canplaythrough><code>canplaythrough</code></dfn>
     <td><code>Event</code>
     <td>The user agent estimates that if playback were to be started now, the <a href=#media-resource>media resource</a> could be rendered at the current playback rate all the way to its end without having to stop for further buffering.
     <td><code title=dom-media-readyState><a href=#dom-media-readystate>readyState</a></code> is newly equal to <code title=dom-media-HAVE_ENOUGH_DATA><a href=#dom-media-have_enough_data>HAVE_ENOUGH_DATA</a></code>.

   <tbody><tr><td><dfn id=event-seeking title=event-seeking><code>seeking</code></dfn>
     <td><code>Event</code>
     <td>The <code title=dom-media-seeking><a href=#dom-media-seeking>seeking</a></code> DOM attribute changed to true and the seek operation is taking long enough that the user agent has time to fire the event.
     <td>
    <tr><td><dfn id=event-seeked title=event-seeked><code>seeked</code></dfn>
     <td><code>Event</code>
     <td>The <code title=dom-media-seeking><a href=#dom-media-seeking>seeking</a></code> DOM attribute changed to false.
     <td>
    <tr><td><dfn id=event-timeupdate title=event-timeupdate><code>timeupdate</code></dfn>
     <td><code>Event</code>
     <td>The <a href=#current-playback-position>current playback position</a> changed as part of normal playback or in an especially interesting way, for example discontinuously.
     <td>
    <tr><td><dfn id=event-ended title=event-ended><code>ended</code></dfn>
     <td><code>Event</code>
     <td>Playback has stopped because the end of the <a href=#media-resource>media resource</a> was reached.
     <td><code title=dom-media-currentTime><a href=#dom-media-currenttime>currentTime</a></code> equals the end of the <a href=#media-resource>media resource</a>; <code title=dom-media-ended><a href=#dom-media-ended>ended</a></code> is true.

   <tbody><tr><td><dfn id=event-ratechange title=event-ratechange><code>ratechange</code></dfn>
     <td><code>Event</code>
     <td>Either the <code title=dom-media-defaultPlaybackRate><a href=#dom-media-defaultplaybackrate>defaultPlaybackRate</a></code> or the <code title=dom-media-playbackRate><a href=#dom-media-playbackrate>playbackRate</a></code> attribute has just been updated.
     <td>
    <tr><td><dfn id=event-durationchange title=event-durationchange><code>durationchange</code></dfn>
     <td><code>Event</code>
     <td>The <code title=dom-media-duration><a href=#dom-media-duration>duration</a></code> attribute has just been updated.
     <td>
    <tr><td><dfn id=event-volumechange title=event-volumechange><code>volumechange</code></dfn>
     <td><code>Event</code>
     <td>Either the <code title=dom-media-volume><a href=#dom-media-volume>volume</a></code> attribute or the <code title=dom-media-muted><a href=#dom-media-muted>muted</a></code> attribute has changed. Fired after the relevant attribute's setter has returned.
     <td>
  </table><h5 id=security-and-privacy-considerations><span class=secno>4.8.10.14 </span>Security and privacy considerations</h5>

  <p class=XXX>Talk about making sure interactive media files
  (e.g. SVG) don't have access to the container DOM (XSS potential);
  talk about not exposing any sensitive data like metadata from tracks
  in the media files (intranet snooping risk)</p>





  <h4 id=the-canvas-element><span class=secno>4.8.11 </span>The <dfn id=canvas><code>canvas</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#embedded-content-2>Embedded content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#embedded-content-2>embedded content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#transparent>Transparent</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-canvas-width><a href=#attr-canvas-width>width</a></code></dd>
   <dd><code title=attr-canvas-height><a href=#attr-canvas-height>height</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>interface <dfn id=htmlcanvaselement>HTMLCanvasElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute unsigned long <a href=#dom-canvas-width title=dom-canvas-width>width</a>;
           attribute unsigned long <a href=#dom-canvas-height title=dom-canvas-height>height</a>;

  DOMString <a href=#dom-canvas-todataurl title=dom-canvas-toDataURL>toDataURL</a>([Optional] in DOMString type, [Variadic] in any args);

  Object <a href=#dom-canvas-getcontext title=dom-canvas-getContext>getContext</a>(in DOMString contextId);
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-canvas-element>canvas</a></code> element <a href=#represents>represents</a> a
  resolution-dependent bitmap canvas, which can be used for rendering
  graphs, game graphics, or other visual images on the fly.</p>

  <p>Authors should not use the <code><a href=#the-canvas-element>canvas</a></code> element in a
  document when a more suitable element is available. For example, it
  is inappropriate to use a <code><a href=#the-canvas-element>canvas</a></code> element to render a
  page heading: if the desired presentation of the heading is
  graphically intense, it should be marked up using appropriate
  elements (typically <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>) and then styled using CSS and
  supporting technologies such as XBL.</p>

  <p>When authors use the <code><a href=#the-canvas-element>canvas</a></code> element, they should
  also provide content that, when presented to the user, conveys
  essentially the same function or purpose as the bitmap canvas. This
  content may be placed as content of the <code><a href=#the-canvas-element>canvas</a></code>
  element. The contents of the <code><a href=#the-canvas-element>canvas</a></code> element, if any,
  are the element's <a href=#fallback-content>fallback content</a>.</p>

  <p>In interactive visual media, if <a href=#concept-n-script title=concept-n-script>scripting is enabled</a> for the
  <code><a href=#the-canvas-element>canvas</a></code> element, the <code><a href=#the-canvas-element>canvas</a></code> element
  represents an embedded element with a dynamically created image.</p>

  <p>In non-interactive, static, visual media, if the
  <code><a href=#the-canvas-element>canvas</a></code> element has been previously painted on (e.g. if
  the page was viewed in an interactive visual medium and is now being
  printed, or if some script that ran during the page layout process
  painted on the element), then the <code><a href=#the-canvas-element>canvas</a></code> element
  represents <a href=#embedded-content-2>embedded content</a> with the current image and
  size. Otherwise, the element represents its <a href=#fallback-content>fallback
  content</a> instead.</p>

  <p>In non-visual media, and in visual media if <a href=#concept-n-noscript title=concept-n-noscript>scripting is disabled</a> for the
  <code><a href=#the-canvas-element>canvas</a></code> element, the <code><a href=#the-canvas-element>canvas</a></code> element
  represents its <a href=#fallback-content>fallback content</a> instead.</p>

  <p>The <code><a href=#the-canvas-element>canvas</a></code> element has two attributes to control the
  size of the coordinate space: <dfn id=attr-canvas-width title=attr-canvas-width><code>width</code></dfn> and <dfn id=attr-canvas-height title=attr-canvas-height><code>height</code></dfn>. These
  attributes, when specified, must have values that are <a href=#valid-non-negative-integer title="valid non-negative integer">valid non-negative
  integers</a>. The <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
  integers</a> must be used to obtain their numeric values. If an
  attribute is missing, or if parsing its value returns an error, then
  the default value must be used instead. The <code title=attr-canvas-width><a href=#attr-canvas-width>width</a></code> attribute defaults to 300,
  and the <code title=attr-canvas-height><a href=#attr-canvas-height>height</a></code> attribute
  defaults to 150.</p>

  <p>The intrinsic dimensions of the <code><a href=#the-canvas-element>canvas</a></code> element equal
  the size of the coordinate space, with the numbers interpreted in
  CSS pixels. However, the element can be sized arbitrarily by a
  style sheet. During rendering, the image is scaled to fit this layout
  size.</p>

  <p>The size of the coordinate space does not necessarily represent
  the size of the actual bitmap that the user agent will use
  internally or during rendering. On high-definition displays, for
  instance, the user agent may internally use a bitmap with two device
  pixels per unit in the coordinate space, so that the rendering
  remains at high quality throughout.</p>

  <p>Whenever the <code title=attr-canvas-width><a href=#attr-canvas-width>width</a></code> and
  <code title=attr-canvas-height><a href=#attr-canvas-height>height</a></code> attributes are set
  (whether to a new value or to the previous value), the bitmap and
  any associated contexts must be cleared back to their initial state
  and reinitialized with the newly specified coordinate space
  dimensions.</p>

  <p>The <dfn id=dom-canvas-width title=dom-canvas-width><code>width</code></dfn> and
  <dfn id=dom-canvas-height title=dom-canvas-height><code>height</code></dfn> DOM
  attributes must <a href=#reflect>reflect</a> the respective content
  attributes of the same name.</p>

  <div class=example>
   <p>Only one square appears to be drawn in the following example:</p>
   <pre>
  // canvas is a reference to a &lt;canvas&gt; element
  var context = canvas.getContext('2d');
  context.fillRect(0,0,50,50);
  canvas.setAttribute('width', '300'); // clears the canvas
  context.fillRect(0,100,50,50);
  canvas.width = canvas.width; // clears the canvas
  context.fillRect(100,0,50,50); // only this square remains</pre>
  </div>


  <p>When the canvas is initialized it must be set to fully
  transparent black.</p>


  <p>To draw on the canvas, authors must first obtain a reference to a
  <dfn id=context>context</dfn> using the <dfn id=dom-canvas-getcontext title=dom-canvas-getContext><code>getContext(<var title="">contextId</var>)</code></dfn> method of the
  <code><a href=#the-canvas-element>canvas</a></code> element.</p>

  <p>This specification only defines one context, with the name "<code title=canvas-context-2d><a href=#canvas-context-2d>2d</a></code>". If <code title=dom-canvas-getContext><a href=#dom-canvas-getcontext>getContext()</a></code> is called with
  that exact string for its <var title="">contextId</var> argument,
  then the UA must return a reference to an object implementing
  <code><a href=#canvasrenderingcontext2d>CanvasRenderingContext2D</a></code>. Other specifications may
  define their own contexts, which would return different objects.</p>

  <p>Vendors may also define experimental contexts using the syntax
  <code><var title="">vendorname</var>-<var title="">context</var></code>, for example, <code>moz-3d</code>.</p>

  <p>When the UA is passed an empty string or a string specifying a
  context that it does not support, then it must return null. String
  comparisons must be <a href=#case-sensitive>case-sensitive</a>.</p>

  <p>Arguments other than the <var title="">contextId</var> must be
  ignored.</p>

  <p class=note>A future version of this specification will probably
  define a <code>3d</code> context (probably based on the OpenGL ES
  API).</p>

  <hr><p>The <dfn id=dom-canvas-todataurl title=dom-canvas-toDataURL><code>toDataURL()</code></dfn> method
  must, when called with no arguments, return a <code title="">data:</code> URL containing a representation of the image
  as a PNG file. <a href=#refsPNG>[PNG]</a>.</p>

  <p>If the canvas has no pixels (i.e. either its horizontal dimension
  or its vertical dimension is zero) then the method must return the
  string "<code title="">data:,</code>". (This is the shortest <code title="">data:</code> URL; it represents the empty string in a <code title="">text/plain</code> resource.)</p>

  <p>When the <code title=dom-canvas-toDataURL><a href=#dom-canvas-todataurl>toDataURL(<var title="">type</var>)</a></code> method, when called with one
  <em>or more</em> arguments, must return a <code title="">data:</code> URL containing a representation of the image
  in the format given by <var title="">type</var>. The possible values
  are MIME types with no parameters, for example
  <code>image/png</code>, <code>image/jpeg</code>, or even maybe
  <code>image/svg+xml</code> if the implementation actually keeps
  enough information to reliably render an SVG image from the
  canvas.</p>

  <p>For image types that do not support an alpha channel, the image
  must be composited onto a solid black background using the
  source-over operator, and the resulting image must be the one used
  to create the <code title="">data:</code> URL.</p>

  <p>Only support for <code>image/png</code> is required. User agents
  may support other types. If the user agent does not support the
  requested type, it must return the image using the PNG format.</p>

  <p>User agents must <a href=#converted-to-lowercase title="converted to lowercase">convert the
  provided type to lower case</a> before establishing if they
  support that type and before creating the <code title="">data:</code> URL.</p>

  <p class=note>When trying to use types other than
  <code>image/png</code>, authors can check if the image was really
  returned in the requested format by checking to see if the returned
  string starts with one the exact strings "<code title="">data:image/png,</code>" or "<code title="">data:image/png;</code>". If it does, the image is PNG, and
  thus the requested type was not supported. (The one exception to
  this is if the canvas has either no height or no width, in which
  case the result might simply be "<code title="">data:,</code>".)</p>

  <p>If the method is invoked with the first argument giving a type
  corresponding to one of the types given in the first column of the
  following table, and the user agent supports that type, then the
  subsequent arguments, if any, must be treated as described in the
  second cell of that row.</p>

  <table><thead><tr><th> Type <th> Other arguments
   <tbody><tr><td> image/jpeg
     <td> The second argument, if it is a number between 0.0 and 1.0,
     must be treated as the desired quality level. If it is not a
     number or is outside that range, the user agent must use its
     default value, as if the argument had been omitted.
  </table><p>Other arguments must be ignored and must not cause the user agent
  to raise an exception. A future version of this specification will
  probably define other parameters to be passed to <code title=dom-canvas-toDataURL><a href=#dom-canvas-todataurl>toDataURL()</a></code> to allow authors to
  more carefully control compression settings, image metadata,
  etc.</p>


  <h5 id=the-2d-context><span class=secno>4.8.11.1 </span>The 2D context</h5>
  <!-- v2: we're on v3. suggestions for next version are marked v4. -->

  <p>When the <code title=dom-canvas-getContext><a href=#dom-canvas-getcontext>getContext()</a></code>
  method of a <code><a href=#the-canvas-element>canvas</a></code> element is invoked with <dfn id=canvas-context-2d title=canvas-context-2d><code>2d</code></dfn> as the argument, a
  <code><a href=#canvasrenderingcontext2d>CanvasRenderingContext2D</a></code> object is returned.</p>

  <p>There is only one <code><a href=#canvasrenderingcontext2d>CanvasRenderingContext2D</a></code> object
  per canvas, so calling the <code title=dom-canvas-getContext><a href=#dom-canvas-getcontext>getContext()</a></code> method with the
  <code title=canvas-context-2d><a href=#canvas-context-2d>2d</a></code> argument a second time
  must return the same object.</p>

  <p>The 2D context represents a flat Cartesian surface whose origin
  (0,0) is at the top left corner, with the coordinate space having
  <var title="">x</var> values increasing when going right, and <var title="">y</var> values increasing when going down.</p>

  <pre class=idl>interface <dfn id=canvasrenderingcontext2d>CanvasRenderingContext2D</dfn> {

  // back-reference to the canvas
  readonly attribute <a href=#htmlcanvaselement>HTMLCanvasElement</a> <a href=#dom-context-2d-canvas title=dom-context-2d-canvas>canvas</a>;

  // state
  void <a href=#dom-context-2d-save title=dom-context-2d-save>save</a>(); // push state on state stack
  void <a href=#dom-context-2d-restore title=dom-context-2d-restore>restore</a>(); // pop state stack and restore state

  // transformations (default transform is the identity matrix)
  void <a href=#dom-context-2d-scale title=dom-context-2d-scale>scale</a>(in float x, in float y);
  void <a href=#dom-context-2d-rotate title=dom-context-2d-rotate>rotate</a>(in float angle);
  void <a href=#dom-context-2d-translate title=dom-context-2d-translate>translate</a>(in float x, in float y);
  void <a href=#dom-context-2d-transform title=dom-context-2d-transform>transform</a>(in float m11, in float m12, in float m21, in float m22, in float dx, in float dy);
  void <a href=#dom-context-2d-settransform title=dom-context-2d-setTransform>setTransform</a>(in float m11, in float m12, in float m21, in float m22, in float dx, in float dy);
<!--
  // XXXv4 we've also received requests for:
  void skew(...);
  void reflect(...); // or mirror(...)
-->
  // compositing
           attribute float <a href=#dom-context-2d-globalalpha title=dom-context-2d-globalAlpha>globalAlpha</a>; // (default 1.0)
           attribute DOMString <a href=#dom-context-2d-globalcompositeoperation title=dom-context-2d-globalCompositeOperation>globalCompositeOperation</a>; // (default source-over)
<!--
  // XXXv4 we've also received requests for:
  - turning off antialiasing to avoid seams when patterns are painted next to each other
    - might be better to overdraw?
    - might be better to just draw at a higher res then downsample, like for 3d?
-->
  // colors and styles
           attribute any <a href=#dom-context-2d-strokestyle title=dom-context-2d-strokeStyle>strokeStyle</a>; // (default black)
           attribute any <a href=#dom-context-2d-fillstyle title=dom-context-2d-fillStyle>fillStyle</a>; // (default black)
  <a href=#canvasgradient>CanvasGradient</a> <a href=#dom-context-2d-createlineargradient title=dom-context-2d-createLinearGradient>createLinearGradient</a>(in float x0, in float y0, in float x1, in float y1);
  <a href=#canvasgradient>CanvasGradient</a> <a href=#dom-context-2d-createradialgradient title=dom-context-2d-createRadialGradient>createRadialGradient</a>(in float x0, in float y0, in float r0, in float x1, in float y1, in float r1);
  <a href=#canvaspattern>CanvasPattern</a> <a href=#dom-context-2d-createpattern title=dom-context-2d-createPattern>createPattern</a>(in <a href=#htmlimageelement>HTMLImageElement</a> image, in DOMString repetition);
  <a href=#canvaspattern>CanvasPattern</a> <a href=#dom-context-2d-createpattern title=dom-context-2d-createPattern>createPattern</a>(in <a href=#htmlcanvaselement>HTMLCanvasElement</a> image, in DOMString repetition);

  // line caps/joins
           attribute float <a href=#dom-context-2d-linewidth title=dom-context-2d-lineWidth>lineWidth</a>; // (default 1)
           attribute DOMString <a href=#dom-context-2d-linecap title=dom-context-2d-lineCap>lineCap</a>; // "butt", "round", "square" (default "butt")
           attribute DOMString <a href=#dom-context-2d-linejoin title=dom-context-2d-lineJoin>lineJoin</a>; // "round", "bevel", "miter" (default "miter")
           attribute float <a href=#dom-context-2d-miterlimit title=dom-context-2d-miterLimit>miterLimit</a>; // (default 10)

  // shadows
           attribute float <a href=#dom-context-2d-shadowoffsetx title=dom-context-2d-shadowOffsetX>shadowOffsetX</a>; // (default 0)
           attribute float <a href=#dom-context-2d-shadowoffsety title=dom-context-2d-shadowOffsetY>shadowOffsetY</a>; // (default 0)
           attribute float <a href=#dom-context-2d-shadowblur title=dom-context-2d-shadowBlur>shadowBlur</a>; // (default 0)
           attribute DOMString <a href=#dom-context-2d-shadowcolor title=dom-context-2d-shadowColor>shadowColor</a>; // (default transparent black)

  // rects
  void <a href=#dom-context-2d-clearrect title=dom-context-2d-clearRect>clearRect</a>(in float x, in float y, in float w, in float h);
  void <a href=#dom-context-2d-fillrect title=dom-context-2d-fillRect>fillRect</a>(in float x, in float y, in float w, in float h);
  void <a href=#dom-context-2d-strokerect title=dom-context-2d-strokeRect>strokeRect</a>(in float x, in float y, in float w, in float h);

  // path API
  void <a href=#dom-context-2d-beginpath title=dom-context-2d-beginPath>beginPath</a>();
  void <a href=#dom-context-2d-closepath title=dom-context-2d-closePath>closePath</a>();
  void <a href=#dom-context-2d-moveto title=dom-context-2d-moveTo>moveTo</a>(in float x, in float y);
  void <a href=#dom-context-2d-lineto title=dom-context-2d-lineTo>lineTo</a>(in float x, in float y);
  void <a href=#dom-context-2d-quadraticcurveto title=dom-context-2d-quadraticCurveTo>quadraticCurveTo</a>(in float cpx, in float cpy, in float x, in float y);
  void <a href=#dom-context-2d-beziercurveto title=dom-context-2d-bezierCurveTo>bezierCurveTo</a>(in float cp1x, in float cp1y, in float cp2x, in float cp2y, in float x, in float y);
  void <a href=#dom-context-2d-arcto title=dom-context-2d-arcTo>arcTo</a>(in float x1, in float y1, in float x2, in float y2, in float radius);
  void <a href=#dom-context-2d-rect title=dom-context-2d-rect>rect</a>(in float x, in float y, in float w, in float h);
  void <a href=#dom-context-2d-arc title=dom-context-2d-arc>arc</a>(in float x, in float y, in float radius, in float startAngle, in float endAngle, in boolean anticlockwise);
  void <a href=#dom-context-2d-fill title=dom-context-2d-fill>fill</a>();
  void <a href=#dom-context-2d-stroke title=dom-context-2d-stroke>stroke</a>();
  void <a href=#dom-context-2d-clip title=dom-context-2d-clip>clip</a>();
  boolean <a href=#dom-context-2d-ispointinpath title=dom-context-2d-isPointInPath>isPointInPath</a>(in float x, in float y);

  // text
           attribute DOMString <a href=#dom-context-2d-font title=dom-context-2d-font>font</a>; // (default 10px sans-serif)
           attribute DOMString <a href=#dom-context-2d-textalign title=dom-context-2d-textAlign>textAlign</a>; // "start", "end", "left", "right", "center" (default: "start")
           attribute DOMString <a href=#dom-context-2d-textbaseline title=dom-context-2d-textBaseline>textBaseline</a>; // "top", "hanging", "middle", "alphabetic", "ideographic", "bottom" (default: "alphabetic")
  void <a href=#dom-context-2d-filltext title=dom-context-2d-fillText>fillText</a>(in DOMString text, in float x, in float y, [Optional] in float maxWidth);
  void <a href=#dom-context-2d-stroketext title=dom-context-2d-strokeText>strokeText</a>(in DOMString text, in float x, in float y, [Optional] in float maxWidth);<!-- XXXDVT
  void <span title="dom-context-2d-fillVerticalText">fillVerticalText</span>(in DOMString text, in float x, in float y, [Optional] in float maxHeight);
  void <span title="dom-context-2d-strokeVerticalText">strokeVerticalText</span>(in DOMString text, in float x, in float y, [Optional] in float maxHeight); -->
  <a href=#textmetrics>TextMetrics</a> <a href=#dom-context-2d-measuretext title=dom-context-2d-measureText>measureText</a>(in DOMString text);

  // drawing images<!-- XXX add and define HTMLVideoElement variants -->
  void <a href=#dom-context-2d-drawimage title=dom-context-2d-drawImage>drawImage</a>(in <a href=#htmlimageelement>HTMLImageElement</a> image, in float dx, in float dy, [Optional] in float dw, in float dh);
  void <a href=#dom-context-2d-drawimage title=dom-context-2d-drawImage>drawImage</a>(in <a href=#htmlimageelement>HTMLImageElement</a> image, in float sx, in float sy, in float sw, in float sh, in float dx, in float dy, in float dw, in float dh);
  void <a href=#dom-context-2d-drawimage title=dom-context-2d-drawImage>drawImage</a>(in <a href=#htmlcanvaselement>HTMLCanvasElement</a> image, in float dx, in float dy, [Optional] in float dw, in float dh);
  void <a href=#dom-context-2d-drawimage title=dom-context-2d-drawImage>drawImage</a>(in <a href=#htmlcanvaselement>HTMLCanvasElement</a> image, in float sx, in float sy, in float sw, in float sh, in float dx, in float dy, in float dw, in float dh);

  // pixel manipulation
  <a href=#imagedata>ImageData</a> <a href=#dom-context-2d-createimagedata title=dom-context-2d-createImageData>createImageData</a>(in float sw, in float sh);
  <a href=#imagedata>ImageData</a> <a href=#dom-context-2d-getimagedata title=dom-context-2d-getImageData>getImageData</a>(in float sx, in float sy, in float sw, in float sh);
  void <a href=#dom-context-2d-putimagedata title=dom-context-2d-putImageData>putImageData</a>(in <a href=#imagedata>ImageData</a> imagedata, in float dx, in float dy, [Optional] in float dirtyX, in float dirtyY, in float dirtyWidth, in float dirtyHeight);
};

interface <dfn id=canvasgradient>CanvasGradient</dfn> {
  // opaque object
  void <a href=#dom-canvasgradient-addcolorstop title=dom-canvasgradient-addColorStop>addColorStop</a>(in float offset, in DOMString color);
};

interface <dfn id=canvaspattern>CanvasPattern</dfn> {
  // opaque object
};

interface <dfn id=textmetrics>TextMetrics</dfn> {
  readonly attribute float <a href=#dom-textmetrics-width title=dom-textmetrics-width>width</a>;
};

interface <dfn id=imagedata>ImageData</dfn> {
  readonly attribute unsigned long <a href=#dom-imagedata-width title=dom-imagedata-width>width</a>;
  readonly attribute unsigned long <a href=#dom-imagedata-height title=dom-imagedata-height>height</a>;
  readonly attribute <a href=#canvaspixelarray>CanvasPixelArray</a> <a href=#dom-imagedata-data title=dom-imagedata-data>data</a>;
};

[<a href=#dom-canvaspixelarray-get title=dom-CanvasPixelArray-get>IndexGetter</a>, <a href=#dom-canvaspixelarray-set title=dom-CanvasPixelArray-set>IndexSetter</a>]
interface <dfn id=canvaspixelarray>CanvasPixelArray</dfn> {
  readonly attribute unsigned long <a href=#dom-canvaspixelarray-length title=dom-canvaspixelarray-length>length</a>;
};</pre>

  <p>The <dfn id=dom-context-2d-canvas title=dom-context-2d-canvas><code>canvas</code></dfn>
  attribute must return the <code><a href=#the-canvas-element>canvas</a></code> element that the
  context paints on.</p>


  <p>Unless otherwise stated, for the 2D context interface, any method
  call with a numeric argument whose value is infinite or a NaN value
  must be ignored.</p>

  <!--
   Philip Taylor wrote:
   > My experience with some 3d canvas code is that infinities come up in
   > naturally harmless places, e.g. having a function that scales by x then
   > translates by 1/x and wanting it to work when x=0 (which ought to draw
   > nothing, since anything it draws is zero pixels wide), and it's a bit
   > annoying to track down and fix those issues, so I'd probably like it if
   > they were harmless in canvas methods. Opera appears to silently not draw
   > anything if the transformation matrix is not finite, but Firefox throws
   > exceptions when passing in non-finite arguments.
  -->


  <p>Whenever the CSS value <code title="">currentColor</code> is used
  as a color in this API, the "computed value of the 'color' property"
  for the purposes of determining the computed value of the <code title="">currentColor</code> keyword is the computed value of the
  'color' property on the element in question at the time that the
  color is specified (e.g. when the appropriate attribute is set, or
  when the method is called; not when the color is rendered or
  otherwise used). If the computed value of the 'color' property is
  undefined for a particular case (e.g. because the element is not in
  a document), then the "computed value of the 'color' property" for
  the purposes of determining the computed value of the <code title="">currentColor</code> keyword is fully opaque black. <a href=#refsCSS3COLOR>[CSS3COLOR]</a></p>




  <h6 id=the-canvas-state><span class=secno>4.8.11.1.1 </span>The canvas state</h6>

  <p>Each context maintains a stack of drawing states. <dfn id=drawing-state title="drawing state">Drawing states</dfn> consist of:</p>

  <ul class=brief><li>The current <a href=#transformations title=dom-context-2d-transformation>transformation matrix</a>.</li>
   <li>The current <a href=#clipping-region>clipping region</a>.</li>
   <li>The current values of the following attributes: <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code>, <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code>, <code title=dom-context-2d-globalAlpha><a href=#dom-context-2d-globalalpha>globalAlpha</a></code>, <code title=dom-context-2d-lineWidth><a href=#dom-context-2d-linewidth>lineWidth</a></code>, <code title=dom-context-2d-lineCap><a href=#dom-context-2d-linecap>lineCap</a></code>, <code title=dom-context-2d-lineJoin><a href=#dom-context-2d-linejoin>lineJoin</a></code>, <code title=dom-context-2d-miterLimit><a href=#dom-context-2d-miterlimit>miterLimit</a></code>, <code title=dom-context-2d-shadowOffsetX><a href=#dom-context-2d-shadowoffsetx>shadowOffsetX</a></code>, <code title=dom-context-2d-shadowOffsetY><a href=#dom-context-2d-shadowoffsety>shadowOffsetY</a></code>, <code title=dom-context-2d-shadowBlur><a href=#dom-context-2d-shadowblur>shadowBlur</a></code>, <code title=dom-context-2d-shadowColor><a href=#dom-context-2d-shadowcolor>shadowColor</a></code>, <code title=dom-context-2d-globalCompositeOperation><a href=#dom-context-2d-globalcompositeoperation>globalCompositeOperation</a></code>, <code title=dom-context-2d-font><a href=#dom-context-2d-font>font</a></code>, <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code>, <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code>.</li>
  </ul><p class=note>The current path and the current bitmap are not part
  of the drawing state. The current path is persistent, and can only
  be reset using the <code title=dom-context-2d-beginPath><a href=#dom-context-2d-beginpath>beginPath()</a></code> method. The
  current bitmap is <span title=concept-canvas-image>a property of
  the canvas</span><!-- XXX xref -->, not the context.</p>

  <p>The <dfn id=dom-context-2d-save title=dom-context-2d-save><code>save()</code></dfn>
  method must push a copy of the current drawing state onto the
  drawing state stack.</p>

  <p>The <dfn id=dom-context-2d-restore title=dom-context-2d-restore><code>restore()</code></dfn> method
  must pop the top entry in the drawing state stack, and reset the
  drawing state it describes. If there is no saved state, the method
  must do nothing.</p>

  <!-- XXXv4
idea from Mihai:
> 5. Drawing states should be saveable with IDs, and for easier restoring.
>
> save(id)
> restore(id)
>
> If id is not provided, then save() works as defined now. The same for
> restore().
>
> Currently, it's not trivial to save and restore a specific state.
...and from Philip:
> I think a more convenient syntax would be:
>   var state = ctx.save();
>   ctx.restore(state);
> But how would it interact with normal calls to ctx.restore()?
  -->


  <h6 id=transformations><span class=secno>4.8.11.1.2 </span><dfn title=dom-context-2d-transformation>Transformations</dfn></h6>

  <p>The transformation matrix is applied to coordinates when creating
  shapes and paths.</p> <!-- conformance criteria for actual drawing
  are described in the various sections below -->

  <p>When the context is created, the transformation matrix must
  initially be the identity transform. It may then be adjusted using
  the transformation methods.</p>

  <p>The transformations must be performed in reverse order. For
  instance, if a scale transformation that doubles the width is
  applied, followed by a rotation transformation that rotates drawing
  operations by a quarter turn, and a rectangle twice as wide as it is
  tall is then drawn on the canvas, the actual result will be a
  square.</p>

  <p>The <dfn id=dom-context-2d-scale title=dom-context-2d-scale><code>scale(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must
  add the scaling transformation described by the arguments to the
  transformation matrix. The <var title="">x</var> argument represents
  the scale factor in the horizontal direction and the <var title="">y</var> argument represents the scale factor in the
  vertical direction. The factors are multiples.</p>

  <p>The <dfn id=dom-context-2d-rotate title=dom-context-2d-rotate><code>rotate(<var title="">angle</var>)</code></dfn> method must add the rotation
  transformation described by the argument to the transformation
  matrix. The <var title="">angle</var> argument represents a
  clockwise rotation angle expressed in radians.</p>

  <p>The <dfn id=dom-context-2d-translate title=dom-context-2d-translate><code>translate(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must
  add the translation transformation described by the arguments to the
  transformation matrix. The <var title="">x</var> argument represents
  the translation distance in the horizontal direction and the <var title="">y</var> argument represents the translation distance in the
  vertical direction. The arguments are in coordinate space units.</p>

  <p>The <dfn id=dom-context-2d-transform title=dom-context-2d-transform><code>transform(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>,
  <var title="">dy</var>)</code></dfn> method must multiply the
  current transformation matrix with the matrix described by:</p>

  <table class=matrix><tr><td><var title="">m11</var></td>
    <td><var title="">m21</var></td>
    <td><var title="">dx</var></td>
   <tr><td><var title="">m12</var></td>
    <td><var title="">m22</var></td>
    <td><var title="">dy</var></td>
   <tr><td>0</td>
    <td>0</td>
    <td>1</td>
   </table><p>The <dfn id=dom-context-2d-settransform title=dom-context-2d-setTransform><code>setTransform(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>,
  <var title="">dy</var>)</code></dfn> method must reset the current
  transform to the identity matrix, and then invoke the <code><a href=#dom-context-2d-transform title=dom-context-2d-transform>transform</a>(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>,
  <var title="">dy</var>)</code> method with the same arguments.</p>


  <h6 id=compositing><span class=secno>4.8.11.1.3 </span>Compositing</h6>

  <p>All drawing operations are affected by the global compositing
  attributes, <code title=dom-context-2d-globalAlpha><a href=#dom-context-2d-globalalpha>globalAlpha</a></code> and <code title=dom-context-2d-globalCompositeOperation><a href=#dom-context-2d-globalcompositeoperation>globalCompositeOperation</a></code>.</p>

  <!-- conformance criteria for painting are described in the "drawing
  model" section below -->

  <p>The <dfn id=dom-context-2d-globalalpha title=dom-context-2d-globalAlpha><code>globalAlpha</code></dfn>
  attribute gives an alpha value that is applied to shapes and images
  before they are composited onto the canvas. The value must be in the
  range from 0.0 (fully transparent) to 1.0 (no additional
  transparency). If an attempt is made to set the attribute to a value
  outside this range, the attribute must retain its previous
  value. When the context is created, the <code title=dom-context-2d-globalAlpha><a href=#dom-context-2d-globalalpha>globalAlpha</a></code> attribute must
  initially have the value 1.0.</p>

  <p>The <dfn id=dom-context-2d-globalcompositeoperation title=dom-context-2d-globalCompositeOperation><code>globalCompositeOperation</code></dfn>
  attribute sets how shapes and images are drawn onto the existing
  bitmap, once they have had <code title=dom-context-2d-globalAlpha><a href=#dom-context-2d-globalalpha>globalAlpha</a></code> and the
  current transformation matrix applied. It must be set to a value
  from the following list. In the descriptions below, the source
  image, <var title="">A</var>, is the shape or image being rendered,
  and the destination image, <var title="">B</var>, is the current
  state of the bitmap.</p>

  <dl><dt><dfn id=gcop-source-atop title=gcop-source-atop><code>source-atop</code></dfn></dt>

   <dd><var title="">A</var> atop <var title="">B</var>. Display the
   source image wherever both images are opaque.  Display the
   destination image wherever the destination image is opaque but the
   source image is transparent. Display transparency elsewhere.</dd>

   <dt><dfn id=gcop-source-in title=gcop-source-in><code>source-in</code></dfn></dt>

   <dd><var title="">A</var> in <var title="">B</var>. Display the
   source image wherever both the source image and destination image
   are opaque. Display transparency elsewhere.</dd>

   <dt><dfn id=gcop-source-out title=gcop-source-out><code>source-out</code></dfn></dt>

   <dd><var title="">A</var> out <var title="">B</var>. Display the
   source image wherever the source image is opaque and the
   destination image is transparent. Display transparency
   elsewhere.</dd>

   <dt><dfn id=gcop-source-over title=gcop-source-over><code>source-over</code></dfn> (default)</dt>

   <dd><var title="">A</var> over <var title="">B</var>. Display the
   source image wherever the source image is opaque.  Display the
   destination image elsewhere.</dd>


   <dt><dfn id=gcop-destination-atop title=gcop-destination-atop><code>destination-atop</code></dfn></dt>

   <dd><var title="">B</var> atop <var title="">A</var>. Same as <code title=gcop-source-atop><a href=#gcop-source-atop>source-atop</a></code> but using the
   destination image instead of the source image and vice versa.</dd>

   <dt><dfn id=gcop-destination-in title=gcop-destination-in><code>destination-in</code></dfn></dt>

   <dd><var title="">B</var> in <var title="">A</var>. Same as <code title=gcop-source-in><a href=#gcop-source-in>source-in</a></code> but using the destination
   image instead of the source image and vice versa.</dd>

   <dt><dfn id=gcop-destination-out title=gcop-destination-out><code>destination-out</code></dfn></dt>

   <dd><var title="">B</var> out <var title="">A</var>. Same as <code title=gcop-source-out><a href=#gcop-source-out>source-out</a></code> but using the destination
   image instead of the source image and vice versa.</dd>

   <dt><dfn id=gcop-destination-over title=gcop-destination-over><code>destination-over</code></dfn></dt>

   <dd><var title="">B</var> over <var title="">A</var>. Same as <code title=gcop-source-over><a href=#gcop-source-over>source-over</a></code> but using the
   destination image instead of the source image and vice versa.</dd>


<!-- no clear definition of this operator (doesn't correspond to a PorterDuff operator)
   <dt><dfn title="gcop-darker"><code>darker</code></dfn></dt>

   <dd>Display the sum of the source image and destination image,
   with color values approaching 0 as a limit.</dd>
-->

   <dt><dfn id=gcop-lighter title=gcop-lighter><code>lighter</code></dfn></dt>

   <dd><var title="">A</var> plus <var title="">B</var>. Display the
   sum of the source image and destination image, with color values
   approaching 1 as a limit.</dd>


   <dt><dfn id=gcop-copy title=gcop-copy><code>copy</code></dfn></dt>

   <dd><var title="">A</var> (<var title="">B</var> is
   ignored). Display the source image instead of the destination
   image.</dd>


   <dt><dfn id=gcop-xor title=gcop-xor><code>xor</code></dfn></dt>

   <dd><var title="">A</var> xor <var title="">B</var>. Exclusive OR
   of the source image and destination image.</dd>


   <dt><code><var title="">vendorName</var>-<var title="">operationName</var></code></dt>

   <dd>Vendor-specific extensions to the list of composition operators
   should use this syntax.</dd>

  </dl><p>These values are all case-sensitive &mdash; they must be used
  exactly as shown. User agents must not recognize values that are not
  a <a href=#case-sensitive>case-sensitive</a> match for one of the values given
  above.</p>

  <p>The operators in the above list must be treated as described by
  the Porter-Duff operator given at the start of their description
  (e.g. <var title="">A</var> over <var title="">B</var>). <a href=#refsPORTERDUFF>[PORTERDUFF]</a></p>
  <!--
        <dd id="refsPORTERDUFF">[PORTERDUFF]</dd>
        <dd><cite>Compositing Digital Images</cite>, SIGGRAPH '84: Proceedings of the 11th annual conference on Computer graphics and interactive techniques, Volume 18, Number 3, T. Porter, T Duff. ACM Press, July 1984. ISBN 0-89791-138-5.</dd>
  -->

  <p>On setting, if the user agent does not recognize the specified
  value, it must be ignored, leaving the value of <code title=dom-context-2d-globalCompositeOperation><a href=#dom-context-2d-globalcompositeoperation>globalCompositeOperation</a></code>
  unaffected.</p>

  <p>When the context is created, the <code title=dom-context-2d-globalCompositeOperation><a href=#dom-context-2d-globalcompositeoperation>globalCompositeOperation</a></code>
  attribute must initially have the value
  <code>source-over</code>.</p>


  <h6 id=colors-and-styles><span class=secno>4.8.11.1.4 </span>Colors and styles</h6>

  <p>The <dfn id=dom-context-2d-strokestyle title=dom-context-2d-strokeStyle><code>strokeStyle</code></dfn>
  attribute represents the color or style to use for the lines around
  shapes, and the <dfn id=dom-context-2d-fillstyle title=dom-context-2d-fillStyle><code>fillStyle</code></dfn>
  attribute represents the color or style to use inside the
  shapes.</p>

  <p>Both attributes can be either strings,
  <code><a href=#canvasgradient>CanvasGradient</a></code>s, or <code><a href=#canvaspattern>CanvasPattern</a></code>s. On
  setting, strings must be parsed as CSS &lt;color&gt; values and the
  color assigned, and <code><a href=#canvasgradient>CanvasGradient</a></code> and
  <code><a href=#canvaspattern>CanvasPattern</a></code> objects must be assigned themselves. <a href=#refsCSS3COLOR>[CSS3COLOR]</a> If the value is a string but
  is not a valid color, or is neither a string, a
  <code><a href=#canvasgradient>CanvasGradient</a></code>, nor a <code><a href=#canvaspattern>CanvasPattern</a></code>, then
  it must be ignored, and the attribute must retain its previous
  value.</p>

  <p>On getting, if the value is a color, then the <a href=#serialization-of-a-color title="serialization of a color">serialization of the color</a>
  must be returned. Otherwise, if it is not a color but a
  <code><a href=#canvasgradient>CanvasGradient</a></code> or <code><a href=#canvaspattern>CanvasPattern</a></code>, then the
  respective object must be returned. (Such objects are opaque and
  therefore only useful for assigning to other attributes or for
  comparison to other gradients or patterns.)</p>

  <p>The <dfn id=serialization-of-a-color>serialization of a color</dfn> for a color value is a
  string, computed as follows: if it has alpha equal to 1.0, then the
  string is a lowercase six-digit hex value, prefixed with a "#"
  character (U+0023 NUMBER SIGN), with the first two digits
  representing the red component, the next two digits representing the
  green component, and the last two digits representing the blue
  component, the digits being in the range 0-9 a-f (U+0030 to U+0039
  and U+0061 to U+0066). Otherwise, the color value has alpha less
  than 1.0, and the string is the color value in the CSS <code title="">rgba()</code> functional-notation format: the literal
  string <code title="">rgba</code> (U+0072 U+0067 U+0062 U+0061)
  followed by a U+0028 LEFT PARENTHESIS, a base-ten integer in the
  range 0-255 representing the red component (using digits 0-9, U+0030
  to U+0039, in the shortest form possible), a literal U+002C COMMA
  and U+0020 SPACE, an integer for the green component, a comma and a
  space, an integer for the blue component, another comma and space, a
  U+0030 DIGIT ZERO, a U+002E FULL STOP (representing the decimal
  point), one or more digits in the range 0-9 (U+0030 to U+0039)
  representing the fractional part of the alpha value, and finally a
  U+0029 RIGHT PARENTHESIS.</p>

  <p>When the context is created, the <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code> and <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code> attributes must
  initially have the string value <code title="">#000000</code>.</p>


  <p>There are two types of gradients, linear gradients and radial
  gradients, both represented by objects implementing the opaque
  <code><a href=#canvasgradient>CanvasGradient</a></code> interface.</p>

  <p id=interpolation>Once a gradient has been created (see below),
  stops are placed along it to define how the colors are distributed
  along the gradient. The color of the gradient at each stop is the
  color specified for that stop. Between each such stop, the colors
  and the alpha component must be linearly interpolated over the RGBA
  space without premultiplying the alpha value to find the color to
  use at that offset. Before the first stop, the color must be the
  color of the first stop. After the last stop, the color must be the
  color of the last stop. When there are no stops, the gradient is
  transparent black.</p>

  <p>The <dfn id=dom-canvasgradient-addcolorstop title=dom-canvasgradient-addColorStop><code>addColorStop(<var title="">offset</var>, <var title="">color</var>)</code></dfn>
  method on the <code><a href=#canvasgradient>CanvasGradient</a></code> interface adds a new stop
  to a gradient. If the <var title="">offset</var> is less than 0,
  greater than 1, infinite, or NaN, then an
  <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception must be raised. If the <var title="">color</var> cannot be parsed as a CSS color, then a
  <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception must be raised.  Otherwise, the
  gradient must have a new stop placed, at offset <var title="">offset</var> relative to the whole gradient, and with the
  color obtained by parsing <var title="">color</var> as a CSS
  &lt;color&gt; value. If multiple stops are added at the same offset
  on a gradient, they must be placed in the order added, with the
  first one closest to the start of the gradient, and each subsequent
  one infinitesimally further along towards the end point (in effect
  causing all but the first and last stop added at each point to be
  ignored).</p>

  <p>The <dfn id=dom-context-2d-createlineargradient title=dom-context-2d-createLinearGradient><code>createLinearGradient(<var title="">x0</var>, <var title="">y0</var>, <var title="">x1</var>,
  <var title="">y1</var>)</code></dfn> method takes four arguments
  that represent the start point (<var title="">x0</var>, <var title="">y0</var>) and end point (<var title="">x1</var>, <var title="">y1</var>) of the gradient. If any of the arguments to <code title=dom-context-2d-createLinearGradient><a href=#dom-context-2d-createlineargradient>createLinearGradient()</a></code>
  are infinite or NaN, the method must raise a
  <code><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception. Otherwise, the method must
  return a linear <code><a href=#canvasgradient>CanvasGradient</a></code> initialized with the
  specified line.</p>

  <p>Linear gradients must be rendered such that all points on a line
  perpendicular to the line that crosses the start and end points have
  the color at the point where those two lines cross (with the colors
  coming from the <a href=#interpolation>interpolation and
  extrapolation</a> described above). The points in the linear
  gradient must be transformed as described by the <a href=#transformations title=dom-context-2d-transformation>current transformation
  matrix</a> when rendering.</p>

  <p>If <span><var title="">x<sub>0</sub></var>&nbsp;=&nbsp;<var title="">x<sub>1</sub></var></span> and <span><var title="">y<sub>0</sub></var>&nbsp;=&nbsp;<var title="">y<sub>1</sub></var></span>, then the linear gradient must
  paint nothing.</p> <!-- XXX could make this paint the start color,
  or the end color, or raise an exception -->

  <p>The <dfn id=dom-context-2d-createradialgradient title=dom-context-2d-createRadialGradient><code>createRadialGradient(<var title="">x0</var>, <var title="">y0</var>, <var title="">r0</var>,
  <var title="">x1</var>, <var title="">y1</var>, <var title="">r1</var>)</code></dfn> method takes six arguments, the
  first three representing the start circle with origin (<var title="">x0</var>, <var title="">y0</var>) and radius <var title="">r0</var>, and the last three representing the end circle
  with origin (<var title="">x1</var>, <var title="">y1</var>) and
  radius <var title="">r1</var>. The values are in coordinate space
  units. If any of the arguments are infinite or NaN, a
  <code><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception must be raised. If either
  of <var title="">r0</var> or <var title="">r1</var> are negative, an
  <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception must be raised.  Otherwise,
  the method must return a radial <code><a href=#canvasgradient>CanvasGradient</a></code>
  initialized with the two specified circles.</p>

  <p>Radial gradients must be rendered by following these steps:</p>

  <ol><li><p>If <span><var title="">x<sub>0</sub></var>&nbsp;=&nbsp;<var title="">x<sub>1</sub></var></span> and <span><var title="">y<sub>0</sub></var>&nbsp;=&nbsp;<var title="">y<sub>1</sub></var></span> and <span><var title="">r<sub>0</sub></var>&nbsp;=&nbsp;<var title="">r<sub>1</sub></var></span>, then the radial gradient must
   paint nothing. Abort these steps.</p> <!-- XXX could make this
   paint the start color, or the end color, or a circle of one in
   the other, or raise an exception --> </li>

   <li>

    <p>Let <span>x(<var title="">&omega;</var>)&nbsp;=&nbsp;(<var title="">x<sub>1</sub></var>-<var title="">x<sub>0</sub></var>)<var title="">&omega;</var>&nbsp;+&nbsp;<var title="">x<sub>0</sub></var></span></p>

    <p>Let <span>y(<var title="">&omega;</var>)&nbsp;=&nbsp;(<var title="">y<sub>1</sub></var>-<var title="">y<sub>0</sub></var>)<var title="">&omega;</var>&nbsp;+&nbsp;<var title="">y<sub>0</sub></var></span></p>

    <p>Let <span>r(<var title="">&omega;</var>)&nbsp;=&nbsp;(<var title="">r<sub>1</sub></var>-<var title="">r<sub>0</sub></var>)<var title="">&omega;</var>&nbsp;+&nbsp;<var title="">r<sub>0</sub></var></span></p>

    <p>Let the color at <var title="">&omega;</var> be the color at
    that position on the gradient (with the colors coming from the <a href=#interpolation>interpolation and extrapolation</a>
    described above).</p>

   </li>

   <li><p>For all values of <var title="">&omega;</var> where
   <span>r(<var title="">&omega;</var>)&nbsp;&gt;&nbsp;0</span>,
   starting with the value of <var title="">&omega;</var> nearest to
   positive infinity and ending with the value of <var title="">&omega;</var> nearest to negative infinity, draw the
   circumference of the circle with radius <span>r(<var title="">&omega;</var>)</span> at position (<span>x(<var title="">&omega;</var>)</span>, <span>y(<var title="">&omega;</var>)</span>), with the color at <var title="">&omega;</var>, but only painting on the parts of the
   canvas that have not yet been painted on by earlier circles in this
   step for this rendering of the gradient.</li>

  </ol><p class=note>This effectively creates a cone, touched by the two
  circles defined in the creation of the gradient, with the part of
  the cone before the start circle (0.0) using the color of the first
  offset, the part of the cone after the end circle (1.0) using the
  color of the last offset, and areas outside the cone untouched by
  the gradient (transparent black).</p>

  <p>Gradients must be painted only where the relevant stroking or
  filling effects requires that they be drawn.</p>

  <p>The points in the radial gradient must be transformed as
  described by the <a href=#transformations title=dom-context-2d-transformation>current
  transformation matrix</a> when rendering.</p>

<!--
  <p>Support for actually painting gradients is optional. Instead of
  painting the gradients, user agents may instead just paint the first
  stop's color. However, <code
  title="dom-context-2d-createLinearGradient">createLinearGradient()</code>
  and <code
  title="dom-context-2d-createRadialGradient">createRadialGradient()</code>
  must always return objects when passed valid arguments.</p>
-->


  <p>Patterns are represented by objects implementing the opaque
  <code><a href=#canvaspattern>CanvasPattern</a></code> interface.</p>

  <p>To create objects of this type, the <dfn id=dom-context-2d-createpattern title=dom-context-2d-createPattern><code>createPattern(<var title="">image</var>, <var title="">repetition</var>)</code></dfn>
  method is used. The first argument gives the image to use as the
  pattern (either an <code><a href=#htmlimageelement>HTMLImageElement</a></code> or an
  <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code>). Modifying this image after calling
  the <code title=dom-context-2d-createPattern><a href=#dom-context-2d-createpattern>createPattern()</a></code> method
  must not affect the pattern. The second argument must be a string
  with one of the following values: <code title="">repeat</code>,
  <code title="">repeat-x</code>, <code title="">repeat-y</code>,
  <code title="">no-repeat</code>. If the empty string or null is
  specified, <code title="">repeat</code> must be assumed. If an
  unrecognized value is given, then the user agent must raise a
  <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception. User agents must recognize the
  four values described above exactly (e.g. they must not do case
  folding). The method must return a <code><a href=#canvaspattern>CanvasPattern</a></code> object
  suitably initialized.</p>

  <p>The <var title="">image</var> argument must be an instance of an
  <code><a href=#htmlimageelement>HTMLImageElement</a></code> or <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code>. If
  the <var title="">image</var> is of the wrong type or null, the
  implementation must raise a <code><a href=#type_mismatch_err>TYPE_MISMATCH_ERR</a></code>
  exception.</p>
  <!-- drawImage() has an equivalent paragraph -->

  <p>If the <var title="">image</var> argument is an
  <code><a href=#htmlimageelement>HTMLImageElement</a></code> object whose <code title=dom-img-complete><a href=#dom-img-complete>complete</a></code> attribute is false, then
  the implementation must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code>
  exception.</p>
  <!-- drawImage() has an equivalent paragraph -->

  <p>If the <var title="">image</var> argument is an
  <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code> object with either a horizontal
  dimension or a vertical dimension equal to zero, then the
  implementation must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code>
  exception.</p>
  <!-- drawImage() has an equivalent paragraph -->

  <p>Patterns must be painted so that the top left of the first image
  is anchored at the origin of the coordinate space, and images are
  then repeated horizontally to the left and right (if the
  <code>repeat-x</code> string was specified) or vertically up and
  down (if the <code>repeat-y</code> string was specified) or in all
  four directions all over the canvas (if the <code>repeat</code>
  string was specified). The images are not scaled by this process;
  one CSS pixel of the image must be painted on one coordinate space
  unit. Of course, patterns must actually be painted only where the
  stroking or filling effect requires that they be drawn, and are
  affected by the current transformation matrix.</p>

  <p>When the <code title=dom-context-2d-createPattern><a href=#dom-context-2d-createpattern>createPattern()</a></code> method
  is passed, as its <var title="">image</var> argument, an animated
  image, the poster frame of the animation, or the first frame of the
  animation if there is no poster frame, must be used.</p>
  <!-- drawImage() has an equivalent paragraph -->

  <!--
   XXXv4 Requests for v4 features:
    * apply transforms to patterns, so you don't have to create
      transformed patterns manually by rendering them to an off-screen
      canvas then using that canvas as the pattern.
  -->



  <h6 id=line-styles><span class=secno>4.8.11.1.5 </span>Line styles</h6>

  <p>The <dfn id=dom-context-2d-linewidth title=dom-context-2d-lineWidth><code>lineWidth</code></dfn>
  attribute gives the width of lines, in coordinate space units. On
  setting, zero, negative, infinite, and NaN values must be ignored,
  leaving the value unchanged.</p>

  <p>When the context is created, the <code title=dom-context-2d-lineWidth><a href=#dom-context-2d-linewidth>lineWidth</a></code> attribute must
  initially have the value <code>1.0</code>.</p>

  <p>The <dfn id=dom-context-2d-linecap title=dom-context-2d-lineCap><code>lineCap</code></dfn> attribute
  defines the type of endings that UAs will place on the end of
  lines. The three valid values are <code>butt</code>,
  <code>round</code>, and <code>square</code>. The <code>butt</code>
  value means that the end of each line has a flat edge perpendicular
  to the direction of the line (and that no additional line cap is
  added). The <code>round</code> value means that a semi-circle with
  the diameter equal to the width of the line must then be added on to
  the end of the line. The <code>square</code> value means that a
  rectangle with the length of the line width and the width of half
  the line width, placed flat against the edge perpendicular to the
  direction of the line, must be added at the end of each line. On
  setting, any other value than the literal strings <code>butt</code>,
  <code>round</code>, and <code>square</code> must be ignored, leaving
  the value unchanged.</p>

  <p>When the context is created, the <code title=dom-context-2d-lineCap><a href=#dom-context-2d-linecap>lineCap</a></code> attribute must
  initially have the value <code>butt</code>.</p>


  <p>The <dfn id=dom-context-2d-linejoin title=dom-context-2d-lineJoin><code>lineJoin</code></dfn>
  attribute defines the type of corners that UAs will place where two
  lines meet. The three valid values are <code>bevel</code>,
  <code>round</code>, and <code>miter</code>.</p>

  <p>On setting, any other value than the literal strings
  <code>bevel</code>, <code>round</code>, and <code>miter</code> must
  be ignored, leaving the value unchanged.</p>

  <p>When the context is created, the <code title=dom-context-2d-lineJoin><a href=#dom-context-2d-linejoin>lineJoin</a></code> attribute must
  initially have the value <code>miter</code>.</p>

  <p>A join exists at any point in a subpath shared by two consecutive
  lines. When a subpath is closed, then a join also exists at its
  first point (equivalent to its last point) connecting the first and
  last lines in the subpath.</p>

  <p>In addition to the point where the join occurs, two additional
  points are relevant to each join, one for each line: the two corners
  found half the line width away from the join point, one
  perpendicular to each line, each on the side furthest from the other
  line.</p>

  <p>A filled triangle connecting these two opposite corners with a
  straight line, with the third point of the triangle being the join
  point, must be rendered at all joins. The <code title=dom-context-2d-lineJoin><a href=#dom-context-2d-linejoin>lineJoin</a></code> attribute controls
  whether anything else is rendered. The three aforementioned values
  have the following meanings:</p>

  <p>The <code>bevel</code> value means that this is all that is
  rendered at joins.</p>

  <p>The <code>round</code> value means that a filled arc connecting
  the two aforementioned corners of the join, abutting (and not
  overlapping) the aforementioned triangle, with the diameter equal to
  the line width and the origin at the point of the join, must be
  rendered at joins.</p>

  <p>The <code>miter</code> value means that a second filled triangle
  must (if it can given the miter length) be rendered at the join,
  with one line being the line between the two aforementioned corners,
  abutting the first triangle, and the other two being continuations of
  the outside edges of the two joining lines, as long as required to
  intersect without going over the miter length.</p>

  <p>The miter length is the distance from the point where the lines
  touch on the inside of the join to the intersection of the line
  edges on the outside of the join. The miter limit ratio is the
  maximum allowed ratio of the miter length to half the line width. If
  the miter length would cause the miter limit ratio to be exceeded,
  this second triangle must not be rendered.</p>


  <p>The miter limit ratio can be explicitly set using the <dfn id=dom-context-2d-miterlimit title=dom-context-2d-miterLimit><code>miterLimit</code></dfn>
  attribute. On setting, zero, negative, infinite, and NaN values must
  be ignored, leaving the value unchanged.</p>

  <p>When the context is created, the <code title=dom-context-2d-miterLimit><a href=#dom-context-2d-miterlimit>miterLimit</a></code> attribute must
  initially have the value <code>10.0</code>.</p>


  <!-- XXX this section doesn't say what these attributes return or
  what they do on setting. not a big deal; it's pretty obvious. but if
  anyone complains, we'll have to add it -->

  <!--
XXXv4 dashed lines have been requested.  Philip Taylor provides these
notes on what would need to be defined for dashed lines:
> I don't think it's entirely trivial to add, to the detail that's
> necessary in a specification. The common graphics APIs (at least
> Cairo, Quartz and java.awt.Graphics, and any SVG implementation) all
> have dashes specified by passing an array of dash lengths (alternating
> on/off), so that should be alright as long as you define what units
> it's measured in and what happens when you specify an odd number of
> values and how errors are handled and what happens if you update the
> array later. But after that, what does it do when stroking multiple
> subpaths, in terms of offsetting the dashes? When you use strokeRect,
> where is offset 0? Does moveTo reset the offset? How does it interact
> with lineCap/lineJoin? All the potential issues need test cases too,
> and the implementations need to make sure they handle any edge cases
> that the underlying graphics library does differently. (SVG Tiny 1.2
> appears to skip some of the problems by leaving things undefined and
> allowing whatever behavior the graphics library has.)
  -->


  <h6 id=shadows><span class=secno>4.8.11.1.6 </span><dfn>Shadows</dfn></h6>

  <p>All drawing operations are affected by the four global shadow
  attributes.</p>

  <p>The <dfn id=dom-context-2d-shadowcolor title=dom-context-2d-shadowColor><code>shadowColor</code></dfn>
  attribute sets the color of the shadow.</p>

  <p>When the context is created, the <code title=dom-context-2d-shadowColor><a href=#dom-context-2d-shadowcolor>shadowColor</a></code> attribute
  initially must be fully-transparent black.</p>

  <p>On getting, the <a href=#serialization-of-a-color title="serialization of a
  color">serialization of the color</a> must be returned.</p>

  <p>On setting, the new value must be parsed as a CSS &lt;color&gt;
  value and the color assigned. If the value is not a valid color,
  then it must be ignored, and the attribute must retain its previous
  value.  <a href=#refsCSS3COLOR>[CSS3COLOR]</a></p>

  <p>The <dfn id=dom-context-2d-shadowoffsetx title=dom-context-2d-shadowOffsetX><code>shadowOffsetX</code></dfn>
  and <dfn id=dom-context-2d-shadowoffsety title=dom-context-2d-shadowOffsetY><code>shadowOffsetY</code></dfn>
  attributes specify the distance that the shadow will be offset in
  the positive horizontal and positive vertical distance
  respectively. Their values are in coordinate space units. They are
  not affected by the current transformation matrix.</p>

  <p>When the context is created, the shadow offset attributes must
  initially have the value <code>0</code>.</p>

  <p>On getting, they must return their current value. On setting, the
  attribute being set must be set to the new value, except if the
  value is infinite or NaN, in which case the new value must be
  ignored.</p>

  <p>The <dfn id=dom-context-2d-shadowblur title=dom-context-2d-shadowBlur><code>shadowBlur</code></dfn>
  attribute specifies the size of the blurring effect. (The units do
  not map to coordinate space units, and are not affected by the
  current transformation matrix.)</p>

  <p>When the context is created, the <code title=dom-context-2d-shadowBlur><a href=#dom-context-2d-shadowblur>shadowBlur</a></code> attribute must
  initially have the value <code>0</code>.</p>

  <p>On getting, the attribute must return its current value. On
  setting the attribute must be set to the new value, except if the
  value is negative, infinite or NaN, in which case the new value must
  be ignored.</p>

  <p>When shadows are drawn, they must be rendered as follows:</p>

  <ol><li> <p>Let <var title="">A</var> be the source image for which a
   shadow is being created.</p> </li>

   <li> <p>Let <var title="">B</var> be an infinite transparent black
   bitmap, with a coordinate space and an origin identical to <var title="">A</var>.</p> </li>

   <li> <p>Copy the alpha channel of <var title="">A</var> to <var title="">B</var>, offset by <code title=dom-context-2d-shadowOffsetX><a href=#dom-context-2d-shadowoffsetx>shadowOffsetX</a></code> in the
   positive <var title="">x</var> direction, and <code title=dom-context-2d-shadowOffsetY><a href=#dom-context-2d-shadowoffsety>shadowOffsetY</a></code> in the
   positive <var title="">y</var> direction.</p> </li>

   <li> <p>If <code title=dom-context-2d-shadowBlur><a href=#dom-context-2d-shadowblur>shadowBlur</a></code> is greater than
   0:</p>

    <ol><li> <p>If <code title=dom-context-2d-shadowBlur><a href=#dom-context-2d-shadowblur>shadowBlur</a></code> is less than
     8, let <var title="">&sigma;</var> be half the value of <code title=dom-context-2d-shadowBlur><a href=#dom-context-2d-shadowblur>shadowBlur</a></code>; otherwise,
     let <var title="">&sigma;</var> be the square root of multiplying
     the value of <code title=dom-context-2d-shadowBlur><a href=#dom-context-2d-shadowblur>shadowBlur</a></code> by
     2.</li>

     <li> <p>Perform a 2D Gaussian Blur on <var title="">B</var>,
     using <var title="">&sigma;</var> as the standard
     deviation. </li> <!-- need a reference for this XXX -->

    </ol><p>User agents may limit values of <var title="">&sigma;</var> to
    an implementation-specific maximum value to avoid exceeding
    hardware limitations during the Gaussian blur operation.</p>

   </li>

   <li> <p>Set the red, green, and blue components of every pixel in
   <var title="">B</var> to the red, green, and blue components
   (respectively) of the color of <code title=dom-context-2d-shadowColor><a href=#dom-context-2d-shadowcolor>shadowColor</a></code>.</p> </li>

   <li> <p>Multiply the alpha component of every pixel in <var title="">B</var> by the alpha component of the color of <code title=dom-context-2d-shadowColor><a href=#dom-context-2d-shadowcolor>shadowColor</a></code>.</p> </li>

   <li> <p>The shadow is in the bitmap <var title="">B</var>, and is
   rendered as part of the drawing model described below.</p> </li>

  </ol><h6 id=simple-shapes-(rectangles)><span class=secno>4.8.11.1.7 </span>Simple shapes (rectangles)</h6>

  <p>There are three methods that immediately draw rectangles to the
  bitmap. They each take four arguments; the first two give the <var title="">x</var> and <var title="">y</var> coordinates of the top
  left of the rectangle, and the second two give the width <var title="">w</var> and height <var title="">h</var> of the rectangle,
  respectively.</p>

  <p>The <a href=#transformations title=dom-context-2d-transformation>current
  transformation matrix</a> must be applied to the following four
  coordinates, which form the path that must then be closed to get the
  specified rectangle: <span>(<var title="">x</var>, <var title="">y</var>)</span>, <span>(<span><var title="">x</var>+<var title="">w</var></span>, <var title="">y</var>)</span>,
  <span>(<span><var title="">x</var>+<var title="">w</var></span>,
  <span><var title="">y</var>+<var title="">h</var></span>)</span>,
  <span>(<var title="">x</var>, <span><var title="">y</var>+<var title="">h</var></span>)</span>.</p>

  <p>Shapes are painted without affecting the current path, and are
  subject to the <a href=#clipping-region title="clipping region">clipping region</a>,
  and, with the exception of <code title=dom-context-2d-clearRect><a href=#dom-context-2d-clearrect>clearRect()</a></code>, also <a href=#shadows title=shadows>shadow effects</a>, <a href=#dom-context-2d-globalalpha title=dom-context-2d-globalAlpha>global alpha</a>, and <a href=#dom-context-2d-globalcompositeoperation title=dom-context-2d-globalCompositeOperation>global composition
  operators</a>.</p>

  <p>The <dfn id=dom-context-2d-clearrect title=dom-context-2d-clearRect><code>clearRect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must clear the pixels in the
  specified rectangle that also intersect the current clipping region
  to a fully transparent black, erasing any previous image. If either
  height or width are zero, this method has no effect.</p>

  <p>The <dfn id=dom-context-2d-fillrect title=dom-context-2d-fillRect><code>fillRect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must paint the specified
  rectangular area using the <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code>. If either height
  or width are zero, this method has no effect.</p>

  <p>The <dfn id=dom-context-2d-strokerect title=dom-context-2d-strokeRect><code>strokeRect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must stroke the specified
  rectangle's path using the <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code>, <code title=dom-context-2d-lineWidth><a href=#dom-context-2d-linewidth>lineWidth</a></code>, <code title=dom-context-2d-lineJoin><a href=#dom-context-2d-linejoin>lineJoin</a></code>, and (if
  appropriate) <code title=dom-context-2d-miterLimit><a href=#dom-context-2d-miterlimit>miterLimit</a></code> attributes. If
  both height and width are zero, this method has no effect, since
  there is no path to stroke (it's a point). If only one of the two is
  zero, then the method will draw a line instead (the path for the
  outline is just a straight line along the non-zero dimension).</p>


  <h6 id=complex-shapes-(paths)><span class=secno>4.8.11.1.8 </span>Complex shapes (paths)</h6>

  <p>The context always has a current path. There is only one current
  path, it is not part of the <span title=dom-context-2d->drawing
  state</span>.</p>

  <p>A <dfn id=path>path</dfn> has a list of zero or more subpaths. Each
  subpath consists of a list of one or more points, connected by
  straight or curved lines, and a flag indicating whether the subpath
  is closed or not. A closed subpath is one where the last point of
  the subpath is connected to the first point of the subpath by a
  straight line. Subpaths with fewer than two points are ignored when
  painting the path.</p>

  <p>Initially, the context's path must have zero subpaths.</p>

  <p>The points and lines added to the path by these methods must be
  transformed according to the <a href=#transformations title=dom-context-2d-transformation>current transformation
  matrix</a> as they are added.</p>


  <p>The <dfn id=dom-context-2d-beginpath title=dom-context-2d-beginPath><code>beginPath()</code></dfn>
  method must empty the list of subpaths so that the context once
  again has zero subpaths.</p>


  <p>The <dfn id=dom-context-2d-moveto title=dom-context-2d-moveTo><code>moveTo(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must
  create a new subpath with the specified point as its first (and
  only) point.</p>


  <p>The <dfn id=dom-context-2d-closepath title=dom-context-2d-closePath><code>closePath()</code></dfn>
  method must do nothing if the context has no subpaths. Otherwise, it
  must mark the last subpath as closed, create a new subpath whose
  first point is the same as the previous subpath's first point, and
  finally add this new subpath to the path. (If the last subpath had
  more than one point in its list of points, then this is equivalent
  to adding a straight line connecting the last point back to the
  first point, thus "closing" the shape, and then repeating the last
  <code title=dom-context-2d-moveTo><a href=#dom-context-2d-moveto>moveTo()</a></code> call.)</p>


  <p>New points and the lines connecting them are added to subpaths
  using the methods described below. In all cases, the methods only
  modify the last subpath in the context's paths.</p>


  <p>The <dfn id=dom-context-2d-lineto title=dom-context-2d-lineTo><code>lineTo(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must do
  nothing if the context has no subpaths. Otherwise, it must connect
  the last point in the subpath to the given point (<var title="">x</var>, <var title="">y</var>) using a straight line, and
  must then add the given point (<var title="">x</var>, <var title="">y</var>) to the subpath.</p>


  <p>The <dfn id=dom-context-2d-quadraticcurveto title=dom-context-2d-quadraticCurveTo><code>quadraticCurveTo(<var title="">cpx</var>, <var title="">cpy</var>, <var title="">x</var>,
  <var title="">y</var>)</code></dfn> method must do nothing if the
  context has no subpaths. Otherwise it must connect the last point in
  the subpath to the given point (<var title="">x</var>, <var title="">y</var>) using a quadratic B&eacute;zier curve with control
  point (<var title="">cpx</var>, <var title="">cpy</var>), and must
  then add the given point (<var title="">x</var>, <var title="">y</var>) to the subpath. <a href=#refsBEZIER>[BEZIER]</a></p>
  <!-- XXX [BEZIER] Paul de Casteljau, Courbes &agrave; p&ocirc;les, INPI, 1959 -->


  <p>The <dfn id=dom-context-2d-beziercurveto title=dom-context-2d-bezierCurveTo><code>bezierCurveTo(<var title="">cp1x</var>, <var title="">cp1y</var>, <var title="">cp2x</var>, <var title="">cp2y</var>, <var title="">x</var>, <var title="">y</var>)</code></dfn> method must do
  nothing if the context has no subpaths. Otherwise, it must connect
  the last point in the subpath to the given point (<var title="">x</var>, <var title="">y</var>) using a cubic B&eacute;zier
  curve with control points (<var title="">cp1x</var>, <var title="">cp1y</var>) and (<var title="">cp2x</var>, <var title="">cp2y</var>). Then, it must add the point (<var title="">x</var>, <var title="">y</var>) to the subpath. <a href=#refsBEZIER>[BEZIER]</a></p>
  <!-- XXX [BEZIER] Paul de Casteljau, Courbes &agrave; p&ocirc;les, INPI, 1959 -->


  <p>The <dfn id=dom-context-2d-arcto title=dom-context-2d-arcTo><code>arcTo(<var title="">x1</var>, <var title="">y1</var>, <var title="">x2</var>,
  <var title="">y2</var>, <var title="">radius</var>)</code></dfn>
  method must do nothing if the context has no subpaths. If the
  context <em>does</em> have a subpath, then the behavior depends on
  the arguments and the last point in the subpath.</p>

  <p>Negative values for <var title="">radius</var> must cause the
  implementation to raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
  exception.</p>

  <p>Let the point (<var title="">x0</var>, <var title="">y0</var>) be
  the last point in the subpath.</p>

  <p>If the point (<var title="">x0</var>, <var title="">y0</var>) is
  equal to the point (<var title="">x1</var>, <var title="">y1</var>),
  or if the point (<var title="">x1</var>, <var title="">y1</var>) is
  equal to the point (<var title="">x2</var>, <var title="">y2</var>),
  or if the radius <var title="">radius</var> is zero, then the method
  must add the point (<var title="">x1</var>, <var title="">y1</var>)
  to the subpath, and connect that point to the previous point (<var title="">x0</var>, <var title="">y0</var>) by a straight line.</p>

  <p>Otherwise, if the points (<var title="">x0</var>, <var title="">y0</var>), (<var title="">x1</var>, <var title="">y1</var>), and (<var title="">x2</var>, <var title="">y2</var>) all lie on a single straight line, then: if the
  direction from (<var title="">x0</var>, <var title="">y0</var>) to
  (<var title="">x1</var>, <var title="">y1</var>) is the same as the
  direction from (<var title="">x1</var>, <var title="">y1</var>) to
  (<var title="">x2</var>, <var title="">y2</var>), then the method
  must add the point (<var title="">x1</var>, <var title="">y1</var>)
  to the subpath, and connect that point to the previous point (<var title="">x0</var>, <var title="">y0</var>) by a straight line;
  otherwise, the direction from (<var title="">x0</var>, <var title="">y0</var>) to (<var title="">x1</var>, <var title="">y1</var>) is the opposite of the direction from (<var title="">x1</var>, <var title="">y1</var>) to (<var title="">x2</var>, <var title="">y2</var>), and the method must add
  a point (<var title="">x<sub>&infin;</sub></var>, <var title="">y<sub>&infin;</sub></var>) to the subpath, and connect that
  point to the previous point (<var title="">x0</var>, <var title="">y0</var>) by a straight line, where (<var title="">x<sub>&infin;</sub></var>, <var title="">y<sub>&infin;</sub></var>) is the point that is infinitely
  far away from (<var title="">x1</var>, <var title="">y1</var>), that
  lies on the same line as (<var title="">x0</var>, <var title="">y0</var>), (<var title="">x1</var>, <var title="">y1</var>), and (<var title="">x2</var>, <var title="">y2</var>), and that is on the same side of (<var title="">x1</var>, <var title="">y1</var>) on that line as (<var title="">x2</var>, <var title="">y2</var>).</p>

  <p>Otherwise, let <var title="">The Arc</var> be the shortest arc
  given by circumference of the circle that has radius <var title="">radius</var>, and that has one point tangent to the
  half-infinite line that crosses the point (<var title="">x0</var>,
  <var title="">y0</var>) and ends at the point (<var title="">x1</var>, <var title="">y1</var>), and that has a different
  point tangent to the half-infinite line that ends at the point (<var title="">x1</var>, <var title="">y1</var>) and crosses the point
  (<var title="">x2</var>, <var title="">y2</var>). The points at
  which this circle touches these two lines are called the start and
  end tangent points respectively.</p>

  <p>The method must connect the point (<var title="">x0</var>, <var title="">y0</var>) to the start tangent point by a straight line,
  adding the start tangent point to the subpath, and then must connect
  the start tangent point to the end tangent point by <var title="">The Arc</var>, adding the end tangent point to the
  subpath.</p>


  <p>The <dfn id=dom-context-2d-arc title=dom-context-2d-arc><code>arc(<var title="">x</var>, <var title="">y</var>, <var title="">radius</var>,
  <var title="">startAngle</var>, <var title="">endAngle</var>, <var title="">anticlockwise</var>)</code></dfn> method draws an arc. If
  the context has any subpaths, then the method must add a straight
  line from the last point in the subpath to the start point of the
  arc. In any case, it must draw the arc between the start point of
  the arc and the end point of the arc, and add the start and end
  points of the arc to the subpath. The arc and its start and end
  points are defined as follows:</p>

  <p>Consider a circle that has its origin at (<var title="">x</var>,
  <var title="">y</var>) and that has radius <var title="">radius</var>. The points at <var title="">startAngle</var>
  and <var title="">endAngle</var> along this circle's circumference,
  measured in radians clockwise from the positive x-axis, are the
  start and end points respectively.</p>

  <p>If the <var title="">anticlockwise</var> argument is false and
  <span><var title="">endAngle</var>-<var title="">startAngle</var></span> is equal to or greater than
  <span>2&pi;</span>, or, if the <var title="">anticlockwise</var>
  argument is <em>true</em> and <span><var title="">startAngle</var>-<var title="">endAngle</var></span> is
  equal to or greater than <span>2&pi;</span>, then the arc is the
  whole circumference of this circle.</p>

  <!--alternatively (this is not equivalent, but might make more
  sense, if browsers are willing to change to it: <p>If the absolute
  magnitude of the difference between the <var
  title="">startAngle</var> and <var title="">endAngle</var> angles is
  equal to or greater than <span>2&pi;</span>, then the arc is the
  whole circumference of this circle.</p>-->

  <p>Otherwise, the arc is the path along the circumference of this
  circle from the start point to the end point, going anti-clockwise
  if the <var title="">anticlockwise</var> argument is true, and
  clockwise otherwise. Since the points are on the circle, as opposed
  to being simply angles from zero, the arc can never cover an angle
  greater than <span>2&pi;</span> radians. If the two points are the
  same, or if the radius is zero, then the arc is defined as being of
  zero length in both directions.</p>

  <p>Negative values for <var title="">radius</var> must cause the
  implementation to raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
  exception.</p>


  <p>The <dfn id=dom-context-2d-rect title=dom-context-2d-rect><code>rect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must create a new subpath
  containing just the four points (<var title="">x</var>, <var title="">y</var>), (<var title="">x</var>+<var title="">w</var>,
  <var title="">y</var>), (<var title="">x</var>+<var title="">w</var>, <var title="">y</var>+<var title="">h</var>),
  (<var title="">x</var>, <var title="">y</var>+<var title="">h</var>), with those four points connected by straight
  lines, and must then mark the subpath as closed. It must then create
  a new subpath with the point (<var title="">x</var>, <var title="">y</var>) as the only point in the subpath.</p>


  <p>The <dfn id=dom-context-2d-fill title=dom-context-2d-fill><code>fill()</code></dfn>
  method must fill all the subpaths of the current path, using
  <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code>, and using
  the non-zero winding number rule. Open subpaths must be implicitly
  closed when being filled (without affecting the actual
  subpaths).</p>

  <p class=note>Thus, if two overlapping but otherwise independent
  subpaths have opposite windings, they cancel out and result in no
  fill. If they have the same winding, that area just gets painted
  once.</p>

  <p>The <dfn id=dom-context-2d-stroke title=dom-context-2d-stroke><code>stroke()</code></dfn> method
  must calculate the strokes of all the subpaths of the current path,
  using the <code title=dom-context-2d-lineWidth><a href=#dom-context-2d-linewidth>lineWidth</a></code>,
  <code title=dom-context-2d-lineCap><a href=#dom-context-2d-linecap>lineCap</a></code>, <code title=dom-context-2d-lineJoin><a href=#dom-context-2d-linejoin>lineJoin</a></code>, and (if
  appropriate) <code title=dom-context-2d-miterLimit><a href=#dom-context-2d-miterlimit>miterLimit</a></code> attributes, and
  then fill the combined stroke area using the <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code>
  attribute.</p>

  <p class=note>Since the subpaths are all stroked as one,
  overlapping parts of the paths in one stroke operation are treated
  as if their union was what was painted.</p>

  <p>Paths, when filled or stroked, must be painted without affecting
  the current path, and must be subject to <a href=#shadows title=shadows>shadow effects</a>, <a href=#dom-context-2d-globalalpha title=dom-context-2d-globalAlpha>global alpha</a>, the <a href=#clipping-region title="clipping region">clipping region</a>, and <a href=#dom-context-2d-globalcompositeoperation title=dom-context-2d-globalCompositeOperation>global composition
  operators</a>. (Transformations affect the path when the path is
  created, not when it is painted, though the stroke <em>style</em> is
  still affected by the transformation during painting.)</p>

  <p>Zero-length line segments must be pruned before stroking a
  path. Empty subpaths must be ignored.</p>


  <p>The <dfn id=dom-context-2d-clip title=dom-context-2d-clip><code>clip()</code></dfn>
  method must create a new <dfn id=clipping-region>clipping region</dfn> by calculating
  the intersection of the current clipping region and the area
  described by the current path, using the non-zero winding number
  rule. Open subpaths must be implicitly closed when computing the
  clipping region, without affecting the actual subpaths. The new
  clipping region replaces the current clipping region.</p>

  <p>When the context is initialized, the clipping region must be set
  to the rectangle with the top left corner at (0,0) and the width and
  height of the coordinate space.</p>

  <!-- XXXv4
   Jordan OSETE suggests:
    * support ways of extending the clipping region (union instead of intersection)
       - also "add", "subtract", "replace", "intersect" and "xor"
    * support ways of resetting the clipping region without save/restore
  -->


  <p>The <dfn id=dom-context-2d-ispointinpath title=dom-context-2d-isPointInPath><code>isPointInPath(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must
  return true if the point given by the <var title="">x</var> and <var title="">y</var> coordinates passed to the method, when treated as
  coordinates in the canvas coordinate space unaffected by the current
  transformation, is inside the current path as determined by the
  non-zero winding number rule; and must return false
  otherwise. Points on the path itself are considered to be inside the
  path. If either of the arguments is infinite or NaN, then the method
  must return false.</p>


  <h6 id=text><span class=secno>4.8.11.1.9 </span>Text</h6> <!-- a v3 feature -->

  <p>The <dfn id=dom-context-2d-font title=dom-context-2d-font><code>font</code></dfn> DOM
  attribute, on setting, must be parsed the same way as the 'font'
  property of CSS (but without supporting property-independent
  stylesheet syntax like 'inherit'), and the resulting font must be
  assigned to the context, with the 'line-height' component forced to
  'normal'. If the new value is syntactically incorrect, then it must
  be ignored, without assigning a new font value. <a href=#refsCSS>[CSS]</a><!-- XXX generic version-independent
  reference --></p>

  <p>Font names must be interpreted in the context of the
  <code><a href=#the-canvas-element>canvas</a></code> element's stylesheets; any fonts embedded using
  <code title="">@font-face</code> must therefore be available. <a href=#refsCSSWEBFONTS>[CSSWEBFONTS]</a></p>

  <p>Only vector fonts should be used by the user agent; if a user
  agent were to use bitmap fonts then transformations would likely
  make the font look very ugly.</p>

  <p>On getting, the <code title=dom-context-2d-font><a href=#dom-context-2d-font>font</a></code>
  attribute must return the serialized form of the current font of the
  context. <a href=#refsCSSOM>[CSSOM]</a><!-- XXX ensure that this
  defines serialization of 'font' --></p>

  <p>When the context is created, the font of the context must be set
  to 10px sans-serif. When the 'font-size' component is set to lengths
  using percentages, 'em' or 'ex' units, or the 'larger' or 'smaller'
  keywords, these must be interpreted relative to the computed value
  of the 'font-size' property of the corresponding <code><a href=#the-canvas-element>canvas</a></code>
  element at the time that the attribute is set. When the
  'font-weight' component is set to the relative values 'bolder' and
  'lighter', these must be interpreted relative to the computed value
  of the 'font-weight' property of the corresponding
  <code><a href=#the-canvas-element>canvas</a></code> element at the time that the attribute is
  set. If the computed values are undefined for a particular case
  (e.g. because the <code><a href=#the-canvas-element>canvas</a></code> element is not in a document),
  then the relative keywords must be interpreted relative to the
  normal-weight 10px sans-serif default.</p>

  <p>The <dfn id=dom-context-2d-textalign title=dom-context-2d-textAlign><code>textAlign</code></dfn> DOM
  attribute, on getting, must return the current value. On setting, if
  the value is one of <code title="">start</code>, <code title="">end</code>, <code title="">left</code>, <code title="">right</code>, or <code title="">center</code>, then the
  value must be changed to the new value. Otherwise, the new value
  must be ignored. When the context is created, the <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> attribute must
  initially have the value <code title="">start</code>.</p>

  <p>The <dfn id=dom-context-2d-textbaseline title=dom-context-2d-textBaseline><code>textBaseline</code></dfn>
  DOM attribute, on getting, must return the current value. On
  setting, if the value is one of <code title=dom-context-2d-textBaseline-top><a href=#dom-context-2d-textbaseline-top>top</a></code>, <code title=dom-context-2d-textBaseline-hanging><a href=#dom-context-2d-textbaseline-hanging>hanging</a></code>, <code title=dom-context-2d-textBaseline-middle><a href=#dom-context-2d-textbaseline-middle>middle</a></code>, <code title=dom-context-2d-textBaseline-alphabetic><a href=#dom-context-2d-textbaseline-alphabetic>alphabetic</a></code>,
  <code title=dom-context-2d-textBaseline-ideographic><a href=#dom-context-2d-textbaseline-ideographic>ideographic</a></code>,
  or <code title=dom-context-2d-textBaseline-bottom><a href=#dom-context-2d-textbaseline-bottom>bottom</a></code>,
  then the value must be changed to the new value. Otherwise, the new
  value must be ignored. When the context is created, the <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> attribute
  must initially have the value <code title="">alphabetic</code>.</p>

  <p>The <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code>
  attribute's allowed keywords correspond to alignment points in the
  font:</p>

  <p><img alt="The top of the em square is
  roughly at the top of the glyphs in a font, the hanging baseline is
  where some glyphs like &#2310; are anchored, the middle is half-way
  between the top of the em square and the bottom of the em square,
  the alphabetic baseline is where characters like &Aacute;, &yuml;,
  f, and &Omega; are anchored, the ideographic baseline is
  where glyphs like &#31169; and &#36948; are anchored, and the bottom
  of the em square is roughly at the bottom of the glyphs in a
  font. The top and bottom of the bounding box can be far from these
  baselines, due to glyphs extending far outside the em square." src=images/baselines.png></p>

  <p>The keywords map to these alignment points as follows:</p>

  <dl><dt><dfn id=dom-context-2d-textbaseline-top title=dom-context-2d-textBaseline-top><code>top</code></dfn>
   <dd>The top of the em square</dd>

   <dt><dfn id=dom-context-2d-textbaseline-hanging title=dom-context-2d-textBaseline-hanging><code>hanging</code></dfn>
   <dd>The hanging baseline</dd>

   <dt><dfn id=dom-context-2d-textbaseline-middle title=dom-context-2d-textBaseline-middle><code>middle</code></dfn>
   <dd>The middle of the em square</dd>

   <dt><dfn id=dom-context-2d-textbaseline-alphabetic title=dom-context-2d-textBaseline-alphabetic><code>alphabetic</code></dfn>
   <dd>The alphabetic baseline</dd>

   <dt><dfn id=dom-context-2d-textbaseline-ideographic title=dom-context-2d-textBaseline-ideographic><code>ideographic</code></dfn>
   <dd>The ideographic baseline</dd>

   <dt><dfn id=dom-context-2d-textbaseline-bottom title=dom-context-2d-textBaseline-bottom><code>bottom</code></dfn>
   <dd>The bottom of the em square</dd>

  </dl><p>The <dfn id=dom-context-2d-filltext title=dom-context-2d-fillText><code>fillText()</code></dfn> and
  <dfn id=dom-context-2d-stroketext title=dom-context-2d-strokeText><code>strokeText()</code></dfn>
  methods take three or four arguments, <var title="">text</var>, <var title="">x</var>, <var title="">y</var>, and optionally <var title="">maxWidth</var>, and render the given <var title="">text</var> at the given (<var title="">x</var>, <var title="">y</var>) coordinates ensuring that the text isn't wider
  than <var title="">maxWidth</var> if specified, using the current
  <code title=dom-context-2d-font><a href=#dom-context-2d-font>font</a></code>, <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code>, and <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code>
  values. Specifically, when the methods are called, the user agent
  must run the following steps:</p>

  <ol><li><p>Let <var title="">font</var> be the current font of the
   context, as given by the <code title=dom-context-2d-font><a href=#dom-context-2d-font>font</a></code> attribute.</li>

   <li><p>Replace all the <a href=#space-character title="space character">space
   characters</a> in <var title="">text</var> with U+0020 SPACE
   characters.</li>

   <li><p>Form a hypothetical infinitely wide CSS line box containing
   a single inline box containing the text <var title="">text</var>,
   with all the properties at their initial values except the 'font'
   property of the inline box set to <var title="">font</var> and the
   'direction' property of the inline box set to <a href=#the-directionality>the
   directionality</a> of the <code><a href=#the-canvas-element>canvas</a></code> element. <a href=#refsCSS>[CSS]</a></li>

   <!-- if you insert a step here, make sure to adjust the next step's
   final words -->

   <li><p>If the <var title="">maxWidth</var> argument was specified
   and the hypothetical width of the inline box in the hypothetical
   line box is greater than <var title="">maxWidth</var> CSS pixels,
   then change <var title="">font</var> to have a more condensed font
   (if one is available or if a reasonably readable one can be
   synthesized by applying a horizontal scale factor to the font) or a
   smaller font, and return to the previous step.</li>

   <li>

    <p>Let the <var title="">anchor point</var> be a point on the
    inline box, determined by the <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> and <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> values, as
    follows:</p>

    <p>Horizontal position:</p>

    <dl><dt> If <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> is <code title="">left</code></dt>
     <dt> If <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> is <code title="">start</code> and <a href=#the-directionality>the directionality</a> of the
     <code><a href=#the-canvas-element>canvas</a></code> element is 'ltr'</dt>
     <dt> If <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> is <code title="">end</code> and <a href=#the-directionality>the directionality</a> of the
     <code><a href=#the-canvas-element>canvas</a></code> element is 'rtl'</dt>

     <dd>Let the <var title="">anchor point</var>'s horizontal
     position be the left edge of the inline box.</dd>


     <dt> If <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> is <code title="">right</code></dt>
     <dt> If <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> is <code title="">end</code> and  <a href=#the-directionality>the directionality</a> of the
     <code><a href=#the-canvas-element>canvas</a></code> element is 'ltr'</dt>
     <dt> If <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> is <code title="">start</code> and <a href=#the-directionality>the directionality</a> of the
     <code><a href=#the-canvas-element>canvas</a></code> element is 'rtl'</dt>

     <dd>Let the <var title="">anchor point</var>'s horizontal
     position be the right edge of the inline box.</dd>


     <dt> If <code title=dom-context-2d-textAlign><a href=#dom-context-2d-textalign>textAlign</a></code> is <code title="">center</code></dt>

     <dd>Let the <var title="">anchor point</var>'s horizontal
     position be half way between the left and right edges of the
     inline box.</dd>

    </dl><p>Vertical position:</p>

    <dl><dt> If <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> is <code title=dom-context-2d-textBaseline-top><a href=#dom-context-2d-textbaseline-top>top</a></code></dt>

     <dd>Let the <var title="">anchor point</var>'s vertical position
     be the top of the em box of the first available font of the
     inline box.</dd>


     <dt> If <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> is <code title=dom-context-2d-textBaseline-hanging><a href=#dom-context-2d-textbaseline-hanging>hanging</a></code></dt>

     <dd>Let the <var title="">anchor point</var>'s vertical position
     be the hanging baseline of the first available font of the inline
     box.</dd>


     <dt> If <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> is <code title=dom-context-2d-textBaseline-middle><a href=#dom-context-2d-textbaseline-middle>middle</a></code></dt>

     <dd>Let the <var title="">anchor point</var>'s vertical position
     be half way between the bottom and the top of the em box of the
     first available font of the inline box.</dd>


     <dt> If <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> is <code title=dom-context-2d-textBaseline-alphabetic><a href=#dom-context-2d-textbaseline-alphabetic>alphabetic</a></code></dt>

     <dd>Let the <var title="">anchor point</var>'s vertical position
     be the alphabetic baseline of the first available font of the inline
     box.</dd>


     <dt> If <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> is <code title=dom-context-2d-textBaseline-ideographic><a href=#dom-context-2d-textbaseline-ideographic>ideographic</a></code></dt>

     <dd>Let the <var title="">anchor point</var>'s vertical position
     be the ideographic baseline of the first available font of the inline
     box.</dd>


     <dt> If <code title=dom-context-2d-textBaseline><a href=#dom-context-2d-textbaseline>textBaseline</a></code> is <code title=dom-context-2d-textBaseline-bottom><a href=#dom-context-2d-textbaseline-bottom>bottom</a></code></dt>

     <dd>Let the <var title="">anchor point</var>'s vertical position
     be the bottom of the em box of the first available font of the
     inline box.</dd>

    </dl></li>

   <li>

    <p>Paint the hypothetical inline box as the shape given by the
    text's glyphs, as transformed by the <a href=#transformations title=dom-context-2d-transformation>current transformation
    matrix</a>, and anchored and sized so that before applying the
    <a href=#transformations title=dom-context-2d-transformation>current transformation
    matrix</a>, the <var title="">anchor point</var> is at (<var title="">x</var>, <var title="">y</var>) and each CSS pixel is
    mapped to one coordinate space unit.</p>

    <p>For <code title=dom-context-2d-fillText><a href=#dom-context-2d-filltext>fillText()</a></code>
    <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code> must be
    applied to the glyphs and <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code> must be
    ignored. For <code title=dom-context-2d-strokeText><a href=#dom-context-2d-stroketext>strokeText()</a></code> the reverse
    holds and <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code> must be
    applied to the glyph outlines and <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code> must be
    ignored.</p>

    <p>Text is painted without affecting the current path, and is
    subject to <a href=#shadows title=shadows>shadow effects</a>, <a href=#dom-context-2d-globalalpha title=dom-context-2d-globalAlpha>global alpha</a>, the <a href=#clipping-region title="clipping region">clipping region</a>, and <a href=#dom-context-2d-globalcompositeoperation title=dom-context-2d-globalCompositeOperation>global composition
    operators</a>.</p>

   </li>

  </ol><!--XXXDVT - this is commented out until CSS can get its act together
enough to actual specify vertical text rendering (how long have we
been waiting now?)

  <p>The <dfn
  title="dom-context-2d-fillVerticalText"><code>fillVerticalText()</code></dfn>
  and <dfn
  title="dom-context-2d-strokeVerticalText"><code>strokeVerticalText()</code></dfn>
  methods take three or four arguments, <var title="">text</var>, <var
  title="">x</var>, <var title="">y</var>, and optionally <var
  title="">maxHeight</var>, and render the given <var
  title="">text</var> as vertical text at the given (<var
  title="">x</var>, <var title="">y</var>) coordinates ensuring that
  the text isn't taller than <var title="">maxHeight</var> if
  specified, using the current <code
  title="dom-context-2d-font">font</code> and <code
  title="dom-context-2d-textAlign">textAlign</code>
  values. Specifically, when the methods are called, the user agent
  must run the following steps:</p>

  <ol>

   <li><p>Let <var title="">font</var> be the current font of the
   context, as given by the <code
   title="dom-context-2d-font">font</code> attribute.</p></li>

   <li><p>Replace all the <span title="space character">space
   characters</span> in <var title="">text</var> with U+0020 SPACE
   characters.</p></li>

   <li><p>Form a <em class="XXX">whatever CSS ends up calling
   vertical line boxes and inline boxes</em> containing the text <var
   title="">text</var>, with all the properties at their initial
   values except the 'font' property of the inline box set to <var
   title="">font</var> and the 'direction' property of the inline
   box set to <span>the directionality</span> of the <code>canvas</code>
   element.</p></li>

   <!- - if you insert a step here, make sure to adjust the next step's
   final words - ->

   <li><p>If the <var title="">maxHeight</var> argument was specified
   and the hypothetical height of the <em class="XXX">box</em>
   in the hypothetical line box is greater than <var
   title="">maxHeight</var> CSS pixels, then change <var
   title="">font</var> to have a more condensed font (if one is
   available or if a reasonably readable one can be synthesized by
   applying an appropriate scale factor to the font) or a smaller
   font, and return to the previous step.</p></li>

   <li>

    <p>Let the <var title="">anchor point</var> be a point on the <em
    class="XXX">inline box</var>, determined by the <code
    title="dom-context-2d-textAlign">textAlign</code>, as follows:</p>

    <p>Vertical position:</p>

    <dl>

     <dt> If <code
     title="dom-context-2d-textAlign">textAlign</code> is <code
     title="">start</code></dt>
     <dt> If <code
     title="dom-context-2d-textAlign">textAlign</code> is <code
     title="">left</code> and <span>the directionality</span> of the
     <code>canvas</code> element is 'ltr'</dt>
     <dt> If <code
     title="dom-context-2d-textAlign">textAlign</code> is <code
     title="">right</code> and <span>the directionality</span> of the
     <code>canvas</code> element is 'rtl'</dt>

     <dd>Let the <var title="">anchor point</var>'s vertical
     position be the top edge of the <em class="XXX">inline
     box</em>.</dd>

     <dt> If <code
     title="dom-context-2d-textAlign">textAlign</code> is <code
     title="">end</code></dt>
     <dt> If <code
     title="dom-context-2d-textAlign">textAlign</code> is <code
     title="">right</code> and <span>the directionality</span> of the
     <code>canvas</code> element is 'ltr'</dt>
     <dt> If <code
     title="dom-context-2d-textAlign">textAlign</code> is <code
     title="">left</code> and <span>the directionality</span> of the
     <code>canvas</code> element is 'rtl'</dt>

     <dd>Let the <var title="">anchor point</var>'s vertical
     position be the bottom edge of the <em class="XXX">inline
     box</em>.</dd>


     <dt> If <code
     title="dom-context-2d-textAlign">textAlign</code> is <code
     title="">center</code></dt>

     <dd>Let the <var title="">anchor point</var>'s vertical position
     be half way between the top and bottom edges of the <em
     class="XXX">inline box</em>.</dd>

    </dl>

    <p>Let the horizontal position be half way between the left and
    right edges of the em box of the first available font of the <em
    class="XXX">inline box</em>.</p>

   </li>

   <li>

    <p>Paint the hypothetical inline box as the shape given by the
    text's glyphs, as transformed by the <span
    title="dom-context-2d-transformation">current transformation
    matrix</span>, and anchored and sized so that before applying the
    <span title="dom-context-2d-transformation">current transformation
    matrix</span>, the <var title="">anchor point</var> is at (<var
    title="">x</var>, <var title="">y</var>) and each CSS pixel is
    mapped to one coordinate space unit.</p>

    <p>For <code
    title="dom-context-2d-fillVerticalText">fillVerticalText()</code>
    <code title="dom-context-2d-fillStyle">fillStyle</code> must be
    applied and <code
    title="dom-context-2d-strokeStyle">strokeStyle</code> must be
    ignored. For <code
    title="dom-context-2d-strokeVerticalText">strokeVerticalText()</code>
    the reverse holds and <code
    title="dom-context-2d-strokeStyle">strokeStyle</code> must be
    applied and <code
    title="dom-context-2d-fillStyle">fillStyle</code> must be
    ignored.</p>

    <p>Text is painted without affecting the current path, and is
    subject to <span title="shadows">shadow effects</span>, <span
    title="dom-context-2d-globalAlpha">global alpha</span>, the <span
    title="clipping region">clipping region</span>, and <span
    title="dom-context-2d-globalCompositeOperation">global composition
    operators</span>.</p>

   </li>

  </ol>

XXXDVT (also check for '- -' bits in the part above) --><p>The <dfn id=dom-context-2d-measuretext title=dom-context-2d-measureText><code>measureText()</code></dfn>
  method takes one argument, <var title="">text</var>. When the method
  is invoked, the user agent must replace all the <a href=#space-character title="space
  character">space characters</a> in <var title="">text</var> with
  U+0020 SPACE characters, and then must form a hypothetical
  infinitely wide CSS line box containing a single inline box
  containing the text <var title="">text</var>, with all the
  properties at their initial values except the 'font' property of the
  inline element set to the current font of the context, as given by
  the <code title=dom-context-2d-font><a href=#dom-context-2d-font>font</a></code> attribute, and
  must then return a new <code><a href=#textmetrics>TextMetrics</a></code> object with its
  <code title=dom-textmetrics-width><a href=#dom-textmetrics-width>width</a></code> attribute set to
  the width of that inline box, in CSS pixels. <a href=#refsCSS>[CSS]</a></p>

  <p>The <code><a href=#textmetrics>TextMetrics</a></code> interface is used for the objects
  returned from <code title=dom-context-2d-measureText><a href=#dom-context-2d-measuretext>measureText()</a></code>. It has one
  attribute, <dfn id=dom-textmetrics-width title=dom-textmetrics-width><code>width</code></dfn>, which is set
  by the <code title=dom-context-2d-measureText><a href=#dom-context-2d-measuretext>measureText()</a></code>
  method.</p>

  <p class=note>Glyphs rendered using <code title=dom-context-2d-fillText><a href=#dom-context-2d-filltext>fillText()</a></code> and <code title=dom-context-2d-strokeText><a href=#dom-context-2d-stroketext>strokeText()</a></code> can spill out
  of the box given by the font size (the em square size) and the width
  returned by <code title=dom-context-2d-measureText><a href=#dom-context-2d-measuretext>measureText()</a></code> (the text
  width). This version of the specification does not provide a way to
  obtain the bounding box dimensions of the text. If the text is to be
  rendered and removed, care needs to be taken to replace the entire
  area of the canvas that the clipping region covers, not just the box
  given by the em square height and measured text width.</p>

  <!-- XXXv4 Drawing text along a given path -->
  <!-- XXXv4 Adding text to a path -->
  <!-- see also: http://www.w3.org/TR/SVG11/text.html#TextpathLayoutRules -->
  <!-- see also: http://developer.mozilla.org/en/docs/Drawing_text_using_a_canvas -->

  <p class=note>A future version of the 2D context API may provide a
  way to render fragments of documents, rendered using CSS, straight
  to the canvas. This would be provided in preference to a dedicated
  way of doing multiline layout.</p>


  <h6 id=images><span class=secno>4.8.11.1.10 </span>Images</h6>

  <p>To draw images onto the canvas, the <dfn id=dom-context-2d-drawimage title=dom-context-2d-drawImage><code>drawImage</code></dfn> method
  can be used.</p>

  <p>This method is overloaded with three variants: <code title="">drawImage(<var title="">image</var>, <var title="">dx</var>, <var title="">dy</var>)</code>, <code title="">drawImage(<var title="">image</var>, <var title="">dx</var>, <var title="">dy</var>, <var title="">dw</var>,
  <var title="">dh</var>)</code>, and <code title="">drawImage(<var title="">image</var>, <var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>, <var title="">sh</var>,
  <var title="">dx</var>, <var title="">dy</var>, <var title="">dw</var>, <var title="">dh</var>)</code>. (Actually it is
  overloaded with six; each of those three can take either an
  <code><a href=#htmlimageelement>HTMLImageElement</a></code> or an <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code>
  for the <var title="">image</var> argument.)  If not specified, the
  <var title="">dw</var> and <var title="">dh</var> arguments must
  default to the values of <var title="">sw</var> and <var title="">sh</var>, interpreted such that one CSS pixel in the image
  is treated as one unit in the canvas coordinate space. If the <var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>,
  and <var title="">sh</var> arguments are omitted, they must default
  to 0, 0, the image's intrinsic width in image pixels, and the
  image's intrinsic height in image pixels, respectively.</p>

  <p>The <var title="">image</var> argument must be an instance of an
  <code><a href=#htmlimageelement>HTMLImageElement</a></code> or <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code>. If
  the <var title="">image</var> is of the wrong type or null, the
  implementation must raise a <code><a href=#type_mismatch_err>TYPE_MISMATCH_ERR</a></code>
  exception.</p>
  <!-- createPattern() has an equivalent paragraph -->

  <p>If the <var title="">image</var> argument is an
  <code><a href=#htmlimageelement>HTMLImageElement</a></code> object whose <code title=dom-img-complete><a href=#dom-img-complete>complete</a></code> attribute is false, then
  the implementation must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code>
  exception.</p>
  <!-- createPattern() has an equivalent paragraph -->

  <!-- handled by the next paragraph
  <p>If the <var title="">image</var> argument is an
  <code>HTMLCanvasElement</code> object with either a horizontal
  dimension or a vertical dimension equal to zero, then the
  implementation must raise an <code>INVALID_STATE_ERR</code>
  exception.</p>
  -->
  <!-- createPattern() has an equivalent paragraph -->

  <p>The source rectangle is the rectangle whose corners are the four
  points (<var title="">sx</var>, <var title="">sy</var>), (<span><var title="">sx</var>+<var title="">sw</var></span>, <var title="">sy</var>), (<span><var title="">sx</var>+<var title="">sw</var></span>, <span><var title="">sy</var>+<var title="">sh</var></span>), (<var title="">sx</var>, <span><var title="">sy</var>+<var title="">sh</var></span>).</p>

  <p>If the source rectangle is not entirely within the source image,
  or if one of the <var title="">sw</var> or <var title="">sh</var>
  arguments is zero, the implementation must raise an
  <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception.</p>

  <p>The destination rectangle is the rectangle whose corners are the
  four points (<var title="">dx</var>, <var title="">dy</var>),
  (<span><var title="">dx</var>+<var title="">dw</var></span>, <var title="">dy</var>), (<span><var title="">dx</var>+<var title="">dw</var></span>, <span><var title="">dy</var>+<var title="">dh</var></span>), (<var title="">dx</var>, <span><var title="">dy</var>+<var title="">dh</var></span>).</p>

  <p>When <code title=dom-context-2d-drawImage><a href=#dom-context-2d-drawimage>drawImage()</a></code> is
  invoked, the region of the image specified by the source rectangle
  must be painted on the region of the canvas specified by the
  destination rectangle, after applying the <a href=#transformations title=dom-context-2d-transformation>current transformation
  matrix</a> to the points of the destination rectangle.</p>

  <p><img alt="" src=images/drawImage.png></p> <!-- no alt="" text
  since the image is just repeating what was stated in the previous
  paragraph. -->

  <p class=note>When a canvas is drawn onto itself, the drawing
  model requires the source to be copied before the image is drawn
  back onto the canvas, so it is possible to copy parts of a canvas
  onto overlapping parts of itself.</p>

  <p>When the <code title=dom-context-2d-drawImage><a href=#dom-context-2d-drawimage>drawImage()</a></code> method is
  passed, as its <var title="">image</var> argument, an animated
  image, the poster frame of the animation, or the first frame of the
  animation if there is no poster frame, must be used.</p>
  <!-- createPattern() has an equivalent paragraph -->

  <p>Images are painted without affecting the current path, and are
  subject to <a href=#shadows title=shadows>shadow effects</a>, <a href=#dom-context-2d-globalalpha title=dom-context-2d-globalAlpha>global alpha</a>, the <a href=#clipping-region title="clipping region">clipping region</a>, and <a href=#dom-context-2d-globalcompositeoperation title=dom-context-2d-globalCompositeOperation>global composition
  operators</a>.</p>

  <!-- XXX should somehow say that the image used is the actual image
  of the target element, not the rendered image (e.g. height/width
  attributes don't affect it -->



  <h6 id=pixel-manipulation><span class=secno>4.8.11.1.11 </span><dfn>Pixel manipulation</dfn></h6>

  <p>The <dfn id=dom-context-2d-createimagedata title=dom-context-2d-createImageData><code>createImageData(<var title="">sw</var>, <var title="">sh</var>)</code></dfn> method must
  return an <code><a href=#imagedata>ImageData</a></code> object representing a rectangle
  with a width in CSS pixels equal to the absolute magnitude of <var title="">sw</var> and a height in CSS pixels equal to the absolute
  magnitude of <var title="">sh</var>, filled with transparent
  black.</p>

  <p>The <dfn id=dom-context-2d-getimagedata title=dom-context-2d-getImageData><code>getImageData(<var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>,
  <var title="">sh</var>)</code></dfn> method must return an
  <code><a href=#imagedata>ImageData</a></code> object representing the underlying pixel data
  for the area of the canvas denoted by the rectangle whose corners are
  the four points (<var title="">sx</var>, <var title="">sy</var>),
  (<span><var title="">sx</var>+<var title="">sw</var></span>, <var title="">sy</var>), (<span><var title="">sx</var>+<var title="">sw</var></span>, <span><var title="">sy</var>+<var title="">sh</var></span>), (<var title="">sx</var>, <span><var title="">sy</var>+<var title="">sh</var></span>), in canvas
  coordinate space units. Pixels outside the canvas must be returned
  as transparent black. Pixels must be returned as non-premultiplied
  alpha values.</p>

  <p>If any of the arguments to <code title=dom-context-2d-createImageData><a href=#dom-context-2d-createimagedata>createImageData()</a></code> or
  <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code> are
  infinite or NaN, the method must instead raise a
  <code><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception. If either the <var title="">sw</var> or <var title="">sh</var> arguments are zero, the
  method must instead raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
  exception.</p>

  <p><code><a href=#imagedata>ImageData</a></code> objects must be initialized so that their
  <dfn id=dom-imagedata-width title=dom-imagedata-width><code>width</code></dfn> attribute
  is set to <var title="">w</var>, the number of physical device
  pixels per row in the image data, their <dfn id=dom-imagedata-height title=dom-imagedata-height><code>height</code></dfn> attribute is
  set to <var title="">h</var>, the number of rows in the image data,
  and their <dfn id=dom-imagedata-data title=dom-imagedata-data><code>data</code></dfn>
  attribute is initialized to a <code><a href=#canvaspixelarray>CanvasPixelArray</a></code> object
  holding the image data. At least one pixel's worth of image data
  must be returned.</p>

  <p>The <code><a href=#canvaspixelarray>CanvasPixelArray</a></code> object provides ordered,
  indexed access to the color components of each pixel of the image
  data. The data must be represented in left-to-right order, row by
  row top to bottom, starting with the top left, with each pixel's
  red, green, blue, and alpha components being given in that order for
  each pixel. Each component of each device pixel represented in this
  array must be in the range 0..255, representing the 8 bit value for
  that component. The components must be assigned consecutive indices
  starting with 0 for the top left pixel's red component.</p>

  <p>The <code><a href=#canvaspixelarray>CanvasPixelArray</a></code> object thus represents <var title="">h</var>&times;<var title="">w</var>&times;4 integers. The
  <dfn id=dom-canvaspixelarray-length title=dom-canvaspixelarray-length><code>length</code></dfn>
  attribute of a <code><a href=#canvaspixelarray>CanvasPixelArray</a></code> object must return this
  number.</p>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range 0 .. <span><var title="">h</var>&times;<var title="">w</var>&times;4-1</span>.</p>

  <p>When a <code><a href=#canvaspixelarray>CanvasPixelArray</a></code> object is <dfn id=dom-canvaspixelarray-get title=dom-CanvasPixelArray-get>indexed to retrieve an indexed
  property</dfn> <var title="">index</var>, the value returned must be
  the value of the <var title="">index</var>th component in the
  array.</p>

  <p>When a <code><a href=#canvaspixelarray>CanvasPixelArray</a></code> object is <dfn id=dom-canvaspixelarray-set title=dom-CanvasPixelArray-set>indexed to modify an indexed
  property</dfn> <var title="">index</var> with value <var title="">value</var>, the value of the <var title="">index</var>th
  component in the array must be set to <var title="">value</var>. JS
  <code>undefined</code> values must be converted to zero. Other
  values must first be converted to numbers using JavaScript's
  ToNumber algorithm, and if the result is a NaN value, then the value
  must be converted to zero. If the result is less than 0, it must be
  clamped to zero. If the result is more than 255, it must be clamped
  to 255. If the number is not an integer, it should be rounded to the
  nearest integer using the IEEE 754r
  <i>convertToIntegerTiesToEven</i> rounding mode. <a href=#refsECMA262>[ECMA262]</a> <a href=#refsIEEE754r>[IEEE754R]</a></p>

  <p class=note>The width and height (<var title="">w</var> and <var title="">h</var>) might be different from the <var title="">sw</var>
  and <var title="">sh</var> arguments to the above methods, e.g. if
  the canvas is backed by a high-resolution bitmap, or if the <var title="">sw</var> and <var title="">sh</var> arguments are
  negative.</p>

  <p>The <dfn id=dom-context-2d-putimagedata title=dom-context-2d-putImageData><code>putImageData(<var title="">imagedata</var>, <var title="">dx</var>, <var title="">dy</var>, <var title="">dirtyX</var>, <var title="">dirtyY</var>, <var title="">dirtyWidth</var>, <var title="">dirtyHeight</var>)</code></dfn> method writes data from
  <code><a href=#imagedata>ImageData</a></code> structures back to the canvas.</p>

  <p>If any of the arguments to the method are infinite or NaN, the
  method must raise a <code><a href=#not_supported_err>NOT_SUPPORTED_ERR</a></code> exception.</p>

  <p>If the first argument to the method is null or not an
  <code><a href=#imagedata>ImageData</a></code> object then the <code title=dom-context-2d-putImageData><a href=#dom-context-2d-putimagedata>putImageData()</a></code> method
  must raise a <code><a href=#type_mismatch_err>TYPE_MISMATCH_ERR</a></code> exception.</p>

  <p>When the last four arguments are omitted, they must be assumed to
  have the values 0, 0, the <code title=dom-imagedata-width><a href=#dom-imagedata-width>width</a></code> member of the <var title="">imagedata</var> structure, and the <code title=dom-imagedata-height><a href=#dom-imagedata-height>height</a></code> member of the <var title="">imagedata</var> structure, respectively.</p>

  <p>When invoked with arguments that do not, per the last few
  paragraphs, cause an exception to be raised, the <code title=dom-context-2d-putImageData><a href=#dom-context-2d-putimagedata>putImageData()</a></code> method
  must act as follows:</p>

  <ol><li>

    <p>Let <var title="">dx<sub>device</sub></var> be the x-coordinate
    of the device pixel in the underlying pixel data of the canvas
    corresponding to the <var title="">dx</var> coordinate in the
    canvas coordinate space.</p>

    <p>Let <var title="">dy<sub>device</sub></var> be the y-coordinate
    of the device pixel in the underlying pixel data of the canvas
    corresponding to the <var title="">dy</var> coordinate in the
    canvas coordinate space.</p>

   </li>

   <li>

    <p>If <var title="">dirtyWidth</var> is negative, let <var title="">dirtyX</var> be <span><var title="">dirtyX</var>+<var title="">dirtyWidth</var></span>, and let <var title="">dirtyWidth</var> be equal to the absolute magnitude of
    <var title="">dirtyWidth</var>.</p>

    <p>If <var title="">dirtyHeight</var> is negative, let <var title="">dirtyY</var> be <span><var title="">dirtyY</var>+<var title="">dirtyHeight</var></span>, and let <var title="">dirtyHeight</var> be equal to the absolute magnitude of
    <var title="">dirtyHeight</var>.</p>

   </li>

   <li>

    <p>If <var title="">dirtyX</var> is negative, let <var title="">dirtyWidth</var> be <span><var title="">dirtyWidth</var>+<var title="">dirtyX</var></span>, and
    let <var title="">dirtyX</var> be zero.</p>

    <p>If <var title="">dirtyY</var> is negative, let <var title="">dirtyHeight</var> be <span><var title="">dirtyHeight</var>+<var title="">dirtyY</var></span>, and
    let <var title="">dirtyY</var> be zero.</p>

   </li>

   <li>

    <p>If <span><var title="">dirtyX</var>+<var title="">dirtyWidth</var></span> is greater than the <code title=dom-imagedata-width><a href=#dom-imagedata-width>width</a></code> attribute of the <var title="">imagedata</var> argument, let <var title="">dirtyWidth</var> be the value of that <code title=dom-imagedata-width><a href=#dom-imagedata-width>width</a></code> attribute, minus the
    value of <var title="">dirtyX</var>.</p>

    <p>If <span><var title="">dirtyY</var>+<var title="">dirtyHeight</var></span> is greater than the <code title=dom-imagedata-height><a href=#dom-imagedata-height>height</a></code> attribute of the <var title="">imagedata</var> argument, let <var title="">dirtyHeight</var> be the value of that <code title=dom-imagedata-height><a href=#dom-imagedata-height>height</a></code> attribute, minus the
    value of <var title="">dirtyY</var>.</p>

   </li>

   <li>

    <p>If, after those changes, either <var title="">dirtyWidth</var>
    or <var title="">dirtyHeight</var> is negative or zero, stop these
    steps without affecting the canvas.</p>

   </li>

   <li><p>Otherwise, for all integer values of <var title="">x</var>
   and <var title="">y</var> where <span><var title="">dirtyX</var>&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<span><var title="">dirtyX</var>+<var title="">dirtyWidth</var></span></span>
   and <span><var title="">dirtyY</var>&nbsp;&le;&nbsp;<var title="">y</var>&nbsp;&lt;&nbsp;<span><var title="">dirtyY</var>+<var title="">dirtyHeight</var></span></span>, copy the four channels of
   the pixel with coordinate (<var title="">x</var>, <var title="">y</var>) in the <var title="">imagedata</var> data
   structure to the pixel with coordinate (<span><var title="">dx<sub>device</sub></var>+<var title="">x</var></span>,
   <span><var title="">dy<sub>device</sub></var>+<var title="">y</var></span>) in the underlying pixel data of the
   canvas.</li>

  </ol><p>The handling of pixel rounding when the specified coordinates do
  not exactly map to the device coordinate space is not defined by
  this specification, except that the following must result in no
  visible changes to the rendering:</p>

  <pre>context.putImageData(context.getImageData(x, y, w, h), x, y);</pre>

  <p>...for any value of <var title="">x</var>, <var title="">y</var>,
  <var title="">w</var>, and <var title="">h</var>, and the following
  two calls:</p>

  <pre>context.createImageData(w, h);
context.getImageData(0, 0, w, h);</pre>

  <p>...must return <code><a href=#imagedata>ImageData</a></code> objects with the same
  dimensions, for any value of <var title="">w</var> and <var title="">h</var>. In other words, while user agents may round the
  arguments of these methods so that they map to device pixel
  boundaries, any rounding performed must be performed consistently
  for all of the <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>createImageData()</a></code>, <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code> and <code title=dom-context-2d-putImageData><a href=#dom-context-2d-putimagedata>putImageData()</a></code>
  operations.</p>

  <p>The current path, <a href=#transformations title=dom-context-2d-transformation>transformation matrix</a>,
  <a href=#shadows title=shadows>shadow attributes</a>, <a href=#dom-context-2d-globalalpha title=dom-context-2d-globalAlpha>global alpha</a>, the <a href=#clipping-region title="clipping region">clipping region</a>, and <a href=#dom-context-2d-globalcompositeoperation title=dom-context-2d-globalCompositeOperation>global composition
  operator</a> must not affect the <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code> and <code title=dom-context-2d-putImageData><a href=#dom-context-2d-putimagedata>putImageData()</a></code>
  methods.</p>

  <div class=example>

   <p>The data returned by <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code> is at the
   resolution of the canvas backing store, which is likely to not be
   one device pixel to each CSS pixel if the display used is a high
   resolution display.</p>

   <p>In the following example, the script generates an
   <code><a href=#imagedata>ImageData</a></code> object so that it can draw onto it.</p>

   <pre>// canvas is a reference to a &lt;canvas&gt; element
var context = canvas.getContext('2d');

// create a blank slate
var data = context.createImageData(canvas.width, canvas.height);

// create some plasma
FillPlasma(data, 'green'); // green plasma

// add a cloud to the plasma
AddCloud(data, data.width/2, data.height/2); // put a cloud in the middle

// paint the plasma+cloud on the canvas
context.putImageData(data, 0, 0);

// support methods
function FillPlasma(data, color) { ... }
function AddCloud(data, x, y) { ... }</pre>

  </div>

  <div class=example>

   <p>Here is an example of using <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code> and <code title=dom-context-2d-putImageData><a href=#dom-context-2d-putimagedata>putImageData()</a></code> to
   implement an edge detection filter.</p>

   <pre>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;Edge detection demo&lt;/title&gt;
  &lt;script&gt;
   var image = new Image();
   function init() {
     image.onload = demo;
     image.src = "image.jpeg";
   }
   function demo() {
     var canvas = document.getElementsByTagName('canvas')[0];
     var context = canvas.getContext('2d');

     // draw the image onto the canvas
     context.drawImage(image, 0, 0);

     // get the image data to manipulate
     var input = context.getImageData(0, 0, canvas.width, canvas.height);

     // get an empty slate to put the data into
     var output = context.createImageData(canvas.width, canvas.height);

     // alias some variables for convenience
     // notice that we are using input.width and input.height here
     // as they might not be the same as canvas.width and canvas.height
     // (in particular, they might be different on high-res displays)
     var w = input.width, h = input.height;
     var inputData = input.data;
     var outputData = output.data;

     // edge detection
     for (var y = 1; y &lt; h-1; y += 1) {
       for (var x = 1; x &lt; w-1; x += 1) {
         for (var c = 0; c &lt; 3; c += 1) {
           var i = (y*w + x)*4 + c;
           outputData[i] = 127 + -inputData[i - w*4 - 4] -   inputData[i - w*4] - inputData[i - w*4 + 4] +
                                 -inputData[i - 4]       + 8*inputData[i]       - inputData[i + 4] +
                                 -inputData[i + w*4 - 4] -   inputData[i + w*4] - inputData[i + w*4 + 4];
         }
         outputData[(y*w + x)*4 + 3] = 255; // alpha
       }
     }

     // put the image data back after manipulation
     context.putImageData(output, 0, 0);
   }
  &lt;/script&gt;
 &lt;/head&gt;
 &lt;body onload="init()"&gt;
  &lt;canvas&gt;&lt;/canvas&gt;
 &lt;/body&gt;
&lt;/html&gt;</pre>

  </div>


  <h6 id=drawing-model><span class=secno>4.8.11.1.12 </span>Drawing model</h6>

  <p>When a shape or image is painted, user agents must follow these
  steps, in the order given (or act as if they do):</p>

  <ol><li><p>Render the shape or image, creating image <var title="">A</var>, as described in the previous sections. For
   shapes, the current fill, stroke, and line styles must be honored,
   and the stroke must itself also be subjected to the current
   transformation matrix.</li>

   <li><p>Render the shadow from image <var title="">A</var>, using
   the current shadow styles, creating image <var title="">B</var>.</li>

   <li><p>Multiply the alpha component of every pixel in <var title="">B</var> by <code title=dom-context-2d-globalAlpha><a href=#dom-context-2d-globalalpha>globalAlpha</a></code>.</li>

   <li><p>Within the clipping region, composite <var title="">B</var>
   over the current canvas bitmap using the current composition
   operator.</li>

   <li><p>Multiply the alpha component of every pixel in <var title="">A</var> by <code title=dom-context-2d-globalAlpha><a href=#dom-context-2d-globalalpha>globalAlpha</a></code>.</li>

   <li><p>Within the clipping region, composite <var title="">A</var>
   over the current canvas bitmap using the current composition
   operator.</li>

  </ol><!-- XXX add xrefs in the list above --><!--
  <h5 id="3d">The 3D context</h5>

  <p class="XXX">Well, one day.</p>
--><h5 id=color-spaces-and-color-correction><span class=secno>4.8.11.2 </span>Color spaces and color correction</h5>

  <p>The <code><a href=#the-canvas-element>canvas</a></code> APIs must perform color correction at
  only two points: when rendering images with their own gamma
  correction and color space information onto the canvas, to convert
  the image to the color space used by the canvas (e.g. using the
  <code title=dom-context-2d-drawImage><a href=#dom-context-2d-drawimage>drawImage()</a></code> method
  with an <code><a href=#htmlimageelement>HTMLImageElement</a></code> object), and when rendering
  the actual canvas bitmap to the output device.</p>

  <p class=note>Thus, in the 2D context, colors used to draw shapes
  onto the canvas will exactly match colors obtained through the <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code>
  method.</p>

  <p>The <code title=dom-canvas-toDataURL><a href=#dom-canvas-todataurl>toDataURL()</a></code> method
  must not include color space information in the resource
  returned. Where the output format allows it, the color of pixels in
  resources created by <code title=dom-canvas-toDataURL><a href=#dom-canvas-todataurl>toDataURL()</a></code> must match those
  returned by the <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code>
  method.</p>

  <p>In user agents that support CSS, the color space used by a
  <code><a href=#the-canvas-element>canvas</a></code> element must match the color space used for
  processing any colors for that element in CSS.</p>

  <p>The gamma correction and color space information of images must
  be handled in such a way that an image rendered directly using an
  <code><a href=#the-img-element>img</a></code> element would use the same colors as one painted on
  a <code><a href=#the-canvas-element>canvas</a></code> element that is then itself
  rendered. Furthermore, the rendering of images that have no color
  correction information (such as those returned by the <code title=dom-canvas-toDataURL><a href=#dom-canvas-todataurl>toDataURL()</a></code> method) must be
  rendered with no color correction.</p>

  <p class=note>Thus, in the 2D context, calling the <code title=dom-context-2d-drawImage><a href=#dom-context-2d-drawimage>drawImage()</a></code> method to render
  the output of the <code title=dom-canvas-toDataURL><a href=#dom-canvas-todataurl>toDataURL()</a></code> method to the
  canvas, given the appropriate dimensions, has no visible effect.</p>


  <h5 id=security-with-canvas-elements><span class=secno>4.8.11.3 </span>Security with <code><a href=#the-canvas-element>canvas</a></code> elements</h5>

  <p><strong>Information leakage</strong> can occur if scripts from
  one <a href=#origin-0>origin</a> can access information (e.g. read pixels)
  from images from another origin (one that isn't the <a href=#same-origin title="same origin">same</a>).</p>

  <p>To mitigate this, <code><a href=#the-canvas-element>canvas</a></code> elements are defined to
  have a flag indicating whether they are <i>origin-clean</i>. All
  <code><a href=#the-canvas-element>canvas</a></code> elements must start with their
  <i>origin-clean</i> set to true. The flag must be set to false if
  any of the following actions occur:</p>

  <ul><li><p>The element's 2D context's <code title=dom-context-2d-drawImage><a href=#dom-context-2d-drawimage>drawImage()</a></code> method is
   called with an <code><a href=#htmlimageelement>HTMLImageElement</a></code> whose
   <a href=#origin-0>origin</a> is not the <a href=#same-origin title="same
   origin">same</a> as that of the <code>Document</code> object
   that owns the <code><a href=#the-canvas-element>canvas</a></code> element.</li>

   <li><p>The element's 2D context's <code title=dom-context-2d-drawImage><a href=#dom-context-2d-drawimage>drawImage()</a></code> method is
   called with an <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code> whose
   <i>origin-clean</i> flag is false.</li>

   <li><p>The element's 2D context's <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code> attribute is set
   to a <code><a href=#canvaspattern>CanvasPattern</a></code> object that was created from an
   <code><a href=#htmlimageelement>HTMLImageElement</a></code> whose <a href=#origin-0>origin</a> was not the
   <a href=#same-origin title="same origin">same</a> as that of the
   <code>Document</code> object that owns the <code><a href=#the-canvas-element>canvas</a></code>
   element when the pattern was created.</li>

   <li><p>The element's 2D context's <code title=dom-context-2d-fillStyle><a href=#dom-context-2d-fillstyle>fillStyle</a></code> attribute is set
   to a <code><a href=#canvaspattern>CanvasPattern</a></code> object that was created from an
   <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code> whose <i>origin-clean</i> flag was
   false when the pattern was created.</li>

   <li><p>The element's 2D context's <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code> attribute is
   set to a <code><a href=#canvaspattern>CanvasPattern</a></code> object that was created from an
   <code><a href=#htmlimageelement>HTMLImageElement</a></code> whose <a href=#origin-0>origin</a> was not the
   <a href=#same-origin title="same origin">same</a> as that of the
   <code>Document</code> object that owns the <code><a href=#the-canvas-element>canvas</a></code>
   element when the pattern was created.</li>

   <li><p>The element's 2D context's <code title=dom-context-2d-strokeStyle><a href=#dom-context-2d-strokestyle>strokeStyle</a></code> attribute is
   set to a <code><a href=#canvaspattern>CanvasPattern</a></code> object that was created from an
   <code><a href=#htmlcanvaselement>HTMLCanvasElement</a></code> whose <i>origin-clean</i> flag was
   false when the pattern was created.</li>

  </ul><p>Whenever the <code title=dom-canvas-toDataURL><a href=#dom-canvas-todataurl>toDataURL()</a></code> method of a
  <code><a href=#the-canvas-element>canvas</a></code> element whose <i>origin-clean</i> flag is set to
  false is called, the method must raise a <code><a href=#security_err>SECURITY_ERR</a></code>
  exception.</p>

  <p>Whenever the <code title=dom-context-2d-getImageData><a href=#dom-context-2d-getimagedata>getImageData()</a></code> method of
  the 2D context of a <code><a href=#the-canvas-element>canvas</a></code> element whose
  <i>origin-clean</i> flag is set to false is called with otherwise
  correct arguments, the method must raise a <code><a href=#security_err>SECURITY_ERR</a></code>
  exception.</p>

  <p class=note>Even resetting the canvas state by changing its
  <code title=attr-canvas-width><a href=#attr-canvas-width>width</a></code> or <code title=attr-canvas-height><a href=#attr-canvas-height>height</a></code> attributes doesn't reset
  the <i>origin-clean</i> flag.</p>



  <h4 id=the-map-element><span class=secno>4.8.12 </span>The <dfn><code>map</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-map-name><a href=#attr-map-name>name</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlmapelement>HTMLMapElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-map-name title=dom-map-name>name</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-map-areas title=dom-map-areas>areas</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-map-images title=dom-map-images>images</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-map-element>map</a></code> element, in conjunction with any
  <code><a href=#the-area-element>area</a></code> element descendants, defines an <a href=#image-map>image
  map</a>. The element <a href=#represents>represents</a> its children.</p>

  <p>The <dfn id=attr-map-name title=attr-map-name><code>name</code></dfn> attribute
  gives the map a name so that it can be referenced. The attribute
  must be present and must have a non-empty value with no <a href=#space-character title="space character">space characters</a>. If the <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute is also specified, both
  attributes must have the same value.</p>

  <p>The <dfn id=dom-map-areas title=dom-map-areas><code>areas</code></dfn> attribute
  must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code><a href=#the-map-element>map</a></code> element, whose filter matches only
  <code><a href=#the-area-element>area</a></code> elements.</p>

  <p>The <dfn id=dom-map-images title=dom-map-images><code>images</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only
  <code><a href=#the-img-element>img</a></code> and <code><a href=#the-object-element>object</a></code> elements that are
  associated with this <code><a href=#the-map-element>map</a></code> element according to the
  <a href=#image-map>image map</a> processing model.</p>

  <p>The DOM attribute <dfn id=dom-map-name title=dom-map-name><code>name</code></dfn> must
  <a href=#reflect>reflect</a> the content attribute of the same name.</p>
  


  <h4 id=the-area-element><span class=secno>4.8.13 </span>The <dfn><code>area</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected, but only if there is a <code><a href=#the-map-element>map</a></code> element ancestor.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-area-alt><a href=#attr-area-alt>alt</a></code></dd>
   <dd><code title=attr-area-coords><a href=#attr-area-coords>coords</a></code></dd>
   <dd><code title=attr-area-shape><a href=#attr-area-shape>shape</a></code></dd>
   <dd><code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code></dd>
   <dd><code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code></dd>
   <dd><code title=attr-hyperlink-ping><a href=#ping>ping</a></code></dd>
   <dd><code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code></dd>
   <dd><code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code></dd>
   <dd><code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code></dd>
   <dd><code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlareaelement>HTMLAreaElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-area-alt title=dom-area-alt>alt</a>;
           attribute DOMString <a href=#dom-area-coords title=dom-area-coords>coords</a>;
           attribute DOMString <a href=#dom-area-shape title=dom-area-shape>shape</a>;
           attribute DOMString <a href=#dom-area-href title=dom-area-href>href</a>;
           attribute DOMString <a href=#dom-area-target title=dom-area-target>target</a>;
           attribute DOMString <a href=#dom-area-ping title=dom-area-ping>ping</a>;
           attribute DOMString <a href=#dom-area-rel title=dom-area-rel>rel</a>;
  readonly attribute DOMTokenList <a href=#dom-area-rellist title=dom-area-relList>relList</a>;
           attribute DOMString <a href=#dom-area-media title=dom-area-media>media</a>;
           attribute DOMString <a href=#dom-area-hreflang title=dom-area-hreflang>hreflang</a>;
           attribute DOMString <a href=#dom-area-type title=dom-area-type>type</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-area-element>area</a></code> element <a href=#represents>represents</a> either a
  hyperlink with some text and a corresponding area on an <a href=#image-map>image
  map</a>, or a dead area on an image map.</p>

  <p>If the <code><a href=#the-area-element>area</a></code> element has an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute, then the
  <code><a href=#the-area-element>area</a></code> element represents a <a href=#hyperlink>hyperlink</a>. In
  this case, the <dfn id=attr-area-alt title=attr-area-alt><code>alt</code></dfn>
  attribute must be present. It specifies the text of the
  hyperlink. Its value must be text that, when presented with the
  texts specified for the other hyperlinks of the <a href=#image-map>image
  map</a>, and with the alternative text of the image, but without
  the image itself, provides the user with the same kind of choice as
  the hyperlink would when used without its text but with its shape
  applied to the image. The <code title=attr-area-alt><a href=#attr-area-alt>alt</a></code>
  attribute may be left blank if there is another <code><a href=#the-area-element>area</a></code>
  element in the same <a href=#image-map>image map</a> that points to the same
  resource and has a non-blank <code title=attr-area-alt><a href=#attr-area-alt>alt</a></code>
  attribute.</p>

  <p>If the <code><a href=#the-area-element>area</a></code> element has no <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute, then the area
  represented by the element cannot be selected, and the <code title=attr-area-alt><a href=#attr-area-alt>alt</a></code> attribute must be omitted.</p>

  <p>In both cases, the <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code> and
  <code title=attr-area-coords><a href=#attr-area-coords>coords</a></code> attributes specify the
  area.</p>

  <p>The <dfn id=attr-area-shape title=attr-area-shape><code>shape</code></dfn>
  attribute is an <a href=#enumerated-attribute>enumerated attribute</a>. The following
  table lists the keywords defined for this attribute. The states
  given in the first cell of the rows with keywords give the
  states to which those keywords map. Some of the keywords are
  non-conforming, as noted in the last column.</p>

  <table><thead><tr><th>State
     <th>Keywords
     <th>Notes
   <tbody><tr><td rowspan=2><a href=#attr-area-shape-circle title=attr-area-shape-circle>Circle state</a>
     <td><dfn id=attr-area-shape-keyword-circ title=attr-area-shape-keyword-circ><code>circ</code></dfn>
     <td>Non-conforming
    <tr><td><dfn id=attr-area-shape-keyword-circle title=attr-area-shape-keyword-circle><code>circle</code></dfn>
     <td>
    <tr><td><a href=#attr-area-shape-default title=attr-area-shape-default>Default state</a>
     <td><dfn id=attr-area-shape-keyword-default title=attr-area-shape-keyword-default><code>default</code></dfn>
     <td>
    <tr><td rowspan=2><a href=#attr-area-shape-poly title=attr-area-shape-poly>Polygon state</a>
     <td><dfn id=attr-area-shape-keyword-poly title=attr-area-shape-keyword-poly><code>poly</code></dfn>
     <td>
    <tr><td><dfn id=attr-area-shape-keyword-polygon title=attr-area-shape-keyword-polygon><code>polygon</code></dfn>
     <td>Non-conforming
    <tr><td rowspan=2><a href=#attr-area-shape-rect title=attr-area-shape-rect>Rectangle state</a>
     <td><dfn id=attr-area-shape-keyword-rect title=attr-area-shape-keyword-rect><code>rect</code></dfn>
     <td>
    <tr><td><dfn id=attr-area-shape-keyword-rectangle title=attr-area-shape-keyword-rectangle><code>rectangle</code></dfn>
     <td>Non-conforming
  </table><p>The attribute may be omitted. The <i>missing value default</i> is
  the <a href=#attr-area-shape-rect title=attr-area-shape-rect>rectangle</a> state.</p>

  <p>The <dfn id=attr-area-coords title=attr-area-coords><code>coords</code></dfn>
  attribute must, if specified, contain a <a href=#valid-list-of-integers>valid list of
  integers</a>. This attribute gives the coordinates for the shape
  described by the <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code>
  attribute. The processing for this attribute is described as part of
  the <a href=#image-map>image map</a> processing model.</p>

  <p>In the <dfn id=attr-area-shape-circle title=attr-area-shape-circle>circle state</dfn>,
  <code><a href=#the-area-element>area</a></code> elements must have a <code title=attr-area-coords><a href=#attr-area-coords>coords</a></code> attribute present, with three
  integers, the last of which must be non-negative. The first integer
  must be the distance in CSS pixels from the left edge of the image
  to the center of the circle, the second integer must be the distance
  in CSS pixels from the top edge of the image to the center of the
  circle, and the third integer must be the radius of the circle,
  again in CSS pixels.</p>

  <p>In the <dfn id=attr-area-shape-default title=attr-area-shape-default>default state</dfn>
  state, <code><a href=#the-area-element>area</a></code> elements must not have a <code title=attr-area-coords><a href=#attr-area-coords>coords</a></code> attribute. (The area is the
  whole image.)</p>

  <p>In the <dfn id=attr-area-shape-poly title=attr-area-shape-poly>polygon state</dfn>,
  <code><a href=#the-area-element>area</a></code> elements must have a <code title=attr-area-coords><a href=#attr-area-coords>coords</a></code> attribute with at least six
  integers, and the number of integers must be even. Each pair of
  integers must represent a coordinate given as the distances from the
  left and the top of the image in CSS pixels respectively, and all
  the coordinates together must represent the points of the polygon,
  in order.</p>

  <p>In the <dfn id=attr-area-shape-rect title=attr-area-shape-rect>rectangle state</dfn>,
  <code><a href=#the-area-element>area</a></code> elements must have a <code title=attr-area-coords><a href=#attr-area-coords>coords</a></code> attribute with exactly four
  integers, the first of which must be less than the third, and the
  second of which must be less than the fourth. The four points must
  represent, respectively, the distance from the left edge of the
  image to the left side of the rectangle, the distance from the
  top edge to the top side, the distance from the left edge to the
  right side, and the distance from the top edge to the bottom side,
  all in CSS pixels.</p>

  <p>When user agents allow users to <a href=#following-hyperlinks title="following
  hyperlinks">follow hyperlinks</a> created using the
  <code><a href=#the-area-element>area</a></code> element, as described in the next section, the
  <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code>,
  <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code> and <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attributes decide how the
  link is followed. The <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code>,
  <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code>, <code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code>, and <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code> attributes may be used to
  indicate to the user the likely nature of the target resource before
  the user follows the link.</p>

  <p>The <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code>, <code title=attr-hyperlink-ping><a href=#ping>ping</a></code>, <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code>, <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code>, <code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code>, and <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code> attributes must be omitted
  if the <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute is
  not present.</p>

  <p>The <a href=#activation-behavior>activation behavior</a> of <code><a href=#the-area-element>area</a></code>
  elements is to run the following steps:</p>

  <ol><li>If the <code title=event-DOMActivate>DOMActivate</code> event
   in question is not <span title=concept-events-trusted>trusted</span> (i.e. a <code title=dom-click><a href=#dom-click>click()</a></code> method call was the reason for the
   event being dispatched), and the <code><a href=#the-area-element>area</a></code> element's <code title=attr-area-target>target</code> attribute is <span class=XXX>...</span> then raise an
   <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception.</li>

   <li>Otherwise, the user agent must <a href=#following-hyperlinks title="following
   hyperlinks">follow the hyperlink</a> defined by the
   <code><a href=#the-area-element>area</a></code> element, if any.</li>

  </ol><p>The DOM attributes <dfn id=dom-area-alt title=dom-area-alt><code>alt</code></dfn>, <dfn id=dom-area-coords title=dom-area-coords><code>coords</code></dfn>, <dfn id=dom-area-href title=dom-area-href><code>href</code></dfn>, <dfn id=dom-area-target title=dom-area-target><code>target</code></dfn>, <dfn id=dom-area-ping title=dom-area-ping><code>ping</code></dfn>, <dfn id=dom-area-rel title=dom-area-rel><code>rel</code></dfn>, <dfn id=dom-area-media title=dom-area-media><code>media</code></dfn>, <dfn id=dom-area-hreflang title=dom-area-hreflang><code>hreflang</code></dfn>, and <dfn id=dom-area-type title=dom-area-type><code>type</code></dfn>, each must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>

  <p>The DOM attribute <dfn id=dom-area-shape title=dom-area-shape><code>shape</code></dfn> must
  <a href=#reflect>reflect</a> the <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code>
  content attribute, <a href=#limited-to-only-known-values>limited to only known values</a>.</p>

  <p>The DOM attribute <dfn id=dom-area-rellist title=dom-area-rellist><code>relList</code></dfn> must
  <a href=#reflect>reflect</a> the <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code>
  content attribute.</p>



  <h4 id=image-maps><span class=secno>4.8.14 </span>Image maps</h4>

  <!-- TESTS
  http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E%0A%3Cimg%20src%3D%22http%3A//hixie.ch/resources/images/smallcats%22%20usemap%3D%23a%20onclick%3Dw%28%27img%27%29%3E%0A%3Cmap%20name%3Da%3E%0A%20%3Carea%20onclick%3Dw%28%271%27%29%20coords%3D%270%25%200%25%20100%25%20100%25%27%20href%3Djavascript%3A%3E%0A%3C/map%3E
  http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E%0A%3Cbody%20onfocus%3D%22w%28document.activeElement.tagName%29%22%3E%0A%3Cimg%20src%3D%22http%3A//hixie.ch/resources/images/smallcats%22%20usemap%3D%23a%20onclick%3Dw%28%27img%27%29%20onfocus%3D%22w%28document.activeElement.tagName%29%22%3E%0A%3Cimg%20src%3D%22http%3A//hixie.ch/resources/images/sample%22%20usemap%3D%23a%20onclick%3Dw%28%27img%27%29%20onfocus%3D%22w%28document.activeElement.tagName%29%22%3E%0A%3Cmap%20name%3Da%20onfocus%3D%22w%28document.activeElement.tagName%29%22%3E%0A%20%3Carea%20onclick%3Dw%28%271%27%29%20coords%3D%270%200%2050%2050%27%20href%3Djavascript%3A%20onfocus%3D%22w%28document.activeElement.tagName%29%22%3E%0A%3C/map%3E%0A%3Cscript%3E%0A%20var%20x%20%3D%20document.getElementsByTagName%28%27img%27%29%5B0%5D%3B%0A%20x.parentNode.appendChild%28x%29%3B%0A%20document.getElementsByTagName%28%27area%27%29%5B0%5D.focus%28%29%3B%0A%3C/script%3E
  http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3Ex%3Cmap%3E%3Carea%20shape%3Dpolyg%20coords%3D%221%2C2%203%22%3E%3C/map%3E%0A%3Cscript%3Ex%20%3D%20document.getElementsByTagName%28%27area%27%29%5B0%5D%3B%20w%28x.shape%20+%20%27%20%27%20+%20x.coords%29%3C/script%3E
  http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E%0D%0A%3Cp%3E%3Cimg%20src%3D%22http%3A//hixie.ch/resources/images/astrophy/128%22%20usemap%3D%23a%3E%0D%0A%3Cmap%20name%3Da%3E%3Carea%20shape%3Dcirc%20coords%3D%2220%2C20%2C10%25%22%20href%3D%23%3E%3Carea%20shape%3Dcirc%20coords%3D%2220%2C20%2C10%22%20href%3D%23%3E%3C/map%3E%0D%0A%3Cscript%3Edocument.write%28document.getElementsByTagName%28%27area%27%29%5B0%5D.coords%29%3C/script%3E
  -->

  <h5 id=authoring><span class=secno>4.8.14.1 </span>Authoring</h5>

  <p>An <dfn id=image-map>image map</dfn> allows geometric areas on an image to be
  associated with <a href=#hyperlink title=hyperlink>hyperlinks</a>.</p>

  <p>An image, in the form of an <code><a href=#the-img-element>img</a></code> element or an
  <code><a href=#the-object-element>object</a></code> element representing an image, may be associated
  with an image map (in the form of a <code><a href=#the-map-element>map</a></code> element) by
  specifying a <dfn id=attr-hyperlink-usemap title=attr-hyperlink-usemap><code>usemap</code></dfn> attribute on
  the <code><a href=#the-img-element>img</a></code> or <code><a href=#the-object-element>object</a></code> element. The <code title=attr-area-usemap>usemap</code> attribute, if specified, must
  be a <a href=#valid-hash-name-reference>valid hash-name reference</a> to a <code><a href=#the-map-element>map</a></code>
  element.</p>

  <div class=example>

   <p>Consider an image that looks as follows:</p>

   <p><img alt="A line with four shapes in it, equally spaced: a red hollow box, a green circle, a blue triangle, and a yellow four-pointed star." src=images/sample-usemap.png></p>

   <p>If we wanted just the coloured areas to be clickable, we could
   do it as follows:</p>

   <pre>&lt;p&gt;
 Please select a shape:
 &lt;img src="shapes.png" usemap="#shapes"
      alt="Four shapes are available: a red hollow box, a green circle, a blue triangle, and a yellow four-pointed star."&gt;
 &lt;map name="shapes"&gt;
  &lt;area shape=rect coords="50,50,100,100"&gt; &lt;!-- the hole in the red box --&gt;
  &lt;area shape=rect coords="25,25,125,125" href="red.html" alt="Red box."&gt;
  &lt;area shape=circle coords="200,75,50" href="green.html" alt="Green circle."&gt;
  &lt;area shape=poly coords="325,25,262,125,388,125" href="blue.html" alt="Blue triangle."&gt;
  &lt;area shape=poly coords="450,25,435,60,400,75,435,90,450,125,465,90,500,75,465,60"
        href="yellow.html" alt="Yellow star."&gt;
 &lt;/map&gt;
&lt;/p&gt;</pre>

  </div>


  <h5 id=processing-model><span class=secno>4.8.14.2 </span>Processing model</h5>

  <p>If an <code><a href=#the-img-element>img</a></code> element or an <code><a href=#the-object-element>object</a></code> element
  representing an image has a <code title=attr-area-usemap>usemap</code> attribute specified, user
  agents must process it as follows:</p>

  <ol><li><p>First, <a href=#rules-for-parsing-a-hash-name-reference>rules for parsing a hash-name reference</a>
   to a <code><a href=#the-map-element>map</a></code> element must be followed. This will return
   either an element (the <var title="">map</var>) or null.</li>

   <li><p>If that returned null, then abort these steps. The image is
   not associated with an image map after all.</li>

   <li><p>Otherwise, the user agent must collect all the
   <code><a href=#the-area-element>area</a></code> elements that are descendants of the <var title="">map</var>. Let those be the <var title="">areas</var>.</li>

  </ol><p>Having obtained the list of <code><a href=#the-area-element>area</a></code> elements that form
  the image map (the <var title="">areas</var>), interactive user
  agents must process the list in one of two ways.</p>

  <p>If the user agent intends to show the text that the
  <code><a href=#the-img-element>img</a></code> element represents, then it must use the following
  steps.</p>

  <p class=note>In user agents that do not support images, or that
  have images disabled, <code><a href=#the-object-element>object</a></code> elements cannot represent
  images, and thus this section never applies (the <a href=#fallback-content>fallback
  content</a> is shown instead). The following steps therefore only
  apply to <code><a href=#the-img-element>img</a></code> elements.</p>

  <ol><li><p>Remove all the <code><a href=#the-area-element>area</a></code> elements in <var title="">areas</var> that have no <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute.</li>

   <li><p>Remove all the <code><a href=#the-area-element>area</a></code> elements in <var title="">areas</var> that have no <code title=attr-area-alt><a href=#attr-area-alt>alt</a></code> attribute, or whose <code title=attr-area-alt><a href=#attr-area-alt>alt</a></code> attribute's value is the empty
   string, <em>if</em> there is another <code><a href=#the-area-element>area</a></code> element in
   <var title="">areas</var> with the same value in the <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute and with a
   non-empty <code title=attr-area-alt><a href=#attr-area-alt>alt</a></code> attribute.</li>

   <li><p>Each remaining <code><a href=#the-area-element>area</a></code> element in <var title="">areas</var> represents a <a href=#hyperlink>hyperlink</a>. Those
   hyperlinks should all be made available to the user in a manner
   associated with the text of the <code><a href=#the-img-element>img</a></code>.</p>

   <p>In this context, user agents may represent <code><a href=#the-area-element>area</a></code> and
   <code><a href=#the-img-element>img</a></code> elements with no specified <code title="">alt</code> attributes, or whose <code title="">alt</code>
   attributes are the empty string or some other non-visible text, in
   a user-agent-defined fashion intended to indicate the lack of
   suitable author-provided text.</li>

  </ol><p>If the user agent intends to show the image and allow interaction
  with the image to select hyperlinks, then the image must be
  associated with a set of layered shapes, taken from the
  <code><a href=#the-area-element>area</a></code> elements in <var title="">areas</var>, in reverse
  tree order (so the last specified <code><a href=#the-area-element>area</a></code> element in the
  <var title="">map</var> is the bottom-most shape, and the first
  element in the <var title="">map</var>, in tree order, is the
  top-most shape).</p>

  <p>Each <code><a href=#the-area-element>area</a></code> element in <var title="">areas</var> must
  be processed as follows to obtain a shape to layer onto the
  image:</p>

  <ol><li><p>Find the state that the element's <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code> attribute represents.</li>

   <li><p>Use the <a href=#rules-for-parsing-a-list-of-integers>rules for parsing a list of integers</a> to
   parse the element's <code title=attr-area-coords><a href=#attr-area-coords>coords</a></code>
   attribute, if it is present, and let the result be the <var title="">coords</var> list. If the attribute is absent, let the
   <var title="">coords</var> list be the empty list.</li>

   <li><p>If the number of items in the <var title="">coords</var>
   list is less than the minimum number given for the
   <code><a href=#the-area-element>area</a></code> element's current state, as per the following
   table, then the shape is empty; abort these steps.</p>
    <table><thead><tr><th>State
       <th>Minimum number of items
     <tbody><tr><td><a href=#attr-area-shape-circle title=attr-area-shape-circle>Circle state</a>
       <td>3
      <tr><td><a href=#attr-area-shape-default title=attr-area-shape-default>Default state</a>
       <td>0
      <tr><td><a href=#attr-area-shape-poly title=attr-area-shape-poly>Polygon state</a>
       <td>6
      <tr><td><a href=#attr-area-shape-rect title=attr-area-shape-rect>Rectangle state</a>
       <td>4
    </table></li>

   <li><p>Check for excess items in the <var title="">coords</var>
   list as per the entry in the following list corresponding to the
   <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code> attribute's state:</p>
    <dl class=switch><dt><a href=#attr-area-shape-circle title=attr-area-shape-circle>Circle state</a></dt>
     <dd>Drop any items in the list beyond the third.</dd>
     <dt><a href=#attr-area-shape-default title=attr-area-shape-default>Default state</a></dt>
     <dd>Drop all items in the list.</dd>
     <dt><a href=#attr-area-shape-poly title=attr-area-shape-poly>Polygon state</a></dt>
     <dd>Drop the last item if there's an odd number of items.</dd>
     <dt><a href=#attr-area-shape-rect title=attr-area-shape-rect>Rectangle state</a></dt>
     <dd>Drop any items in the list beyond the fourth.</dd>
    </dl></li>

   <li><p>If the <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code> attribute
   represents the <a href=#attr-area-shape-rect title=attr-area-shape-rect>rectangle
   state</a>, and the first number in the list is numerically less
   than the third number in the list, then swap those two numbers
   around.</li>

   <li><p>If the <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code> attribute
   represents the <a href=#attr-area-shape-rect title=attr-area-shape-rect>rectangle
   state</a>, and the second number in the list is numerically less
   than the fourth number in the list, then swap those two numbers
   around.</li>

   <li><p>If the <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code> attribute
   represents the <a href=#attr-area-shape-circle title=attr-area-shape-circle>circle
   state</a>, and the third number in the list is less than or
   equal to zero, then the shape is empty; abort these steps.</li>

   <li><p>Now, the shape represented by the element is the one
   described for the entry in the list below corresponding to the
   state of the <code title=attr-area-shape><a href=#attr-area-shape>shape</a></code>
   attribute:</p>

    <dl class=switch><dt><a href=#attr-area-shape-circle title=attr-area-shape-circle>Circle state</a></dt>
     <dd>
      <p>Let <var title="">x</var> be the first number in <var title="">coords</var>, <var title="">y</var> be the second
      number, and <var title="">r</var> be the third number.</p>
      <p>The shape is a circle whose center is <var title="">x</var>
      CSS pixels from the left edge of the image and <var title="">x</var> CSS pixels from the top edge of the image, and
      whose radius is <var title="">r</var> pixels.</p>
     </dd>

     <dt><a href=#attr-area-shape-default title=attr-area-shape-default>Default state</a></dt>
     <dd>
      <p>The shape is a rectangle that exactly covers the entire
      image.</p>
     </dd>

     <dt><a href=#attr-area-shape-poly title=attr-area-shape-poly>Polygon state</a></dt>
     <dd>

      <p>Let <var title="">x<sub title=""><var title="">i</var></sub></var> be the <span>(2<var title="">i</var>)</span>th entry in <var title="">coords</var>,
      and <var title="">y<sub title=""><var title="">i</var></sub></var> be the <span>(2<var title="">i</var>+1)</span>th entry in <var title="">coords</var>
      (the first entry in <var title="">coords</var> being the one
      with index 0).</p>

      <p>Let <var title="">the coordinates</var> be (<var title="">x<sub title=""><var title="">i</var></sub></var>, <var title="">y<sub title=""><var title="">i</var></sub></var>),
      interpreted in CSS pixels measured from the top left of the
      image, for all integer values of <var title="">i</var> from 0 to
      <span>(<var title="">N</var>/2)-1</span>, where <var title="">N</var> is the number of items in <var title="">coords</var>.</p>

      <p>The shape is a polygon whose vertices are given by <var title="">the coordinates</var>, and whose interior is
      established using the even-odd rule. <a href=#refsGRAPHICS>[GRAPHICS]</a></p>

      <!-- If anyone has this book ("Computer Graphics: Principles and
           Practice in C"), please check page 34 or so and see if it
           makes any references to literature in the bibliographic
           section to define the "even-odd" rule for polygon filling
           and hit testing.
        <dd id="refsGRAPHICS">[GRAPHICS]</dd>
        <dd>(Non-normative) <cite>Computer Graphics: Principles and Practice in C</cite>, Second Edition, J. Foley, A. van Dam, S. Feiner, J. Hughes. Addison-Wesley, July 1995. ISBN 0-201-84840-6.</dd>
      -->

      <!--
        browsers implement the even-odd rule / even winding rule:
        http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E%0A%3Cimg%20usemap%3D%22%23x%22%20src%3D%22/resources/images/sample%22%3E%0A%3Cmap%20name%3D%22x%22%3E%0A%20%20%3Carea%20shape%3Dpolygon%20coords%3D%220%2C0%200%2C100%20100%2C100%20100%2C2%201%2C2%202%2C1%202%2C99%2099%2C99%2099%2C0%22%20href%3Da%3E%0A%3C/map%3E%0A
       -->

     </dd>

     <dt><a href=#attr-area-shape-rect title=attr-area-shape-rect>Rectangle state</a></dt>

     <dd>

      <p>Let <var title="">x1</var> be the first number in <var title="">coords</var>, <var title="">y1</var> be the second
      number, <var title="">x2</var> be the third number, and <var title="">y2</var> be the fourth number.</p>

      <p>The shape is a rectangle whose top-left corner is given by
      the coordinate (<var title="">x1</var>, <var title="">y1</var>)
      and whose bottom right corner is given by the coordinate (<var title="">x2</var>, <var title="">y2</var>), those coordinates
      being interpreted as CSS pixels from the top left corner of the
      image.</p>

     </dd>

    </dl><p>For historical reasons, the coordinates must be interpreted
    relative to the <em>displayed</em> image, even if it stretched
    using CSS or the image element's <code title="">width</code> and
    <code title="">height</code> attributes.</p>

   </li>

  </ol><p>Mouse clicks on an image associated with a set of layered shapes
  per the above algorithm must be dispatched to the top-most shape
  covering the point that the pointing device indicated (if any), and
  then, must be dispatched again (with a new <code>Event</code>
  object) to the image element itself. User agents may also allow
  individual <code><a href=#the-area-element>area</a></code> elements representing <a href=#hyperlink title=hyperlink>hyperlinks</a> to be selected and activated
  (e.g. using a keyboard); events from this are not also propagated to
  the image.</p>

  <p class=note>Because a <code><a href=#the-map-element>map</a></code> element (and its
  <code><a href=#the-area-element>area</a></code> elements) can be associated with multiple
  <code><a href=#the-img-element>img</a></code> and <code><a href=#the-object-element>object</a></code> elements, it is possible
  for an <code><a href=#the-area-element>area</a></code> element to correspond to multiple focusable
  areas of the document.</p>

  <p>Image maps are <em>live</em>; if the DOM is mutated, then the
  user agent must act as if it had rerun the algorithms for image
  maps.</p>



  <h4 id=mathml><span class=secno>4.8.15 </span>MathML</h4>

  <p>The <code>math</code> element from the <a href=#mathml-namespace>MathML
  namespace</a> falls into the <a href=#embedded-content-2>embedded content</a>
  category for the purposes of the content models in this
  specification.</p>

  <!-- apparently we get to define error handling, so: -->

  <p>User agents must handle text other than <a href=#inter-element-whitespace>inter-element
  whitespace</a> found in MathML elements whose content models do
  not allow raw text by pretending for the purposes of MathML content
  models, layout, and rendering that that text is actually wrapped in
  an <code title="">mtext</code> element in the <a href=#mathml-namespace>MathML
  namespace</a>. (Such text is not, however, conforming.)</p>

  <p>User agents must act as if any MathML element whose contents does
  not match the element's content model was replaced, for the purposes
  of MathML layout and rendering, by an <code title="">merror</code>
  element in the <a href=#mathml-namespace>MathML namespace</a> containing some
  appropriate error message.</p>

  <p>To enable authors to use MathML tools that only accept MathML in
  its XML form, interactive HTML user agents are encouraged to
  provide a way to export any MathML fragment as a
  namespace-well-formed XML fragment.</p>


  <h4 id=svg><span class=secno>4.8.16 </span>SVG</h4>

  <p>The <code>svg</code> element from the <a href=#svg-namespace>SVG namespace</a>
  falls into the <a href=#embedded-content-2>embedded content</a> category for the
  purposes of the content models in this specification.</p>

  <p>To enable authors to use SVG tools that only accept SVG in its
  XML form, interactive HTML user agents are encouraged to provide a
  way to export any SVG fragment as a namespace-well-formed XML
  fragment.</p>

  <p>When the SVG <code>foreignObject</code> element contains elements
  from the HTML namespace, such elements must all be <a href=#flow-content-0>flow
  content</a> and must not be interleaved with non-HTML
  elements. <a href=#refsSVG>[SVG]</a></p>


  <h4 id=dimension-attributes><span class=secno>4.8.17 </span><dfn>Dimension attributes</dfn></h4>

  <p>The <dfn id=attr-dim-width title=attr-dim-width><code>width</code></dfn> and <dfn id=attr-dim-height title=attr-dim-height><code>height</code></dfn> attributes on
  <code><a href=#the-img-element>img</a></code>, <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-embed-element>embed</a></code>,
  <code><a href=#the-object-element>object</a></code>, <code><a href=#video>video</a></code>, and, when their <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state,
  <code><a href=#the-input-element>input</a></code> elements may be specified to give the dimensions
  of the visual content of the element (the width and height
  respectively, relative to the nominal direction of the output
  medium), in CSS pixels. The attributes, if specified, must have
  values that are <a href=#valid-non-negative-integer title="valid non-negative integer">valid
  non-negative integers</a> greater than zero.</p>

  <p>The specified dimensions given may differ from the dimensions
  specified in the resource itself, since the resource may have a
  resolution that differs from the CSS pixel resolution. (On screens,
  CSS pixels have a resolution of 96ppi, but in general the CSS pixel
  resolution depends on the reading distance.) If both attributes are
  specified, then one of the following statements must be true:</p>

  <ul><li><span><var title="">specified width</var> - 0.5 &le;
             <var title="">specified height</var> * <var title="">target ratio</var> &le;
             <var title="">specified width</var> + 0.5</span></li>

   <li><span><var title="">specified height</var> - 0.5 &le;
             <var title="">specified width</var> / <var title="">target ratio</var> &le;
             <var title="">specified height</var> + 0.5</span></li>

  </ul><p>The <var title="">target ratio</var> is the ratio of the
  intrinsic width to the intrinsic height in the resource. The <var title="">specified width</var> and <var title="">specified
  height</var> are the values of the <code title=attr-dim-width><a href=#attr-dim-width>width</a></code> and <code title=attr-dim-height><a href=#attr-dim-height>height</a></code> attributes respectively.</p>

  <p>The two attributes must be omitted if the resource in question
  does not have both an intrinsic width and an intrinsic height.</p>

  <p class=note>Basically, the dimension attributes can't be used to
  stretch the image.</p>

  <p>The <dfn id=dom-dim-width title=dom-dim-width><code>width</code></dfn> and <dfn id=dom-dim-height title=dom-dim-height><code>height</code></dfn> DOM attributes on
  the <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-object-element>object</a></code>,
  and <code><a href=#video>video</a></code> elements must <a href=#reflect>reflect</a> the
  respective content attributes of the same name.</p> <!-- XXX check
  that this is defined right in the face of percentages -->




  <h3 id=tabular-data><span class=secno>4.9 </span>Tabular data</h3>

  <h4 id=table-intro><span class=secno>4.9.1 </span>Introduction</h4>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>...examples, how to write tables accessibly, a
  brief mention of the table model, etc...</p>


  <h4 id=the-table-element><span class=secno>4.9.2 </span>The <dfn><code>table</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>In this order: optionally a <code><a href=#the-caption-element>caption</a></code> element,
   followed by either zero or more <code><a href=#the-colgroup-element>colgroup</a></code> elements,
   followed optionally by a <code><a href=#the-thead-element>thead</a></code> element, followed
   optionally by a <code><a href=#the-tfoot-element>tfoot</a></code> element, followed by either zero
   or more <code><a href=#the-tbody-element>tbody</a></code> elements <em>or</em> one or more
   <code><a href=#the-tr-element>tr</a></code> elements, followed optionally by a
   <code><a href=#the-tfoot-element>tfoot</a></code> element (but there can only be one
   <code><a href=#the-tfoot-element>tfoot</a></code> element child in total).</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmltableelement>HTMLTableElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute <span>HTMLTableCaptionElement</span> <a href=#dom-table-caption title=dom-table-caption>caption</a>;
  <a href=#htmlelement>HTMLElement</a> <a href=#dom-table-createcaption title=dom-table-createCaption>createCaption</a>();
  void <a href=#dom-table-deletecaption title=dom-table-deleteCaption>deleteCaption</a>();
           attribute <a href=#htmltablesectionelement>HTMLTableSectionElement</a> <a href=#dom-table-thead title=dom-table-tHead>tHead</a>;
  <a href=#htmlelement>HTMLElement</a> <a href=#dom-table-createthead title=dom-table-createTHead>createTHead</a>();
  void <a href=#dom-table-deletethead title=dom-table-deleteTHead>deleteTHead</a>();
           attribute <a href=#htmltablesectionelement>HTMLTableSectionElement</a> <a href=#dom-table-tfoot title=dom-table-tFoot>tFoot</a>;
  <a href=#htmlelement>HTMLElement</a> <a href=#dom-table-createtfoot title=dom-table-createTFoot>createTFoot</a>();
  void <a href=#dom-table-deletetfoot title=dom-table-deleteTFoot>deleteTFoot</a>();
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-table-tbodies title=dom-table-tBodies>tBodies</a>;
  <a href=#htmlelement>HTMLElement</a> <a href=#dom-table-createtbody title=dom-table-createTBody>createTBody</a>();
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-table-rows title=dom-table-rows>rows</a>;
  <a href=#htmlelement>HTMLElement</a> <a href=#dom-table-insertrow title=dom-table-insertRow>insertRow</a>([Optional] in long index);
  void <a href=#dom-table-deleterow title=dom-table-deleteRow>deleteRow</a>(in long index);
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-table-element>table</a></code> element <a href=#represents>represents</a> data with
  more than one dimension, in the form of a <a href=#concept-table title=concept-table>table</a>.</p>

  <p class=XXX>we need some editorial text on how layout
  tables are bad practice and non-conforming</p>

  <p>The children of a <code><a href=#the-table-element>table</a></code> element must be, in
  order:</p><!-- XXX do we need this? it's already up there... -->

  <ol><li><p>Zero or one <code><a href=#the-caption-element>caption</a></code> elements.</li>

   <li><p>Zero or more <code><a href=#the-colgroup-element>colgroup</a></code> elements.</li>

   <li><p>Zero or one <code><a href=#the-thead-element>thead</a></code> elements.</li>

   <li><p>Zero or one <code><a href=#the-tfoot-element>tfoot</a></code> elements, if the last element
   in the table is not a <code><a href=#the-tfoot-element>tfoot</a></code> element.</li>

   <li><p>Either:</p>

    <ul><li>Zero or more <code><a href=#the-tbody-element>tbody</a></code> elements, or</li>

     <li>One or more <code><a href=#the-tr-element>tr</a></code> elements. <strong class=note>(Only expressible in the <span title="">XML
     serialization</span><!-- XXX xref -->.)</strong></li>

    </ul></li>

   <li><p>Zero or one <code><a href=#the-tfoot-element>tfoot</a></code> element, if there are no
   other <code><a href=#the-tfoot-element>tfoot</a></code> elements in the table.</li>

  </ol><p>The <code><a href=#the-table-element>table</a></code> element takes part in the <a href=#table-model>table
  model</a>.</p>

  <p>The <dfn id=dom-table-caption title=dom-table-caption><code>caption</code></dfn> DOM
  attribute must return, on getting, the first <code><a href=#the-caption-element>caption</a></code>
  element child of the <code><a href=#the-table-element>table</a></code> element, if any, or null
  otherwise. On setting, if the new value is a <code><a href=#the-caption-element>caption</a></code>
  element, the first <code><a href=#the-caption-element>caption</a></code> element child of the
  <code><a href=#the-table-element>table</a></code> element, if any, must be removed, and the new
  value must be inserted as the first node of the <code><a href=#the-table-element>table</a></code>
  element. If the new value is not a <code><a href=#the-caption-element>caption</a></code> element,
  then a <code><a href=#hierarchy_request_err>HIERARCHY_REQUEST_ERR</a></code> DOM exception must be
  raised instead.</p>

  <p>The <dfn id=dom-table-createcaption title=dom-table-createCaption><code>createCaption()</code></dfn>
  method must return the first <code><a href=#the-caption-element>caption</a></code> element child of
  the <code><a href=#the-table-element>table</a></code> element, if any; otherwise a new
  <code><a href=#the-caption-element>caption</a></code> element must be created, inserted as the first
  node of the <code><a href=#the-table-element>table</a></code> element, and then returned.</p>

  <p>The <dfn id=dom-table-deletecaption title=dom-table-deleteCaption><code>deleteCaption()</code></dfn>
  method must remove the first <code><a href=#the-caption-element>caption</a></code> element child of
  the <code><a href=#the-table-element>table</a></code> element, if any.</p>

  <p>The <dfn id=dom-table-thead title=dom-table-tHead><code>tHead</code></dfn> DOM
  attribute must return, on getting, the first <code><a href=#the-thead-element>thead</a></code>
  element child of the <code><a href=#the-table-element>table</a></code> element, if any, or null
  otherwise. On setting, if the new value is a <code><a href=#the-thead-element>thead</a></code>
  element, the first <code><a href=#the-thead-element>thead</a></code> element child of the
  <code><a href=#the-table-element>table</a></code> element, if any, must be removed, and the new
  value must be inserted immediately before the first element in the
  <code><a href=#the-table-element>table</a></code> element that is neither a <code><a href=#the-caption-element>caption</a></code>
  element nor a <code><a href=#the-colgroup-element>colgroup</a></code> element, if any, or at the end
  of the table otherwise. If the new value is not a <code><a href=#the-thead-element>thead</a></code>
  element, then a <code><a href=#hierarchy_request_err>HIERARCHY_REQUEST_ERR</a></code> DOM exception
  must be raised instead.</p>

  <p>The <dfn id=dom-table-createthead title=dom-table-createTHead><code>createTHead()</code></dfn>
  method must return the first <code><a href=#the-thead-element>thead</a></code> element child of the
  <code><a href=#the-table-element>table</a></code> element, if any; otherwise a new
  <code><a href=#the-thead-element>thead</a></code> element must be created and inserted immediately
  before the first element in the <code><a href=#the-table-element>table</a></code> element that is
  neither a <code><a href=#the-caption-element>caption</a></code> element nor a <code><a href=#the-colgroup-element>colgroup</a></code>
  element, if any, or at the end of the table otherwise, and then that
  new element must be returned.</p>

  <p>The <dfn id=dom-table-deletethead title=dom-table-deleteTHead><code>deleteTHead()</code></dfn>
  method must remove the first <code><a href=#the-thead-element>thead</a></code> element child of the
  <code><a href=#the-table-element>table</a></code> element, if any.</p>

  <p>The <dfn id=dom-table-tfoot title=dom-table-tFoot><code>tFoot</code></dfn> DOM
  attribute must return, on getting, the first <code><a href=#the-tfoot-element>tfoot</a></code>
  element child of the <code><a href=#the-table-element>table</a></code> element, if any, or null
  otherwise. On setting, if the new value is a <code><a href=#the-tfoot-element>tfoot</a></code>
  element, the first <code><a href=#the-tfoot-element>tfoot</a></code> element child of the
  <code><a href=#the-table-element>table</a></code> element, if any, must be removed, and the new
  value must be inserted immediately before the first element in the
  <code><a href=#the-table-element>table</a></code> element that is neither a <code><a href=#the-caption-element>caption</a></code>
  element, a <code><a href=#the-colgroup-element>colgroup</a></code> element, nor a <code><a href=#the-thead-element>thead</a></code>
  element, if any, or at the end of the table if there are no such
  elements. If the new value is not a <code><a href=#the-tfoot-element>tfoot</a></code> element, then
  a <code><a href=#hierarchy_request_err>HIERARCHY_REQUEST_ERR</a></code> DOM exception must be raised
  instead.</p>

  <p>The <dfn id=dom-table-createtfoot title=dom-table-createTFoot><code>createTFoot()</code></dfn>
  method must return the first <code><a href=#the-tfoot-element>tfoot</a></code> element child of the
  <code><a href=#the-table-element>table</a></code> element, if any; otherwise a new
  <code><a href=#the-tfoot-element>tfoot</a></code> element must be created and inserted immediately
  before the first element in the <code><a href=#the-table-element>table</a></code> element that is
  neither a <code><a href=#the-caption-element>caption</a></code> element, a <code><a href=#the-colgroup-element>colgroup</a></code>
  element, nor a <code><a href=#the-thead-element>thead</a></code> element, if any, or at the end of
  the table if there are no such elements, and then that new element
  must be returned.</p>

  <p>The <dfn id=dom-table-deletetfoot title=dom-table-deleteTFoot><code>deleteTFoot()</code></dfn>
  method must remove the first <code><a href=#the-tfoot-element>tfoot</a></code> element child of the
  <code><a href=#the-table-element>table</a></code> element, if any.</p>

  <p>The <dfn id=dom-table-tbodies title=dom-table-tBodies><code>tBodies</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code><a href=#the-table-element>table</a></code> node, whose filter matches only
  <code><a href=#the-tbody-element>tbody</a></code> elements that are children of the
  <code><a href=#the-table-element>table</a></code> element.</p>

  <p>The <dfn id=dom-table-createtbody title=dom-table-createTBody><code>createTBody()</code></dfn>
  method must create a new <code><a href=#the-tbody-element>tbody</a></code> element, insert it
  immediately after the last <code><a href=#the-tbody-element>tbody</a></code> element in the
  <code><a href=#the-table-element>table</a></code> element, if any, or at the end of the
  <code><a href=#the-table-element>table</a></code> element if the <code><a href=#the-table-element>table</a></code> element has no
  <code><a href=#the-tbody-element>tbody</a></code> element children, and then must return the new
  <code><a href=#the-tbody-element>tbody</a></code> element.</p>

  <p>The <dfn id=dom-table-rows title=dom-table-rows><code>rows</code></dfn> attribute
  must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code><a href=#the-table-element>table</a></code> node, whose filter matches only <code><a href=#the-tr-element>tr</a></code>
  elements that are either children of the <code><a href=#the-table-element>table</a></code> element,
  or children of <code><a href=#the-thead-element>thead</a></code>, <code><a href=#the-tbody-element>tbody</a></code>, or
  <code><a href=#the-tfoot-element>tfoot</a></code> elements that are themselves children of the
  <code><a href=#the-table-element>table</a></code> element. The elements in the collection must be
  ordered such that those elements whose parent is a
  <code><a href=#the-thead-element>thead</a></code> are included first, in tree order, followed by
  those elements whose parent is either a <code><a href=#the-table-element>table</a></code> or
  <code><a href=#the-tbody-element>tbody</a></code> element, again in tree order, followed finally by
  those elements whose parent is a <code><a href=#the-tfoot-element>tfoot</a></code> element, still
  in tree order.</p>

  <p>The behavior of the <dfn id=dom-table-insertrow title=dom-table-insertRow><code>insertRow(<var title="">index</var>)</code></dfn> method depends on the state of
  the table. When it is called, the method must act as required by the
  first item in the following list of conditions that describes the
  state of the table and the <var title="">index</var> argument:</p>

  <dl class=switch><dt>If <var title="">index</var> is less than &minus;1 or greater than
   the number of elements in <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code>
   collection:</dt>

   <dd>The method must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
   exception.</dd>

   <dt>If the <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection has
   zero elements in it, and the <code><a href=#the-table-element>table</a></code> has no
   <code><a href=#the-tbody-element>tbody</a></code> elements in it:</dt>

   <dd>The method must create a <code><a href=#the-tbody-element>tbody</a></code> element, then
   create a <code><a href=#the-tr-element>tr</a></code> element, then append the <code><a href=#the-tr-element>tr</a></code>
   element to the <code><a href=#the-tbody-element>tbody</a></code> element, then append the
   <code><a href=#the-tbody-element>tbody</a></code> element to the <code><a href=#the-table-element>table</a></code> element, and
   finally return the <code><a href=#the-tr-element>tr</a></code> element.</dd>

   <dt>If the <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection has
   zero elements in it:</dt>

   <dd>The method must create a <code><a href=#the-tr-element>tr</a></code> element, append it to
   the last <code><a href=#the-tbody-element>tbody</a></code> element in the table, and return the
   <code><a href=#the-tr-element>tr</a></code> element.</dd>

   <dt>If <var title="">index</var> is missing, equal to &minus;1, or
   equal to the number of items in <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection:</dt>

   <dd>The method must create a <code><a href=#the-tr-element>tr</a></code> element, and append it
   to the parent of the last <code><a href=#the-tr-element>tr</a></code> element in the <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection. Then, the newly
   created <code><a href=#the-tr-element>tr</a></code> element must be returned.</dd>

   <dt>Otherwise:</dt>

   <dd>The method must create a <code><a href=#the-tr-element>tr</a></code> element, insert it
   immediately before the <var title="">index</var>th <code><a href=#the-tr-element>tr</a></code>
   element in the <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection,
   in the same parent, and finally must return the newly created
   <code><a href=#the-tr-element>tr</a></code> element.</dd>

  </dl><p>When the <dfn id=dom-table-deleterow title=dom-table-deleteRow><code>deleteRow(<var title="">index</var>)</code></dfn> method is called, the user agent
  must run the following steps:</p>

  <ol><li><p>If <var title="">index</var> is equal to &minus;1, then
   <var title="">index</var> must be set to the number if items in the
   <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection, minus
   one.</li>

   <li><p>Now, if <var title="">index</var> is less than zero, or
   greater than or equal to the number of elements in the <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection, the method must
   instead raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception, and these
   steps must be aborted.</li>

   <li><p>Otherwise, the method must remove the <var title="">index</var>th element in the <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection from its parent.</p>

  </ol><h4 id=the-caption-element><span class=secno>4.9.3 </span>The <dfn><code>caption</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As the first element child of a <code><a href=#the-table-element>table</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-caption-element>caption</a></code> element <a href=#represents>represents</a> the title of the
  <code><a href=#the-table-element>table</a></code> that is its parent, if it has a parent and that
  is a <code><a href=#the-table-element>table</a></code> element.</p>

  <p>The <code><a href=#the-caption-element>caption</a></code> element takes part in the <a href=#table-model>table
  model</a>.</p>


  <h4 id=the-colgroup-element><span class=secno>4.9.4 </span>The <dfn><code>colgroup</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-table-element>table</a></code> element, after any
   <code><a href=#the-caption-element>caption</a></code> elements and before any <code><a href=#the-thead-element>thead</a></code>,
   <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, and <code><a href=#the-tr-element>tr</a></code>
   elements.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-col-element>col</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-colgroup-span><a href=#attr-colgroup-span>span</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmltablecolelement>HTMLTableColElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute unsigned long <a href=#dom-colgroup-span title=dom-colgroup-span>span</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-colgroup-element>colgroup</a></code> element <a href=#represents>represents</a> a <a href=#concept-column-group title=concept-column-group>group</a> of one or more <a href=#concept-column title=concept-column>columns</a> in the <code><a href=#the-table-element>table</a></code> that
  is its parent, if it has a parent and that is a <code><a href=#the-table-element>table</a></code>
  element.</p>

  <p>If the <code><a href=#the-colgroup-element>colgroup</a></code> element contains no <code><a href=#the-col-element>col</a></code>
  elements, then the element may have a <dfn id=attr-colgroup-span title=attr-colgroup-span><code>span</code></dfn> content attribute
  specified, whose value must be a <a href=#valid-non-negative-integer>valid non-negative
  integer</a> greater than zero.</p>

  <p>The <code><a href=#the-colgroup-element>colgroup</a></code> element and its <code title=attr-colgroup-span><a href=#attr-colgroup-span>span</a></code> attribute take part in the
  <a href=#table-model>table model</a>.</p>

  <p>The <dfn id=dom-colgroup-span title=dom-colgroup-span><code>span</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the respective content attribute
  of the same name. The value must be <a href=#limited-to-only-positive-non-zero-numbers>limited to only positive
  non-zero numbers</a>.</p>


  <h4 id=the-col-element><span class=secno>4.9.5 </span>The <dfn><code>col</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-colgroup-element>colgroup</a></code> element that doesn't have
   a <code title=attr-col-span><a href=#attr-col-span>span</a></code> attribute.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-col-span><a href=#attr-col-span>span</a></code></dd>
   <!-- XXXv2 char, to specify the decimal character used in numeric data cells in the column (not header cells) -->
   <dt>DOM interface:</dt>
   <dd>
    <p><code><a href=#htmltablecolelement>HTMLTableColElement</a></code>, same as for
    <code><a href=#the-colgroup-element>colgroup</a></code> elements. This interface defines one member,
    <code title=dom-col-span><a href=#dom-col-span>span</a></code>.</p>
   </dd>
  </dl><p>If a <code><a href=#the-col-element>col</a></code> element has a parent and that is a
  <code><a href=#the-colgroup-element>colgroup</a></code> element that itself has a parent that is a
  <code><a href=#the-table-element>table</a></code> element, then the <code><a href=#the-col-element>col</a></code> element
  <a href=#represents>represents</a> one or more <a href=#concept-column title=concept-column>columns</a>
  in the <a href=#concept-column-group title=concept-column-group>column group</a>
  represented by that <code><a href=#the-colgroup-element>colgroup</a></code>.</p>

  <p>The element may have a <dfn id=attr-col-span title=attr-col-span><code>span</code></dfn> content attribute
  specified, whose value must be a <a href=#valid-non-negative-integer>valid non-negative
  integer</a> greater than zero.</p>

  <p>The <code><a href=#the-col-element>col</a></code> element and its <code title=attr-col-span><a href=#attr-col-span>span</a></code> attribute take part in the
  <a href=#table-model>table model</a>.</p>

  <p>The <dfn id=dom-col-span title=dom-col-span><code>span</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name. The value must be <a href=#limited-to-only-positive-non-zero-numbers>limited to only positive non-zero
  numbers</a>.</p>


  <h4 id=the-tbody-element><span class=secno>4.9.6 </span>The <dfn><code>tbody</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-table-element>table</a></code> element, after any
   <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-colgroup-element>colgroup</a></code>, and
   <code><a href=#the-thead-element>thead</a></code> elements, but only if there are no
   <code><a href=#the-tr-element>tr</a></code> elements that are children of the
   <code><a href=#the-table-element>table</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-tr-element>tr</a></code> elements</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>interface <dfn id=htmltablesectionelement>HTMLTableSectionElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-tbody-rows title=dom-tbody-rows>rows</a>;
  <a href=#htmlelement>HTMLElement</a> <a href=#dom-tbody-insertrow title=dom-tbody-insertRow>insertRow</a>([Optional] in long index);
  void <a href=#dom-tbody-deleterow title=dom-tbody-deleteRow>deleteRow</a>(in long index);
};</pre>
    <p>The <code><a href=#htmltablesectionelement>HTMLTableSectionElement</a></code> interface is also
    used for <code><a href=#the-thead-element>thead</a></code> and <code><a href=#the-tfoot-element>tfoot</a></code> elements.</p>
   </dd>
  </dl><p>The <code><a href=#the-tbody-element>tbody</a></code> element <a href=#represents>represents</a> a <a href=#concept-row-group title=concept-row-group>block</a> of <a href=#concept-row title=concept-row>rows</a> that consist of a body of data for
  the parent <code><a href=#the-table-element>table</a></code> element, if the <code><a href=#the-tbody-element>tbody</a></code>
  element has a parent and it is a <code><a href=#the-table-element>table</a></code>.</p>

  <p>The <code><a href=#the-tbody-element>tbody</a></code> element takes part in the <a href=#table-model>table
  model</a>.</p>

  <p>The <dfn id=dom-tbody-rows title=dom-tbody-rows><code>rows</code></dfn> attribute
  must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the element,
  whose filter matches only <code><a href=#the-tr-element>tr</a></code> elements that are children
  of the element.</p>

  <p>The <dfn id=dom-tbody-insertrow title=dom-tbody-insertRow><code>insertRow(<var title="">index</var>)</code></dfn> method must, when invoked on an
  element <var title="">table section</var>, act as follows:</p>

  <p>If <var title="">index</var> is less than &minus;1 or greater than the
  number of elements in the <code title=dom-tbody-rows><a href=#dom-tbody-rows>rows</a></code>
  collection, the method must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
  exception.</p>

  <p>If <var title="">index</var> is missing, equal to &minus;1, or
  equal to the number of items in the <code title=dom-tbody-rows><a href=#dom-tbody-rows>rows</a></code> collection, the method must
  create a <code><a href=#the-tr-element>tr</a></code> element, append it to the element <var title="">table section</var>, and return the newly created
  <code><a href=#the-tr-element>tr</a></code> element.</p>

  <p>Otherwise, the method must create a <code><a href=#the-tr-element>tr</a></code> element,
  insert it as a child of the <var title="">table section</var>
  element, immediately before the <var title="">index</var>th
  <code><a href=#the-tr-element>tr</a></code> element in the <code title=dom-tbody-rows><a href=#dom-tbody-rows>rows</a></code> collection, and finally must
  return the newly created <code><a href=#the-tr-element>tr</a></code> element.</p>

  <p>The <dfn id=dom-tbody-deleterow title=dom-tbody-deleteRow><code>deleteRow(<var title="">index</var>)</code></dfn> method must remove the <var title="">index</var>th element in the <code title=dom-tbody-rows><a href=#dom-tbody-rows>rows</a></code> collection from its parent. If
  <var title="">index</var> is less than zero or greater than or equal
  to the number of elements in the <code title=dom-tbody-rows><a href=#dom-tbody-rows>rows</a></code> collection, the method must
  instead raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception.</p>



  <h4 id=the-thead-element><span class=secno>4.9.7 </span>The <dfn><code>thead</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-table-element>table</a></code> element, after any
   <code><a href=#the-caption-element>caption</a></code>, and <code><a href=#the-colgroup-element>colgroup</a></code>
   elements and before any <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, and
   <code><a href=#the-tr-element>tr</a></code> elements, but only if there are no other
   <code><a href=#the-thead-element>thead</a></code> elements that are children of the
   <code><a href=#the-table-element>table</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-tr-element>tr</a></code> elements</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd><code><a href=#htmltablesectionelement>HTMLTableSectionElement</a></code>, as defined for
   <code><a href=#the-tbody-element>tbody</a></code> elements.</dd>
  </dl><p>The <code><a href=#the-thead-element>thead</a></code> element <a href=#represents>represents</a> the <a href=#concept-row-group title=concept-row-group>block</a> of <a href=#concept-row title=concept-row>rows</a> that consist of the column labels
  (headers) for the parent <code><a href=#the-table-element>table</a></code> element, if the
  <code><a href=#the-thead-element>thead</a></code> element has a parent and it is a
  <code><a href=#the-table-element>table</a></code>.</p>

  <p>The <code><a href=#the-thead-element>thead</a></code> element takes part in the <a href=#table-model>table
  model</a>.</p>


  <h4 id=the-tfoot-element><span class=secno>4.9.8 </span>The <dfn><code>tfoot</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-table-element>table</a></code> element, after any
   <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-colgroup-element>colgroup</a></code>, and <code><a href=#the-thead-element>thead</a></code>
   elements and before any <code><a href=#the-tbody-element>tbody</a></code> and <code><a href=#the-tr-element>tr</a></code>
   elements, but only if there are no other <code><a href=#the-tfoot-element>tfoot</a></code>
   elements that are children of the <code><a href=#the-table-element>table</a></code> element.</dd>
   <dd>As a child of a <code><a href=#the-table-element>table</a></code> element, after any
   <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-colgroup-element>colgroup</a></code>, <code><a href=#the-thead-element>thead</a></code>,
   <code><a href=#the-tbody-element>tbody</a></code>, and <code><a href=#the-tr-element>tr</a></code> elements, but only if there
   are no other <code><a href=#the-tfoot-element>tfoot</a></code> elements that are children of the
   <code><a href=#the-table-element>table</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-tr-element>tr</a></code> elements</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd><code><a href=#htmltablesectionelement>HTMLTableSectionElement</a></code>, as defined for
   <code><a href=#the-tbody-element>tbody</a></code> elements.</dd>
  </dl><p>The <code><a href=#the-tfoot-element>tfoot</a></code> element <a href=#represents>represents</a> the <a href=#concept-row-group title=concept-row-group>block</a> of <a href=#concept-row title=concept-row>rows</a> that consist of the column summaries
  (footers) for the parent <code><a href=#the-table-element>table</a></code> element, if the
  <code><a href=#the-tfoot-element>tfoot</a></code> element has a parent and it is a
  <code><a href=#the-table-element>table</a></code>.</p>

  <p>The <code><a href=#the-tfoot-element>tfoot</a></code> element takes part in the <a href=#table-model>table
  model</a>.</p>


  <h4 id=the-tr-element><span class=secno>4.9.9 </span>The <dfn><code>tr</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-thead-element>thead</a></code> element.</dd>
   <dd>As a child of a <code><a href=#the-tbody-element>tbody</a></code> element.</dd>
   <dd>As a child of a <code><a href=#the-tfoot-element>tfoot</a></code> element.</dd>
   <dd>As a child of a <code><a href=#the-table-element>table</a></code> element, after any
   <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-colgroup-element>colgroup</a></code>, and <code><a href=#the-thead-element>thead</a></code>
   elements, but only if there are no <code><a href=#the-tbody-element>tbody</a></code> elements that
   are children of the <code><a href=#the-table-element>table</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-td-element>td</a></code> or <code><a href=#the-th-element>th</a></code> elements</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>interface <dfn id=htmltablerowelement>HTMLTableRowElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
  readonly attribute long <a href=#dom-tr-rowindex title=dom-tr-rowIndex>rowIndex</a>;
  readonly attribute long <a href=#dom-tr-sectionrowindex title=dom-tr-sectionRowIndex>sectionRowIndex</a>;
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-tr-cells title=dom-tr-cells>cells</a>;
  <a href=#htmlelement>HTMLElement</a> <a href=#dom-tr-insertcell title=dom-tr-insertCell>insertCell</a>([Optional] in long index);
  void <span>deleteCell</span>(in long index);
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-tr-element>tr</a></code> element <a href=#represents>represents</a> a <a href=#concept-row title=concept-row>row</a> of <a href=#concept-cell title=concept-cell>cells</a> in a <a href=#concept-table title=concept-table>table</a>.</p>

  <p>The <code><a href=#the-tr-element>tr</a></code> element takes part in the <a href=#table-model>table
  model</a>.</p>

  <p>The <dfn id=dom-tr-rowindex title=dom-tr-rowIndex><code>rowIndex</code></dfn>
  attribute must, if the element has a parent <code><a href=#the-table-element>table</a></code>
  element, or a parent <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-thead-element>thead</a></code>, or
  <code><a href=#the-tfoot-element>tfoot</a></code> element and a <em>grandparent</em>
  <code><a href=#the-table-element>table</a></code> element, return the index of the <code><a href=#the-tr-element>tr</a></code>
  element in that <code><a href=#the-table-element>table</a></code> element's <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection. If there is no such
  <code><a href=#the-table-element>table</a></code> element, then the attribute must return
  &minus;1.</p>

  <p>The <dfn id=dom-tr-sectionrowindex title=dom-tr-sectionRowIndex><code>sectionRowIndex</code></dfn>
  attribute must, if the element has a parent <code><a href=#the-table-element>table</a></code>,
  <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-thead-element>thead</a></code>, or <code><a href=#the-tfoot-element>tfoot</a></code>
  element, return the index of the <code><a href=#the-tr-element>tr</a></code> element in the
  parent element's <code title="">rows</code> collection (for tables,
  that's the <code title=dom-table-rows><a href=#dom-table-rows>rows</a></code> collection; for
  table sections, that's the <code title=dom-tbody-rows><a href=#dom-tbody-rows>rows</a></code>
  collection). If there is no such parent element, then the attribute
  must return &minus;1.</p>

  <p>The <dfn id=dom-tr-cells title=dom-tr-cells><code>cells</code></dfn> attribute
  must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code><a href=#the-tr-element>tr</a></code> element, whose filter matches only <code><a href=#the-td-element>td</a></code>
  and <code><a href=#the-th-element>th</a></code> elements that are children of the
  <code><a href=#the-tr-element>tr</a></code> element.</p>

  <p>The <dfn id=dom-tr-insertcell title=dom-tr-insertCell><code>insertCell(<var title="">index</var>)</code></dfn> method must act as follows:</p>

  <p>If <var title="">index</var> is less than &minus;1 or greater than the
  number of elements in the <code title=dom-tr-cells><a href=#dom-tr-cells>cells</a></code>
  collection, the method must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
  exception.</p>

  <p>If <var title="">index</var> is missing, equal to &minus;1, or
  equal to the number of items in <code title=dom-tr-cells><a href=#dom-tr-cells>cells</a></code> collection, the method must create
  a <code><a href=#the-td-element>td</a></code> element, append it to the <code><a href=#the-tr-element>tr</a></code> element,
  and return the newly created <code><a href=#the-td-element>td</a></code> element.</p>

  <p>Otherwise, the method must create a <code><a href=#the-td-element>td</a></code> element,
  insert it as a child of the <code><a href=#the-tr-element>tr</a></code> element, immediately
  before the <var title="">index</var>th <code><a href=#the-td-element>td</a></code> or
  <code><a href=#the-th-element>th</a></code> element in the <code title=dom-tr-cells><a href=#dom-tr-cells>cells</a></code> collection, and finally must
  return the newly created <code><a href=#the-td-element>td</a></code> element.</p>

  <p>The <dfn id=dom-tr-deletecell title=dom-tr-deleteCell><code>deleteCell(<var title="">index</var>)</code></dfn> method must remove the <var title="">index</var>th element in the <code title=dom-tr-cells><a href=#dom-tr-cells>cells</a></code> collection from its parent. If
  <var title="">index</var> is less than zero or greater than or equal
  to the number of elements in the <code title=dom-tr-cells><a href=#dom-tr-cells>cells</a></code> collection, the method must
  instead raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception.</p>


  <h4 id=the-td-element><span class=secno>4.9.10 </span>The <dfn><code>td</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#sectioning-root>Sectioning root</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-tr-element>tr</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-tdth-colspan><a href=#attr-tdth-colspan>colspan</a></code></dd>
   <dd><code title=attr-tdth-rowspan><a href=#attr-tdth-rowspan>rowspan</a></code></dd>
   <dd><code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code></dd>
   <!-- v2 char, to specify the decimal character used in numeric cells -->
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>interface <dfn id=htmltabledatacellelement>HTMLTableDataCellElement</dfn> : <a href=#htmltablecellelement>HTMLTableCellElement</a> {};</pre>
   </dd>
  </dl><p>The <code><a href=#the-td-element>td</a></code> element <a href=#represents>represents</a> a data <a href=#concept-cell title=concept-cell>cell</a> in a table.</p>

  <p class=note>The <code><a href=#the-td-element>td</a></code> element and its <code title=attr-tdth-colspan><a href=#attr-tdth-colspan>colspan</a></code>, <code title=attr-tdth-rowspan><a href=#attr-tdth-rowspan>rowspan</a></code>, and <code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code> attributes take part in the
  <a href=#table-model>table model</a>.</p>


  <h4 id=the-th-element><span class=secno>4.9.11 </span>The <dfn><code>th</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-tr-element>tr</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-tdth-colspan><a href=#attr-tdth-colspan>colspan</a></code></dd>
   <dd><code title=attr-tdth-rowspan><a href=#attr-tdth-rowspan>rowspan</a></code></dd>
   <dd><code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code></dd>
   <dd><code title=attr-th-scope><a href=#attr-th-scope>scope</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>interface <dfn id=htmltableheadercellelement>HTMLTableHeaderCellElement</dfn> : <a href=#htmltablecellelement>HTMLTableCellElement</a> {
           attribute DOMString <a href=#dom-th-scope title=dom-th-scope>scope</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-th-element>th</a></code> element <a href=#represents>represents</a> a header <a href=#concept-cell title=concept-cell>cell</a> in a table.</p>

  <p>The <code><a href=#the-th-element>th</a></code> element may have a <dfn id=attr-th-scope title=attr-th-scope><code>scope</code></dfn> content attribute
  specified. The <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute is
  an <a href=#enumerated-attribute>enumerated attribute</a> with five states, four of which
  have explicit keywords:</p>

  <dl><dt>The <dfn id=attr-th-scope-row title=attr-th-scope-row><code>row</code></dfn>
   keyword, which maps to the <i>row</i> state</dt>

   <dd>The <i>row</i> state means the header cell applies to some of
   the subsequent cells in the same row(s).</dd>

   <dt>The <dfn id=attr-th-scope-col title=attr-th-scope-col><code>col</code></dfn>
   keyword, which maps to the <i>column</i> state</dt>

   <dd>The <i>column</i> state means the header cell applies to some
   of the subsequent cells in the same column(s).</dd>

   <dt>The <dfn id=attr-th-scope-rowgroup title=attr-th-scope-rowgroup><code>rowgroup</code></dfn> keyword,
   which maps to the <i>row group</i> state</dt>

   <dd>The <i>row group</i> state means the header cell applies to all
   the remaining cells in the row group. A <code><a href=#the-th-element>th</a></code> element's
   <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute must not be in
   the <a href=#attr-th-scope-rowgroup title=attr-th-scope-rowgroup>row group</a> state if
   the element is not anchored in a <a href=#concept-row-group title=concept-row-group>row group</a>.</dd>

   <dt>The <dfn id=attr-th-scope-colgroup title=attr-th-scope-colgroup><code>colgroup</code></dfn> keyword,
   which maps to the <i>column group</i> state</dt>

   <dd>The <i>column group</i> state means the header cell applies to
   all the remaining cells in the column group. A <code><a href=#the-th-element>th</a></code>
   element's <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute must
   not be in the <a href=#attr-th-scope-colgroup title=attr-th-scope-colgroup>column
   group</a> state if the element is not anchored in a <a href=#concept-column-group title=concept-column-group>column group</a>.</dd>

   <dt>The <dfn id=attr-th-scope-auto title=attr-th-scope-auto>auto</dfn> state</dt>

   <dd>The <i>auto</i> state makes the header cell apply to a set of
   cells selected based on context.</dd>

  </dl><p>The <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute's
  <i>missing value default</i> is the <i>auto</i> state.</p>

  <p class=note>The <code><a href=#the-th-element>th</a></code> element and its <code title=attr-tdth-colspan><a href=#attr-tdth-colspan>colspan</a></code>, <code title=attr-tdth-rowspan><a href=#attr-tdth-rowspan>rowspan</a></code>, <code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code>, and <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attributes take part in the
  <a href=#table-model>table model</a>.</p>

  <p>The <dfn id=dom-th-scope title=dom-th-scope><code>scope</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>


  <h4 id=attributes-common-to-td-and-th-elements><span class=secno>4.9.12 </span>Attributes common to <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> elements</h4>

  <p>The <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> elements may have a <dfn id=attr-tdth-colspan title=attr-tdth-colspan><code>colspan</code></dfn> content
  attribute specified, whose value must be a <a href=#valid-non-negative-integer>valid non-negative
  integer</a> greater than zero.</p>

  <p>The <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> elements may also have a
  <dfn id=attr-tdth-rowspan title=attr-tdth-rowspan><code>rowspan</code></dfn> content
  attribute specified, whose value must be a <a href=#valid-non-negative-integer>valid non-negative
  integer</a>.</p>

  <p>The <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> element may have a <dfn id=attr-tdth-headers title=attr-tdth-headers><code>headers</code></dfn> content
  attribute specified. The <code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code> attribute, if specified,
  must contain a string consisting of an <a href=#unordered-set-of-unique-space-separated-tokens>unordered set of unique
  space-separated tokens</a>, each of which must have the value of
  an ID of a <code><a href=#the-th-element>th</a></code> element taking part in the same <a href=#concept-table title=concept-table>table</a> as the <code><a href=#the-td-element>td</a></code> or
  <code><a href=#the-th-element>th</a></code> element (as defined by the <a href=#table-model>table
  model</a>).</p>

  <p class=note>The <code title=attr-tdth-colspan><a href=#attr-tdth-colspan>colspan</a></code>,
  <code title=attr-tdth-rowspan><a href=#attr-tdth-rowspan>rowspan</a></code>, and <code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code> attributes take part in the
  <a href=#table-model>table model</a>.</p>

  <p>The <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> elements implement
  interfaces that inherit from the <code><a href=#htmltablecellelement>HTMLTableCellElement</a></code>
  interface:</p>

  <pre class=idl>interface <dfn id=htmltablecellelement>HTMLTableCellElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute long <a href=#dom-tdth-colspan title=dom-tdth-colSpan>colSpan</a>;
           attribute long <a href=#dom-tdth-rowspan title=dom-tdth-rowSpan>rowSpan</a>;
           attribute DOMString <a href=#dom-tdth-headers title=dom-tdth-headers>headers</a>;
  readonly attribute long <a href=#dom-tdth-cellindex title=dom-tdth-cellIndex>cellIndex</a>;
};</pre>

  <p>The <dfn id=dom-tdth-colspan title=dom-tdth-colSpan><code>colSpan</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name. The value must be <a href=#limited-to-only-positive-non-zero-numbers>limited to only positive non-zero
  numbers</a>.</p>

  <p>The <dfn id=dom-tdth-rowspan title=dom-tdth-rowSpan><code>rowSpan</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name. Its default value, which must be used if <a href=#rules-for-parsing-non-negative-integers title="rules for parsing non-negative integers">parsing the
  attribute as a non-negative integer</a> returns an error, is also
  1.</p>

  <p>The <dfn id=dom-tdth-headers title=dom-tdth-headers><code>headers</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>

  <p>The <dfn id=dom-tdth-cellindex title=dom-tdth-cellIndex><code>cellIndex</code></dfn>
  DOM attribute must, if the element has a parent <code><a href=#the-tr-element>tr</a></code>
  element, return the index of the cell's element in the parent
  element's <code title=dom-tr-cells><a href=#dom-tr-cells>cells</a></code> collection. If
  there is no such parent element, then the attribute must return
  0.</p>


  <h4 id=processing-model-0><span class=secno>4.9.13 </span>Processing model</h4>

  <p>The various table elements and their content attributes together
  define the <dfn id=table-model>table model</dfn>.</p>

  <p>A <dfn id=concept-table title=concept-table>table</dfn> consists of cells
  aligned on a two-dimensional grid of <dfn id=concept-slots title=concept-slots>slots</dfn> with coordinates (<var title="">x</var>, <var title="">y</var>). The grid is finite, and is
  either empty or has one or more slots. If the grid has one or more
  slots, then the <var title="">x</var> coordinates are always in the
  range <span>0&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<var title="">x<sub title="">width</sub></var></span>, and the <var title="">y</var>
  coordinates are always in the range <span>0&nbsp;&le;&nbsp;<var title="">y</var>&nbsp;&lt;&nbsp;<var title="">y<sub title="">height</sub></var></span>. If one or both of <var title="">x<sub title="">width</sub></var> and <var title="">y<sub title="">height</sub></var> are zero, then the table is empty (has
  no slots). Tables correspond to <code><a href=#the-table-element>table</a></code> elements.</p>

  <p>A <dfn id=concept-cell title=concept-cell>cell</dfn> is a set of slots anchored
  at a slot (<var title="">cell<sub title="">x</sub></var>, <var title="">cell<sub title="">y</sub></var>), and with a particular
  <var title="">width</var> and <var title="">height</var> such that
  the cell covers all the slots with coordinates (<var title="">x</var>, <var title="">y</var>) where <span><var title="">cell<sub title="">x</sub></var>&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<var title="">cell<sub title="">x</sub></var>+<var title="">width</var></span> and
  <span><var title="">cell<sub title="">y</sub></var>&nbsp;&le;&nbsp;<var title="">y</var>&nbsp;&lt;&nbsp;<var title="">cell<sub title="">y</sub></var>+<var title="">height</var></span>. Cells can
  either be <em>data cells</em> or <em>header cells</em>. Data cells
  correspond to <code><a href=#the-td-element>td</a></code> elements, and header cells correspond
  to <code><a href=#the-th-element>th</a></code> elements. Cells of both types can have zero or
  more associated header cells.</p>

  <p>It is possible, in certain error cases, for two cells to occupy
  the same slot.</p>

  <p>A <dfn id=concept-row title=concept-row>row</dfn> is a complete set of slots
  from <span><var title="">x</var>=0</span> to <span><var title="">x</var>=<var title="">x<sub title="">width</sub></var>-1</span>, for a particular value of <var title="">y</var>. Rows correspond to <code><a href=#the-tr-element>tr</a></code> elements.</p>

  <p>A <dfn id=concept-column title=concept-column>column</dfn> is a complete set of
  slots from <span><var title="">y</var>=0</span> to <span><var title="">y</var>=<var title="">y<sub title="">height</sub></var>-1</span>, for a particular value of <var title="">x</var>. Columns can correspond to <code><a href=#the-col-element>col</a></code>
  elements, but in the absence of <code><a href=#the-col-element>col</a></code> elements are
  implied.</p>

  <p>A <dfn id=concept-row-group title=concept-row-group>row group</dfn> is a set of
  <a href=#concept-row title=concept-row>rows</a> anchored at a slot (0, <var title="">group<sub title="">y</sub></var>) with a particular <var title="">height</var> such that the row group covers all the slots
  with coordinates (<var title="">x</var>, <var title="">y</var>)
  where <span>0&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<var title="">x<sub title="">width</sub></var></span> and <span><var title="">group<sub title="">y</sub></var>&nbsp;&le;&nbsp;<var title="">y</var>&nbsp;&lt;&nbsp;<var title="">group<sub title="">y</sub></var>+<var title="">height</var></span>. Row groups
  correspond to <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-thead-element>thead</a></code>, and
  <code><a href=#the-tfoot-element>tfoot</a></code> elements. Not every row is necessarily in a row
  group.</p>

  <p>A <dfn id=concept-column-group title=concept-column-group>column group</dfn> is a set
  of <a href=#concept-column title=concept-column>columns</a> anchored at a slot
  (<var title="">group<sub title="">x</sub></var>, 0) with a
  particular <var title="">width</var> such that the column group
  covers all the slots with coordinates (<var title="">x</var>, <var title="">y</var>) where <span><var title="">group<sub title="">x</sub></var>&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<var title="">group<sub title="">x</sub></var>+<var title="">width</var></span> and
  <span>0&nbsp;&le;&nbsp;<var title="">y</var>&nbsp;&lt;&nbsp;<var title="">y<sub title="">height</sub></var></span>. Column groups
  correspond to <code><a href=#the-colgroup-element>colgroup</a></code> elements. Not every column is
  necessarily in a column group.</p>

  <p><a href=#concept-row-group title=concept-row-group>Row groups</a> cannot overlap
  each other. Similarly, <a href=#concept-column-group title=concept-column-group>column
  groups</a> cannot overlap each other.</p>

  <p>A <a href=#concept-cell title=concept-cell>cell</a> cannot cover slots that
  are from two or more <a href=#concept-row-group title=concept-row-group>row
  groups</a>. It is, however, possible for a cell to be in multiple
  <a href=#concept-column-group title=concept-column-group>column groups</a>. All the
  slots that form part of one cell are part of zero or one <a href=#concept-row-group title=concept-row-group>row groups</a> and zero or more <a href=#concept-column-group title=concept-column-group>column groups</a>.</p>

  <p>In addition to <a href=#concept-cell title=concept-cell>cells</a>, <a href=#concept-column title=concept-column>columns</a>, <a href=#concept-row title=concept-row>rows</a>, <a href=#concept-row-group title=concept-row-group>row
  groups</a>, and <a href=#concept-column-group title=concept-column-group>column
  groups</a>, <a href=#concept-table title=concept-table>tables</a> can have a
  <code><a href=#the-caption-element>caption</a></code> element associated with them. This gives the
  table a heading, or legend.</p>

  <p>A <dfn id=table-model-error>table model error</dfn> is an error with the data
  represented by <code><a href=#the-table-element>table</a></code> elements and their
  descendants. Documents must not have table model errors.</p>


  <h5 id=forming-a-table><span class=secno>4.9.13.1 </span>Forming a table</h5>

  <p>To determine which elements correspond to which slots in a <a href=#concept-table title=concept-table>table</a> associated with a
  <code><a href=#the-table-element>table</a></code> element, to determine the dimensions of the table
  (<var title="">x<sub title="">width</sub></var> and <var title="">y<sub title="">height</sub></var>), and to determine if
  there are any <a href=#table-model-error title="table model error">table model
  errors</a>, user agents must use the following algorithm:</p>

  <ol><li>
    <p>Let <var title="">x<sub title="">width</sub></var> be zero.</p>
   </li>

   <li>
    <p>Let <var title="">y<sub title="">height</sub></var> be zero.</p>
   </li>

   <li>

    <p>Let <var title="">pending <code><a href=#the-tfoot-element>tfoot</a></code> elements</var> be
    a list of <code><a href=#the-tfoot-element>tfoot</a></code> elements, initially empty.</p>

   </li>

   <li>
    <p>Let <var title="">the table</var> be the <a href=#concept-table title=concept-table>table</a> represented by the
    <code><a href=#the-table-element>table</a></code> element. The <var title="">x<sub title="">width</sub></var> and <var title="">y<sub title="">height</sub></var> variables give <var title="">the
    table</var>'s dimensions. <var title="">The table</var> is
    initially empty.</p>
   </li>

   <li>

    <!-- this step is here just so that we can be sure to have a first
    element in the next step, so that we can set up the "advance"
    exception-handling thingy below; otherwise it'd be more
    complicated. it's not a perf optimization per se. -->

    <p>If the <code><a href=#the-table-element>table</a></code> element has no children elements,
    then return <var title="">the table</var> (which will be empty),
    and abort these steps.</p>

   </li>

   <li>

    <p>Associate the first <code><a href=#the-caption-element>caption</a></code> element child of the
    <code><a href=#the-table-element>table</a></code> element with <var title="">the table</var>. If
    there are no such children, then it has no associated
    <code><a href=#the-caption-element>caption</a></code> element.</p>

   </li>

   <li>

    <p>Let the <var title="">current element</var> be the first
    element child of the <code><a href=#the-table-element>table</a></code> element.</p>

    <p>If a step in this algorithm ever requires the <var title="">current element</var> to be <dfn id=concept-table-advance title=concept-table-advance>advanced to the next child of the
    <code>table</code></dfn> when there is no such next child, then
    the user agent must jump to the step labeled <i>end</i>, near the
    end of this algorithm.</p>

   </li>

   <li>

    <p>While the <var title="">current element</var> is not one of the
    following elements, <a href=#concept-table-advance title=concept-table-advance>advance</a> the <var title="">current element</var> to the next child of the
    <code><a href=#the-table-element>table</a></code>:</p>

    <ul class=brief><li><code><a href=#the-colgroup-element>colgroup</a></code></li>
     <li><code><a href=#the-thead-element>thead</a></code></li>
     <li><code><a href=#the-tbody-element>tbody</a></code></li>
     <li><code><a href=#the-tfoot-element>tfoot</a></code></li>
     <li><code><a href=#the-tr-element>tr</a></code></li>
    </ul></li>

   <li>

    <p>If the <var title="">current element</var> is a
    <code><a href=#the-colgroup-element>colgroup</a></code>, follow these substeps:</p>

    <ol><li>

      <p><i>Column groups</i>: Process the <var title="">current
      element</var> according to the appropriate case below:</p>

      <dl class=switch><dt>If the <var title="">current element</var> has any
       <code><a href=#the-col-element>col</a></code> element children</dt>

       <dd>

        <p>Follow these steps:</p>

        <ol><li>

          <p>Let <var title="">x<sub title="">start</sub></var> have
          the value of <span><var title="">x<sub title="">width</sub></var></span>.</p>

         </li>

         <li>

          <p>Let the <var title="">current column</var> be the first
          <code><a href=#the-col-element>col</a></code> element child of the <code><a href=#the-colgroup-element>colgroup</a></code>
          element.</p>

         </li>

         <li>

          <p><i>Columns</i>: If the <var title="">current column</var>
          <code><a href=#the-col-element>col</a></code> element has a <code title=attr-col-span><a href=#attr-col-span>span</a></code> attribute, then parse its
          value using the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
          integers</a>.</p>

          <p>If the result of parsing the value is not an error or
          zero, then let <var title="">span</var> be that value.</p>

          <p>Otherwise, if the <code><a href=#the-col-element>col</a></code> element has no <code title=attr-col-span><a href=#attr-col-span>span</a></code> attribute, or if trying to
          parse the attribute's value resulted in an error, then let
          <var title="">span</var> be 1.</p>

         </li>

         <li>

          <p>Increase <var title="">x<sub title="">width</sub></var> by
          <var title="">span</var>.</p>

         </li>

         <li>

          <p>Let the last <var title="">span</var> <a href=#concept-column title=concept-column>columns</a> in <var title="">the
          table</var> correspond to the <var title="">current
          column</var> <code><a href=#the-col-element>col</a></code> element.</p>

         </li>

         <li>

          <p>If <var title="">current column</var> is not the last
          <code><a href=#the-col-element>col</a></code> element child of the <code><a href=#the-colgroup-element>colgroup</a></code>
          element, then let the <var title="">current column</var> be
          the next <code><a href=#the-col-element>col</a></code> element child of the
          <code><a href=#the-colgroup-element>colgroup</a></code> element, and return to the step
          labeled <i>columns</i>.</p>

         </li>

         <li>

          <p>Let all the last <a href=#concept-column title=concept-column>columns</a> in <var title="">the
          table</var> from <span>x=<var title="">x<sub title="">start</sub></var></span> to <span>x=<var title="">x<sub title="">width</sub></var>-1</span> form a
          new <a href=#concept-column-group title=concept-column-group>column group</a>,
          anchored at the slot (<var title="">x<sub title="">start</sub></var>, 0), with width <span><var title="">x<sub title="">width</sub></var>-<var title="">x<sub title="">start</sub></var></span>,
          corresponding to the <code><a href=#the-colgroup-element>colgroup</a></code> element.</p>

         </li>

        </ol></dd>


       <dt>If the <var title="">current element</var> has no
       <code><a href=#the-col-element>col</a></code> element children</dt>

       <dd>

        <ol><li>

          <p>If the <code><a href=#the-colgroup-element>colgroup</a></code> element has a <code title=attr-colgroup-span><a href=#attr-colgroup-span>span</a></code> attribute, then parse
          its value using the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
          integers</a>.</p>

          <p>If the result of parsing the value is not an error or
          zero, then let <var title="">span</var> be that value.</p>

          <p>Otherwise, if the <code><a href=#the-colgroup-element>colgroup</a></code> element has no
          <code title=attr-colgroup-span><a href=#attr-colgroup-span>span</a></code> attribute, or if
          trying to parse the attribute's value resulted in an error,
          then let <var title="">span</var> be 1.</p>

         </li>

         <li>

          <p>Increase <var title="">x<sub title="">width</sub></var> by
          <var title="">span</var>.</p>

         </li>

         <li>

          <p>Let the last <var title="">span</var> <a href=#concept-column title=concept-column>columns</a> in <var title="">the
          table</var> form a new <a href=#concept-column-group title=concept-column-group>column group</a>, anchored
          at the slot (<span><var title="">x<sub title="">width</sub></var>-<var title="">span</var></span>,
          0), with width <var title="">span</var>, corresponding to
          the <code><a href=#the-colgroup-element>colgroup</a></code> element.</p>

         </li>

        </ol></dd>

      </dl></li>

     <li>

      <p><a href=#concept-table-advance title=concept-table-advance>Advance</a> the <var title="">current element</var> to the next child of the
      <code><a href=#the-table-element>table</a></code>.</p>

     </li>

     <li>

      <p>While the <var title="">current element</var> is not one of
      the following elements, <a href=#concept-table-advance title=concept-table-advance>advance</a> the <var title="">current element</var> to the next child of the
      <code><a href=#the-table-element>table</a></code>:</p>

      <ul class=brief><li><code><a href=#the-colgroup-element>colgroup</a></code></li>
       <li><code><a href=#the-thead-element>thead</a></code></li>
       <li><code><a href=#the-tbody-element>tbody</a></code></li>
       <li><code><a href=#the-tfoot-element>tfoot</a></code></li>
       <li><code><a href=#the-tr-element>tr</a></code></li>
      </ul></li>

     <li>

      <p>If the <var title="">current element</var> is a
      <code><a href=#the-colgroup-element>colgroup</a></code> element, jump to the step labeled
      <i>column groups</i> above.</p>

     </li>

    </ol></li>

   <li>

    <p>Let <var title="">y<sub title="">current</sub></var> be
    zero.</p>

   </li>

   <li>

    <p>Let the <var title="">list of downward-growing cells</var> be
    an empty list.</p>

   </li>

   <li>

    <p><i>Rows</i>: While the <var title="">current element</var> is
    not one of the following elements, <a href=#concept-table-advance title=concept-table-advance>advance</a> the <var title="">current element</var> to the next child of the
    <code><a href=#the-table-element>table</a></code>:</p>

    <ul class=brief><li><code><a href=#the-thead-element>thead</a></code></li>
     <li><code><a href=#the-tbody-element>tbody</a></code></li>
     <li><code><a href=#the-tfoot-element>tfoot</a></code></li>
     <li><code><a href=#the-tr-element>tr</a></code></li>
    </ul></li>

   <li>

    <p>If the <var title="">current element</var> is a
    <code><a href=#the-tr-element>tr</a></code>, then run the <a href=#algorithm-for-processing-rows>algorithm for processing
    rows</a>, <a href=#concept-table-advance title=concept-table-advance>advance</a>
    the <var title="">current element</var> to the next child of the
    <code><a href=#the-table-element>table</a></code>, and return to the step labeled
    <i>rows</i>.</p>

   </li>

   <li>

    <p>Run the <a href=#algorithm-for-ending-a-row-group>algorithm for ending a row group</a>.</p>

   </li>

   <li>

    <p>If the <var title="">current element</var> is a
    <code><a href=#the-tfoot-element>tfoot</a></code>, then add that element to the list of <var title="">pending <code><a href=#the-tfoot-element>tfoot</a></code> elements</var>, <a href=#concept-table-advance title=concept-table-advance>advance</a> the <var title="">current element</var> to the next child of the
    <code><a href=#the-table-element>table</a></code>, and return to the step labeled
    <i>rows</i>.</p>

   </li>

   <li>

    <p>The <var title="">current element</var> is either a
    <code><a href=#the-thead-element>thead</a></code> or a <code><a href=#the-tbody-element>tbody</a></code>.</p>

    <p>Run the <a href=#algorithm-for-processing-row-groups>algorithm for processing row groups</a>.</p>

   </li>

   <li>

    <p><a href=#concept-table-advance title=concept-table-advance>Advance</a> the <var title="">current element</var> to the next child of the
    <code><a href=#the-table-element>table</a></code>.</p>

   </li>

   <li>

    <p>Return to the step labeled <i>rows</i>.</p>

   </li>

   <li>

    <p><i>End</i>: For each <code><a href=#the-tfoot-element>tfoot</a></code> element in the list of
    <var title="">pending <code><a href=#the-tfoot-element>tfoot</a></code> elements</var>, in tree
    order, run the <a href=#algorithm-for-processing-row-groups>algorithm for processing row
    groups</a>.</p>

   </li>

   <li>

    <p>If there exists a <a href=#concept-row title=concept-row>row</a> or <a href=#concept-column title=concept-column>column</a> in the <a href=#concept-table title=concept-table>table</a> <var title="">the table</var>
    containing only <span title=concept-slot>slots</span> that do
    not have a <a href=#concept-cell title=concept-cell>cell</a> anchored to
    them, then this is a <a href=#table-model-error>table model error</a>.</p>

   </li>

   <li>

    <p>Return <var title="">the table</var>.</p>

   </li>

  </ol><p>The <dfn id=algorithm-for-processing-row-groups>algorithm for processing row groups</dfn>, which is
  invoked by the set of steps above for processing
  <code><a href=#the-thead-element>thead</a></code>, <code><a href=#the-tbody-element>tbody</a></code>, and <code><a href=#the-tfoot-element>tfoot</a></code>
  elements, is:</p>

  <ol><li>

    <p>Let <var title="">y<sub title="">start</sub></var> have the
    value of <var title="">y<sub title="">height</sub></var>.</p>

   </li>

   <li>

    <p>For each <code><a href=#the-tr-element>tr</a></code> element that is a child of the element
    being processed, in tree order, run the <a href=#algorithm-for-processing-rows>algorithm for
    processing rows</a>.</p>

   </li>

   <li>

    <!-- if we added any rows, make them part of a row group -->
    <p>If <span><var title="">y<sub title="">height</sub></var>&nbsp;&gt;&nbsp;<var title="">y<sub title="">start</sub></var></span>, then let all the last <a href=#concept-row title=concept-row>rows</a> in <var title="">the table</var>
    from <span>y=<var title="">y<sub title="">start</sub></var></span>
    to <span>y=<var title="">y<sub title="">height</sub></var>-1</span> form a new <a href=#concept-row-group title=concept-row-group>row group</a>, anchored at the slot
    with coordinate (0, <var title="">y<sub title="">start</sub></var>), with height <span><var title="">y<sub title="">height</sub></var>-<var title="">y<sub title="">start</sub></var></span>, corresponding to the element
    being processed.</p>

   </li>

   <li>

    <p>Run the <a href=#algorithm-for-ending-a-row-group>algorithm for ending a row group</a>.</p>

   </li>

  </ol><p>The <dfn id=algorithm-for-ending-a-row-group>algorithm for ending a row group</dfn>, which is invoked
  by the set of steps above when starting and ending a block of rows,
  is:</p>

  <ol><li>

    <p>While <var title="">y<sub title="">current</sub></var> is less
    than <var title="">y<sub title="">height</sub></var>, follow these
    steps:</p>

    <ol><li>

      <p>Run the <a href=#algorithm-for-growing-downward-growing-cells>algorithm for growing downward-growing
      cells</a>.</p>

     </li>

     <li>

      <p>Increase <var title="">y<sub title="">current</sub></var> by
      1.</p>

     </li>

    </ol></li>

   <li>

    <p>Empty the <var title="">list of downward-growing
    cells</var>.</p>

   </li>

  </ol><p>The <dfn id=algorithm-for-processing-rows>algorithm for processing rows</dfn>, which is invoked by
  the set of steps above for processing <code><a href=#the-tr-element>tr</a></code> elements,
  is:</p>

  <ol><li>

    <p>If <var title="">y<sub title="">height</sub></var> is equal to
    <var title="">y<sub title="">current</sub></var>, then increase
    <var title="">y<sub title="">height</sub></var> by 1. (<var title="">y<sub title="">current</sub></var> is never
    <em>greater</em> than <var title="">y<sub title="">height</sub></var>.)</p>

   </li>

   <li>

    <p>Let <var title="">x<sub title="">current</sub></var> be 0.</p>

   </li>

   <li>

    <p>Run the <a href=#algorithm-for-growing-downward-growing-cells>algorithm for growing downward-growing
    cells</a>.</p>

   </li>

   <li>

    <p>If the <code><a href=#the-tr-element>tr</a></code> element being processed has no
    <code><a href=#the-td-element>td</a></code> or <code><a href=#the-th-element>th</a></code> element children, then increase
    <var title="">y<sub title="">current</sub></var> by 1, abort this
    set of steps, and return to the algorithm above.</p>

   </li>

   <li>

    <p>Let <var title="">current cell</var> be the first
    <code><a href=#the-td-element>td</a></code> or <code><a href=#the-th-element>th</a></code> element in the <code><a href=#the-tr-element>tr</a></code>
    element being processed.</p>

   </li>

   <li>

    <p><i>Cells</i>: While <var title="">x<sub title="">current</sub></var> is less than <var title="">x<sub title="">width</sub></var> and the slot with coordinate (<var title="">x<sub title="">current</sub></var>, <var title="">y<sub title="">current</sub></var>) already has a cell assigned to it,
    increase <var title="">x<sub title="">current</sub></var> by
    1.</p>

   </li>

   <li>

    <p>If <var title="">x<sub title="">current</sub></var> is equal to
    <var title="">x<sub title="">width</sub></var>, increase <var title="">x<sub title="">width</sub></var> by 1. (<var title="">x<sub title="">current</sub></var> is never
    <em>greater</em> than <var title="">x<sub title="">width</sub></var>.)</p>

   </li>

   <li>

    <p>If the <var title="">current cell</var> has a <code title=attr-tdth-colspan><a href=#attr-tdth-colspan>colspan</a></code> attribute, then <a href=#rules-for-parsing-non-negative-integers title="rules for parsing non-negative integers">parse that
    attribute's value</a>, and let <var title="">colspan</var> be
    the result.</p>

    <p>If parsing that value failed, or returned zero, or if the
    attribute is absent, then let <var title="">colspan</var> be 1,
    instead.</p>

   </li>

   <li>

    <p>If the <var title="">current cell</var> has a <code title=attr-tdth-rowspan><a href=#attr-tdth-rowspan>rowspan</a></code> attribute, then <a href=#rules-for-parsing-non-negative-integers title="rules for
    parsing non-negative integers">parse that attribute's
    value</a>, and let <var title="">rowspan</var> be the
    result.</p>

    <p>If parsing that value failed or if the attribute is absent,
    then let <var title="">rowspan</var> be 1, instead.</p>

   </li>

   <li>

    <p>If <var title="">rowspan</var> is zero, then let <var title="">cell grows downward</var> be true, and set <var title="">rowspan</var> to 1. Otherwise, let <var title="">cell
    grows downward</var> be false.</p>

   </li>

   <li>

    <p>If <span><var title="">x<sub title="">width</sub></var>&nbsp;&lt;&nbsp;<var title="">x<sub title="">current</sub></var>+<var title="">colspan</var></span>,
    then let <var title="">x<sub title="">width</sub></var> be
    <span><var title="">x<sub title="">current</sub></var>+<var title="">colspan</var></span>.</p>

   </li>

   <li>

    <p>If <span><var title="">y<sub title="">height</sub></var>&nbsp;&lt;&nbsp;<var title="">y<sub title="">current</sub></var>+<var title="">rowspan</var></span>,
    then let <var title="">y<sub title="">height</sub></var> be
    <span><var title="">y<sub title="">current</sub></var>+<var title="">rowspan</var></span>.</p>

   </li>

   <li>

    <p>Let the slots with coordinates (<var title="">x</var>, <var title="">y</var>) such that <span><var title="">x<sub title="">current</sub></var>&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<var title="">x<sub title="">current</sub></var>+<var title="">colspan</var></span>
    and <span><var title="">y<sub title="">current</sub></var>&nbsp;&le;&nbsp;<var title="">y</var>&nbsp;&lt;&nbsp;<var title="">y<sub title="">current</sub></var>+<var title="">rowspan</var></span> be
    covered by a new <a href=#concept-cell title=concept-cell>cell</a> <var title="">c</var>, anchored at (<var title="">x<sub title="">current</sub></var>, <var title="">y<sub title="">current</sub></var>), which has width <var title="">colspan</var> and height <var title="">rowspan</var>,
    corresponding to the <var title="">current cell</var> element.</p>

    <p>If the <var title="">current cell</var> element is a
    <code><a href=#the-th-element>th</a></code> element, let this new cell <var title="">c</var>
    be a header cell; otherwise, let it be a data cell.</p>

    <p>To establish which header cells apply to the <var title="">current cell</var> element, use the <a href=#algorithm-for-assigning-header-cells>algorithm for
    assigning header cells</a> described in the next section.</p>

    <p>If any of the slots involved already had a <a href=#concept-cell title=concept-cell>cell</a> covering them, then this is a
    <a href=#table-model-error>table model error</a>. Those slots now have two cells
    overlapping.</p>

   </li>

   <li>

    <p>If <var title="">cell grows downward</var> is true, then add
    the tuple {<var title="">c</var>, <var title="">x<sub title="">current</sub></var>, <var title="">colspan</var>} to the
    <var title="">list of downward-growing cells</var>.</p>

   </li>

   <li>

    <p>Increase <var title="">x<sub title="">current</sub></var> by
    <var title="">colspan</var>.</p>

   </li>

   <li>

    <p>If <var title="">current cell</var> is the last <code><a href=#the-td-element>td</a></code>
    or <code><a href=#the-th-element>th</a></code> element in the <code><a href=#the-tr-element>tr</a></code> element being
    processed, then increase <var title="">y<sub title="">current</sub></var> by 1, abort this set of steps, and
    return to the algorithm above.</p>

   </li>

   <li>

    <p>Let <var title="">current cell</var> be the next
    <code><a href=#the-td-element>td</a></code> or <code><a href=#the-th-element>th</a></code> element in the <code><a href=#the-tr-element>tr</a></code>
    element being processed.</p>

   </li>

   <li>

    <p>Return to the step labelled <i>cells</i>.</p>

   </li>

  </ol><p>When the algorithms above require the user agent to run the
  <dfn id=algorithm-for-growing-downward-growing-cells>algorithm for growing downward-growing cells</dfn>, the user
  agent must, for each {<var title="">cell</var>, <var title="">cell<sub title="">x</sub></var>, <var title="">width</var>}
  tuple in the <var title="">list of downward-growing cells</var>, if
  any, extend the <a href=#concept-cell title=concept-cell>cell</a> <var title="">cell</var> so that it also covers the slots with
  coordinates (<var title="">x</var>, <var title="">y<sub title="">current</sub></var>), where <span><var title="">cell<sub title="">x</sub></var>&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<var title="">cell<sub title="">x</sub></var>+<var title="">width</var></span>.</p>




  <h5 id=header-and-data-cell-semantics><span class=secno>4.9.13.2 </span>Forming relationships between data cells and header cells</h5>

  <p>Each cell can be assigned zero or more header cells. The
  <dfn id=algorithm-for-assigning-header-cells>algorithm for assigning header cells</dfn> to a cell <var title="">principal cell</var> is as follows.</p>

  <ol><!-- INITIALIZATION --><li>

    <p>Let <var title="">header list</var> be an empty list of
    cells.</p>

   </li>

   <li>

    <p>Let (<var title="">principal<sub title="">x</sub></var>, <var title="">principal<sub title="">y</sub></var>) be the coordinate
    of the slot to which the <var title="">principal cell</var> is
    anchored.</p>

   </li>

   <li>

    <dl class=switch><dt>If the <var title="">principal cell</var> has a <code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code> attribute specified</dt>

     <dd>

      <!-- HEADERS="" -->

      <ol><li>

        <p>Take the value of the <var title="">principal cell</var>'s
        <code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code> attribute and
        <a href=#split-a-string-on-spaces title="split a string on spaces">split it on
        spaces</a>, letting <var title="">id list</var> be the list
        of tokens obtained.</p>

       </li>

       <li>

        <!-- support headers="" to <td> for legacy compat -->
        <!-- note that it's not conforming though -->
        <p>For each token in the <var title="">id list</var>, if the
        first element in the <code>Document</code> with an ID equal to
        the token is a cell in the same <a href=#concept-table title=concept-table>table</a>, and that cell is not the
        <var title="">principal cell</var>, then add that cell to <var title="">header list</var>.</p>

       </li>

      </ol></dd>


     <dt>If <var title="">principal cell</var> does not have a <code title=attr-tdth-headers><a href=#attr-tdth-headers>headers</a></code> attribute specified</dt>

     <dd>

      <ol><li>

        <p>Let <var title="">principal<sub title="">width</sub></var>
        be the width of the <var title="">principal cell</var>.</p>

       </li>

       <li>

        <p>Let <var title="">principal<sub title="">height</sub></var>
        be the height of the <var title="">principal cell</var>.</p>

       </li>


       <!-- HORIZONTAL -->

       <li>

        <p>For each value of <var title="">y</var> from <var title="">principal<sub title="">y</sub></var> to <span><var title="">principal<sub title="">y</sub></var>+<var title="">principal<sub title="">height</sub></var>-1</span>,
        run the <a href=#internal-algorithm-for-scanning-and-assigning-header-cells>internal algorithm for scanning and assigning
        header cells</a>, with the <var title="">principal
        cell</var>, the <var title="">header list</var>, the initial
        coordinate (<var title="">principal<sub title="">x</sub></var>,<var title="">y</var>), and the
        increments <span>&Delta;<var title="">x</var>=&minus;1</span>
        and <span>&Delta;<var title="">y</var>=0</span>.</p>

       </li>


       <!-- VERTICAL -->

       <li>

        <p>For each value of <var title="">x</var> from <var title="">principal<sub title="">x</sub></var> to <span><var title="">principal<sub title="">x</sub></var>+<var title="">principal<sub title="">width</sub></var>-1</span>,
        run the <a href=#internal-algorithm-for-scanning-and-assigning-header-cells>internal algorithm for scanning and assigning
        header cells</a>, with the <var title="">principal
        cell</var>, the <var title="">header list</var>, the initial
        coordinate (<var title="">x</var>,<var title="">principal<sub title="">y</sub></var>), and the increments <span>&Delta;<var title="">x</var>=0</span> and <span>&Delta;<var title="">y</var>=&minus;1</span>.</p>

       </li>


       <!-- ROW GROUP HEADERS -->

       <li>

        <p>If the <var title="">principal cell</var> is anchored in a
        <a href=#concept-row-group title=concept-row-group>row group</a>, then add all
        header cells that are <a href=#row-group-header title="row group header">row group
        headers</a> and are anchored in the same row group with an
        <var title="">x</var>-coordinate less than or equal to
        <span><var title="">principal<sub title="">x</sub></var>+<var title="">principal<sub title="">width</sub></var>-1</span> and
        a <var title="">y</var>-coordinate less than or equal to
        <span><var title="">principal<sub title="">y</sub></var>+<var title="">principal<sub title="">height</sub></var>-1</span> to
        <var title="">header list</var>.</p>

       </li>


       <!-- COLUMN GROUP HEADERS -->

       <li>

        <p>If the <var title="">principal cell</var> is anchored in a
        <a href=#concept-column-group title=concept-column-group>column group</a>, then
        add all header cells that are <a href=#column-group-header title="column group
        header">column group headers</a> and are anchored in the
        same column group with an <var title="">x</var>-coordinate
        less than or equal to <span><var title="">principal<sub title="">x</sub></var>+<var title="">principal<sub title="">width</sub></var>-1</span> and a <var title="">y</var>-coordinate less than or equal to <span><var title="">principal<sub title="">y</sub></var>+<var title="">principal<sub title="">height</sub></var>-1</span> to
        <var title="">header list</var>.</p>

       </li>

      </ol></dd>

    </dl></li>


   <!-- CLEANUP -->

   <li>

    <p>Remove all the <a href=#empty-cell title="empty cell">empty cells</a> from
    the <var title="">header list</var>.</p>

   </li>

   <li>

    <p>Remove any duplicates from the <var title="">header
    list</var>.</p>

   </li>

   <li>

    <p>Assign the headers in the <var title="">header list</var> to
    the <var title="">principal cell</var>.</p>

   </li>

  </ol><p>The <dfn id=internal-algorithm-for-scanning-and-assigning-header-cells>internal algorithm for scanning and assigning header
  cells</dfn>, given a <var title="">principal cell</var>, a <var title="">header list</var>, an initial coordinate (<var title="">initial<sub title="">x</sub></var>, <var title="">initial<sub title="">y</sub></var>), and &Delta;<var title="">x</var> and &Delta;<var title="">y</var> increments, is as
  follows:</p>

  <ol><li>

    <p>Let <var title="">x</var> equal <var title="">initial<sub title="">x</sub></var>.</p>

   </li>

   <li>

    <p>Let <var title="">y</var> equal <var title="">initial<sub title="">y</sub></var>.</p>

   </li>

   <li>

    <p>Let <var title="">opaque headers</var> be an empty list of
    cells.</p>

   </li>

   <li>

    <dl class=switch><dt>If <var title="">principal cell</var> is a header cell</dt>

     <dd><p>Let <var title="">in header block</var> be true, and let
     <var title="">headers from current header block</var> be a list
     of cells containing just the <var title="">principal
     cell</var>.</dd>

     <dt>Otherwise</dt>

     <dd><p>Let <var title="">in header block</var> be false and let
     <var title="">headers from current header block</var> be an
     empty list of cells.</p>

    </dl></li>

   <li>

    <p><i>Loop</i>: Increment <var title="">x</var> by &Delta;<var title="">x</var>; increment <var title="">y</var> by &Delta;<var title="">y</var>.</p>

    <p class=note>For each invocation of this algorithm, one of
    &Delta;<var title="">x</var> and &Delta;<var title="">y</var> will
    be &minus;1, and the other will be 0.</p>

   </li>

   <li>

    <p>If either <var title="">x</var> or <var title="">y</var> is
    less than 0, then abort this internal algorithm.</p>

   </li>

   <li>

    <p>If there is no cell covering slot (<var title="">x</var>,
    <var title="">y</var>), or if there is more than one cell
    covering slot (<var title="">x</var>, <var title="">y</var>),
    return to the substep marked <i>loop</i>.</p>

   </li>

   <li>

    <p>Let <var title="">current cell</var> be the cell covering
    slot (<var title="">x</var>, <var title="">y</var>).</p>

   </li>

   <li>

    <dl class=switch><dt>If <var title="">current cell</var> is a header cell</dt>

     <dd>

      <ol><li><p>Set <var title="">in header block</var> to
       true.</li>

       <li><p>Add <var title="">current cell</var> to <var title="">headers from current header block</var>.</li>

       <li><p>Let <var title="">blocked</var> be false.</li>

       <li>

        <dl class=switch><dt>If &Delta;<var title="">x</var> is 0</dt>

         <dd>

          <p>If there is no cell in the <var title="">opaque
          headers</var> list anchored with the same <var title="">x</var>-coordinate as the <var title="">current
          cell</var>, and with the same width as <var title="">current
          cell</var>, then let <var title="">blocked</var> be
          true.</p>

          <p>If the <var title="">current cell</var> is not a
          <a href=#column-header>column header</a>, then let <var title="">blocked</var> be true.</p>

         </dd>

         <dt>If &Delta;<var title="">y</var> is 0</dt>

         <dd>

          <p>If there is no cell in the <var title="">opaque
          headers</var> list anchored with the same <var title="">y</var>-coordinate as the <var title="">current
          cell</var>, and with the same height as <var title="">current cell</var>, then let <var title="">blocked</var> be true.</p>

          <p>If the <var title="">current cell</var> is not a
          <a href=#row-header>row header</a>, then let <var title="">blocked</var> be true.</p>

         </dd>

        </dl></li>

       <li><p>If <var title="">blocked</var> is false, then add the
       <var title="">current cell</var> to the <var title="">headers
       list</var>.</li>

      </ol></dd>

     <dt>If <var title="">current cell</var> is a data cell and <var title="">in header block</var> is true</dt>

     <dd><p>Set <var title="">in header block</var> to false. Add
     all the cells in <var title="">headers from current header
     block</var> to the <var title="">opaque headers</var> list, and
     empty the <var title="">headers from current header block</var>
     list.</p>

    </dl></li>

   <li>

    <p>Return to the step marked <i>loop</i>.</p>

   </li>

  </ol><p>A header cell anchored at the slot with coordinate (<var title="">x</var>, <var title="">y</var>) with width <var title="">width</var> and height <var title="">height</var> is said
  to be a <dfn id=column-header>column header</dfn> if any of the following conditions
  are true:</p>

  <ul><li>The cell's <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute
   is in the <a href=#attr-th-scope-col title=attr-th-scope-col>column</a> state, or</li>

   <li>The cell's <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute
   is in the <a href=#attr-th-scope-auto title=attr-th-scope-auto>auto</a> state, and
   there are no data cells in any of the cells covering slots with
   <var title="">y</var>-coordinates <var title="">y</var>
   .. <span><var title="">y</var>+<var title="">height</var>-1</span>.</li>

  </ul><p>A header cell anchored at the slot with coordinate (<var title="">x</var>, <var title="">y</var>) with width <var title="">width</var> and height <var title="">height</var> is said
  to be a <dfn id=row-header>row header</dfn> if any of the following conditions
  are true:</p>

  <ul><li>The cell's <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute
   is in the <a href=#attr-th-scope-row title=attr-th-scope-row>row</a> state, or</li>

   <li>The cell's <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute
   is in the <a href=#attr-th-scope-auto title=attr-th-scope-auto>auto</a> state, the
   cell is not a <a href=#column-header>column header</a>, and there are no data
   cells in any of the cells covering slots with <var title="">x</var>-coordinates <var title="">x</var> .. <span><var title="">x</var>+<var title="">width</var>-1</span>.</li>

  </ul><p>A header cell is said to be a <dfn id=column-group-header>column group header</dfn> if
  its <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute is in the
  <a href=#attr-th-scope-colgroup title=attr-th-scope-colgroup>column group</a> state.</p>

  <p>A header cell is said to be a <dfn id=row-group-header>row group header</dfn> if
  its <code title=attr-th-scope><a href=#attr-th-scope>scope</a></code> attribute is in the
  <a href=#attr-th-scope-rowgroup title=attr-th-scope-rowgroup>row group</a> state.</p>

  <p>A cell is said to be an <dfn id=empty-cell>empty cell</dfn> if it contains no
  elements and its text content, if any, consists only of
  <a href=#white_space>White_Space</a> characters.</p>





  <h3 id=forms><span class=secno>4.10 </span>Forms</h3>

  <p>Forms allow unscripted client-server interaction: given a form, a
  user can provide data, submit it to the server, and have the server
  act on it accordingly (e.g. returning the results of a search or
  calculation). The elements used in forms can also be used for user
  interaction with no associated submission mechanism, in conjunction
  with scripts.</p>

  <p>Mostly for historical reasons, elements in this section fall into
  several overlapping (but subtly different) categories in addition to
  the usual ones like <a href=#flow-content-0>flow content</a>, <a href=#phrasing-content-0>phrasing
  content</a>, and <a href=#interactive-content-0>interactive content</a>.</p>

  <p>A number of the elements are <dfn id=form-associated-element title="form-associated
  element">form-associated elements</dfn>, which means they can have a
  <a href=#form-owner>form owner</a> and, to expose this, have a <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> content attribute with a matching
  <code title=dom-fae-form><a href=#dom-fae-form>form</a></code> DOM attribute.</p>

  <p>The <a href=#form-associated-element title="form-associated element">form-associated
  elements</a> fall into several subcategories:</p>

  <dl><dt><dfn id=category-submit title=category-submit>Submittable elements</dfn></dt>

   <dd>Denotes elements that can be used for <a href=#constructing-form-data-set>constructing the form data
   set</a> when a <code><a href=#the-form-element>form</a></code> element is <a href=#concept-form-submit title=concept-form-submit>submitted</a>.</dd>

   <dt><dfn id=category-reset title=category-reset>Resettable elements</dfn></dt>

   <dd>Denotes elements that can be affected when a <code><a href=#the-form-element>form</a></code>
   element is <a href=#concept-form-reset title=concept-form-reset>reset</a>.</dd>

   <dt><dfn id=category-listed title=category-listed>Listed</dfn></dt>

   <dd>Denotes elements that are listed in the <code title=dom-form-elements><a href=#dom-form-elements><var title="">form</var>.elements</a></code>
   and <code title=dom-fieldset-elements><a href=#dom-fieldset-elements><var title="">fieldset</var>.elements</a></code> APIs.</dd>

   <dt><dfn id=category-label title=category-label>Labelable</dfn></dt>

   <dd>Denotes elements that can be associated with <code><a href=#the-label-element>label</a></code>
   elements.</dd>

  </dl><p>In addition, some <a href=#category-submit title=category-submit>submittable
  elements</a> can be, depending on their attributes, <dfn id=concept-button title=concept-button>buttons</dfn>. The prose below defines when
  an element is a button. Some buttons are specifically <dfn id=concept-submit-button title=concept-submit-button>submit buttons</dfn>.</p>

  <p class=note>The <code><a href=#the-object-element>object</a></code> element is also a
  <a href=#form-associated-element>form-associated element</a> and can, with the use of a
  suitable <a href=#plugin>plugin</a>, partake in <a href=#form-submission-0>form
  submission</a>.</p>


  <h4 id=the-form-element><span class=secno>4.10.1 </span>The <dfn><code>form</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>, but with no <code><a href=#the-form-element>form</a></code> element descendants.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-form-accept-charset><a href=#attr-form-accept-charset>accept-charset</a></code></dd>
   <dd><code title=attr-fs-action><a href=#attr-fs-action>action</a></code></dd>
   <dd><code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code></dd>
   <dd><code title=attr-fs-method><a href=#attr-fs-method>method</a></code></dd>
   <dd><code title=attr-form-name><a href=#attr-form-name>name</a></code></dd>
   <dd><code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code></dd>
   <dd><code title=attr-fs-target><a href=#attr-fs-target>target</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>[Callable=<a href=#dom-form-nameditem title=dom-form-namedItem>namedItem</a>]
interface <dfn id=htmlformelement>HTMLFormElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-form-acceptcharset title=dom-form-acceptCharset>acceptCharset</a>;
           attribute DOMString <a href=#dom-fs-action title=dom-fs-action>action</a>;
           attribute DOMString <a href=#dom-fs-enctype title=dom-fs-enctype>enctype</a>;
           attribute DOMString <a href=#dom-fs-method title=dom-fs-method>method</a>;
           attribute DOMString <a href=#dom-form-name title=dom-form-name>name</a>;
           attribute boolean <a href=#dom-fs-novalidate title=dom-fs-novalidate>novalidate</a>;
           attribute DOMString <a href=#dom-fs-target title=dom-fs-target>target</a>;

  readonly attribute <a href=#htmlformcontrolscollection-0>HTMLFormControlsCollection</a> <a href=#dom-form-elements title=dom-form-elements>elements</a>;
  readonly attribute long <a href=#dom-form-length title=dom-form-length>length</a>;
  [IndexGetter] any <a href=#dom-form-item title=dom-form-item>item</a>(in DOMString name);
  [NameGetter=OverrideBuiltins] any <a href=#dom-form-nameditem title=dom-form-namedItem>namedItem</a>(in DOMString name);

  void <a href=#dom-form-submit title=dom-form-submit>submit</a>();
  void <a href=#dom-form-reset title=dom-form-reset>reset</a>();
  boolean <a href=#dom-form-checkvalidity title=dom-form-checkValidity>checkValidity</a>();

  void <a href=#dom-form-dispatchforminput title=dom-form-dispatchFormInput>dispatchFormInput</a>();
  void <a href=#dom-form-dispatchformchange title=dom-form-dispatchFormChange>dispatchFormChange</a>();
};</pre>
   </dd> 
  </dl><p>The <code><a href=#the-form-element>form</a></code> element <a href=#represents>represents</a> a
  collection of <a href=#form-associated-element title="form-associated element">form-associated
  elements</a>, some of which can represent editable values that
  can be submitted to a server for processing.</p>

  <p>The <dfn id=attr-form-accept-charset title=attr-form-accept-charset><code>accept-charset</code></dfn>
  attribute gives the character encodings that are to be used for the
  submission. If specified, the value must be an <a href=#ordered-set-of-unique-space-separated-tokens>ordered set of
  unique space-separated tokens</a>, and each token must be the
  preferred name of an <a href=#ascii-compatible-character-encoding>ASCII-compatible character
  encoding</a>. <a href=#refsIANACHARSET>[IANACHARSET]</a></p>

  <p>The <dfn id=attr-form-name title=attr-form-name><code>name</code></dfn> attribute
  represents the <code><a href=#the-form-element>form</a></code>'s name within the <code title=dom-forms>forms</code> collection. The value must not be the
  empty string, and the value must be unique amongst the
  <code><a href=#the-form-element>form</a></code> elements in the <code title=dom-forms>forms</code> collection that it is in, if any.</p>

  <p>The <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>, <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>, <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>, <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>, and <code title=attr-fs-target><a href=#attr-fs-target>target</a></code> attributes are <a href=#form-submission>attributes
  for form submission</a>.</p>

  <p>The <dfn id=dom-form-acceptcharset title=dom-form-acceptCharset><code>acceptCharset</code></dfn>
  and <dfn id=dom-form-name title=dom-form-name><code>name</code></dfn> DOM
  attributes must <a href=#reflect>reflect</a> the respective content
  attributes of the same name.</p>

  <p>The <dfn id=dom-form-elements title=dom-form-elements><code>elements</code></dfn>
  DOM attribute must return an <code><a href=#htmlformcontrolscollection-0>HTMLFormControlsCollection</a></code>
  rooted at the <code>Document</code> node, whose filter matches <a href=#category-listed title=category-listed>listed</a> elements whose <a href=#form-owner>form
  owner</a> is the <code><a href=#the-form-element>form</a></code> element, with the exception of
  <code><a href=#the-input-element>input</a></code> elements whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, which must,
  for historical reasons, be excluded from this particular
  collection.</p>

  <hr><p>The <dfn id=dom-form-length title=dom-form-length><code>length</code></dfn> DOM
  attribute must return the number of nodes <a href=#represented-by-the-collection title="represented
  by the collection">represented</a> by the <code title=dom-form-elements><a href=#dom-form-elements>elements</a></code> collection.</p>

  <p>The
  <span>indices of the supported indexed properties</span> at any
  instant are the indicies supported by the object returned by the
  <code title=dom-form-elements><a href=#dom-form-elements>elements</a></code> attribute at that
  instant.</p>

  <p>The <dfn id=dom-form-item title=dom-form-item><code>item(<var title="">index</var>)</code></dfn> method must return the value
  returned by the method of the same name on the <code title=dom-form-elements><a href=#dom-form-elements>elements</a></code> collection, when invoked
  with the same argument.</p>

  <p>Each <code><a href=#the-form-element>form</a></code> element has a mapping of names to elements
  called the <dfn id=past-names-map>past names map</dfn>. It is used to persist names of
  controls even when they change names.</p>

  <p>The <span>names of the supported named properties</span> are the
  union of the names currently supported by the object returned by the
  <code title=dom-form-elements><a href=#dom-form-elements>elements</a></code> attribute, and the
  names currently in the <a href=#past-names-map>past names map</a>.</p>

  <p>The <dfn id=dom-form-nameditem title=dom-form-namedItem><code>namedItem(<var title="">name</var>)</code></dfn> method, when called, must run the
  following steps:</p>

  <ol><li>

    <p>If <var title="">name</var> is one of the <span>names of the
    supported named properties</span> of the object returned by the
    <code title=dom-form-elements><a href=#dom-form-elements>elements</a></code> attribute, then
    run these substeps:</p>

    <ol><li><p>Let <var title="">candidate</var> be the object returned
     by the <code title=dom-HTMLFormControlsCollection-namedItem><a href=#dom-htmlformcontrolscollection-nameditem>namedItem()</a></code>
     method on the object returned by the <code title=dom-form-elements><a href=#dom-form-elements>elements</a></code> attribute when passed
     the <var title="">name</var> argument.</li>

     <li><p>If <var title="">candidate</var> is an element, then add a
     mapping from <var title="">name</var> to <var title="">candidate</var> in the <code><a href=#the-form-element>form</a></code> element's
     <a href=#past-names-map>past names map</a>, replacing the previous entry with
     the same name, if any.</li>

     <li><p>Return <var title="">candidate</var> and abort these
     steps.</li>

    </ol></li>

   <li><p>Otherwise, <var title="">name</var> is the name of one of
   the entries in the <code><a href=#the-form-element>form</a></code> element's <a href=#past-names-map>past names
   map</a>: return the object associated with <var title="">name</var> in that map.</li>

  </ol><p>If an element listed in the <code><a href=#the-form-element>form</a></code> element's <a href=#past-names-map>past
  names map</a> is removed from the <code>Document</code>, then its
  entries must be removed from the map.</p>

  <!--
    This ridiculous setup is intended to do as much of the right thing
    while still supporting code written to work in IE7. IE versions
    prior to IE8 do not update the names on the <form> element
    collection to match new names when elements are renamed, and there
    are enough pages that rename elements and then access them by
    their old name that we have to support this.

    But we still want to expose them using the new names, so as far as
    possible we pretend the legacy names aren't there except if
    there's no other element actually named that way.

    Removing the element did remove the legacy name in IE7:
    http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Cform%20action%3D%22%2F%22%3E%3Cinput%20name%3Dsubmit%3E%3C%2Fform%3E%0A%3Cscript%3E%0A%20w(document.forms%5B0%5D.submit)%3B%0A%20w(document.forms%5B0%5D.removeChild(document.getElementsByTagName('input')%5B0%5D))%3B%0A%20w(document.forms%5B0%5D.length)%3B%0A%20try%20%7B%20document.forms%5B0%5D.submit()%3B%20%7D%20catch%20(e)%20%20%7B%20w(e.message)%20%7D%0A%3C%2Fscript%3E

    There's no interop on what happens when the name was originally a
    duplicate name, so we don't persist such accesses - at the time
    of writing, Safari returned the first element, Firefox returned
    null (as we do), and IE7 returned the original collection:
    http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E...%3Cform%20action%3D%22%2F%22%3E%3Cinput%20name%3Da%20id%3Dfirst%3E%3Cinput%20name%3Da%20id%3Dsecond%3E%3C%2Fform%3E%0A%3Cscript%3E%0A%20w%28document.forms[0].a%29%3B%0A%20document.getElementsByTagName%28%27input%27%29[0].name%20%3D%20%27b%27%3B%0A%20document.getElementsByTagName%28%27input%27%29[1].name%20%3D%20%27b%27%3B%0A%20w%28document.forms[0].length%29%3B%0A%20w%28document.forms[0].a.id%29%3B%0A%3C%2Fscript%3E
  -->

  <hr><p>The <dfn id=dom-form-submit title=dom-form-submit><code>submit()</code></dfn>
  method, when invoked, must <a href=#concept-form-submit title=concept-form-submit>submit</a> the <code><a href=#the-form-element>form</a></code>
  element from the <code><a href=#the-form-element>form</a></code> element itself.</p>

  <p>The <dfn id=dom-form-reset title=dom-form-reset><code>reset()</code></dfn>
  method, when invoked, must <a href=#concept-form-reset title=concept-form-reset>reset</a> the <code><a href=#the-form-element>form</a></code>
  element.</p>

  <p>If the <dfn id=dom-form-checkvalidity title=dom-form-checkValidity><code>checkValidity()</code></dfn>
  method is invoked, the user agent must <a href=#statically-validate-the-constraints>statically validate the
  constraints</a> of the <code><a href=#the-form-element>form</a></code> element, and return true
  if the constraint validation return a <i>positive</i> result, and
  false if it returned a <i>negative</i> result.</p>

  <p>If the <dfn id=dom-form-dispatchforminput title=dom-form-dispatchFormInput><code>dispatchFormInput()</code></dfn>
  method is invoked, the user agent must <a href=#broadcast-forminput-events>broadcast <code title=event-forminput>forminput</code> events</a> from the
  <code><a href=#the-form-element>form</a></code> element.</p>

  <p>If the <dfn id=dom-form-dispatchformchange title=dom-form-dispatchFormChange><code>dispatchFormChange()</code></dfn>
  method is invoked, the user agent must <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a> from the
  <code><a href=#the-form-element>form</a></code> element.</p>


  <h4 id=the-fieldset-element><span class=secno>4.10.2 </span>The <dfn><code>fieldset</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#category-listed title=category-listed>Listed</a> <a href=#form-associated-element>form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>One <code><a href=#the-legend-element>legend</a></code> element follwed by <a href=#flow-content-0>flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-fieldset-disabled><a href=#attr-fieldset-disabled>disabled</a></code></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-fe-name><a href=#attr-fe-name>name</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlfieldsetelement>HTMLFieldSetElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-fieldset-disabled title=dom-fieldset-disabled>disabled</a>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute DOMString <a href=#dom-fe-name title=dom-fe-name>name</a>;

  readonly attribute DOMString <a href=#dom-fieldset-type title=dom-fieldset-type>type</a>;

  readonly attribute <a href=#htmlformcontrolscollection-0>HTMLFormControlsCollection</a> <a href=#dom-fieldset-elements title=dom-fieldset-elements>elements</a>;

  readonly attribute boolean <a href=#dom-cva-willvalidate title=dom-cva-willValidate>willValidate</a>;
  readonly attribute <a href=#validitystate>ValidityState</a> <a href=#dom-cva-validity title=dom-cva-validity>validity</a>;
  readonly attribute DOMString <a href=#dom-cva-validationmessage title=dom-cva-validationMessage>validationMessage</a>;
  boolean <a href=#dom-cva-checkvalidatity title=dom-cva-checkValidatity>checkValidity</a>();
  void <a href=#dom-cva-setcustomvalidity title=dom-cva-setCustomValidity>setCustomValidity</a>(in DOMString error);
};</pre>
   </dd> 
  </dl><p>The <code><a href=#the-fieldset-element>fieldset</a></code> element <a href=#represents>represents</a> a set of form
  controls grouped under a common name.</p>

  <p>The name of the group is given by the first <code><a href=#the-legend-element>legend</a></code>
  element that is a child of the <code><a href=#the-fieldset-element>fieldset</a></code> element. The
  remainder of the descendants form the group.</p>

  <p>The <dfn id=attr-fieldset-disabled title=attr-fieldset-disabled><code>disabled</code></dfn>
  attribute, when specified, causes all the form control descendants
  of the <code><a href=#the-fieldset-element>fieldset</a></code> element to be <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>.</p>

  <p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-fieldset-element>fieldset</a></code> element with its
  <a href=#form-owner>form owner</a>. The <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
  attribute represents the element's name.</p>

  <p>The <dfn id=dom-fieldset-disabled title=dom-fieldset-disabled><code>disabled</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>

  <p>The <dfn id=dom-fieldset-type title=dom-fieldset-type><code>type</code></dfn> DOM
  attribute must return the string "<code title="">fieldset</code>".</p>

  <p>The <dfn id=dom-fieldset-elements title=dom-fieldset-elements><code>elements</code></dfn> DOM
  attribute must return an <code><a href=#htmlformcontrolscollection-0>HTMLFormControlsCollection</a></code>
  rooted at the <code><a href=#the-fieldset-element>fieldset</a></code> element, whose filter matches
  <a href=#category-listed title=category-listed>listed</a> elements.</p>

  <p>The <code title=dom-cva-willValidate><a href=#dom-cva-willvalidate>willValidate</a></code>,
  <code title=dom-cva-validity><a href=#dom-cva-validity>validity</a></code>, and <code title=dom-cva-validationMessage><a href=#dom-cva-validationmessage>validationMessage</a></code>
  attributes, and the <code title=dom-cva-checkValidatity><a href=#dom-cva-checkvalidatity>checkValidity()</a></code> and
  <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
  methods, are part of the <a href=#the-constraint-validation-api>constraint validation API</a>.</p>

  <p><strong>Constraint validation:</strong> <code><a href=#the-fieldset-element>fieldset</a></code>
  elements are always <a href=#barred-from-constraint-validation>barred from constraint
  validation</a>.</p>



  <h4 id=the-label-element><span class=secno>4.10.3 </span>The <dfn><code>label</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dd><a href=#form-associated-element>Form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>, but with no descendant <a href=#category-label title=category-label>labelable form-associated elements</a> unless it is the element's <a href=#labeled-control>labeled control</a>, and no descendant <code><a href=#the-label-element>label</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-label-for><a href=#attr-label-for>for</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmllabelelement>HTMLLabelElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute DOMString <a href=#dom-label-htmlfor title=dom-label-htmlFor>htmlFor</a>;
  readonly attribute <a href=#htmlelement>HTMLElement</a> <a href=#dom-label-control title=dom-label-control>control</a>;
};</pre>
   </dd> 
  </dl><p>The <code><a href=#the-label-element>label</a></code> <a href=#represents>represents</a> a caption in a user
  interface. The caption can be associated with a specific form
  control, known as the <code><a href=#the-label-element>label</a></code> element's <dfn id=labeled-control>labeled
  control</dfn>.</p>

  <p>Unless otherwise specified by the following rules, a
  <code><a href=#the-label-element>label</a></code> element has no <a href=#labeled-control>labeled control</a>.</p>

  <p>The <dfn id=attr-label-for title=attr-label-for><code>for</code></dfn> attribute
  may be specified to indicate a form control with which the caption
  is to be associated. If the attribute is specified, the attribute's
  value must be the ID of a <a href=#category-label title=category-label>labelable
  form-associated element</a> in the same <code>Document</code> as
  the <code><a href=#the-label-element>label</a></code> element. If the attribute is specified and
  there is an element in the <code>Document</code> whose ID is equal
  to the value of the <code title=attr-label-for><a href=#attr-label-for>for</a></code>
  attribute, and the first such element is a <a href=#category-label title=category-label>labelable form-associated element</a>,
  then that element is the <code><a href=#the-label-element>label</a></code> element's <a href=#labeled-control>labeled
  control</a>.</p>

  <p>If the <code title=attr-label-for><a href=#attr-label-for>for</a></code> attribute is not
  specified, but the <code><a href=#the-label-element>label</a></code> element has a <span>labelable
  form-associated element</span> descendant, then the first such
  descendant in <a href=#tree-order>tree order</a> is the <code><a href=#the-label-element>label</a></code>
  element's <a href=#labeled-control>labeled control</a>.</p>

  <p>The <code><a href=#the-label-element>label</a></code> element's exact default presentation and
  behavior, in particular what its <a href=#activation-behavior>activation behavior</a>
  might be, if anything, should match the platform's label
  behavior.</p>

  <div class=example>

   <p>For example, on platforms where clicking a checkbox label checks
   the checkbox, clicking the <code><a href=#the-label-element>label</a></code> in the following
   snippet could trigger the user agent to <a href=#run-synthetic-click-activation-steps>run synthetic click
   activation steps</a> on the <code><a href=#the-input-element>input</a></code> element, as if
   the element itself had been triggered by the user:</p>

   <pre>&lt;label&gt;&lt;input type=checkbox name=lost&gt; Lost&lt;/label&gt;</pre>

   <p>On other platforms, the behavior might be just to focus the
   control, or do nothing.</p>

  </div>

  <p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-label-element>label</a></code> element with its
  <a href=#form-owner>form owner</a>.</p>

  <p>The <dfn id=dom-label-htmlfor title=dom-label-htmlFor><code>htmlFor</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-label-for><a href=#attr-label-for>for</a></code> content attribute.</p>

  <p>The <dfn id=dom-label-control title=dom-label-control><code>control</code></dfn> DOM
  attribute must return the <code><a href=#the-label-element>label</a></code> element's <a href=#labeled-control>labeled
  control</a>, if any, or null if there isn't one.</p>

  <hr><p><a href=#category-label title=category-label>Labelable form-associated
  elements</a> have a <code>NodeList</code> object associated with
  them that represents the list of <code><a href=#the-label-element>label</a></code> elements, in
  <a href=#tree-order>tree order</a>, whose <a href=#labeled-control>labeled control</a> is the
  element in question. The <dfn id=dom-lfe-labels title=dom-lfe-labels><code>labels</code></dfn> DOM attribute of
  <a href=#category-label title=category-label>labelable form-associated
  elements</a>, on getting, must return that <code>NodeList</code>
  object.</p>


  <h4 id=the-input-element><span class=secno>4.10.4 </span>The <dfn><code>input</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd>If the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is <em>not</em> in the <a href=#hidden-state title=attr-input-type-hidden>Hidden</a> state: <a href=#interactive-content-0>Interactive content</a>.</dd>
   <dd><a href=#category-listed title=category-listed>Listed</a>, <a href=#category-label title=category-label>labelable</a>, <a href=#category-submit title=category-submit>submittable</a>, and <a href=#category-reset title=category-reset>resettable</a> <a href=#form-associated-element>form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-input-accept><a href=#attr-input-accept>accept</a></code></dd>
   <dd><code title=attr-fs-action><a href=#attr-fs-action>action</a></code></dd>
   <dd><code title=attr-input-alt><a href=#attr-input-alt>alt</a></code></dd>
   <dd><code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code></dd>
   <dd><code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code></dd>
   <dd><code title=attr-input-checked><a href=#attr-input-checked>checked</a></code></dd>
   <dd><code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code></dd>
   <dd><code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-dim-height><a href=#attr-dim-height>height</a></code></dd>
   <dd><code title=attr-input-list><a href=#attr-input-list>list</a></code></dd>
   <dd><code title=attr-input-max><a href=#attr-input-max>max</a></code></dd>
   <dd><code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code></dd>
   <dd><code title=attr-fs-method><a href=#attr-fs-method>method</a></code></dd>
   <dd><code title=attr-input-min><a href=#attr-input-min>min</a></code></dd>
   <dd><code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code></dd>
   <dd><code title=attr-fe-name><a href=#attr-fe-name>name</a></code></dd>
   <dd><code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code></dd>
   <dd><code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code></dd>
   <dd><code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code></dd>
   <dd><code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code></dd>
   <dd><code title=attr-input-required><a href=#attr-input-required>required</a></code></dd>
   <dd><code title=attr-input-size><a href=#attr-input-size>size</a></code></dd>
   <dd><code title=attr-input-src><a href=#attr-input-src>src</a></code></dd>
   <dd><code title=attr-input-step><a href=#attr-input-step>step</a></code></dd>
   <dd><code title=attr-fs-target><a href=#attr-fs-target>target</a></code></dd>
   <dd><code title=attr-input-type><a href=#attr-input-type>type</a></code></dd>
   <dd><code title=attr-input-value><a href=#attr-input-value>value</a></code></dd>
   <dd><code title=attr-dim-width><a href=#attr-dim-width>width</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlinputelement>HTMLInputElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-input-accept title=dom-input-accept>accept</a>;
           attribute DOMString <a href=#dom-fs-action title=dom-fs-action>action</a>;
           attribute DOMString <a href=#dom-input-alt title=dom-input-alt>alt</a>;
           attribute boolean <a href=#dom-input-autocomplete title=dom-input-autocomplete>autocomplete</a>;
           attribute boolean <a href=#dom-fe-autofocus title=dom-fe-autofocus>autofocus</a>;
           attribute boolean <a href=#dom-input-defaultchecked title=dom-input-defaultChecked>defaultChecked</a>;
           attribute boolean <a href=#dom-input-checked title=dom-input-checked>checked</a>;
           attribute boolean <a href=#dom-fe-disabled title=dom-fe-disabled>disabled</a>;
           attribute DOMString <a href=#dom-fs-enctype title=dom-fs-enctype>enctype</a>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute boolean <a href=#dom-input-indeterminate title=dom-input-indeterminate>indeterminate</a>;
  readonly attribute <a href=#htmlelement>HTMLElement</a> <a href=#dom-input-list title=dom-input-list>list</a>;
           attribute DOMString <a href=#dom-input-max title=dom-input-max>max</a>;
           attribute long <a href=#dom-input-maxlength title=dom-input-maxLength>maxLength</a>;
           attribute DOMString <a href=#dom-fs-method title=dom-fs-method>method</a>;
           attribute DOMString <a href=#dom-input-min title=dom-input-min>min</a>;
           attribute boolean <a href=#dom-input-multiple title=dom-input-multiple>multiple</a>;
           attribute DOMString <a href=#dom-fe-name title=dom-fe-name>name</a>;
           attribute boolean <a href=#dom-fs-novalidate title=dom-fs-noValidate>noValidate</a>;
           attribute DOMString <a href=#dom-input-pattern title=dom-input-pattern>pattern</a>;
           attribute DOMString <a href=#dom-input-placeholder title=dom-input-placeholder>placeholder</a>;
           attribute boolean <a href=#dom-input-readonly title=dom-input-readOnly>readOnly</a>;
           attribute boolean <a href=#dom-input-required title=dom-input-required>required</a>;
           attribute unsigned long <a href=#dom-input-size title=dom-input-size>size</a>;
           attribute DOMString <a href=#dom-input-src title=dom-input-src>src</a>;
           attribute DOMString <a href=#dom-input-step title=dom-input-step>step</a>;
           attribute DOMString <a href=#dom-fs-target title=dom-fs-target>target</a>;
           attribute DOMString <a href=#dom-input-type title=dom-input-type>type</a>;
           attribute DOMString <a href=#dom-input-defaultvalue title=dom-input-defaultValue>defaultValue</a>;
           attribute DOMString <a href=#dom-input-value title=dom-input-value>value</a>;
           attribute DOMTimeStamp <a href=#dom-input-valueasdate title=dom-input-valueAsDate>valueAsDate</a>;
           attribute float <a href=#dom-input-valueasnumber title=dom-input-valueAsNumber>valueAsNumber</a>;
  readonly attribute <a href=#htmloptionelement>HTMLOptionElement</a> <a href=#dom-input-selectedoption title=dom-input-selectedOption>selectedOption</a>;

  void <a href=#dom-input-stepup title=dom-input-stepUp>stepUp</a>(in long n);
  void <a href=#dom-input-stepdown title=dom-input-stepDown>stepDown</a>(in long n);

  readonly attribute boolean <a href=#dom-cva-willvalidate title=dom-cva-willValidate>willValidate</a>;
  readonly attribute <a href=#validitystate>ValidityState</a> <a href=#dom-cva-validity title=dom-cva-validity>validity</a>;
  readonly attribute DOMString <a href=#dom-cva-validationmessage title=dom-cva-validationMessage>validationMessage</a>;
  boolean <a href=#dom-cva-checkvalidatity title=dom-cva-checkValidatity>checkValidity</a>();
  void <a href=#dom-cva-setcustomvalidity title=dom-cva-setCustomValidity>setCustomValidity</a>(in DOMString error);

  readonly attribute <span>NodeList</span> <a href=#dom-lfe-labels title=dom-lfe-labels>labels</a>;
};</pre>
   </dd> 
  </dl><!-- XXX add selectionStart and company --><p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a typed data field,
  usually with a form control to allow the user to edit the data.</p>

  <p>The <dfn id=attr-input-type title=attr-input-type><code>type</code></dfn>
  attribute controls the data type (and associated control) of the
  element. It is an <a href=#enumerated-attribute>enumerated attribute</a>. The following
  table lists the keywords and states for the attribute &mdash; the
  keywords in the left column map to the states in the cell in the
  second column on the same row as the keyword.</p>

  <table><thead><tr><th> Keyword
     <th> State
     <th> Data type
     <th> Control type
   <tbody><tr><td> <dfn id=attr-input-type-hidden-keyword title=attr-input-type-hidden-keyword><code>hidden</code></dfn>
     <td> <a href=#hidden-state title=attr-input-type-hidden>Hidden</a>
     <td> An arbitrary string
     <td> n/a
    <tr><td> <dfn id=attr-input-type-text-keyword title=attr-input-type-text-keyword><code>text</code></dfn>
     <td> <a href=#text-state-and-search-state title=attr-input-type-text>Text</a>
     <td> Text with no line breaks
     <td> Text field
    <tr><td> <dfn id=attr-input-type-search-keyword title=attr-input-type-search-keyword><code>search</code></dfn>
     <td> <a href=#text-state-and-search-state title=attr-input-type-search>Search</a>
     <td> Text with no line breaks
     <td> Search field
    <tr><td> <dfn id=attr-input-type-url-keyword title=attr-input-type-url-keyword><code>url</code></dfn>
     <td> <a href=#url-state title=attr-input-type-url>URL</a>
     <td> An absolute IRI
     <td> A text field
    <tr><td> <dfn id=attr-input-type-email-keyword title=attr-input-type-email-keyword><code>email</code></dfn>
     <td> <a href=#e-mail-state title=attr-input-type-email>E-mail</a>
     <td> An e-mail address or list of e-mail addresses
     <td> A text field
    <tr><td> <dfn id=attr-input-type-password-keyword title=attr-input-type-password-keyword><code>password</code></dfn>
     <td> <a href=#password-state title=attr-input-type-password>Password</a>
     <td> Text with no line breaks (sensitive information)
     <td> Text field that obscures data entry
    <tr><td> <dfn id=attr-input-type-datetime-keyword title=attr-input-type-datetime-keyword><code>datetime</code></dfn>
     <td> <a href=#date-and-time-state title=attr-input-type-datetime>Date and Time</a>
     <td> A date and time (year, month, day, hour, minute, second, fraction of a second) with the time zone set to UTC
     <td> A date and time control
    <tr><td> <dfn id=attr-input-type-date-keyword title=attr-input-type-date-keyword><code>date</code></dfn>
     <td> <a href=#date-state title=attr-input-type-date>Date</a>
     <td> A date (year, month, day) with no time zone
     <td> A date control
    <tr><td> <dfn id=attr-input-type-month-keyword title=attr-input-type-month-keyword><code>month</code></dfn>
     <td> <a href=#month-state title=attr-input-type-month>Month</a>
     <td> A date consisting of a year and a month with no time zone
     <td> A month control
    <tr><td> <dfn id=attr-input-type-week-keyword title=attr-input-type-week-keyword><code>week</code></dfn>
     <td> <a href=#week-state title=attr-input-type-week>Week</a>
     <td> A date consisting of a week-year number and a week number with no time zone
     <td> A week control
    <tr><td> <dfn id=attr-input-type-time-keyword title=attr-input-type-time-keyword><code>time</code></dfn>
     <td> <a href=#time-state title=attr-input-type-time>Time</a>
     <td> A time (hour, minute, seconds, fractional seconds) with no time zone
     <td> A time control
    <tr><td> <dfn id=attr-input-type-datetime-local-keyword title=attr-input-type-datetime-local-keyword><code>datetime-local</code></dfn>
     <td> <a href=#local-date-and-time-state title=attr-input-type-datetime-local>Local Date and Time</a>
     <td> A date and time (year, month, day, hour, minute, second, fraction of a second) with no time zone
     <td> A date and time control
    <tr><td> <dfn id=attr-input-type-number-keyword title=attr-input-type-number-keyword><code>number</code></dfn>
     <td> <a href=#number-state title=attr-input-type-number>Number</a>
     <td> A numerical value
     <td> A text field or spinner control
    <tr><td> <dfn id=attr-input-type-range-keyword title=attr-input-type-range-keyword><code>range</code></dfn>
     <td> <a href=#range-state title=attr-input-type-range>Range</a>
     <td> A numerical value, with the extra semantic that the exact value is not important
     <td> A slider control or similar
    <tr><td> <dfn id=attr-input-type-color-keyword title=attr-input-type-color-keyword><code>color</code></dfn>
     <td> <a href=#color-state title=attr-input-type-color>Color</a>
     <td> An sRGB color with 8-bit red, green, and blue components
     <td> A color well
    <tr><td> <dfn id=attr-input-type-checkbox-keyword title=attr-input-type-checkbox-keyword><code>checkbox</code></dfn>
     <td> <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a>
     <td> A set of zero or more values from a predefined list
     <td> A checkbox
    <tr><td> <dfn id=attr-input-type-radio-keyword title=attr-input-type-radio-keyword><code>radio</code></dfn>
     <td> <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a>
     <td> An enumerated value
     <td> A radio button
    <tr><td> <dfn id=attr-input-type-file-keyword title=attr-input-type-file-keyword><code>file</code></dfn>
     <td> <a href=#file-upload-state title=attr-input-type-file>File Upload</a>
     <td> Zero or more files each with a MIME type and optionally a file name
     <td> A label and a button
    <tr><td> <dfn id=attr-input-type-submit-keyword title=attr-input-type-submit-keyword><code>submit</code></dfn>
     <td> <a href=#submit-button-state title=attr-input-type-submit>Submit Button</a>
     <td> An enumerated value, with the extra semantic that it must be the last value selected and initiates form submission
     <td> A button
    <tr><td> <dfn id=attr-input-type-image-keyword title=attr-input-type-image-keyword><code>image</code></dfn>
     <td> <a href=#image-button-state title=attr-input-type-image>Image Button</a>
     <td> A coordinate, relative to a particular image's size, with the extra semantic that it must be the last value selected and initiates form submission
     <td> Either a clickable image, or a button
    <tr><td> <dfn id=attr-input-type-reset-keyword title=attr-input-type-reset-keyword><code>reset</code></dfn>
     <td> <a href=#reset-button-state title=attr-input-type-reset>Reset Button</a>
     <td> n/a
     <td> A button
    <tr><td> <dfn id=attr-input-type-button-keyword title=attr-input-type-button-keyword><code>button</code></dfn>
     <td> <a href=#button-state title=attr-input-type-button>Button</a>
     <td> n/a
     <td> A button
  </table><p>The <i>missing value default</i> is the <a href=#text-state-and-search-state title=attr-input-type-text>Text</a> state.</p>

  <p>Which of the <code title=attr-input-accept><a href=#attr-input-accept>accept</a></code>, <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>, <code title=attr-input-alt><a href=#attr-input-alt>alt</a></code>, <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>, <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code>, <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>, <code title=attr-dim-height><a href=#attr-dim-height>height</a></code>, <code title=attr-input-list><a href=#attr-input-list>list</a></code>, <code title=attr-input-max><a href=#attr-input-max>max</a></code>, <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>, <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>, <code title=attr-input-min><a href=#attr-input-min>min</a></code>, <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>, <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>, <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>, <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>, <code title=attr-input-required><a href=#attr-input-required>required</a></code>, <code title=attr-input-size><a href=#attr-input-size>size</a></code>, <code title=attr-input-src><a href=#attr-input-src>src</a></code>, <code title=attr-input-step><a href=#attr-input-step>step</a></code>, <code title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and <code title=attr-dim-width><a href=#attr-dim-width>width</a></code> attributes apply to an
  <code><a href=#the-input-element>input</a></code> element depends on the state of its <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute. Similarly, the <code title=dom-input-checked><a href=#dom-input-checked>checked</a></code>, <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>, <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, <code title=dom-input-list><a href=#dom-input-list>list</a></code>, and <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM
  attributes, and the <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code>
  and <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> methods, are
  specific to certain states. The following table is non-normative and
  summarises which content attributes, DOM attrbutes, and methods
  apply to each state:</p>

  <table class=applies><thead><tr><td>
     <th> <span title=""><a href=#hidden-state title=attr-input-type-hidden>Hidden</a></span>
     <th> <span title=""><a href=#text-state-and-search-state title=attr-input-type-text>Text</a>,</span>
          <span title=""><a href=#text-state-and-search-state title=attr-input-type-search>Search</a>,</span>
          <span title=""><a href=#url-state title=attr-input-type-url>URL</a></span>
     <th> <span title=""><a href=#e-mail-state title=attr-input-type-email>E-mail</a></span>
     <th> <span title=""><a href=#password-state title=attr-input-type-password>Password</a></span>
     <th> <span title=""><a href=#date-and-time-state title=attr-input-type-datetime>Date and Time</a>,</span>
          <span title=""><a href=#date-state title=attr-input-type-date>Date</a>,</span>
          <span title=""><a href=#month-state title=attr-input-type-month>Month</a>,</span>
          <span title=""><a href=#week-state title=attr-input-type-week>Week</a>,</span>
          <span title=""><a href=#time-state title=attr-input-type-time>Time</a></span>
     <th> <span title=""><a href=#local-date-and-time-state title=attr-input-type-datetime-local>Local Date and Time</a>,</span>
          <span title=""><a href=#number-state title=attr-input-type-number>Number</a></span>
     <th> <span title=""><a href=#range-state title=attr-input-type-range>Range</a></span>
     <th> <span title=""><a href=#color-state title=attr-input-type-color>Color</a></span>
     <th> <span title=""><a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a>,</span>
          <span title=""><a href=#radio-button-state title=attr-input-type-radio>Radio Button</a></span>
     <th> <span title=""><a href=#file-upload-state title=attr-input-type-file>File Upload</a></span>
     <th> <span title=""><a href=#submit-button-state title=attr-input-type-submit>Submit Button</a></span>
     <th> <span title=""><a href=#image-button-state title=attr-input-type-image>Image Button</a></span>
     <th> <span title=""><a href=#reset-button-state title=attr-input-type-reset>Reset Button</a>,</span>
          <span title=""><a href=#button-state title=attr-input-type-button>Button</a></span>

   <tbody><tr><th> <code title=attr-input-accept><a href=#attr-input-accept>accept</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=yes> Yes     <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=yes> Yes     <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-alt><a href=#attr-input-alt>alt</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=yes> Yes     <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=yes> Yes     <!-- Checkbox -->
<!-- <td class="yes"> Yes          Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=yes> Yes     <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-dim-height><a href=#attr-dim-height>height</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-list><a href=#attr-input-list>list</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=yes> Yes     <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-max><a href=#attr-input-max>max</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=yes> Yes     <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-min><a href=#attr-input-min>min</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=yes> Yes     <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=yes> Yes     <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-required><a href=#attr-input-required>required</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=yes> Yes     <!-- Checkbox -->
<!-- <td class="yes"> Yes          Radio Button -->
     <td class=yes> Yes     <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-size><a href=#attr-input-size>size</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-src><a href=#attr-input-src>src</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-input-step><a href=#attr-input-step>step</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-fs-target><a href=#attr-fs-target>target</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=yes> Yes     <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=attr-dim-width><a href=#attr-dim-width>width</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=yes> Yes     <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=dom-input-checked><a href=#dom-input-checked>checked</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=no> &middot; <!-- Date and Time -->
<!-- <td class="no"> &middot;      Date -->
<!-- <td class="no"> &middot;      Month -->
<!-- <td class="no"> &middot;      Week -->
<!-- <td class="no"> &middot;      Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=yes> Yes     <!-- Checkbox -->
<!-- <td class="yes"> Yes          Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=dom-input-value><a href=#dom-input-value>value</a></code>
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- Hidden -->
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- Text -->
<!-- <td class="yes"> <span title="dom-input-value-value">value</span>      Search -->
<!-- <td class="yes"> <span title="dom-input-value-value">value</span>      URL -->
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- E-mail -->
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- Password -->
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- Date and Time -->
<!-- <td class="yes"> <span title="dom-input-value-value">value</span>      Date -->
<!-- <td class="yes"> <span title="dom-input-value-value">value</span>      Month -->
<!-- <td class="yes"> <span title="dom-input-value-value">value</span>      Week -->
<!-- <td class="yes"> <span title="dom-input-value-value">value</span>      Time -->
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- Local Date and Time -->
<!-- <td class="yes"> <span title="dom-input-value-value">value</span>      Number -->
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- Range -->
     <td class=yes> <a href=#dom-input-value-value title=dom-input-value-value>value</a> <!-- Color -->
     <td class=yes> <a href=#dom-input-value-default-on title=dom-input-value-default-on>default/on</a> <!-- Checkbox -->
<!-- <td class="yes"> <span title="dom-input-value-default-on">default/on</span>      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=yes> <a href=#dom-input-value-default title=dom-input-value-default>default</a> <!-- Submit Button -->
     <td class=yes> <a href=#dom-input-value-default title=dom-input-value-default>default</a> <!-- Image Button -->
     <td class=yes> <a href=#dom-input-value-default title=dom-input-value-default>default</a> <!-- Reset Button -->
<!-- <td class="yes"> <span title="dom-input-value-default">default</span>      Button -->

    <tr><th> <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=no> &middot; <!-- Local Date and Time -->
<!-- <td class="no"> &middot;      Number -->
     <td class=no> &middot; <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=dom-input-list><a href=#dom-input-list>list</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=yes> Yes     <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=yes> Yes     <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code>
     <td class=no> &middot; <!-- Hidden -->
     <td class=no> &middot; <!-- Text -->
<!-- <td class="no"> &middot;      Search -->
<!-- <td class="no"> &middot;      URL -->
     <td class=no> &middot; <!-- E-mail -->
     <td class=no> &middot; <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=no> &middot; <!-- Color -->
     <td class=no> &middot; <!-- Checkbox -->
<!-- <td class="no"> &middot;      Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <span title=""><code title=event-input-input><a href=#event-input-input>input</a></code> event</span>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=yes> Yes     <!-- Color -->
     <td class=yes> Yes     <!-- Checkbox -->
<!-- <td class="yes"> Yes          Radio Button -->
     <td class=no> &middot; <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot;      Button -->

    <tr><th> <span title=""><code title=event-input-change><a href=#event-input-change>change</a></code> event</span>
     <td class=no> &middot; <!-- Hidden -->
     <td class=yes> Yes     <!-- Text -->
<!-- <td class="yes"> Yes          Search -->
<!-- <td class="yes"> Yes          URL -->
     <td class=yes> Yes     <!-- E-mail -->
     <td class=yes> Yes     <!-- Password -->
     <td class=yes> Yes     <!-- Date and Time -->
<!-- <td class="yes"> Yes          Date -->
<!-- <td class="yes"> Yes          Month -->
<!-- <td class="yes"> Yes          Week -->
<!-- <td class="yes"> Yes          Time -->
     <td class=yes> Yes     <!-- Local Date and Time -->
<!-- <td class="yes"> Yes          Number -->
     <td class=yes> Yes     <!-- Range -->
     <td class=yes> Yes     <!-- Color -->
     <td class=yes> Yes     <!-- Checkbox -->
<!-- <td class="yes"> Yes          Radio Button -->
     <td class=yes> Yes     <!-- File Upload -->
     <td class=no> &middot; <!-- Submit Button -->
     <td class=no> &middot; <!-- Image Button -->
     <td class=no> &middot; <!-- Reset Button -->
<!-- <td class="no"> &middot; Button -->

  </table><p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute changes state, and
  when the element is first created, the element's rendering and
  behaviour must change to the new state's accordingly and the
  <dfn id=value-sanitization-algorithm>value sanitization algorithm</dfn>, if one is defined for the
  <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's new state,
  must be invoked.</p>

  <p>Each <code><a href=#the-input-element>input</a></code> element has a <a href=#concept-fe-value title=concept-fe-value>value</a>, which is exposed by the <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute. Some states
  define an <dfn id=concept-input-value-string-number title=concept-input-value-string-number>algorithm
  to convert a string to a number</dfn>, an <dfn id=concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</dfn>, an <dfn id=concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</dfn>, and an <dfn id=concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</dfn>, which are used by
  <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
  <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
  <code title=attr-input-step><a href=#attr-input-step>step</a></code>,
  <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>,
  <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>,
  <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code>, and
  <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code>.</p>

  <p>Each <code><a href=#the-input-element>input</a></code> element has a boolean <dfn id=concept-input-value-dirty-flag title=concept-input-value-dirty-flag>dirty value flag</dfn>. When
  it is true, the element is said to have a <dfn id=concept-input-value-dirty title=concept-input-value-dirty><i>dirty value</i></dfn>. The
  <a href=#concept-input-value-dirty-flag title=concept-input-value-dirty-flag>dirty value flag</a>
  must be initially set to false when the element is created, and must
  be set to true whenever the user interacts with the control in a way
  that changes the <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>The <dfn id=attr-input-value title=attr-input-value><code>value</code></dfn>
  content attribute gives the default <a href=#concept-fe-value title=concept-fe-value>value</a> of the <code><a href=#the-input-element>input</a></code>
  element. When the <code title=attr-input-value><a href=#attr-input-value>value</a></code>
  content attribute is added, set, or removed, if the control does not
  have a <i title=concept-input-value-dirty><a href=#concept-input-value-dirty>dirty value</a></i>, the
  user agent must set the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element to the value of the <code title=attr-input-value><a href=#attr-input-value>value</a></code> content attribute, if there is
  one, or the empty string otherwise, and then run the current
  <a href=#value-sanitization-algorithm>value sanitization algorithm</a>, if one is defined.</p>

  <p>Each <code><a href=#the-input-element>input</a></code> element has a <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a>, which is exposed by
  the <code title=dom-input-checked><a href=#dom-input-checked>checked</a></code> DOM
  attribute.</p>

  <p>Each <code><a href=#the-input-element>input</a></code> element has a boolean <dfn id=concept-input-checked-dirty-flag title=concept-input-checked-dirty-flag>dirty checkedness
  flag</dfn>. When it is true, the element is said to have a <dfn id=concept-input-checked-dirty title=concept-input-checked-dirty><i>dirty
  checkedness</i></dfn>. The <a href=#concept-input-checked-dirty-flag title=concept-input-checked-dirty-flag>dirty checkedness
  flag</a> must be initially set to false when the element is
  created, and must be set to true whenever the user interacts with
  the control in a way that changes the <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a>.</p>

  <p>The <dfn id=attr-input-checked title=attr-input-checked><code>checked</code></dfn>
  content attribute gives the default <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> of the
  <code><a href=#the-input-element>input</a></code> element. When the <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code> content attribute is
  added, if the control does not have <i title=concept-input-checked-dirty><a href=#concept-input-checked-dirty>dirty checkedness</a></i>, the user
  agent must set the <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> of the element to
  true; when the <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code>
  content attribute is removed, if the control does not have <i title=concept-input-checked-dirty><a href=#concept-input-checked-dirty>dirty checkedness</a></i>, the user
  agent must set the <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> of the element to
  false.</p>

  <p>The <a href=#concept-form-reset-control title=concept-form-reset-control>reset
  algorithm</a> for <code><a href=#the-input-element>input</a></code> elements is to set the <a href=#concept-input-value-dirty-flag title=concept-input-value-dirty-flag>dirty value flag</a> and
  <a href=#concept-input-checked-dirty-flag title=concept-input-checked-dirty-flag>dirty checkedness
  flag</a> back to false, set the <a href=#concept-fe-value title=concept-fe-value>value</a> of the element to the value of
  the <code title=attr-input-value><a href=#attr-input-value>value</a></code> content attribute,
  if there is one, or the empty string otherwise, set the <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> of the element to true
  if the element has a <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code>
  content attribute and false if it does not, and then invoke the
  <a href=#value-sanitization-algorithm>value sanitization algorithm</a>, if the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state
  defines one.</p>

  <p>Each <code><a href=#the-input-element>input</a></code> element has a boolean <dfn id=concept-input-mutability title=concept-input-mutability>mutability flag</dfn>. When it is
  true, the element is said to be <dfn id=concept-input-mutable title=concept-input-mutable><i>mutable</i></dfn>, and when it is
  false the element is <dfn id=concept-input-immutable title=concept-input-immutable><i>immutable</i></dfn>. Unless
  otherwise specified, an <code><a href=#the-input-element>input</a></code> element is always <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>. Unless otherwise
  specified, the user agent should not allow the user to modify the
  element's <a href=#concept-fe-value title=concept-fe-value>value</a> or <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a>.</p>

  <p>When an <code><a href=#the-input-element>input</a></code> element is <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>, it is <i title=concept-input-immutable><a href=#concept-input-immutable>immutable</a></i>.</p>

  <p>When an <code><a href=#the-input-element>input</a></code> element does not have a
  <code>Document</code> node as one of its ancestors (i.e. when it is
  not in the document), it is <i title=concept-input-immutable><a href=#concept-input-immutable>immutable</a></i>.</p> <!-- XXX how does
  this affect shadow trees in XBL2? -->

  <p class=note>The <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code> attribute can also in
  some cases make an <code><a href=#the-input-element>input</a></code> element <i title=concept-input-immutable><a href=#concept-input-immutable>immutable</a></i>.</p>

  <p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-input-element>input</a></code> element with its
  <a href=#form-owner>form owner</a>. The <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
  attribute represents the element's name. The <code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code> attribute is used to make
  the control non-interactive and to prevent its value from being
  submitted. The <code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code>
  attribute controls focus.</p>

  <p>The <dfn id=dom-input-indeterminate title=dom-input-indeterminate><code>indeterminate</code></dfn> DOM
  attribute must initially be set to false. On getting, it must return
  the last value it was set to. On setting, it must be set to the new
  value. It has no effect except for changing the appearance of <a href=#checkbox-state title=attr-input-type-checkbox>checkbox</a> controls.</p>

  <p>The <dfn id=dom-input-accept title=dom-input-accept><code>accept</code></dfn>, <dfn id=dom-input-alt title=dom-input-alt><code>alt</code></dfn>, <dfn id=dom-input-autocomplete title=dom-input-autocomplete><code>autocomplete</code></dfn>, <dfn id=dom-input-max title=dom-input-max><code>max</code></dfn>, <dfn id=dom-input-min title=dom-input-min><code>min</code></dfn>, <dfn id=dom-input-multiple title=dom-input-multiple><code>multiple</code></dfn>, <dfn id=dom-input-pattern title=dom-input-pattern><code>pattern</code></dfn>, <dfn id=dom-input-placeholder title=dom-input-placeholder><code>placeholder</code></dfn>, <dfn id=dom-input-required title=dom-input-required><code>required</code></dfn>, <dfn id=dom-input-size title=dom-input-size><code>size</code></dfn>, <dfn id=dom-input-src title=dom-input-src><code>src</code></dfn>, <dfn id=dom-input-step title=dom-input-step><code>step</code></dfn>, and <dfn id=dom-input-type title=dom-input-type><code>type</code></dfn> DOM attributes must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.  The <dfn id=dom-input-maxlength title=dom-input-maxLength><code>maxLength</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code> content attribute. The
  <dfn id=dom-input-readonly title=dom-input-readOnly><code>readOnly</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code> content attribute. The
  <dfn id=dom-input-defaultchecked title=dom-input-defaultChecked><code>defaultChecked</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code> content attribute. The
  <dfn id=dom-input-defaultvalue title=dom-input-defaultValue><code>defaultValue</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the <code title=attr-input-value><a href=#attr-input-value>value</a></code> content attribute.</p>

  <p>The <code title=dom-cva-willValidate><a href=#dom-cva-willvalidate>willValidate</a></code>, <code title=dom-cva-validity><a href=#dom-cva-validity>validity</a></code>, and <code title=dom-cva-validationMessage><a href=#dom-cva-validationmessage>validationMessage</a></code>
  attributes, and the <code title=dom-cva-checkValidatity><a href=#dom-cva-checkvalidatity>checkValidity()</a></code> and <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
  methods, are part of the <a href=#the-constraint-validation-api>constraint validation API</a>. The
  <code title=dom-lfe-labels><a href=#dom-lfe-labels>labels</a></code> attribute provides a list
  of the element's <code><a href=#the-label-element>label</a></code>s.</p>




  <h5 id=states-of-the-type-attribute><span class=secno>4.10.4.1 </span>States of the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute</h5>

  <!-- XXX for things that say "express it as a valid foo", make sure
  that valid foo is unambiguous, and if not, define a canonical
  serialisation. e.g. should it be 2008-01-01T00:00 or
  2008-01-01t00:00? should it be 1e2 or 100? -->



  <h6 id=hidden-state><span class=secno>4.10.4.1.1 </span><dfn title=attr-input-type-hidden>Hidden</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#hidden-state title=attr-input-type-hidden>Hidden</a> state, the rules in
  this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a value that is not
  intended to be examined or manipulated by the user.</p>

  <p><strong>Constraint validation:</strong> If an <code><a href=#the-input-element>input</a></code>
  element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in
  the <a href=#hidden-state title=attr-input-type-hidden>Hidden</a> state, it is
  <a href=#barred-from-constraint-validation>barred from constraint validation</a>.</p>

  <p>If the <code title=attr-input-value><a href=#attr-input-value>name</a></code> attribute is
  present and has a value that is a <a href=#case-sensitive>case-sensitive</a> match
  for the string "<code title="">_charset_</code>", then the element's
  <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute must be
  omitted.</p>

  <div class=bookkeeping>

   <p>The 
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>
   DOM attribute applies to this element and is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-required><a href=#attr-input-required>required</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the
   element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>, and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code class=no-backref title=event-input-input><a href=#event-input-input>input</a></code> and <code class=no-backref title=event-input-change><a href=#event-input-change>change</a></code> events do not apply.</p>

  </div>


  <h6 id=text-state-and-search-state><span class=secno>4.10.4.1.2 </span><dfn title=attr-input-type-text>Text</dfn> state and <dfn title=attr-input-type-search>Search</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#text-state-and-search-state title=attr-input-type-text>Text</a> state or the <a href=#text-state-and-search-state title=attr-input-type-search>Search</a> state, the rules in
  this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a one line plain text
  edit control for the element's <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  its <a href=#concept-fe-value title=concept-fe-value>value</a> should be editable
  by the user. User agents must not allow users to insert U+000A LINE
  FEED (LF) or U+000D CARRIAGE RETURN (CR) characters into the
  element's <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that contains no U+000A LINE FEED (LF)
  or U+000D CARRIAGE RETURN (CR) characters.</p>

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> <a href=#strip-line-breaks>Strip line breaks</a> from the <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-size><a href=#attr-input-size>size</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>, and
   <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attributes.

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the
   element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>, and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

  </div>


  <h6 id=url-state><span class=secno>4.10.4.1.3 </span><dfn title=attr-input-type-url>URL</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#url-state title=attr-input-type-url>URL</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for editing a
  single <a href=#absolute-url>absolute URL</a> given in the element's <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>If the is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>, the user
  agent should allow the user to change the URL represented by its
  <a href=#concept-fe-value title=concept-fe-value>value</a>. User agents may allow
  the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string that is not a <a href=#valid-url title="valid URL">valid</a>
  <a href=#absolute-url>absolute URL</a>, but may also or instead automatically
  escape characters entered by the user so that the <a href=#concept-fe-value title=concept-fe-value>value</a> is always a <a href=#valid-url title="valid
  URL">valid</a> <a href=#absolute-url>absolute URL</a> (even if that isn't the
  actual value seen and edited by the user in the interface). User
  agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string. User
  agents must not allow users to insert U+000A LINE FEED (LF) or
  U+000D CARRIAGE RETURN (CR) characters into the <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-url title="valid
  URL">valid</a> <a href=#absolute-url>absolute URL</a>.</p>

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> <a href=#strip-line-breaks>Strip line breaks</a> from the <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p><strong>Constraint validation:</strong> While the <a href=#concept-fe-value title=concept-fe-value>value</a> of the element is not a <a href=#valid-url title="valid URL">valid</a> <a href=#absolute-url>absolute URL</a>, the
  element is <a href=#suffering-from-a-type-mismatch>suffering from a type mismatch</a>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-size><a href=#attr-input-size>size</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>, and
   <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attributes.

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the
   element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>, and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

  </div>


  <h6 id=e-mail-state><span class=secno>4.10.4.1.4 </span><dfn title=attr-input-type-email>E-mail</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#e-mail-state title=attr-input-type-email>E-mail</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for editing a
  list of e-mail addresses given in the element's <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the e-mail addresses
  represented by its <a href=#concept-fe-value title=concept-fe-value>value</a>. If
  the <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code> attribute is
  specified, then the user agent should allow the user to select or
  provide multiple addresses; otherwise, the user agent should act in
  a manner consistent with expecting the user to provide a single
  e-mail address. User agents may allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that is not an
  <a href=#valid-e-mail-address-list>valid e-mail address list</a>. User agents should allow the
  user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the
  empty string. User agents must not allow users to insert U+000A LINE
  FEED (LF) or U+000D CARRIAGE RETURN (CR) characters into the <a href=#concept-fe-value title=concept-fe-value>value</a>. User agents may transform the
  <a href=#concept-fe-value title=concept-fe-value>value</a> for display and editing
  (e.g. converting punycode in the <a href=#concept-fe-value title=concept-fe-value>value</a> to IDN in the display and vice
  versa).</p>

  <p>If the <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>
  attribute is specified on the element, then the <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if specified, must
  have a value that is a <a href=#valid-e-mail-address-list>valid e-mail address list</a>;
  otherwise, the <code title=attr-input-value><a href=#attr-input-value>value</a></code>
  attribute, if specified, must have a value that is a single
  <a href=#valid-e-mail-address>valid e-mail address</a>.</p>

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> <a href=#strip-line-breaks>Strip line breaks</a> from the <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p><strong>Constraint validation:</strong> If the <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code> attribute is specified
  on the element, then, while the <a href=#concept-fe-value title=concept-fe-value>value</a> of the element is not a
  <a href=#valid-e-mail-address-list>valid e-mail address list</a>, the element is
  <a href=#suffering-from-a-type-mismatch>suffering from a type mismatch</a>; otherwise, while the
  <a href=#concept-fe-value title=concept-fe-value>value</a> of the element is not a
  single <a href=#valid-e-mail-address>valid e-mail address</a>, the element is
  <a href=#suffering-from-a-type-mismatch>suffering from a type mismatch</a>.</p>

  <p>A <dfn id=valid-e-mail-address-list>valid e-mail address list</dfn> is a <a href=#set-of-comma-separated-tokens>set of
  comma-separated tokens</a>, where each token is itself a
  <a href=#valid-e-mail-address>valid e-mail address</a>. To obtain the list of tokens from
  a <a href=#valid-e-mail-address-list>valid e-mail address list</a>, the user agent must <a href=#split-a-string-on-commas title="split a string on commas">split the string on
  commas</a>.</p>

  <p>A <dfn id=valid-e-mail-address>valid e-mail address</dfn> is a string that matches the
  production <code title="">dot-atom&nbsp;"@"&nbsp;dot-atom</code>
  where <code title="">dot-atom</code> is defined in RFC 2822 section
  3.2.4, excluding the <code>CFWS</code> production everywhere. <a href=#refsRFC2822>[RFC2822]</a></p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-size><a href=#attr-input-size>size</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>, and
   <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attributes.

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the
   element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>, and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

  </div>


  <h6 id=password-state><span class=secno>4.10.4.1.5 </span><dfn title=attr-input-type-password>Password</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#password-state title=attr-input-type-password>Password</a> state, the rules in
  this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a one line plain text
  edit control for the element's <a href=#concept-fe-value title=concept-fe-value>value</a>. The user agent should obscure
  the value so that people other than the user cannot see it.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  its <a href=#concept-fe-value title=concept-fe-value>value</a> should be editable
  by the user. User agents must not allow users to insert U+000A LINE
  FEED (LF) or U+000D CARRIAGE RETURN (CR) characters into the <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that contains no U+000A LINE FEED (LF)
  or U+000D CARRIAGE RETURN (CR) characters.</p>

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> <a href=#strip-line-breaks>Strip line breaks</a> from the <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-size><a href=#attr-input-size>size</a></code> content attributes;
   <code title=attr-input-value><a href=#attr-input-value>value</a></code> DOM attribute.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the
   element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>, and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

  </div>


  <h6 id=date-and-time-state><span class=secno>4.10.4.1.6 </span><dfn title=attr-input-type-datetime>Date and Time</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#date-and-time-state title=attr-input-type-datetime>Date and Time</a> state, the
  rules in this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a specific <a href=#concept-datetime title=concept-datetime>global
  date and time</a>. User agents may display the date and time in
  whatever timezone is appropriate for the user.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the <a href=#concept-datetime title=concept-datetime>global date and time</a> represented by
  its <a href=#concept-fe-value title=concept-fe-value>value</a>, as obtained by
  <a href=#parse-a-global-date-and-time-string title="parse a global date and time string">parsing a global
  date and time</a> from it. User agents must not allow the user to
  set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that
  is not a <a href=#valid-global-date-and-time-string>valid global date and time string</a> expressed in
  UTC, though user agents may allow the user to set and view the time
  in another timezone and silently translate the time to and from the
  UTC timezone in the <a href=#concept-fe-value title=concept-fe-value>value</a>. If
  the user agent provides a user interface for selecting a <a href=#concept-datetime title=concept-datetime>global date and time</a>, then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to a <a href=#valid-global-date-and-time-string>valid
  global date and time string</a> expressed in UTC representing the
  user's selection. User agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-global-date-and-time-string>valid global date and
  time string</a>.</p> <!-- ok to set out-of-range value, we never
  know when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is a <a href=#valid-global-date-and-time-string>valid global date and time string</a>,
  then adjust the time so that the <a href=#concept-fe-value title=concept-fe-value>value</a> represents the same point in
  time but expressed in the UTC timezone, otherwise, set it to the
  empty string instead.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-global-date-and-time-string>valid global date and
  time string</a>. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-global-date-and-time-string>valid
  global date and time string</a>.</p>

  <p>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute is
  expressed in seconds. The <a href=#concept-input-step-scale title=concept-input-step-scale>step scale factor</a> is 1000
  (which converts the seconds to milliseconds, as used in the other
  algorithms). The <a href=#concept-input-step-default title=concept-input-step-default>default
  step</a> is 60 seconds.</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent may round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest <a href=#concept-datetime title=concept-datetime>global date and time</a> for which the
  element would not <a href=#suffering-from-a-step-mismatch title="suffering from a step
  mismatch">suffer from a step mismatch</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If <a href=#parse-a-global-date-and-time-string title="parse a global date and time
  string">parsing a global date and time</a> from <var title="">input</var> results in an error, then return an error;
  otherwise, return the number of milliseconds elapsed from midnight
  UTC on the morning of 1970-01-01 (the time represented by the value
  "<code title="">1970-01-01T00:00:00.0Z</code>") to the parsed <a href=#concept-datetime title=concept-datetime>global date and time</a>, ignoring leap
  seconds.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-global-date-and-time-string>valid global date and time
  string</a> expressed in UTC that represents the <a href=#concept-datetime title=concept-datetime>global date and time</a> that is <var title="">input</var> milliseconds after midnight UTC on the morning
  of 1970-01-01 (the time represented by the value "<code title="">1970-01-01T00:00:00.0Z</code>").</p>

  <p><strong>The <a href=#concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</a>, given a string <var title="">input</var>, is as follows:</strong> If <a href=#parse-a-global-date-and-time-string title="parse
  a global date and time string">parsing a global date and time</a>
  from <var title="">input</var> results in an error, then return an
  error; otherwise, return a <code>Date</code> object representing the
  parsed <a href=#concept-datetime title=concept-datetime>global date and time</a>,
  expressed in UTC.</p>

  <p><strong>The <a href=#concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</a>, given a
  <code>Date</code> object <var title="">input</var>, is as
  follows:</strong> Return a <a href=#valid-global-date-and-time-string>valid global date and time
  string</a> expressed in UTC that represents the <a href=#concept-datetime title=concept-datetime>global date and time</a> that is
  represented by <var title="">input</var>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>
   DOM attribute does not apply to the element.</p>

  </div>


  <h6 id=date-state><span class=secno>4.10.4.1.7 </span><dfn title=attr-input-type-date>Date</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#date-state title=attr-input-type-date>Date</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a specific <a href=#concept-date title=concept-date>date</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the <a href=#concept-date title=concept-date>date</a> represented by its <a href=#concept-fe-value title=concept-fe-value>value</a>, as obtained by <a href=#parse-a-date-string title="parse a date string">parsing a date</a> from it. User
  agents must not allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that is not a
  <a href=#valid-date-string>valid date string</a>. If the user agent provides a user
  interface for selecting a <a href=#concept-date title=concept-date>date</a>,
  then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to
  a <a href=#valid-date-string>valid date string</a> representing the user's
  selection. User agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-date-string>valid date
  string</a>.</p> <!-- ok to set out-of-range value, we never know
  when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is not a <a href=#valid-date-string>valid date string</a>, then set it
  to the empty string instead.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-date-string>valid date
  string</a>. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-date-string>valid
  date string</a>.</p>

  <p>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute is
  expressed in days. The <a href=#concept-input-step-scale title=concept-input-step-scale>step
  scale factor</a> is 86,400,000 (which converts the days to
  milliseconds, as used in the other algorithms). The <a href=#concept-input-step-default title=concept-input-step-default>default step</a> is 1 day.</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent may round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest <a href=#concept-date title=concept-date>date</a> for which the element would not
  <a href=#suffering-from-a-step-mismatch title="suffering from a step mismatch">suffer from a step
  mismatch</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If <a href=#parse-a-date-string title="parse a date string">parsing
  a date</a> from <var title="">input</var> results in an error,
  then return an error; otherwise, return the number of milliseconds
  elapsed from midnight UTC on the morning of 1970-01-01 (the time
  represented by the value "<code title="">1970-01-01T00:00:00.0Z</code>") to midnight UTC on the
  morning of the parsed <a href=#concept-date title=concept-date>date</a>,
  ignoring leap seconds.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-date-string>valid date string</a> that
  represents the <a href=#concept-date title=concept-date>date</a> that, in UTC,
  is current <var title="">input</var> milliseconds after midnight UTC
  on the morning of 1970-01-01 (the time represented by the value
  "<code title="">1970-01-01T00:00:00.0Z</code>").</p>

  <p><strong>The <a href=#concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</a>, given a string <var title="">input</var>, is as follows:</strong> If <a href=#parse-a-date-string title="parse
  a date string">parsing a date</a> from <var title="">input</var>
  results in an error, then return an error; otherwise, return a
  <code>Date</code> object representing midnight UTC on the morning of
  the parsed <a href=#concept-date title=concept-date>date</a>.</p>

  <p><strong>The <a href=#concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</a>, given a
  <code>Date</code> object <var title="">input</var>, is as
  follows:</strong> Return a <a href=#valid-date-string>valid date string</a> that
  represents the <a href=#concept-date title=concept-date>date</a> current at the
  time represented by <var title="">input</var> in the UTC
  timezone.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>
   DOM attribute does not apply to the element.</p>

  </div>


  <h6 id=month-state><span class=secno>4.10.4.1.8 </span><dfn title=attr-input-type-month>Month</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#month-state title=attr-input-type-month>Month</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a specific <a href=#concept-month title=concept-month>month</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the <a href=#concept-month title=concept-month>month</a> represented by its <a href=#concept-fe-value title=concept-fe-value>value</a>, as obtained by <a href=#parse-a-month-string title="parse a month string">parsing a month</a> from it. User
  agents must not allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that is not a
  <a href=#valid-month-string>valid month string</a>. If the user agent provides a user
  interface for selecting a <a href=#concept-month title=concept-month>month</a>,
  then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to
  a <a href=#valid-month-string>valid month string</a> representing the user's
  selection. User agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-month-string>valid month
  string</a>.</p> <!-- ok to set out-of-range value, we never know
  when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is not a <a href=#valid-month-string>valid month string</a>, then set it
  to the empty string instead.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-month-string>valid month
  string</a>. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-month-string>valid
  month string</a>.</p>

  <p>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute is
  expressed in months. The <a href=#concept-input-step-scale title=concept-input-step-scale>step
  scale factor</a> is 1 (there is no conversion needed as the
  algorithms use months). The <a href=#concept-input-step-default title=concept-input-step-default>default step</a> is 1
  month.</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent may round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest <a href=#concept-month title=concept-month>month</a> for which the element would not
  <a href=#suffering-from-a-step-mismatch title="suffering from a step mismatch">suffer from a step
  mismatch</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If <a href=#parse-a-month-string title="parse a month
  string">parsing a month time</a> from <var title="">input</var>
  results in an error, then return an error; otherwise, return the
  number of months between January 1970 and the parsed <a href=#concept-month title=concept-month>month</a>.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-month-string>valid month string</a>
  that represents the <span title=concept-monthtime>month</span>
  that has <var title="">input</var> months between it and January
  1970.</p>

  <!-- note - it doesn't matter exactly how many months are "between"
  two months, so long as the UA implements this consistently. The
  number is never actually exposed. -->

  <p><strong>The <a href=#concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</a>, given a string <var title="">input</var>, is as follows:</strong> If <a href=#parse-a-month-string title="parse
  a month string">parsing a month</a> from <var title="">input</var> results in an error, then return an error;
  otherwise, return a <code>Date</code> object representing midnight
  UTC on the morning of the first day of the parsed <a href=#concept-month title=concept-month>month</a>.</p>

  <p><strong>The <a href=#concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</a>, given a
  <code>Date</code> object <var title="">input</var>, is as
  follows:</strong> Return a <a href=#valid-month-string>valid month string</a> that
  represents the <a href=#concept-month title=concept-month>month</a> current at
  the time represented by <var title="">input</var> in the UTC
  timezone.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>
   DOM attribute does not apply to the element.</p>

  </div>


  <h6 id=week-state><span class=secno>4.10.4.1.9 </span><dfn title=attr-input-type-week>Week</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#week-state title=attr-input-type-week>Week</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a specific <a href=#concept-week title=concept-week>week</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the <a href=#concept-week title=concept-week>week</a> represented by its <a href=#concept-fe-value title=concept-fe-value>value</a>, as obtained by <a href=#parse-a-week-string title="parse a week string">parsing a week</a> from it. User
  agents must not allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that is not a
  <a href=#valid-week-string>valid week string</a>. If the user agent provides a user
  interface for selecting a <a href=#concept-week title=concept-week>week</a>,
  then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to
  a <a href=#valid-week-string>valid week string</a> representing the user's
  selection. User agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-week-string>valid week
  string</a>.</p> <!-- ok to set out-of-range value, we never know
  when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is not a <a href=#valid-week-string>valid week string</a>, then set it
  to the empty string instead.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-week-string>valid week
  string</a>. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-week-string>valid
  week string</a>.</p>

  <p>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute is
  expressed in weeks. The <a href=#concept-input-step-scale title=concept-input-step-scale>step
  scale factor</a> is 604,800,000 (which converts the weeks to
  milliseconds, as used in the other algorithms). The <a href=#concept-input-step-default title=concept-input-step-default>default step</a> is 1
  week.</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent may round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest <a href=#concept-week title=concept-week>week</a> for which the element would not
  <a href=#suffering-from-a-step-mismatch title="suffering from a step mismatch">suffer from a step
  mismatch</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If <a href=#parse-a-week-string title="parse a week string">parsing
  a week string</a> from <var title="">input</var> results in an
  error, then return an error; otherwise, return the number of
  milliseconds elapsed from midnight UTC on the morning of 1970-01-01
  (the time represented by the value "<code title="">1970-01-01T00:00:00.0Z</code>") to midnight UTC on the
  morning of the Monday of the parsed <a href=#concept-week title=concept-week>week</a>, ignoring leap seconds.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-week-string>valid week string</a> that
  represents the <a href=#concept-week title=concept-week>week</a> that, in UTC,
  is current <var title="">input</var> milliseconds after midnight UTC
  on the morning of 1970-01-01 (the time represented by the value
  "<code title="">1970-01-01T00:00:00.0Z</code>").</p>

  <p><strong>The <a href=#concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</a>, given a string <var title="">input</var>, is as follows:</strong> If <a href=#parse-a-week-string title="parse
  a week string">parsing a week</a> from <var title="">input</var>
  results in an error, then return an error; otherwise, return a
  <code>Date</code> object representing midnight UTC on the morning of
  the Monday of the parsed <a href=#concept-week title=concept-week>week</a>.</p>

  <p><strong>The <a href=#concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</a>, given a
  <code>Date</code> object <var title="">input</var>, is as
  follows:</strong> Return a <a href=#valid-week-string>valid week string</a> that
  represents the <a href=#concept-week title=concept-week>week</a> current at the
  time represented by <var title="">input</var> in the UTC
  timezone.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>
   DOM attribute does not apply to the element.</p>

  </div>


  <h6 id=time-state><span class=secno>4.10.4.1.10 </span><dfn title=attr-input-type-time>Time</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#time-state title=attr-input-type-time>Time</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a specific <a href=#concept-time title=concept-time>time</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the <a href=#concept-time title=concept-time>time</a> represented by its <a href=#concept-fe-value title=concept-fe-value>value</a>, as obtained by <a href=#parse-a-time-string title="parse a time string">parsing a time</a> from it. User
  agents must not allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that is not a
  <a href=#valid-time-string>valid time string</a>. If the user agent provides a user
  interface for selecting a <a href=#concept-time title=concept-time>time</a>,
  then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to
  a <a href=#valid-time-string>valid time string</a> representing the user's
  selection. User agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-time-string>valid time
  string</a>.</p> <!-- ok to set out-of-range value, we never know
  when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is not a <a href=#valid-time-string>valid time string</a>, then set it
  to the empty string instead.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-time-string>valid time
  string</a>. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-time-string>valid
  time string</a>.</p>

  <p>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute is
  expressed in seconds. The <a href=#concept-input-step-scale title=concept-input-step-scale>step scale factor</a> is 1000
  (which converts the seconds to milliseconds, as used in the other
  algorithms). The <a href=#concept-input-step-default title=concept-input-step-default>default
  step</a> is 60 seconds.</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent may round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest <a href=#concept-time title=concept-time>time</a> for which the element would not
  <a href=#suffering-from-a-step-mismatch title="suffering from a step mismatch">suffer from a step
  mismatch</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If <a href=#parse-a-time-string title="parse a time string">parsing
  a time</a> from <var title="">input</var> results in an error,
  then return an error; otherwise, return the number of milliseconds
  elapsed from midnight to the parsed <a href=#concept-time title=concept-time>time</a> on a day with no time changes.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-time-string>valid time string</a> that
  represents the <a href=#concept-time title=concept-time>time</a> that is <var title="">input</var> milliseconds after midnight on a day with no
  time changes.</p>

  <p><strong>The <a href=#concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</a>, given a string <var title="">input</var>, is as follows:</strong> If <a href=#parse-a-time-string title="parse
  a time string">parsing a time</a> from <var title="">input</var>
  results in an error, then return an error; otherwise, return a
  <code>Date</code> object representing the parsed <a href=#concept-time title=concept-time>time</a> in UTC on 1970-01-01.</p>

  <p><strong>The <a href=#concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</a>, given a
  <code>Date</code> object <var title="">input</var>, is as
  follows:</strong> Return a <a href=#valid-time-string>valid time string</a> that
  represents the UTC <a href=#concept-time title=concept-time>time</a> component
  that is represented by <var title="">input</var>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>
   DOM attribute does not apply to the element.</p>

  </div>


  <h6 id=local-date-and-time-state><span class=secno>4.10.4.1.11 </span><dfn title=attr-input-type-datetime-local>Local Date and Time</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#local-date-and-time-state title=attr-input-type-datetime-local>Local Date and Time</a>
  state, the rules in this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a <a href=#concept-datetime-local title=concept-datetime-local>local
  date and time</a>, with no time zone information.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the <a href=#concept-datetime-local title=concept-datetime-local>date and time</a> represented by
  its <a href=#concept-fe-value title=concept-fe-value>value</a>, as obtained by
  <a href=#parse-a-local-date-and-time-string title="parse a local date and time string">parsing a date and
  time</a> from it. User agents must not allow the user to set the
  <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that is not
  a <a href=#valid-local-date-and-time-string>valid local date and time string</a>. If the user agent
  provides a user interface for selecting a <a href=#concept-datetime-local title=concept-datetime-local>local date and time</a>, then the
  <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to a
  <a href=#valid-local-date-and-time-string>valid local date and time string</a> representing the
  user's selection. User agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-local-date-and-time-string>valid local date and
  time string</a>.</p> <!-- ok to set out-of-range value, we never
  know when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is not a <a href=#valid-local-date-and-time-string>valid local date and time
  string</a>, then set it to the empty string instead.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-local-date-and-time-string>valid local date and
  time string</a>. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-local-date-and-time-string>valid
  local date and time string</a>.</p>

  <p>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute is
  expressed in seconds. The <a href=#concept-input-step-scale title=concept-input-step-scale>step scale factor</a> is 1000
  (which converts the seconds to milliseconds, as used in the other
  algorithms). The <a href=#concept-input-step-default title=concept-input-step-default>default
  step</a> is 60 seconds.</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent may round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest <a href=#concept-datetime-local title=concept-datetime-local>local date and time</a> for which
  the element would not <a href=#suffering-from-a-step-mismatch title="suffering from a step
  mismatch">suffer from a step mismatch</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If <a href=#parse-a-local-date-and-time-string title="parse a local date and time
  string">parsing a date and time</a> from <var title="">input</var> results in an error, then return an error;
  otherwise, return the number of milliseconds elapsed from midnight
  on the morning of 1970-01-01 (the time represented by the value
  "<code title="">1970-01-01T00:00:00.0</code>") to the parsed <a href=#concept-datetime-local title=concept-datetime-local>local date and time</a>, ignoring
  leap seconds.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-local-date-and-time-string>valid local date and time
  string</a> that represents the date and time that is <var title="">input</var> milliseconds after midnight on the morning of
  1970-01-01 (the time represented by the value "<code title="">1970-01-01T00:00:00.0</code>").</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes do not apply to the element:
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>.</p>

  </div>


  <h6 id=number-state><span class=secno>4.10.4.1.12 </span><dfn title=attr-input-type-number>Number</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#number-state title=attr-input-type-number>Number</a> state, the rules in
  this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a number.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the number
  represented by its <a href=#concept-fe-value title=concept-fe-value>value</a>, as
  obtained from applying the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing floating point
  number values</a> to it. User agents must not allow the user to
  set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that
  is not a <a href=#valid-floating-point-number>valid floating point number</a>. If the user agent
  provides a user interface for selecting a number, then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to the <a href=#best-representation-of-the-floating-point-number>best
  representation of the floating point number</a> representing the
  user's selection. User agents should allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-floating-point-number>valid floating point
  number</a>.</p> <!-- ok to set out-of-range value, we never know
  when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is not a <a href=#valid-floating-point-number>valid floating point number</a>,
  then set it to the empty string instead.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-floating-point-number>valid floating point
  number</a>. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-floating-point-number>valid
  floating point number</a>.</p>

  <p>The <a href=#concept-input-step-scale title=concept-input-step-scale>step scale
  factor</a> is 1. The <a href=#concept-input-step-default title=concept-input-step-default>default step</a> is 1
  (allowing only integers, unless the <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute has a non-integer
  value).</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent may round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest number for
  which the element would not <a href=#suffering-from-a-step-mismatch title="suffering from a step
  mismatch">suffer from a step mismatch</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If applying the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing
  floating point number values</a> to <var title="">input</var>
  results in an error, then return an error; otherwise, return the
  resulting number.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-floating-point-number>valid floating point
  number</a> that represents <var title="">input</var>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes do not apply to the element:
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>.</p>

  </div>


  <h6 id=range-state><span class=secno>4.10.4.1.13 </span><dfn title=attr-input-type-range>Range</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#range-state title=attr-input-type-range>Range</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control for setting
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a
  string representing a number, but with the caveat that the exact
  value is not important, letting UAs provide a simpler interface than
  they do for the <a href=#number-state title=attr-input-type-number>Number</a>
  state.</p>

  <p class=note>In this state, the range and step constraints are
  enforced even during user input, and there is no way to set the
  value to the empty string.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the number
  represented by its <a href=#concept-fe-value title=concept-fe-value>value</a>, as
  obtained from applying the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing floating point
  number values</a> to it. User agents must not allow the user to
  set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that
  is not a <a href=#valid-floating-point-number>valid floating point number</a>. If the user agent
  provides a user interface for selecting a number, then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to a <a href=#best-representation-of-the-floating-point-number>best
  representation of the floating point number</a> representing the
  user's selection. User agents must not allow the user to set the
  <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-floating-point-number>valid floating point
  number</a>.</p> <!-- ok to set out-of-range value, we never know
  when we might have to represent bogus input -->

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is not a <a href=#valid-floating-point-number>valid floating point number</a>,
  then set it to a <a href=#valid-floating-point-number>valid floating point number</a> that
  represents the <a href=#concept-input-value-default-range title=concept-input-value-default-range>default value</a>.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-floating-point-number>valid floating point
  number</a>. The <a href=#concept-input-min-default title=concept-input-min-default>default
  minimum</a> is 0. The <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, if specified, must have a value that is a <a href=#valid-floating-point-number>valid
  floating point number</a>. The <a href=#concept-input-max-default title=concept-input-max-default>default maximum</a> is 100.</p>

  <p>The <dfn id=concept-input-value-default-range title=concept-input-value-default-range>default
  value</dfn> is the <a href=#concept-input-min title=concept-input-min>minimum</a>
  plus half the difference between the <a href=#concept-input-min title=concept-input-min>minimum</a> and the <a href=#concept-input-max title=concept-input-max>maximum</a>, unless the <a href=#concept-input-max title=concept-input-max>maximum</a> is less than the <a href=#concept-input-min title=concept-input-min>minimum</a>, in which case the <a href=#concept-input-value-default-range title=concept-input-value-default-range>default value</a> is
  the <a href=#concept-input-min title=concept-input-min>minimum</a>.</p>

  <p>When the element is <span>suffering from a range
  underflow</span>, the user agent must set the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a <a href=#valid-floating-point-number>valid floating point
  number</a> that represents the <a href=#concept-input-min title=concept-input-min>minimum</a>.</p>

  <p>When the element is <span>suffering from a range overflow</span>,
  if the <a href=#concept-input-max title=concept-input-max>maximum</a> is not less
  than the <a href=#concept-input-min title=concept-input-min>minimum</a>, the user
  agent must set the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a <a href=#valid-floating-point-number>valid floating point
  number</a> that represents the <a href=#concept-input-max title=concept-input-max>maximum</a>.</p>

  <p>The <a href=#concept-input-step-scale title=concept-input-step-scale>step scale
  factor</a> is 1. The <a href=#concept-input-step-default title=concept-input-step-default>default step</a> is 1
  (allowing only integers, unless the <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute has a non-integer
  value).</p>

  <p>When the element is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>,
  the user agent must round the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the nearest number for
  which the element would not <a href=#suffering-from-a-step-mismatch title="suffering from a step
  mismatch">suffer from a step mismatch</a>, and which is greater
  than or equal to the <a href=#concept-input-min title=concept-input-min>minimum</a>,
  and, if the <a href=#concept-input-max title=concept-input-max>maximum</a> is not
  less than the <a href=#concept-input-min title=concept-input-min>minimum</a>, which
  is less than or equal to the <a href=#concept-input-max title=concept-input-max>maximum</a>.</p>

  <p><strong>The <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a>, given a string <var title="">input</var>,
  is as follows:</strong> If applying the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing
  floating point number values</a> to <var title="">input</var>
  results in an error, then return an error; otherwise, return the
  resulting number.</p>

  <p><strong>The <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, given a number <var title="">input</var>,
  is as follows:</strong> Return a <a href=#valid-floating-point-number>valid floating point
  number</a> that represents <var title="">input</var>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code title=attr-input-min><a href=#attr-input-min>min</a></code>, and
   <code title=attr-input-step><a href=#attr-input-step>step</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes;
   <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-required><a href=#attr-input-required>required</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes do not apply to the element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code> and
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>.</p>

  </div>


  <h6 id=color-state><span class=secno>4.10.4.1.14 </span><dfn title=attr-input-type-color>Color</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#color-state title=attr-input-type-color>Color</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a color well control,
  for setting the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to a string representing a
  <a href=#simple-color>simple color</a>.</p>

  <p class=note>In this state, there is always a color picked, and
  there is no way to set the value to the empty string.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the color represented
  by its <a href=#concept-fe-value title=concept-fe-value>value</a>, as obtained from
  applying the <a href=#rules-for-parsing-simple-color-values>rules for parsing simple color values</a> to
  it. User agents must not allow the user to set the <a href=#concept-fe-value title=concept-fe-value>value</a> to a string that is not a
  <a href=#valid-lowercase-simple-color>valid lowercase simple color</a>. If the user agent
  provides a user interface for selecting a color, then the <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to the result of
  using the <a href=#rules-for-serialising-simple-color-values>rules for serialising simple color values</a> to
  the user's selection. User agents must not allow the user to set the
  <a href=#concept-fe-value title=concept-fe-value>value</a> to the empty string.</p>

  <p>The <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-simple-color>valid simple
  color</a>.</p>

  <p><strong>The <a href=#value-sanitization-algorithm>value sanitization algorithm</a> is as
  follows:</strong> If the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element is a <a href=#valid-simple-color>valid simple color</a>, then set it to
  the <a href=#concept-fe-value title=concept-fe-value>value</a> of the element
  <a href=#converted-to-lowercase>converted to lowercase</a>; otherwise, set it to the string
  "<code title="">#000000</code>".</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes, DOM attributes, and methods apply to the element:
   <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code> and
   <code title=attr-input-list><a href=#attr-input-list>list</a></code> content attributes;
   <code title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code title=dom-input-value><a href=#dom-input-value>value</a></code>, and
   <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> DOM attributes.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> and <code title=event-input-change><a href=#event-input-change>change</a></code> events apply.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-required><a href=#attr-input-required>required</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the
   element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code>, and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

  </div>


  <h6 id=checkbox-state><span class=secno>4.10.4.1.15 </span><dfn title=attr-input-type-checkbox>Checkbox</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a> state, the rules in
  this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a two-state control
  that represents the element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state. If the
  element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state
  is true, the control represents a positive selection, and if it is
  false, a negative selection. If the element's <code title=dom-input-indeterminate><a href=#dom-input-indeterminate>indeterminate</a></code> DOM attribute
  is set to true, then the control's selection should be obscured as
  if the control was in a third, indeterminate, state.</p>

  <p class=note>The control is never a true tri-state control, even
  if the element's <code title=dom-input-indeterminate><a href=#dom-input-indeterminate>indeterminate</a></code> DOM attribute
  is set to true. The <code title=dom-input-indeterminate><a href=#dom-input-indeterminate>indeterminate</a></code> DOM attribute
  only gives the appearance of a third state.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  then: The <a href=#pre-click-activation-steps>pre-click activation steps</a> consist of setting
  the element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> to
  its opposite value (i.e. true if it is false, false if it is true),
  and of setting the element's <code title=dom-input-indeterminate><a href=#dom-input-indeterminate>indeterminate</a></code> DOM attribute
  to false. The <a href=#canceled-activation-steps>canceled activation steps</a> consist of
  setting the <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> and
  the element's <code title=dom-input-indeterminate><a href=#dom-input-indeterminate>indeterminate</a></code> DOM attribute
  back to the values they had before the <a href=#pre-click-activation-steps>pre-click activation
  steps</a> were run. The <a href=#activation-behavior>activation behavior</a> is to
  <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-change>change</code> at the element, then
  <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code>
  events</a> at the element's <a href=#form-owner>form owner</a>.</p>

  <p><strong>Constraint validation:</strong> If the element is <i title=concept-input-required><a href=#concept-input-required>required</a></i> and its <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> is false, then the
  element is <a href=#suffering-from-being-missing>suffering from being missing</a>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code>, and
   <code title=attr-input-required><a href=#attr-input-required>required</a></code> content attributes;
   <code title=dom-input-checked><a href=#dom-input-checked>checked</a></code> and
   <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attributes.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-default-on title=dom-input-value-default-on>default/on</a>.</p>

   <p>The <code title=event-input-change><a href=#event-input-change>change</a></code> event applies.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the element:
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> event does not
   apply.</p>

  </div>


  <h6 id=radio-button-state><span class=secno>4.10.4.1.16 </span><dfn title=attr-input-type-radio>Radio Button</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a> state, the rules
  in this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a control that, when
  used in conjunction with other <code><a href=#the-input-element>input</a></code> elements, forms a
  <i><a href=#radio-button-group>radio button group</a></i> in which only one control can have its
  <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state set to
  true. If the element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state is true, the
  control represents the selected control in the group, and if it is
  false, it indicates a control in the group that is not selected.</p>

  <p>The <dfn id=radio-button-group><i>radio button group</i></dfn> that contains an
  <code><a href=#the-input-element>input</a></code> element <var title="">a</var> also contains all
  the other <code><a href=#the-input-element>input</a></code> elements <var title="">b</var> that
  fulfill all of the following conditions:</p>

  <ul><li>The <code><a href=#the-input-element>input</a></code> element <var title="">b</var>'s <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a> state.</li>

   <li>Either neither <var title="">a</var> nor <var title="">b</var>
   have a <a href=#form-owner>form owner</a>, or they both have one and it is the
   same for both.</li>

   <li>They both have a <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
   attribute, and the value of <var title="">a</var>'s <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute is a
   <a href=#compatibility-caseless>compatibility caseless</a> match for the value of <var title="">b</var>'s <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
   attribute.</li>

  </ul><p>A document must not contain an <code><a href=#the-input-element>input</a></code> element whose
  <i><a href=#radio-button-group>radio button group</a></i> contains only that element.</p>

  <p>When any of the following events occur, if the element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state is true after
  the event, the <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state of all the
  other elements in the same <i><a href=#radio-button-group>radio button group</a></i> must be set to
  false:</p>

  <ul><li>The element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state is set to
   true (for whatever reason).</li>

   <li>The element's <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
   attribute is added, removed, or changes value<!-- XXX setting to
   the same value? -->.</li>

   <li>The element's <a href=#form-owner>form owner</a> changes.</li>

  </ul><p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  then: The <a href=#pre-click-activation-steps>pre-click activation steps</a> consist of setting
  the element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> to
  true. The <a href=#canceled-activation-steps>canceled activation steps</a> consist of setting
  the element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> to
  false. The <a href=#activation-behavior>activation behavior</a> is to <a href=#fire-a-simple-event>fire a
  simple event</a> called <code title=event-change>change</code>
  at the element, then <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a> at the
  element's <a href=#form-owner>form owner</a>.</p>

  <p><strong>Constraint validation:</strong> If the element is <i title=concept-input-required><a href=#concept-input-required>required</a></i> and all of the
  <code><a href=#the-input-element>input</a></code> elements in the <i><a href=#radio-button-group>radio button group</a></i> have a
  <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> that is
  false, then the element is <a href=#suffering-from-being-missing>suffering from being
  missing</a>.</p>

  <p class=note>If none of the radio buttons in a <a href=#radio-button-group>radio button
  group</a> are checked when they are inserted into the document,
  then they will all be initially unchecked in the interface, until
  such time as one of them is checked (either by the user or by
  script).</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-input-checked><a href=#attr-input-checked>checked</a></code> and
   <code title=attr-input-required><a href=#attr-input-required>required</a></code> content attributes;
   <code title=dom-input-checked><a href=#dom-input-checked>checked</a></code> and
   <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attributes.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-default-on title=dom-input-value-default-on>default/on</a>.</p>

   <p>The <code title=event-input-change><a href=#event-input-change>change</a></code> event applies.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the element:
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> event does not
   apply.</p>

  </div>



  <h6 id=file-upload-state><span class=secno>4.10.4.1.17 </span><dfn title=attr-input-type-file>File Upload</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#file-upload-state title=attr-input-type-file>File Upload</a> state, the rules in this
  section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a list of <dfn id=concept-input-type-file-selected title=concept-input-type-file-selected>selected files</dfn>, each
  file consisting of a file name, a file type, and a file body (the
  contents of the file).</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to change the files on the
  list, e.g. adding or removing files. Files can be from the
  filesystem or created on the fly, e.g. a picture taken from a camera
  connected to the user's device.</p>

  <p><strong>Constraint validation:</strong> If the element is <i title=concept-input-required><a href=#concept-input-required>required</a></i> and the list of <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>selected files</a> is
  empty, then the element is <a href=#suffering-from-being-missing>suffering from being
  missing</a>.</p>

  <p>Unless the <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>
  attribute is set, there must be no more than one file in the list of
  <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>selected
  files</a>.</p>

  <hr><p>The <dfn id=attr-input-accept title=attr-input-accept><code>accept</code></dfn>
  attribute may be specified to provide user agents with a hint of
  what file types the server will be able to accept.</p>

  <p>If specified, the attribute must consist of a <a href=#set-of-comma-separated-tokens>set of
  comma-separated tokens</a>, each of which must be an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> match for one of the following:</p>

  <dl><!-- XXX allow */* ? --><dt>The string <code title="">audio/*</code></dt>

   <dd>Indicates that sound files are accepted.</dd>

   <dt>The string <code title="">video/*</code></dt>

   <dd>Indicates that video files are accepted.</dd>

   <dt>The string <code title="">image/*</code></dt>

   <dd>Indicates that image files are accepted.</dd>

   <dt>A valid MIME type, with no parameters</dt>

   <dd>Indicates that files of the specified type are accepted. <a href=#refsRFC2046>[RFC2046]</a></dd>

  </dl><p>The tokens must not be <a href=#ascii-case-insensitive>ASCII case-insensitive</a>
  matches for any of the other tokens (i.e. duplicates are not
  allowed). To obtain the list of tokens from the attribute, the user
  agent must <a href=#split-a-string-on-commas title="split a string on commas">split the
  attribute value on commas</a>.</p>

  <p>User agents should prevent the user from selecting files that are
  not accepted by one (or more) of these tokens.</p>

  <hr><div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes apply to the element:
   <code title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>, and
   <code title=attr-input-required><a href=#attr-input-required>required</a></code>.</p>

   <p>The <code title=event-input-change><a href=#event-input-change>change</a></code> event applies.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The element's <code title=attr-input-value><a href=#attr-input-value>value</a></code>
   attribute must be omitted.</p>

   <p>The following DOM attributes and methods do not apply to the element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-value><a href=#dom-input-value>value</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code title=event-input-input><a href=#event-input-input>input</a></code> event does not
   apply.</p>

  </div>



  <h6 id=submit-button-state><span class=secno>4.10.4.1.18 </span><dfn title=attr-input-type-submit>Submit Button</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#submit-button-state title=attr-input-type-submit>Submit Button</a> state, the rules
  in this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a button that, when
  activated, submits the form. If the element has a <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, the button's label
  must be the value of that attribute; otherwise, it must be an
  implementation-defined string that means "Submit" or some such. The
  element is a <a href=#concept-button title=concept-button>button</a>,
  specifically a <a href=#concept-submit-button title=concept-submit-button>submit
  button</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to activate the element.</p>

  <p>The element's <a href=#activation-behavior>activation behavior</a>, if the element
  has a <a href=#form-owner>form owner</a>, is to <a href=#concept-form-submit title=concept-form-submit>submit</a> the <a href=#form-owner>form
  owner</a> from the <code><a href=#the-input-element>input</a></code> element; otherwise, it is
  to do nothing.</p>

  <p>The <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>, <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>, <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>, <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>, and <code title=attr-fs-target><a href=#attr-fs-target>target</a></code> attributes are <a href=#form-submission>attributes
  for form submission</a>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>, and
   <code title=attr-fs-target><a href=#attr-fs-target>target</a></code> content attributes;
   <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-default title=dom-input-value-default>default</a>.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-required><a href=#attr-input-required>required</a></code>
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code class=no-backref title=event-input-input><a href=#event-input-input>input</a></code> and <code class=no-backref title=event-input-change><a href=#event-input-change>change</a></code> events do not apply.</p>

  </div>


  <h6 id=image-button-state><span class=secno>4.10.4.1.19 </span><dfn title=attr-input-type-image>Image Button</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, the rules
  in this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> either an image from
  which a user can select a coordinate and submit the form, or
  alternatively a button from which the user can submit the form. The
  element is a <a href=#concept-button title=concept-button>button</a>,
  specifically a <a href=#concept-submit-button title=concept-submit-button>submit
  button</a>.</p>

  <hr><p>The image is given by the <dfn id=attr-input-src title=attr-input-src><code>src</code></dfn> attribute. The <code title=attr-input-src><a href=#attr-input-src>src</a></code> attribute must be present, and
  must contain a <a href=#valid-url>valid URL</a> referencing a non-interactive,
  optionally animated, image resource that is neither paged nor
  scripted.</p>

  <p>When any of the following events occur, unless the user agent
  cannot support images, or its support for images has been disabled,
  or the user agent only fetches elements on demand, the user agent
  must <a href=#resolve-a-url title="resolve a url">resolve</a> the value of the
  <code title=attr-input-src><a href=#attr-input-src>src</a></code> attribute, relative to the
  element, and if that is successful, must <a href=#fetch>fetch</a> the
  resulting <a href=#absolute-url>absolute URL</a>:</p> <!-- Note how this does NOT
  happen when the base URL changes. -->

  <ul><li>The <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is first set to the
   <a href=#image-button-state title=attr-input-type-image>Image Button</a> state
   (possibly when the element is first created), and the <code title=attr-input-src><a href=#attr-input-src>src</a></code> attribute is present.</li>

   <li>The <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is changed back to
   the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state,
   and the <code title=attr-input-src><a href=#attr-input-src>src</a></code> attribute is
   present, and its value has changed since the last time the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute was in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state.</li>

   <li>The <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, and the
   <code title=attr-input-src><a href=#attr-input-src>src</a></code> attribute is set or
   changed.</li> <!-- XXX define changed -->

  </ul><p>Fetching the image must <a href=#delay-the-load-event>delay the <code title=event-load>load</code> event</a>.</p>

  <p>If the image was successfully obtained, with no network errors,
  and the image's type is a supported image type, and the image is a
  valid image of that type, then the image is said to be
  <i>available</i>. If this is true before the image is completely
  downloaded, each <a href=#concept-task title=concept-task>task</a> that is
  <a href=#queue-a-task title="queue a task">queued</a> by the <a href=#networking-task-source>networking
  task source</a> while the image is being <a href=#fetch title=fetch>fetched</a> must update the presentation of the
  image appropriately.</p>

  <p>The user agents should apply the <a href=#content-type-sniffing:-image title="Content-Type
  sniffing: image">image sniffing rules</a> to determine the type
  of the image, with the image's <a href=#content-type-0 title=Content-Type>associated
  Content-Type headers</a> giving the <var title="">official
  type</var>. If these rules are not applied, then the type of the
  image must be the type given by the image's <a href=#content-type-0 title=Content-Type>associated Content-Type headers</a>.</p>

  <p>User agents must not support non-image resources with the
  <code><a href=#the-input-element>input</a></code> element. User agents must not run executable code
  embedded in the image resource. User agents must only display the
  first page of a multipage resource. User agents must not allow the
  resource to act in an interactive fashion, but should honour any
  animation in the resource.</p>

  <p>The <a href=#concept-task title=concept-task>task</a> that is <a href=#queue-a-task title="queue a task">queued</a> by the <a href=#networking-task-source>networking task
  source</a> once the resource has been <a href=#fetch title=fetch>fetched</a>, must, if the download was successful
  and the image is <i>available</i>, <a href=#queue-a-task>queue a task</a> to
  <a href=#fire-a-load-event>fire a <code title=event-load>load</code> event</a> on
  the <code><a href=#the-input-element>input</a></code> element; and otherwise, if the fetching
  process fails without a response from the remote server, or
  completes but the image is not a valid or supported image,
  <a href=#queue-a-task>queue a task</a> to <a href=#fire-an-error-event>fire an <code title=event-error>error</code> event</a> on the
  <code><a href=#the-input-element>input</a></code> element.</p>

  <hr><p>The <dfn id=attr-input-alt title=attr-input-alt><code>alt</code></dfn> attribute
  provides the textual label for the alternative button for users and
  user agents who cannot use the image. The <code title=attr-input-alt><a href=#attr-input-alt>alt</a></code> attribute must also be present,
  and must contain a non-empty string.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element supports <a href=#dimension-attributes>dimension
  attributes</a>.</p>

  <hr><p>If the <code title=attr-input-src><a href=#attr-input-src>src</a></code> attribute is set,
  and the image is <i>available</i> and the user agent is configured
  to display that image, then: The element <a href=#represents>represents</a> a control for
  selecting a <a href=#concept-input-type-image-coordinate title=concept-input-type-image-coordinate>coordinate</a> from
  the image specified by the <code title=attr-input-src><a href=#attr-input-src>src</a></code>
  attribute; if the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>, the user agent should
  allow the user to select this <a href=#concept-input-type-image-coordinate title=concept-input-type-image-coordinate>coordinate</a>. The
  <a href=#activation-behavior>activation behavior</a> in this case consists of taking the
  user's selected <a href=#concept-input-type-image-coordinate title=concept-input-type-image-coordinate>coordinate</a>, and
  then, if the element has a <a href=#form-owner>form owner</a>, <a href=#concept-form-submit title=concept-form-submit>submitting</a> the <code><a href=#the-input-element>input</a></code>
  element's <a href=#form-owner>form owner</a> from the <code><a href=#the-input-element>input</a></code>
  element. If the user activates the control without explicitly
  selecting a coordinate, then the coordinate (0,0) must be
  assumed.</p>

  <p>Otherwise, the element <a href=#represents>represents</a> a submit button whose label is
  given by the value of the <code title=attr-input-alt><a href=#attr-input-alt>alt</a></code>
  attribute; if the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>, the user agent should
  allow the user to activate the button. The <a href=#activation-behavior>activation
  behavior</a> in this case consists of setting the <a href=#concept-input-type-image-coordinate title=concept-input-type-image-coordinate>selected
  coordinate</a> to (0,0), and then, if the element has a
  <a href=#form-owner>form owner</a>, <a href=#concept-form-submit title=concept-form-submit>submitting</a> the <code><a href=#the-input-element>input</a></code>
  element's <a href=#form-owner>form owner</a> from the <code><a href=#the-input-element>input</a></code>
  element.</p>

  <p>The <dfn id=concept-input-type-image-coordinate title=concept-input-type-image-coordinate>selected
  coordinate</dfn> must consist of an <var title="">x</var>-component
  and a <var title="">y</var>-component. The <var title="">x</var>-component must be greater than or equal to zero,
  and less than or equal to the rendered width, in CSS pixels, of the
  image, plus the widths of the left and right borders rendered around
  the image, if any. The <var title="">y</var>-component must be
  greater than or equal to zero, and less than or equal to the
  rendered height, in CSS pixels, of the image, plus the widths of the
  top and bottom bordered rendered around the image, if any. The
  coordinates must be relative to the image's borders, where there are
  any, and the edge of the image otherwise.</p> <!-- legacy browser
  behavior sometimes does some sure wacky things. -->

  <hr><p>The <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>, <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>, <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>, <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>, and <code title=attr-fs-target><a href=#attr-fs-target>target</a></code> attributes are <a href=#form-submission>attributes
  for form submission</a>.</p>

  <div class=bookkeeping>

   <p>The following common <code><a href=#the-input-element>input</a></code> element content
   attributes and DOM attributes apply to the element:
   <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>, 
   <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code title=attr-dim-width><a href=#attr-dim-width>width</a></code> content attributes;
   <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute.</p>

   <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute is
   in mode <a href=#dom-input-value-default title=dom-input-value-default>default</a>.</p>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-required><a href=#attr-input-required>required</a></code>
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>, and
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>.</p>

   <p>The element's <code title=attr-input-value><a href=#attr-input-value>value</a></code>
   attribute must be omitted.</p>

   <p>The following DOM attributes and methods do not apply to the element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code class=no-backref title=event-input-input><a href=#event-input-input>input</a></code> and <code class=no-backref title=event-input-change><a href=#event-input-change>change</a></code> events do not apply.</p>

  </div>

  <p class=note>Many aspects of this state's behavior are similar to
  the behavior of the <code><a href=#the-img-element>img</a></code> element. Readers are encouraged
  to read that section, where many of the same requirements are
  described in more detail.</p>



  <h6 id=reset-button-state><span class=secno>4.10.4.1.20 </span><dfn title=attr-input-type-reset>Reset Button</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#reset-button-state title=attr-input-type-reset>Reset Button</a> state, the rules
  in this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a button that, when
  activated, resets the form. If the element has a <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, the button's label
  must be the value of that attribute; otherwise, it must be an
  implementation-defined string that means "Reset" or some such. The
  element is a <a href=#concept-button title=concept-button>button</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to activate the element.</p>

  <p>The element's <a href=#activation-behavior>activation behavior</a>, if the element
  has a <a href=#form-owner>form owner</a>, is to <a href=#concept-form-reset title=concept-form-reset>reset</a> the <a href=#form-owner>form owner</a>;
  otherwise, it is to do nothing.</p>

  <p><strong>Constraint validation:</strong> The element is
  <a href=#barred-from-constraint-validation>barred from constraint validation</a>.</p>

  <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute
  applies to this element and is in mode <a href=#dom-input-value-default title=dom-input-value-default>default</a>.</p>

  <div class=bookkeeping>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-required><a href=#attr-input-required>required</a></code>
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code class=no-backref title=event-input-input><a href=#event-input-input>input</a></code> and <code class=no-backref title=event-input-change><a href=#event-input-change>change</a></code> events do not apply.</p>

  </div>


  <h6 id=button-state><span class=secno>4.10.4.1.21 </span><dfn title=attr-input-type-button>Button</dfn> state</h6>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#button-state title=attr-input-type-button>Button</a> state, the rules in
  this section apply.</p>

  <p>The <code><a href=#the-input-element>input</a></code> element <a href=#represents>represents</a> a button with no
  default behavior. If the element has a <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, the button's label
  must be the value of that attribute; otherwise, it must be the empty
  string. The element is a <a href=#concept-button title=concept-button>button</a>.</p>

  <p>If the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>,
  the user agent should allow the user to activate the element. The
  element's <a href=#activation-behavior>activation behavior</a> is to do nothing.</p>

  <p><strong>Constraint validation:</strong> The element is
  <a href=#barred-from-constraint-validation>barred from constraint validation</a>.</p>

  <p>The <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute
  applies to this element and is in mode <a href=#dom-input-value-default title=dom-input-value-default>default</a>.</p>

  <div class=bookkeeping>

   <p>The following content attributes must not be specified and do not
   apply to the element:
   <code class=no-backref title=attr-input-accept><a href=#attr-input-accept>accept</a></code>,
   <code class=no-backref title=attr-fs-action><a href=#attr-fs-action>action</a></code>,
   <code class=no-backref title=attr-input-alt><a href=#attr-input-alt>alt</a></code>,
   <code class=no-backref title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code>,
   <code class=no-backref title=attr-input-checked><a href=#attr-input-checked>checked</a></code>,
   <code class=no-backref title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>,
   <code class=no-backref title=attr-dim-height><a href=#attr-dim-height>height</a></code>,
   <code class=no-backref title=attr-input-list><a href=#attr-input-list>list</a></code>,
   <code class=no-backref title=attr-input-max><a href=#attr-input-max>max</a></code>,
   <code class=no-backref title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code class=no-backref title=attr-fs-method><a href=#attr-fs-method>method</a></code>,
   <code class=no-backref title=attr-input-min><a href=#attr-input-min>min</a></code>,
   <code class=no-backref title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code>,
   <code class=no-backref title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>,
   <code class=no-backref title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>,
   <code class=no-backref title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>,
   <code class=no-backref title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code>,
   <code class=no-backref title=attr-input-required><a href=#attr-input-required>required</a></code>
   <code class=no-backref title=attr-input-size><a href=#attr-input-size>size</a></code>,
   <code class=no-backref title=attr-input-src><a href=#attr-input-src>src</a></code>,
   <code class=no-backref title=attr-input-step><a href=#attr-input-step>step</a></code>,
   <code class=no-backref title=attr-fs-target><a href=#attr-fs-target>target</a></code>, and
   <code class=no-backref title=attr-dim-width><a href=#attr-dim-width>width</a></code>.</p>

   <p>The following DOM attributes and methods do not apply to the element:
   <code class=no-backref title=dom-input-checked><a href=#dom-input-checked>checked</a></code>,
   <code class=no-backref title=dom-input-list><a href=#dom-input-list>list</a></code>,
   <code class=no-backref title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code>,
   <code class=no-backref title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> and
   <code class=no-backref title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> DOM attributes;
   <code class=no-backref title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code class=no-backref title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods.</p>

   <p>The <code class=no-backref title=event-input-input><a href=#event-input-input>input</a></code> and <code class=no-backref title=event-input-change><a href=#event-input-change>change</a></code> events do not apply.</p>

  </div>




  <h5 id=common-input-element-attributes><span class=secno>4.10.4.2 </span>Common <code><a href=#the-input-element>input</a></code> element attributes</h5>

  <p>These attributes only apply to an <code><a href=#the-input-element>input</a></code> element if
  its <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in a
  state whose definition declares that the attribute applies. When an
  attribute doesn't apply to an <code><a href=#the-input-element>input</a></code> element, user
  agents must <a href=#ignore>ignore</a> the attribute.</p>


  <h6 id=the-autocomplete-attribute><span class=secno>4.10.4.2.1 </span>The <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code> attribute</h6>

  <!-- IE also applies it to <form> elements, but only 0.09% of pages
  use it there, so we don't support that. (It doesn't apply it to
  <textarea>, so we don't support it there either.) -->
 
  <p>The <dfn id=attr-input-autocomplete title=attr-input-autocomplete><code>autocomplete</code></dfn>
  attribute is an <a href=#enumerated-attribute>enumerated attribute</a>. The attribute has
  two states. The <code title=attr-input-autocomplete-on>on</code>
  keyword maps to the <dfn id=attr-input-autocomplete-on-state title=attr-input-autocomplete-on-state>on</dfn> state, and the
  <code title=attr-input-autocomplete-off>off</code> keyword maps to
  the <dfn id=attr-input-autocomplete-off-state title=attr-input-autocomplete-off-state>off</dfn>
  state. The attribute may also be omitted. The <i>missing value
  default</i> is the <a href=#attr-input-autocomplete-on-state title=attr-input-autocomplete-on-state>on</a> state.</p>

  <p>The <a href=#attr-input-autocomplete-off-state title=attr-input-autocomplete-off-state>off</a>
  state indicates that the control's input data is either particularly
  sensitive (for example the activation code for a nuclear weapon) or
  is a value that will never be reused (for example a one-time-key for
  a bank login) and the user will therefore have to explicitly enter
  the data each time, instead of being able to rely on the UA to
  prefill the value for him.</p>

  <p>Conversely, the <a href=#attr-input-autocomplete-on-state title=attr-input-autocomplete-on-state>on</a> state indicates
  that the value is not particularly sensitive and the user can expect
  to be able to rely on his user agent to remember values he has
  entered for that control.</p>

  <p>When an <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code> attribute is in
  the <a href=#attr-input-autocomplete-on-state title=attr-input-autocomplete-on-state>on</a> state,
  the user agent may store the value entered by the user so that if
  the user returns to the page, the UA can prefill the form. When an
  <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-autocomplete><a href=#attr-input-autocomplete>autocomplete</a></code> attribute is in
  the <a href=#attr-input-autocomplete-off-state title=attr-input-autocomplete-off-state>off</a>
  state, the user agent should not remember the control's <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>The autocompletion mechanism must be implemented by the user
  agent acting as if the user had modified the element's <a href=#concept-fe-value title=concept-fe-value>value</a>, and must be done at a time
  where the element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>
  (e.g. just after the element has been inserted into the document, or
  when the user agent <a href=#stop-parsing title="stop parsing">stops
  parsing</a>).</p>

  <div class=example>

   <p>Banks frequently do not want UAs to prefill login
   information:</p>

   <pre>&lt;p&gt;Account: &lt;input type="text" name="ac" autocomplete="off"&gt;&lt;/p&gt;
&lt;p&gt;PIN: &lt;input type="text" name="pin" autocomplete="off"&gt;&lt;/p&gt;</pre>

  </div>

  <p>A user agent may allow the user to disable support for this
  attribute's <a href=#attr-input-autocomplete-off-state title=attr-input-autocomplete-off-state>off</a> state (causing
  the attribute to always be in the <a href=#attr-input-autocomplete-on-state title=attr-input-autocomplete-on-state>on</a> state and always
  allowing values to be remembered and prefilled). Support for the
  <a href=#attr-input-autocomplete-off-state title=attr-input-autocomplete-off-state>off</a> state
  should be enabled by default, and the ability to disable support
  should not be trivially accessible, as there are significant
  security implications for the user if support for this attribute is
  disabled.</p>



  <h6 id=the-list-attribute><span class=secno>4.10.4.2.2 </span>The <code title=attr-input-list><a href=#attr-input-list>list</a></code> attribute</h6>

  <p>The <dfn id=attr-input-list title=attr-input-list><code>list</code></dfn>
  attribute is used to identify an element that lists predefined
  options suggested to the user.</p>

  <p>If present, its value must be the ID of a <code><a href=#the-datalist-element>datalist</a></code>
  element in the same document.</p>

  <p>The <dfn id=concept-input-list title=concept-input-list>suggestions source
  element</dfn> is the first element in the document in <a href=#tree-order>tree
  order</a> to have an ID equal to the value of the <code title=attr-input-list><a href=#attr-input-list>list</a></code> attribute, if that element is a
  <code><a href=#the-datalist-element>datalist</a></code> element. If there is no <code title=attr-input-list><a href=#attr-input-list>list</a></code> attribute, or if there is no
  element with that ID, or if the first element with that ID is not a
  <code><a href=#the-datalist-element>datalist</a></code> element, then there is no <a href=#concept-input-list title=concept-input-list>suggestions source element</a>.</p>

  <p>If there is a <a href=#concept-input-list title=concept-input-list>suggestions source
  element</a>, then each <code><a href=#the-option-element>option</a></code> element that is a
  descendant of the <a href=#concept-input-list title=concept-input-list>suggestions
  source element</a>, that is not <a href=#concept-option-disabled title=concept-option-disabled>disabled</a>, and whose <a href=#concept-option-value title=concept-option-value>value</a> is a string that isn't the
  empty string and that the user would be allowed to enter as the
  <code><a href=#the-input-element>input</a></code> element's <a href=#concept-fe-value title=concept-fe-value>value</a>, represents a suggestion. Each
  suggestion has a <a href=#concept-option-value title=concept-option-value>value</a> and
  a <a href=#concept-option-label title=concept-option-label>label</a>.</p>

  <p>When the user agent is allowing the user to edit the
  <code><a href=#the-input-element>input</a></code> element's <a href=#concept-fe-value title=concept-fe-value>value</a>, the user agent should offer
  the suggestions to the user in a manner suitable for the type of
  control used. The user agent may use the suggestion's <a href=#concept-option-label title=concept-option-label>label</a> to identify the suggestion
  if appropriate. If the user selects a suggestion, then the
  <code><a href=#the-input-element>input</a></code> element's <a href=#concept-fe-value title=concept-fe-value>value</a> must be set to the selected
  suggestion's <a href=#concept-option-value title=concept-option-value>value</a>, as if
  the user had written that value himself.</p>

  <p>User agents should filter the suggestions to hide suggestions
  that would cause the element to not <a href=#concept-fv-valid title=concept-fv-valid>satisfy its constraints</a>.</p>

  <hr><p>If the <code title=attr-input-list><a href=#attr-input-list>list</a></code> attribute does
  not apply, there is no <a href=#concept-input-list title=concept-input-list>suggestions
  source element</a>.</p>


  <h6 id=the-readonly-attribute><span class=secno>4.10.4.2.3 </span>The <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code> attribute</h6>

  <p>The <dfn id=attr-input-readonly title=attr-input-readonly><code>readonly</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. When specified, the
  element is <i title=concept-input-immutable><a href=#concept-input-immutable>immutable</a></i>.</p>

  <p><strong>Constraint validation:</strong> If the <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code> attribute is specified
  on an <code><a href=#the-input-element>input</a></code> element, the element is <a href=#barred-from-constraint-validation>barred from
  constraint validation</a>.</p>



  <h6 id=the-size-attribute><span class=secno>4.10.4.2.4 </span>The <code title=attr-input-size><a href=#attr-input-size>size</a></code> attribute</h6>

  <p>The <dfn id=attr-input-size title=attr-input-size><code>size</code></dfn>
  attribute gives the number of characters that, in a visual
  rendering, the user agent is to allow the user to see while editing
  the element's <a href=#concept-fe-value title=concept-fe-value>value</a>.</p>

  <p>The <code title=attr-input-size><a href=#attr-input-size>size</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-non-negative-integer>valid non-negative
  integer</a> greater than zero.</p>

  <p>If the attribute is present, then its value must be parsed using
  the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative integers</a>, and if the
  result is a number greater than zero, then the user agent should
  ensure that at least that many characters are visible.</p>

  <p class=XXX>The rendering section will define this in more
  detail.</p>

  <p>The <code title=dom-input-size><a href=#dom-input-size>size</a></code> DOM attribute
  <a href=#limited-to-only-positive-non-zero-numbers>limited to only positive non-zero numbers</a>.</p>



  <h6 id=the-required-attribute><span class=secno>4.10.4.2.5 </span>The <code title=attr-input-required><a href=#attr-input-required>required</a></code> attribute</h6>

  <p>The <dfn id=attr-input-required title=attr-input-required><code>required</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. When specified, the
  element is <dfn id=concept-input-required title=concept-input-required><i>required</i></dfn>.</p>

  <p><strong>Constraint validation:</strong> If the element is <i title=concept-input-required><a href=#concept-input-required>required</a></i>, and its <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute applies and is in
  the mode <a href=#dom-input-value-value title=dom-input-value-value>value</a>, and the
  element is <i title=concept-input-mutable><a href=#concept-input-mutable>mutable</a></i>, and the
  element's <a href=#concept-fe-value title=concept-fe-value>value</a> is the empty
  string, then the element is <a href=#suffering-from-being-missing>suffering from being
  missing</a>.</p>



  <h6 id=the-multiple-attribute><span class=secno>4.10.4.2.6 </span>The <code title=attr-input-multiple><a href=#attr-input-multiple>multiple</a></code> attribute</h6>

  <p>The <dfn id=attr-input-multiple title=attr-input-multiple><code>multiple</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a> that indicates whether
  the user is to be allowed to specify more than one value.</p>



  <h6 id=the-maxlength-attribute><span class=secno>4.10.4.2.7 </span>The <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code> attribute</h6>

  <p>The <dfn id=attr-input-maxlength title=attr-input-maxlength><code>maxlength</code></dfn> attribute,
  when it applies, is a <a href=#attr-fe-maxlength title=attr-fe-maxlength>form control
  <code title="">maxlength</code> attribute</a> controlled by the
  <code><a href=#the-input-element>input</a></code> element's <a href=#concept-input-value-dirty-flag title=concept-input-value-dirty-flag>dirty value flag</a>.</p>

  <p>If the <code><a href=#the-input-element>input</a></code> element has a <a href=#maximum-allowed-value-length>maximum allowed
  value length</a>, then the <a href=#codepoint-length>codepoint length</a> of the
  value of the element's <code title=attr-input-value><a href=#attr-input-value>value</a></code>
  attribute must be equal to or less than the element's <a href=#maximum-allowed-value-length>maximum
  allowed value length</a>.</p>



  <h6 id=the-pattern-attribute><span class=secno>4.10.4.2.8 </span>The <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code> attribute</h6>

  <p>The <dfn id=attr-input-pattern title=attr-input-pattern><code>pattern</code></dfn>
  attribute specifies a regular expression against which the control's
  <a href=#concept-fe-value title=concept-fe-value>value</a> is to be checked.</p>

  <p>If specified, the attribute's value must match the <i title="">Pattern</i> production of ECMA 262's grammar. <a href=#refsECMA262>[ECMA262]</a></p>

  <p><strong>Constraint validation:</strong> If the element's <a href=#concept-fe-value title=concept-fe-value>value</a> is not the empty string, and
  the element's <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>
  attribute is specified and the attribute's value, when compiled as
  an ECMA 262 regular expression with the <code title="">global</code>, <code title="">ignoreCase</code>, and <code title="">multiline</code> flags <em>disabled</em> (see ECMA 262,
  sections 15.10.7.2 through 15.10.7.4), compiles successfully but the
  resulting regular expression does not match the entirety of the
  element's <a href=#concept-fe-value title=concept-fe-value>value</a>, then the
  element is <a href=#suffering-from-a-pattern-mismatch>suffering from a pattern mismatch</a>. <a href=#refsECMA262>[ECMA262]</a></p>

  <p class=note>This implies that the regular expression language
  used for this attribute is the same as that defined in ECMA 262,
  except that the <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code>
  attribute must match the entire value, not just any subset (somewhat
  as if it implied a <code title="">^(?:</code> at the start of the
  pattern and a <code title="">)$</code> at the end).</p>

  <p>When an <code><a href=#the-input-element>input</a></code> element has a <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code> attribute specified,
  authors should include a <code title=attr-title><a href=#the-title-attribute>title</a></code>
  attribute to give a description of the pattern. User agents may use
  the contents of this attribute, if it is present, when informing the
  user that the pattern is not matched, or at any other suitable time,
  such as in a tooltip or read out by assistive technology when the
  control gains focus.</p>

  <div class=example>
   <p>For example, the following snippet:</p>
   <pre>
&lt;label&gt; Part number:
 &lt;input pattern="[0-9][A-Z]{3}" name="part"
        title="A part number is a digit followed by three uppercase letters."/&gt;
&lt;/label&gt;
</pre>
   <p>...could cause the UA to display an alert such as:</p>
   <pre><samp> part number is a digit followed by three uppercase letters.
You cannot complete this form until the field is correct.</samp></pre>
  </div>

  <p>When a control has a <code>pattern</code> attribute, the
  <code><a href=#the-title-element>title</a></code> attribute, if used, must describe the pattern.
  Additional information could also be included, so long as it assists
  the user in filling in the control. Otherwise, assistive technology
  would be impaired.</p>

  <p class=example>For instance, if the title attribute contained
  the caption of the control, assistive technology could end up saying
  something like <samp>The text you have entered does not match the
  required pattern. Birthday</samp>, which is not useful.</p>

  <p>UAs may still show the <code><a href=#the-title-element>title</a></code> in non-error situations
  (for example, as a tooltip when hovering over the control), so
  authors should be careful not to word <code><a href=#the-title-element>title</a></code>s as if an
  error has necessarily occurred.</p>



  <h6 id=the-min-and-max-attributes><span class=secno>4.10.4.2.9 </span>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> and <code title=attr-input-max><a href=#attr-input-max>max</a></code> attributes</h6>

  <p>The <dfn id=attr-input-min title=attr-input-min><code>min</code></dfn> and <dfn id=attr-input-max title=attr-input-max><code>max</code></dfn> attributes indicate
  the allowed range of values for the element.</p>

  <p>Their syntax is defined by the section that defines the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state.</p>

  <p>If the element has a <code title=attr-input-min><a href=#attr-input-min>min</a></code>
  attribute, and the result of applying the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a> to the value of the <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute is a a number, then that
  number is the element's <dfn id=concept-input-min title=concept-input-min>minimum</dfn>; otherwise, if the the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state
  defines a <dfn id=concept-input-min-default title=concept-input-min-default>default
  minimum</dfn>, then that is the <a href=#concept-input-min title=concept-input-min>minimum</a>; otherwise, the element has
  no <a href=#concept-input-min title=concept-input-min>minimum</a>.)</p>

  <p><strong>Constraint validation:</strong> When the element has a
  <a href=#attr-input-min title=attr-input-min>minimum</a>, and the result of
  applying the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a> to the string given by the element's <a href=#concept-fe-value title=concept-fe-value>value</a> is a number, and the number
  obtained from that algorithm is less than the <a href=#attr-input-min title=attr-input-min>minimum</a>, the element is
  <a href=#suffering-from-an-underflow>suffering from an underflow</a>.</p>

  <p>The <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute also
  defines the <a href=#concept-input-min-zero title=concept-input-min-zero>step
  base</a>.</p>

  <p>If the element has a <code title=attr-input-max><a href=#attr-input-max>max</a></code>
  attribute, and the result of applying the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a> to the value of the <code title=attr-input-max><a href=#attr-input-max>max</a></code> attribute is a a number, then that
  number is the element's <dfn id=concept-input-max title=concept-input-max>maximum</dfn>; otherwise, if the the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state
  defines a <dfn id=concept-input-max-default title=concept-input-max-default>default
  maximum</dfn>, then that is the <a href=#concept-input-max title=concept-input-max>maximum</a>; otherwise, the element has
  no <a href=#concept-input-max title=concept-input-max>maximum</a>.)</p>

  <p><strong>Constraint validation:</strong> When the element has a
  <a href=#attr-input-max title=attr-input-max>maximum</a>, and the result of
  applying the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a> to the string given by the element's <a href=#concept-fe-value title=concept-fe-value>value</a> is a number, and the number
  obtained from that algorithm is more than the <a href=#attr-input-max title=attr-input-max>maximum</a>, the element is
  <a href=#suffering-from-an-overflow>suffering from an overflow</a>.</p>

  <p>The <code title=attr-input-max><a href=#attr-input-max>max</a></code> attribute's value
  (the <a href=#concept-input-max title=concept-input-max>maximum</a>) must not be
  less than the <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute's
  value (its <a href=#concept-input-min title=concept-input-min>minimum</a>).</p>

  <p class=note>If an element has a <a href=#attr-input-max title=attr-input-max>maximum</a> that is less than its <a href=#attr-input-min title=attr-input-min>minimum</a>, then so long as the element
  has a <a href=#concept-fe-value title=concept-fe-value>value</a>, it will either be
  <a href=#suffering-from-an-underflow>suffering from an underflow</a> or <a href=#suffering-from-an-overflow>suffering from an
  overflow</a>.</p>


  <h6 id=the-step-attribute><span class=secno>4.10.4.2.10 </span>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute</h6>

  <p>The <dfn id=attr-input-step title=attr-input-step><code>step</code></dfn>
  attribute indicates the granularity that is expected (and required)
  of the <a href=#concept-fe-value title=concept-fe-value>value</a>, by limiting
  the allowed values. The section that defines the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state also
  defines the <dfn id=concept-input-step-default title=concept-input-step-default>default
  step</dfn> and the <dfn id=concept-input-step-scale title=concept-input-step-scale>step
  scale factor</dfn>, which are used in processing the attribute as
  described below.</p>

  <p>The <code title=attr-input-step><a href=#attr-input-step>step</a></code> attribute, if
  specified, must either have a value that is a <a href=#valid-floating-point-number>valid floating
  point number</a> that <a href=#rules-for-parsing-floating-point-number-values title="rules for parsing floating
  point number values">parses</a> to a number that is greater than
  zero, or must have a value that is an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> match for the string "<code title="">any</code>".</p>

  <p>The attribute provides the <dfn id=concept-input-step title=concept-input-step>allowed value step</dfn> for the element,
  as follows:</p>

  <ol><li>If the attribute is absent, then the <a href=#concept-input-step title=concept-input-step>allowed value step</a> is the <a href=#concept-input-step-default title=concept-input-step-default>default step</a> multiplied
   by the <a href=#concept-input-step-scale title=concept-input-step-scale>step scale
   factor</a>.</li>

   <li>Otherwise, if the attribute's value is an <a href=#ascii-case-insensitive>ASCII
   case-insensitive</a> match for the string "<code title="">any</code>", then there is no <a href=#concept-input-step title=concept-input-step>allowed value step</a>.</li>

   <li>Otherwise, if the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing floating point number
   values</a>, when they are applied to the attribute's value,
   return an error, zero, or a number less than zero, then the <a href=#concept-input-step title=concept-input-step>allowed value step</a> is the <a href=#concept-input-step-default title=concept-input-step-default>default step</a> multiplied
   by the <a href=#concept-input-step-scale title=concept-input-step-scale>step scale
   factor</a>.</li>

   <li>Otherwise, the <a href=#concept-input-step title=concept-input-step>allowed value
   step</a> is the number returned by the <a href=#rules-for-parsing-floating-point-number-values>rules for parsing
   floating point number values</a> when they are applied to the
   attribute's value, multiplied by the <a href=#concept-input-step-scale title=concept-input-step-scale>step scale factor</a>.</li>

  </ol><p>The <dfn id=concept-input-min-zero title=concept-input-min-zero>step base</dfn> is the
  result of applying the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a> to the value of the <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute, unless the element does
  not have a <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute
  specified or the result of applying that algorithm is an error, in
  which case the <a href=#concept-input-min-zero title=concept-input-min-zero>step base</a>
  is zero.</p>

  <p><strong>Constraint validation:</strong> When the element has an
  <a href=#concept-input-step title=concept-input-step>allowed value step</a>, and the
  result of applying the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a> to the string given by the element's <a href=#concept-fe-value title=concept-fe-value>value</a> is a number, and that
  number subtracted from the <a href=#concept-input-min-zero title=concept-input-min-zero>step
  base</a> is not an integral multiple of the <a href=#concept-input-step title=concept-input-step>allowed value step</a>, the element is
  <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>.</p>



  <h6 id=the-placeholder-attribute><span class=secno>4.10.4.2.11 </span>The <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code> attribute</h6>

  <p>The <dfn id=attr-input-placeholder title=attr-input-placeholder><code>placeholder</code></dfn>
  attribute represents a <em>short</em> hint (a word or short phrase)
  intended to aid the user with data entry. A hint could be a sample
  value or a brief description of the expected format. The attribute,
  if specified, must have a value that contains no U+000A LINE FEED
  (LF) or U+000D CARRIAGE RETURN (CR) characters.</p>

  <p class=note>For a longer hint or other advisory text, the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute is more appropriate.</p>

  <p>The <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>
  attribute should not be used as an alternative to a
  <code><a href=#the-label-element>label</a></code>.</p>

  <p>User agents should present this hint to the user, after having
  <a href=#strip-line-breaks title="strip line breaks">stripped line breaks</a> from it,
  when the element's <a href=#concept-fe-value title=concept-fe-value>value</a> is
  the empty string and the control is not focused (e.g. by displaying
  it inside a blank unfocused control).</p>

  <div class=example>

   <p>Here is an example of a mail configuration user interface that
   uses the <code title=attr-input-placeholder><a href=#attr-input-placeholder>placeholder</a></code>
   attribute:</p>

   <pre>&lt;fieldset&gt;
 &lt;legend&gt;Mail Account&lt;/legend&gt;
 &lt;p&gt;&lt;label&gt;Name: &lt;input type="text" name="fullname" placeholder="John Ratzenberger"&gt;&lt;/label&gt;&lt;/p&gt;
 &lt;p&gt;&lt;label&gt;Address: &lt;input type="email" name="address" placeholder="john@example.net"&gt;&lt;/label&gt;&lt;/p&gt;
 &lt;p&gt;&lt;label&gt;Password: &lt;input type="password" name="password"&gt;&lt;/label&gt;&lt;/p&gt;
 &lt;p&gt;&lt;label&gt;Description: &lt;input type="text" name="desc" placeholder="My Email Account"&gt;&lt;/label&gt;&lt;/p&gt;
&lt;/fieldset&gt;</pre>

  </div>



  <h5 id=common-input-element-apis><span class=secno>4.10.4.3 </span>Common <code><a href=#the-input-element>input</a></code> element APIs</h5>

  <p>The <dfn id=dom-input-value title=dom-input-value><code>value</code></dfn> DOM
  attribute allows scripts to manipulate the <a href=#concept-fe-value title=concept-fe-value>value</a> of an <code><a href=#the-input-element>input</a></code>
  element. If the attribute applies, then it is in one of the
  following modes, which define its behavior:</p>

  <dl><dt><dfn id=dom-input-value-value title=dom-input-value-value>value</dfn>

   <dd>On getting, it must return the current <a href=#concept-fe-value title=concept-fe-value>value</a> of the element. On setting,
   it must set the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to the new value, set the
   element's <a href=#concept-input-value-dirty-flag title=concept-input-value-dirty-flag>dirty value
   flag</a> to true, and then invoke the <a href=#value-sanitization-algorithm>value sanitization
   algorithm</a>, if the element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state
   defines one.</dd>

   <dt><dfn id=dom-input-value-default title=dom-input-value-default>default</dfn>

   <dd>On getting, if the element has a <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, it must return
   that attribute's value; otherwise, it must return the empty
   string. On setting, it must set the element's <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute to the new
   value.</dd>

   <dt><dfn id=dom-input-value-default-on title=dom-input-value-default-on>default/on</dfn>

   <dd>On getting, if the element has a <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, it must return
   that attribute's value; otherwise, it must return the string "<code title="">on</code>". On setting, it must set the element's <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute to the new
   value.</dd>

  </dl><p>If the attribute does not apply, then on getting and setting it
  must throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception.</p>

  <hr><p>The <dfn id=dom-input-checked title=dom-input-checked><code>checked</code></dfn> DOM
  attribute allows scripts to manipulate the <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> of an
  <code><a href=#the-input-element>input</a></code> element. On getting, it must return the current
  <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> of the element;
  and on setting, it must set the element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> to the new value and
  set the element's <a href=#concept-input-checked-dirty-flag title=concept-input-checked-dirty-flag>dirty checkedness
  flag</a> to true.</p>

  <hr><p>The <dfn id=dom-input-valueasdate title=dom-input-valueAsDate><code>valueAsDate</code></dfn> DOM
  attribute represents the <a href=#concept-fe-value title=concept-fe-value>value</a> of the element, interpreted
  as a date.</p>

  <p>On getting, if the <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> attribute does not
  apply, as defined for the <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state, then
  return null. Otherwise, run the <a href=#concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</a> defined for that state;
  if the algorithm returned a <code>Date</code> object, then return
  it, otherwise, return null.</p>

  <p>On setting, if the <code title=dom-input-valueAsDate><a href=#dom-input-valueasdate>valueAsDate</a></code> attribute does not
  apply, as defined for the <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state, then
  throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception; otherwise, if
  the new value is null, then set the <a href=#concept-fe-value title=concept-fe-value>value</a> of the element to the empty
  string; otherwise, run the <a href=#concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</a>, as defined for that
  state, on the new value, and set the <a href=#concept-fe-value title=concept-fe-value>value</a> of the element to resulting
  string.</p>

  <hr><p>The <dfn id=dom-input-valueasnumber title=dom-input-valueAsNumber><code>valueAsNumber</code></dfn> DOM
  attribute represents the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element, interpreted as a number.</p>

  <p>On getting, if the <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> attribute does
  not apply, as defined for the <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state, then
  return a Not-a-Number (NaN) value. Otherwise, if the <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAs<em>Date</em></a></code>
  attribute applies, run the <a href=#concept-input-value-string-date title=concept-input-value-string-date>algorithm to convert a
  string to a <code>Date</code> object</a> defined for that state;
  if the algorithm returned a <code>Date</code> object, then return
  the <i>time value</i> of the object (the number of milliseconds from
  midnight UTC the morning of 1970-01-01 to the time represented by
  the <code>Date</code> object), otherwise, return a Not-a-Number
  (NaN) value. Otherwise, run the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
  string to a number</a> defined for that state; if the algorithm
  returned a number, then return it, otherwise, return a Not-a-Number
  (NaN) value.</p>

  <p>On setting, if the <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAsNumber</a></code> attribute does
  not apply, as defined for the <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state, then
  throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception.  Otherwise, if
  the <code title=dom-input-valueAsNumber><a href=#dom-input-valueasnumber>valueAs<em>Date</em></a></code>
  attribute applies, run the <a href=#concept-input-value-date-string title=concept-input-value-date-string>algorithm to convert a
  <code>Date</code> object to a string</a> defined for that state,
  passing it a <code>Date</code> object whose <i>time value</i> is the
  new value, and set the <a href=#concept-fe-value title=concept-fe-value>value</a>
  of the element to resulting string. Otherwise, run the <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
  number to a string</a>, as defined for that state, on the new
  value, and set the <a href=#concept-fe-value title=concept-fe-value>value</a> of
  the element to resulting string.</p>

  <hr><p>The <dfn id=dom-input-stepdown title=dom-input-stepDown><code>stepDown()</code></dfn>
  and <dfn id=dom-input-stepup title=dom-input-stepUp><code>stepUp()</code></dfn>
  methods, when invoked, must run the following algorithm:</p>

  <ol><li><p>If the <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> and
   <code title=dom-input-stepUp><a href=#dom-input-stepup>stepUp()</a></code> methods do not
   apply, as defined for the <code><a href=#the-input-element>input</a></code> element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's current state, then
   throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception, and abort these
   steps.</li>

   <li><p>If the element has no <a href=#concept-input-step title=concept-input-step>allowed value step</a>, then throw an
   <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception, and abort these
   steps.</li>

   <li><p>If applying the <a href=#concept-input-value-string-number title=concept-input-value-string-number>algorithm to convert a
   string to a number</a> to the string given by the element's
   <a href=#concept-fe-value title=concept-fe-value>value</a> results in an error,
   then throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception, and abort
   these steps; otherwise, let <var title="">value</var> be the result
   of that algorithm.</li>

   <li><p>If the method invoked was the <code title=dom-input-stepDown><a href=#dom-input-stepdown>stepDown()</a></code> method, negate <var title="">value</var>.</li>

   <li><p>Let <var title="">value</var> be the result of adding the
   <a href=#concept-input-step title=concept-input-step>allowed value step</a> to <var title="">value</var>.</li>

   <li><p>Let <var title="">value as string</var> be the result of
   running the <a href=#concept-input-value-number-string title=concept-input-value-number-string>algorithm to convert a
   number to a string</a>, as defined for the <code><a href=#the-input-element>input</a></code>
   element's <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute's
   current state, on <var title="">value</var>.</li>

   <li><p>If the element has a <a href=#concept-input-min title=concept-input-min>minimum</a>, and the <var title="">value</var> is less than that <a href=#concept-input-min title=concept-input-min>minimum</a>, then throw a
   <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception.</li>

   <li><p>If the element has a <a href=#concept-input-max title=concept-input-max>maximum</a>, and the <var title="">value</var> is greater than that <a href=#concept-input-max title=concept-input-max>maximum</a>, then throw a
   <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception.</li>

   <li><p>Set the <a href=#concept-fe-value title=concept-fe-value>value</a> of the
   element to <var title="">value as string</var>.</li>

  </ol><hr><p>The <dfn id=dom-input-list title=dom-input-list><code>list</code></dfn> DOM
  attribute must return the current <a href=#concept-input-list title=concept-input-list>suggestions source element</a>, if
  any, or null otherwise.</p>

  <p>The <dfn id=dom-input-selectedoption title=dom-input-selectedOption><code>selectedOption</code></dfn>
  DOM attribute must return the first <code><a href=#the-option-element>option</a></code> element, in
  <a href=#tree-order>tree order</a>, to be a child of the <a href=#concept-input-list title=concept-input-list>suggestions source element</a> and
  whose <a href=#concept-option-value title=concept-option-value>value</a> matches the
  <code><a href=#the-input-element>input</a></code> element's <a href=#concept-fe-value title=concept-fe-value>value</a>, if any. If there is no <a href=#concept-input-list title=concept-input-list>suggestions source element</a>, or if
  it contains no matching <code><a href=#the-option-element>option</a></code> element, then the <code title=dom-input-selectedOption><a href=#dom-input-selectedoption>selectedOption</a></code> attribute
  must return null.</p>


  <h5 id=common-event-behaviors><span class=secno>4.10.4.4 </span>Common event behaviors</h5>

  <p>When the <dfn id=event-input-input title=event-input-input><code>input</code></dfn>
  event applies, any time the user causes the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to change, the user agent must
  <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called
  <code title=event-input>input</code> at the <code><a href=#the-input-element>input</a></code>
  element, then <a href=#broadcast-forminput-events>broadcast <code title=event-forminput>forminput</code> events</a> at the
  <code><a href=#the-input-element>input</a></code> element's <a href=#form-owner>form owner</a>. User agents
  may wait for a suitable break in the user's interaction before
  queuing the task; for example, a user agent could wait for the user
  to have not hit a key for 100ms, so as to only fire the event when
  the user pauses, instead of continuously for each keystroke.</p>
  <!-- same text is present in the <textarea> section -->

  <p class=example>Examples of a user changing the element's <a href=#concept-fe-value title=concept-fe-value>value</a> would include the user typing
  into a text field, pasting a new value into the field, or undoing an
  edit in that field. Some user interactions do not cause changes to
  the value, e.g. hitting the "delete" key in an empty text field, or
  replacing some text in the field with text from the clipboard that
  happens to be exactly the same text.</p>
  <!-- XXX consider putting the above example in a section that
  applies to "input" events for the <textarea> element too -->

  <p>When the <dfn id=event-input-change title=event-input-change><code>change</code></dfn> event applies,
  if the element does not have an <a href=#activation-behavior>activation behavior</a>
  defined but uses a user interface that involves an explicit commit
  action, then any time the user commits a change to the element's
  <a href=#concept-fe-value title=concept-fe-value>value</a> or list of <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>selected files</a>, the
  user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-change>change</code> at the
  <code><a href=#the-input-element>input</a></code> element, then <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a> at the
  <code><a href=#the-input-element>input</a></code> element's <a href=#form-owner>form owner</a>.</p>

  <p class=example>An example of a user interface with a commit
  action would be a <a href=#file-upload-state title=attr-input-type-file>File
  Upload</a> control that consists of a single button that brings
  up a file selection dialog: when the dialog is closed, if that the
  <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>file selection</a>
  changed as a result, then the user has commited a new <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>file selection</a>.</p>

  <p class=example>Another example of a user interface with a commit
  action would be a <a href=#date-state title=attr-input-type-date>Date</a>
  control that allows both text-based user input and user selection
  from a drop-down calendar: while text input might not have an
  explicit commit step, selecting a date from the drop down calendar
  and then dismissing the drop down would be a commit action.</p>

  <p>When the user agent changes the element's <a href=#concept-fe-value title=concept-fe-value>value</a> on behalf of the user (e.g. as
  part of a form prefilling feature), the user agent must follow these
  steps:</p>

  <ol><li>If the <code title=event-input-input><a href=#event-input-input>input</a></code> event
   applies, <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
   event</a> called <code title=event-input>input</code> at the
   <code><a href=#the-input-element>input</a></code> element.</li>

   <li>If the <code title=event-input-input><a href=#event-input-input>input</a></code> event
   applies, <a href=#broadcast-forminput-events>broadcast <code title=event-forminput>forminput</code> events</a> at the
   <code><a href=#the-input-element>input</a></code> element's <a href=#form-owner>form owner</a>.</li>

   <li>If the <code title=event-input-change><a href=#event-input-change>change</a></code> event
   applies, <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
   event</a> called <code title=event-change>change</code> at the
   <code><a href=#the-input-element>input</a></code> element.</li>

   <li>If the <code title=event-input-change><a href=#event-input-change>change</a></code> event
   applies, <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a> at the
   <code><a href=#the-input-element>input</a></code> element's <a href=#form-owner>form owner</a>.</li>

  </ol><p class=note>In addition, when the <code title=event-input-change><a href=#event-input-change>change</a></code> event applies, <code title=event-change>change</code> events can also be fired as part
  of the element's <a href=#activation-behavior>activation behavior</a> and as part of the
  <a href=#unfocusing-steps>unfocusing steps</a>.</p>

  <p>The <a href=#task-source>task source</a> for these <span title=concept-tasks>task</span> is the <a href=#user-interaction-task-source>user interaction task
  source</a>.</p>



  <h4 id=the-button-element><span class=secno>4.10.5 </span>The <dfn><code>button</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dd><a href=#category-listed title=category-listed>Listed</a>, <a href=#category-label title=category-label>labelable</a>, and <a href=#category-submit title=category-submit>submittable</a> <a href=#form-associated-element>form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>, but there must be no <a href=#interactive-content-0>interactive content</a> descendant.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-fs-action><a href=#attr-fs-action>action</a></code></dd>
   <dd><code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code></dd>
   <dd><code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code></dd>
   <dd><code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-fs-method><a href=#attr-fs-method>method</a></code></dd>
   <dd><code title=attr-fe-name><a href=#attr-fe-name>name</a></code></dd>
   <dd><code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code></dd>
   <dd><code title=attr-fs-target><a href=#attr-fs-target>target</a></code></dd>
   <dd><code title=attr-button-type><a href=#attr-button-type>type</a></code></dd>
   <dd><code title=attr-button-value><a href=#attr-button-value>value</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlbuttonelement>HTMLButtonElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-fs-action title=dom-fs-action>action</a>;
           attribute boolean <a href=#dom-fe-autofocus title=dom-fe-autofocus>autofocus</a>;
           attribute boolean <a href=#dom-fe-disabled title=dom-fe-disabled>disabled</a>;
           attribute DOMString <a href=#dom-fs-enctype title=dom-fs-enctype>enctype</a>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute DOMString <a href=#dom-fs-method title=dom-fs-method>method</a>;
           attribute DOMString <a href=#dom-fe-name title=dom-fe-name>name</a>;
           attribute DOMString <a href=#dom-fs-novalidate title=dom-fs-noValidate>noValidate</a>;
           attribute DOMString <a href=#dom-fs-target title=dom-fs-target>target</a>;
           attribute DOMString <a href=#dom-button-type title=dom-button-type>type</a>;
           attribute DOMString <a href=#dom-button-value title=dom-button-value>value</a>;

  readonly attribute boolean <a href=#dom-cva-willvalidate title=dom-cva-willValidate>willValidate</a>;
  readonly attribute <a href=#validitystate>ValidityState</a> <a href=#dom-cva-validity title=dom-cva-validity>validity</a>;
  readonly attribute DOMString <a href=#dom-cva-validationmessage title=dom-cva-validationMessage>validationMessage</a>;
  boolean <a href=#dom-cva-checkvalidatity title=dom-cva-checkValidatity>checkValidity</a>();
  void <a href=#dom-cva-setcustomvalidity title=dom-cva-setCustomValidity>setCustomValidity</a>(in DOMString error);

  readonly attribute <span>NodeList</span> <a href=#dom-lfe-labels title=dom-lfe-labels>labels</a>;
};</pre>
   </dd> 
  </dl><p>The <code><a href=#the-button-element>button</a></code> element <a href=#represents>represents</a> a button. If the
  element is not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>,
  then the user agent should allow the user to activate the
  button.</p>

  <p>The element is a <a href=#concept-button title=concept-button>button</a>.</p>

  <p>The <dfn id=attr-button-type title=attr-button-type><code>type</code></dfn>
  attribute controls the behavior of the button when it is activated.
  It is an <a href=#enumerated-attribute>enumerated attribute</a>. The following table
  lists the keywords and states for the attribute &mdash; the keywords
  in the left column map to the states in the cell in the second
  column on the same row as the keyword.</p>

  <table><thead><tr><th> Keyword
     <th> State
     <th> Brief description
   <tbody><tr><td><dfn id=attr-button-type-submit title=attr-button-type-submit><code>submit</code></dfn>
     <td><a href=#attr-button-type-submit-state title=attr-button-type-submit-state>Submit Button</a>
     <td>Submits the form.
    <tr><td><dfn id=attr-button-type-reset title=attr-button-type-reset><code>reset</code></dfn>
     <td><a href=#attr-button-type-reset-state title=attr-button-type-reset-state>Reset Button</a>
     <td>Resets the form.
    <tr><td><dfn id=attr-button-type-button title=attr-button-type-button><code>button</code></dfn>
     <td><a href=#attr-button-type-button-state title=attr-button-type-button-state>Button</a>
     <td>Does nothing.
  </table><p>The <i>missing value default</i> is the <a href=#attr-button-type-submit-state title=attr-button-type-submit-state>Submit Button</a>
  state.</p>

  <p>If the <code title=attr-button-type><a href=#attr-button-type>type</a></code> attribute is in
  the <a href=#attr-button-type-submit-state title=attr-button-type-submit-state>Submit Button</a>
  state, the element is specifically a <a href=#concept-submit-button title=concept-submit-button>submit button</a>.</p>

  <p>If the element is not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>, the <a href=#activation-behavior>activation
  behavior</a> of the <code><a href=#the-button-element>button</a></code> element is to run the
  steps defined in the following list for the current state of the
  element's <code title=attr-button-type><a href=#attr-button-type>type</a></code> attribute.</p>

  <dl><dt> <dfn id=attr-button-type-submit-state title=attr-button-type-submit-state>Submit Button</dfn> </dt>

   <dd><p>If the element has a <a href=#form-owner>form owner</a>, the element
   must <a href=#concept-form-submit title=concept-form-submit>submit</a> the <a href=#form-owner>form
   owner</a> from the <code><a href=#the-button-element>button</a></code> element.</dd>

   <dt> <dfn id=attr-button-type-reset-state title=attr-button-type-reset-state>Reset Button</dfn> </dt>

   <dd><p>If the element has a <a href=#form-owner>form owner</a>, the element
   must <a href=#concept-form-reset title=concept-form-reset>reset</a> the <a href=#form-owner>form
   owner</a>.</dd>

   <dt> <dfn id=attr-button-type-button-state title=attr-button-type-button-state>Button</dfn>

   <dd><p>Do nothing.</dd>

  </dl><p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-button-element>button</a></code> element with its
  <a href=#form-owner>form owner</a>. The <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
  attribute represents the element's name. The <code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code> attribute is used to make
  the control non-interactive and to prevent its value from being
  submitted. The <code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code>
  attribute controls focus. The <code title=attr-fs-action><a href=#attr-fs-action>action</a></code>, <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code>, <code title=attr-fs-method><a href=#attr-fs-method>method</a></code>, <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code>, and <code title=attr-fs-target><a href=#attr-fs-target>target</a></code> attributes are <a href=#form-submission>attributes
  for form submission</a>.</p>

  <p>The <dfn id=attr-button-value title=attr-button-value><code>value</code></dfn>
  attribute gives the element's value for the purposes of form
  submission. The <code title=attr-button-value><a href=#attr-button-value>value</a></code>
  attribute must not be present unless the <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is present. The
  element's <a href=#concept-fe-value title=concept-fe-value>value</a> is the value
  of the element's <code title=attr-button-value><a href=#attr-button-value>value</a></code>
  attribute, if there is one, or the empty string otherwise.</p>

  <p class=note>A button (and its value) is only included in the
  form submission if the button itself was used to initiate the form
  submission.</p>

  <p>The <dfn id=dom-button-value title=dom-button-value><code>value</code></dfn> and
  <dfn id=dom-button-type title=dom-button-type><code>type</code></dfn> DOM attributes
  must <a href=#reflect>reflect</a> the respective content attributes of the
  same name.</p>

  <p>The <code title=dom-cva-willValidate><a href=#dom-cva-willvalidate>willValidate</a></code>, <code title=dom-cva-validity><a href=#dom-cva-validity>validity</a></code>, and <code title=dom-cva-validationMessage><a href=#dom-cva-validationmessage>validationMessage</a></code>
  attributes, and the <code title=dom-cva-checkValidatity><a href=#dom-cva-checkvalidatity>checkValidity()</a></code> and <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
  methods, are part of the <a href=#the-constraint-validation-api>constraint validation API</a>. The
  <code title=dom-lfe-labels><a href=#dom-lfe-labels>labels</a></code> attribute provides a list
  of the element's <code><a href=#the-label-element>label</a></code>s.</p>



  <h4 id=the-select-element><span class=secno>4.10.6 </span>The <dfn><code>select</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dd><a href=#category-listed title=category-listed>Listed</a>, <a href=#category-label title=category-label>labelable</a>, <a href=#category-submit title=category-submit>submittable</a>, and <a href=#category-reset title=category-reset>resettable</a> <a href=#form-associated-element>form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-option-element>option</a></code> or <code><a href=#the-optgroup-element>optgroup</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code></dd>
   <dd><code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code></dd>
   <dd><code title=attr-fe-name><a href=#attr-fe-name>name</a></code></dd>
   <dd><code title=attr-select-size><a href=#attr-select-size>size</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>[Callable=<a href=#dom-select-nameditem title=dom-select-namedItem>namedItem</a>]
interface <dfn id=htmlselectelement>HTMLSelectElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-fe-autofocus title=dom-fe-autofocus>autofocus</a>;
           attribute boolean <a href=#dom-fe-disabled title=dom-fe-disabled>disabled</a>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute boolean <a href=#dom-select-multiple title=dom-select-multiple>multiple</a>;
           attribute DOMString <a href=#dom-fe-name title=dom-fe-name>name</a>;
           attribute boolean <a href=#dom-select-size title=dom-select-size>size</a>;

  readonly attribute DOMString <a href=#dom-select-type title=dom-select-type>type</a>;

  readonly attribute <a href=#htmloptionscollection-0>HTMLOptionsCollection</a> <a href=#dom-select-options title=dom-select-options>options</a>;
           attribute unsigned long <a href=#dom-select-length title=dom-select-length>length</a>;
  [IndexGetter] any <a href=#dom-select-item title=dom-select-item>item</a>(in DOMString name);
  [NameGetter] any <a href=#dom-select-nameditem title=dom-select-namedItem>namedItem</a>(in DOMString name);
  void <a href=#dom-select-add title=dom-select-add>add</a>(in <a href=#htmlelement>HTMLElement</a> element, in <a href=#htmlelement>HTMLElement</a> before);
  void <a href=#dom-select-add title=dom-select-add>add</a>(in <a href=#htmlelement>HTMLElement</a> element, in long before);
  void <a href=#dom-select-remove title=dom-select-remove>remove</a>(in long index);

  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-select-selectedoptions title=dom-select-selectedOptions>selectedOptions</a>;
           attribute long <a href=#dom-select-selectedindex title=dom-select-selectedIndex>selectedIndex</a>;
           attribute DOMString <a href=#dom-select-value title=dom-select-value>value</a>;

  readonly attribute boolean <a href=#dom-cva-willvalidate title=dom-cva-willValidate>willValidate</a>;
  readonly attribute <a href=#validitystate>ValidityState</a> <a href=#dom-cva-validity title=dom-cva-validity>validity</a>;
  readonly attribute DOMString <a href=#dom-cva-validationmessage title=dom-cva-validationMessage>validationMessage</a>;
  boolean <a href=#dom-cva-checkvalidatity title=dom-cva-checkValidatity>checkValidity</a>();
  void <a href=#dom-cva-setcustomvalidity title=dom-cva-setCustomValidity>setCustomValidity</a>(in DOMString error);

  readonly attribute <span>NodeList</span> <a href=#dom-lfe-labels title=dom-lfe-labels>labels</a>;
};</pre>
   </dd> 
  </dl><!-- Proposals for v2:
       * <select value=""> as an alternative to <option selected>
         http://developers.slashdot.org/comments.pl?sid=426306&cid=22142072
         <Philip`> http://www.ipiao.com.cn/ does <select size="1" name="to"><script>City_Default="PEK"</script><SCRIPT language=javascript 
                   src="/js/flightcity.js"></SCRIPT></select> which is the kind of thing that could be much simpler with <select value="PEK">
       * a way to make the <select> not have a default value at all (ack 
         or to have a "placeholer" like value that doesn't count as a value being selected but shows a prompt until a value is selected
       * once we can have no default, a way to require="" a value.
       ack Weston Ruter: http://weston.ruter.net/projects/test-cases/html-select-element/
       q.v. http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-November/017583.html
    --><p>The <code><a href=#the-select-element>select</a></code> element represents a control for
  selecting amongst a set of options.</p>

  <p>The <dfn id=attr-select-multiple title=attr-select-multiple><code>multiple</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. If the attribute is
  present, then the <code><a href=#the-select-element>select</a></code> element <a href=#represents>represents</a> a control
  for selecting zero or more options from the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>. If the
  attribute is absent, then the <code><a href=#the-select-element>select</a></code> element <a href=#represents>represents</a>
  a control for selecting a single option from the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>.</p>

  <p>The <dfn id=concept-select-option-list title=concept-select-option-list>list of options</dfn>
  for a <code><a href=#the-select-element>select</a></code> element consists of all the
  <code><a href=#the-option-element>option</a></code> element children of the <code><a href=#the-select-element>select</a></code>
  element, and all the <code><a href=#the-option-element>option</a></code> element children of all the
  <code><a href=#the-optgroup-element>optgroup</a></code> element children of the <code><a href=#the-select-element>select</a></code>
  element, in <a href=#tree-order>tree order</a>.</p>

  <p>The <dfn id=attr-select-size title=attr-select-size><code>size</code></dfn>
  attribute gives the number of options to show to the user. The <code title=attr-input-size><a href=#attr-input-size>size</a></code> attribute, if specified, must
  have a value that is a <a href=#valid-non-negative-integer>valid non-negative integer</a>
  greater than zero. If the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute is present,
  then the <code title=attr-input-size><a href=#attr-input-size>size</a></code> attribute's
  default value is 4. If the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute is absent,
  then the <code title=attr-input-size><a href=#attr-input-size>size</a></code> attribute's
  default value is 1.</p>

  <!-- XXX for the rendering section
  <p>If the <code title="attr-select-multiple">multiple</code>
  attribute is absent, and either the <code
  title="attr-input-size">size</code> attribute is also absent or
  parsing its value using the <span>rules for parsing non-negative
  integers</span> returns 1, 0, or an error, then the control should
  be rendered as a drop-down select box. Otherwise, it should be
  rendered as a list select box.</p>
  -->

  <p>If the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code>
  attribute is absent, and the element is not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>, then the user agent
  should allow the user to pick an <code><a href=#the-option-element>option</a></code> element in its
  <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> that
  is itself not <a href=#concept-option-disabled title=concept-option-disabled>disabled</a>. Upon this
  <code><a href=#the-option-element>option</a></code> element being <dfn id=concept-select-pick title=concept-select-pick>picked</dfn> (either through a click, or
  through unfocusing the element after changing its value, or through
  a <a href=#using-the-option-element-to-define-a-command title=option-command>menu command</a>, or through any
  other mechanism), and before the relevant user interaction event is
  queued (e.g. before the <span title=event-click>click</span>
  event), the user agent must set the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of the
  picked <code><a href=#the-option-element>option</a></code> element to true and then <a href=#queue-a-task>queue a
  task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-change>change</code> at the <code><a href=#the-select-element>select</a></code>
  element, using the <a href=#user-interaction-task-source>user interaction task source</a> as the
  task source, then <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a> at the
  element's <a href=#form-owner>form owner</a>.</p>

  <p>If the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code>
  attribute is absent, whenever an <code><a href=#the-option-element>option</a></code> element in the
  <code><a href=#the-select-element>select</a></code> element's <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> has its
  <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to
  true, and whenever an <code><a href=#the-option-element>option</a></code> element with its <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to true
  is added to the <code><a href=#the-select-element>select</a></code> element's <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>, the user
  agent must set the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of all the
  other <code><a href=#the-option-element>option</a></code> element in its <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> to
  false.</p>

  <p>If the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code>
  attribute is absent, whenever there are no <code><a href=#the-option-element>option</a></code>
  elements in the <code><a href=#the-select-element>select</a></code> element's <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> that have
  their <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a>
  set to true, the user agent must set the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of the first
  <code><a href=#the-option-element>option</a></code> element in the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> in
  <a href=#tree-order>tree order</a> that is not <a href=#concept-option-disabled title=concept-option-disabled>disabled</a>, if any, to
  true.</p>

  <p>If the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code>
  attribute is present, and the element is not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>, then the user agent
  should allow the user to <dfn id=concept-select-toggle title=concept-select-toggle>toggle</dfn> the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of the
  <code><a href=#the-option-element>option</a></code> elements in its <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> that are
  themselves not <a href=#concept-option-disabled title=concept-option-disabled>disabled</a>
  (either through a click, or through a <a href=#using-the-option-element-to-define-a-command title=option-command>menu command</a>, or any other
  mechanism). Upon the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of one or
  more <code><a href=#the-option-element>option</a></code> elements being changed by the user, and
  before the relevant user interaction event is queued (e.g. before a
  related <span title=event-click>click</span> event), the user
  agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-change>change</code> at the
  <code><a href=#the-select-element>select</a></code> element, using the <a href=#user-interaction-task-source>user interaction task
  source</a> as the task source, then <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a> at the
  element's <a href=#form-owner>form owner</a>.</p>

  <p>The <a href=#concept-form-reset-control title=concept-form-reset-control>reset
  algorithm</a> for <code><a href=#the-select-element>select</a></code> elements is to go through
  all the <code><a href=#the-option-element>option</a></code> elements in the element's <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>, and set
  their <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a>
  to true if the <code><a href=#the-option-element>option</a></code> element has a <code title=attr-option-selected><a href=#attr-option-selected>selected</a></code> attribute, and false
  otherwise.</p>

  <p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-select-element>select</a></code> element with its
  <a href=#form-owner>form owner</a>. The <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
  attribute represents the element's name. The <code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code> attribute is used to make
  the control non-interactive and to prevent its value from being
  submitted. The <code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code>
  attribute controls focus.</p>

  <p>The <dfn id=dom-select-type title=dom-select-type><code>type</code></dfn> DOM
  attribute, on getting, must return the string "<code title="">select-one</code>" if the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute is absent,
  and the string "<code title="">select-multiple</code>" if the <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute is
  present.</p>

  <p>The <dfn id=dom-select-options title=dom-select-options><code>options</code></dfn>
  DOM attribute must return an <code><a href=#htmloptionscollection-0>HTMLOptionsCollection</a></code>
  rooted at the <code><a href=#the-select-element>select</a></code> node, whose filter matches the
  elements in the <a href=#concept-select-option-list title=concept-select-option-list>list of
  options</a>.</p>

  <p>The <code title=dom-select-options><a href=#dom-select-options>options</a></code> collection is
  also mirrored on the <code><a href=#htmlselectelement>HTMLSelectElement</a></code> object. The <dfn id=dom-select-length title=dom-select-length><code>length</code></dfn> DOM attribute
  must return the number of nodes <a href=#represented-by-the-collection title="represented by the
  collection">represented</a> by the <code title=dom-select-options><a href=#dom-select-options>options</a></code> collection. The
  <span>indices of the supported indexed properties</span> at any
  instant are the indicies supported by the object returned by the
  <code title=dom-select-options><a href=#dom-select-options>options</a></code> attribute at that
  instant. The <span>names of the supported named properties</span> at
  any instant are the names supported by the object returned by the
  <code title=dom-select-options><a href=#dom-select-options>options</a></code> attribute at that
  instant.</p>

  <p>The <dfn id=dom-select-item title=dom-select-item><code>item(<var title="">index</var>)</code></dfn> method must return the value
  returned by the method of the same name on the <code title=dom-select-options><a href=#dom-select-options>options</a></code> collection, when invoked
  with the same argument.</p>

  <p>The <dfn id=dom-select-nameditem title=dom-select-namedItem><code>namedItem(<var title="">name</var>)</code></dfn> method must return the value
  returned by the method of the same name on the <code title=dom-select-options><a href=#dom-select-options>options</a></code> collection, when invoked
  with the same argument.</p>

  <p>Similarly, the <dfn id=dom-select-add title=dom-select-add><code>add()</code></dfn> and <dfn id=dom-select-remove title=dom-select-remove><code>remove()</code></dfn> methods must
  act like their namesake methods on that same <code title=dom-select-options><a href=#dom-select-options>options</a></code> collection.</p>

  <p>The <dfn id=dom-select-selectedoptions title=dom-select-selectedOptions><code>selectedOptions</code></dfn>
  DOM attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at
  the <code><a href=#the-select-element>select</a></code> node, whose filter matches the elements in
  the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>
  that have their <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to
  true.</p>

  <p>The <dfn id=dom-select-selectedindex title=dom-select-selectedIndex><code>selectedIndex</code></dfn>
  DOM attribute, on getting, must return the <a href=#concept-option-index title=concept-option-index>index</a> of the first
  <code><a href=#the-option-element>option</a></code> element in the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> in
  <a href=#tree-order>tree order</a> that has its <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to true,
  if any. If there isn't one, then it must return -1.</p>

  <p>On setting, the <code title=dom-select-selectedIndex><a href=#dom-select-selectedindex>selectedIndex</a></code> attribute must
  set the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of all the
  <code><a href=#the-option-element>option</a></code> elements in the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> to false,
  and then the <code><a href=#the-option-element>option</a></code> element in the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> whose
  <a href=#concept-option-index title=concept-option-index>index</a> is the given new
  value, if any, must have its <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to
  true.</p>

  <p>The <dfn id=dom-select-value title=dom-select-value><code>value</code></dfn> DOM
  attribute, on getting, must return the <a href=#concept-option-value title=concept-option-value>value</a> of the first
  <code><a href=#the-option-element>option</a></code> element in the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> in
  <a href=#tree-order>tree order</a> that has its <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to true,
  if any. If there isn't one, then it must return the empty
  string.</p>

  <p>On setting, the <code title=dom-select-value><a href=#dom-select-value>value</a></code>
  attribute must set the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of all the
  <code><a href=#the-option-element>option</a></code> elements in the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> to false,
  and then first the <code><a href=#the-option-element>option</a></code> element in the <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>, in
  <a href=#tree-order>tree order</a>, whose <a href=#concept-option-value title=concept-option-value>value</a> is equal to the given new
  value, if any, must have its <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to
  true.</p>

  <p>The <dfn id=dom-select-multiple title=dom-select-multiple><code>multiple</code></dfn>
  and <dfn id=dom-select-size title=dom-select-size><code>size</code></dfn> DOM
  attributes must <a href=#reflect>reflect</a> the respective content
  attributes of the same name. The <code title=dom-select-size><a href=#dom-select-size>size</a></code> DOM attribute <a href=#limited-to-only-positive-non-zero-numbers>limited to
  only positive non-zero numbers</a>.</p>

  <p>The <code title=dom-cva-willValidate><a href=#dom-cva-willvalidate>willValidate</a></code>, <code title=dom-cva-validity><a href=#dom-cva-validity>validity</a></code>, and <code title=dom-cva-validationMessage><a href=#dom-cva-validationmessage>validationMessage</a></code>
  attributes, and the <code title=dom-cva-checkValidatity><a href=#dom-cva-checkvalidatity>checkValidity()</a></code> and <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
  methods, are part of the <a href=#the-constraint-validation-api>constraint validation API</a>. The
  <code title=dom-lfe-labels><a href=#dom-lfe-labels>labels</a></code> attribute provides a list
  of the element's <code><a href=#the-label-element>label</a></code>s.</p>



  <h4 id=the-datalist-element><span class=secno>4.10.7 </span>The <dfn><code>datalist</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Either: <a href=#phrasing-content-0>phrasing content</a>.</dd>
   <dd>Or: Zero or more <code><a href=#the-option-element>option</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmldatalistelement>HTMLDataListElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-datalist-options title=dom-datalist-options>options</a>;
};</pre>
   </dd> 
  </dl><p>The <code><a href=#the-datalist-element>datalist</a></code> element represents a set of
  <code><a href=#the-option-element>option</a></code> elements that represent predefined options for
  other controls. The contents of the element represents fallback
  content for legacy user agents, intermixed with <code><a href=#the-option-element>option</a></code>
  elements that represent the predefined options. In the rendering,
  the <code><a href=#the-datalist-element>datalist</a></code> element <a href=#represents>represents</a> nothing and it, along
  with its children, should be hidden.</p>

  <p>The <code><a href=#the-datalist-element>datalist</a></code> element is hooked up to an
  <code><a href=#the-input-element>input</a></code> element using the <code title=attr-input-list><a href=#attr-input-list>list</a></code> attribute on the
  <code><a href=#the-input-element>input</a></code> element.</p>

  <p>The <dfn id=dom-datalist-options title=dom-datalist-options><code>options</code></dfn>
  DOM attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at
  the <code><a href=#the-datalist-element>datalist</a></code> node, whose filter matches
  <code><a href=#the-option-element>option</a></code> elements.</p>

  <p><strong>Constraint validation:</strong> If an element has a
  <code><a href=#the-datalist-element>datalist</a></code> element ancestor, it is <a href=#barred-from-constraint-validation>barred from
  constraint validation</a>.</p>


  <h4 id=the-optgroup-element><span class=secno>4.10.8 </span>The <dfn><code>optgroup</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-select-element>select</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>Zero or more <code><a href=#the-option-element>option</a></code> elements.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-optgroup-disabled><a href=#attr-optgroup-disabled>disabled</a></code></dd>
   <dd><code title=attr-optgroup-label><a href=#attr-optgroup-label>label</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmloptgroupelement>HTMLOptGroupElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-optgroup-disabled title=dom-optgroup-disabled>disabled</a>;
           attribute DOMString <a href=#dom-optgroup-label title=dom-optgroup-label>label</a>;
};</pre>
   </dd> 
  </dl><p>The <code><a href=#the-optgroup-element>optgroup</a></code> element <a href=#represents>represents</a> a group of
  <code><a href=#the-option-element>option</a></code> elements with a common label.</p>

  <p>The element's group of <code><a href=#the-option-element>option</a></code> elements consists of
  the <code><a href=#the-option-element>option</a></code> elements that are children of the
  <code><a href=#the-optgroup-element>optgroup</a></code> element.</p>

  <p>When showing <code><a href=#the-option-element>option</a></code> elements in <code><a href=#the-select-element>select</a></code>
  elements, user agents should show the <code><a href=#the-option-element>option</a></code> elements
  of such groups as being related to each other and separate from
  other <code><a href=#the-option-element>option</a></code> elements.</p>

  <p>The <dfn id=attr-optgroup-disabled title=attr-optgroup-disabled><code>disabled</code></dfn> attribute
  is a <a href=#boolean-attribute>boolean attribute</a> and can be used to <a href=#concept-option-disabled title=concept-option-disabled>disable</a> a group of
  <code><a href=#the-option-element>option</a></code> elements together.</p>

  <p>The <dfn id=attr-optgroup-label title=attr-optgroup-label><code>label</code></dfn>
  attribute must be specified. Its value gives the name of the group,
  for the purposes of the user interface. User agents should use this
  attribute's value when labelling the group of <code><a href=#the-option-element>option</a></code>
  elements in a <code><a href=#the-select-element>select</a></code> element.</p>

  <p>The <dfn id=dom-optgroup-disabled title=dom-optgroup-disabled><code>disabled</code></dfn> and <dfn id=dom-optgroup-label title=dom-optgroup-label><code>label</code></dfn> attributes must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>


  <h4 id=the-option-element><span class=secno>4.10.9 </span>The <dfn><code>option</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As a child of a <code><a href=#the-select-element>select</a></code> element.</dd>
   <dd>As a child of a <code><a href=#the-datalist-element>datalist</a></code> element.</dd>
   <dd>As a child of an <code><a href=#the-optgroup-element>optgroup</a></code> element.</dd>
   <dt>Content model:</dt>
   <dd>Text.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-option-disabled><a href=#attr-option-disabled>disabled</a></code></dd>
   <dd><code title=attr-option-label><a href=#attr-option-label>label</a></code></dd>
   <dd><code title=attr-option-selected><a href=#attr-option-selected>selected</a></code></dd>
   <dd><code title=attr-option-value><a href=#attr-option-value>value</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>[NamedConstructor=<a href=#dom-option title=dom-option>Option</a>(),
 NamedConstructor=<a href=#dom-option-t title=dom-option-t>Option</a>(in DOMString text),
 NamedConstructor=<a href=#dom-option-tv title=dom-option-tv>Option</a>(in DOMString text, in DOMString value),
 NamedConstructor=<a href=#dom-option-tvd title=dom-option-tvd>Option</a>(in DOMString text, in DOMString value, in boolean defaultSelected),
 NamedConstructor=<a href=#dom-option-tvds title=dom-option-tvds>Option</a>(in DOMString text, in DOMString value, in boolean defaultSelected, in boolean selected)]
interface <dfn id=htmloptionelement>HTMLOptionElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-option-disabled title=dom-option-disabled>disabled</a>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-option-form title=dom-option-form>form</a>;
           attribute DOMString <a href=#dom-option-label title=dom-option-label>label</a>;
           attribute boolean <a href=#dom-option-defaultselected title=dom-option-defaultSelected>defaultSelected</a>;
           attribute boolean <a href=#dom-option-selected title=dom-option-selected>selected</a>;
           attribute DOMString <a href=#dom-option-value title=dom-option-value>value</a>;

  readonly attribute DOMString <a href=#dom-option-text title=dom-option-text>text</a>;
  readonly attribute long <a href=#dom-option-index title=dom-option-index>index</a>;
};</pre>
   </dd> 
  </dl><p>The <code><a href=#the-option-element>option</a></code> element <a href=#represents>represents</a> an option in a
  <code><a href=#the-select-element>select</a></code> element or as part of a list of suggestions in a
  <code><a href=#the-datalist-element>datalist</a></code> element.</p>

  <p>The <dfn id=attr-option-disabled title=attr-option-disabled><code>disabled</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. An
  <code><a href=#the-option-element>option</a></code> element is <dfn id=concept-option-disabled title=concept-option-disabled>disabled</dfn> if its <code title=attr-option-disabled><a href=#attr-option-disabled>disabled</a></code> attribute is present or
  if it is a child of an <code><a href=#the-optgroup-element>optgroup</a></code> element whose <code title=attr-optgroup-disabled><a href=#attr-optgroup-disabled>disabled</a></code> attribute is
  present.</p>

  <p>An <code><a href=#the-option-element>option</a></code> element that is <a href=#attr-option-disabled title=attr-option-disabled>disabled</a> must prevent any <code title=event-click>click</code> events that are <a href=#queue-a-task title="queue
  a task">queued</a> on the <a href=#user-interaction-task-source>user interaction task
  source</a> from being dispatched on the element.</p>

  <p>The <dfn id=attr-option-label title=attr-option-label><code>label</code></dfn>
  attribute provides a label for element. The <dfn id=concept-option-label title=concept-option-label>label</dfn> of an <code><a href=#the-option-element>option</a></code>
  element is the value of the <code title=attr-option-label><a href=#attr-option-label>label</a></code> attribute, if there is one,
  or the <code><a href=#textcontent>textContent</a></code> of the element, if there isn't.</p>

  <p>The <dfn id=attr-option-value title=attr-option-value><code>value</code></dfn>
  attribute provides a value for element. The <dfn id=concept-option-value title=concept-option-value>value</dfn> of an <code><a href=#the-option-element>option</a></code>
  element is the value of the <code title=attr-option-value><a href=#attr-option-value>value</a></code> attribute, if there is one,
  or the <code><a href=#textcontent>textContent</a></code> of the element, if there isn't.</p>

  <p>The <dfn id=attr-option-selected title=attr-option-selected><code>selected</code></dfn>
  attribute represents the default <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> of the
  element.</p>

  <p>The <dfn id=concept-option-selectedness title=concept-option-selectedness>selectedness</dfn>
  of an <code><a href=#the-option-element>option</a></code> element is a boolean state, initially
  false. If the element is <a href=#concept-option-disabled title=concept-option-disabled>disabled</a>, then the element's
  <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> is
  always false and cannot be set to true. Unless othewise specified,
  when the element is created, its <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> must be set
  to true if the element has a <code title=attr-option-selected><a href=#attr-option-selected>selected</a></code> attribute. Whenever an
  <code><a href=#the-option-element>option</a></code> element's <code title=attr-option-selected><a href=#attr-option-selected>selected</a></code> attribute is added, its
  <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> must
  be set to true.</p>

  <p class=note>The <code title=dom-option-tvd><a href=#dom-option-tvd>Option()</a></code>
  constructor with two or more arguments overrides the initial state
  of the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a>
  state to always be false even if the third argument is true
  (implying that a <code title=attr-option-selected><a href=#attr-option-selected>selected</a></code>
  attribute is to be set).</p>

  <p>An <code><a href=#the-option-element>option</a></code> element's <dfn id=concept-option-index title=concept-option-index>index</dfn> is the number of
  <code><a href=#the-option-element>option</a></code> element that are in the same <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> but that
  come before it in <a href=#tree-order>tree order</a>. If the
  <code><a href=#the-option-element>option</a></code> element is not in a <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>, then the
  <code><a href=#the-option-element>option</a></code> element's <a href=#concept-option-index title=concept-option-index>index</a> is zero.</p>

  <p>The <dfn id=dom-option-disabled title=dom-option-disabled><code>disabled</code></dfn>,
  <dfn id=dom-option-label title=dom-option-label><code>label</code></dfn>, and <dfn id=dom-option-value title=dom-option-value><code>value</code></dfn> DOM attributes
  must <a href=#reflect>reflect</a> the respective content attributes of the
  same name. The <dfn id=dom-option-defaultselected title=dom-option-defaultSelected><code>defaultSelected</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the <code title=attr-option-selected><a href=#attr-option-selected>selected</a></code> content attribute.</p>

  <p>The <dfn id=dom-option-selected title=dom-option-selected><code>selected</code></dfn>
  DOM attribute must return true if the element's <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> is true, and
  false otherwise.</p>

  <p>The <dfn id=dom-option-index title=dom-option-index><code>index</code></dfn> DOM
  attribute must return the element's <a href=#concept-option-index title=concept-option-index>index</a>.</p>

  <p>The <dfn id=dom-option-text title=dom-option-text><code>text</code></dfn> DOM
  attribute must return the same value as the <code><a href=#textcontent>textContent</a></code>
  DOM attribute on the element.</p>

  <p>The <dfn id=dom-option-form title=dom-option-form><code>form</code></dfn> DOM
  attribute's behavior depends on whether the <code><a href=#the-option-element>option</a></code>
  element is in a <code><a href=#the-select-element>select</a></code> element or not. If the
  <code><a href=#the-option-element>option</a></code> has a <code><a href=#the-select-element>select</a></code> element as its parent,
  or has a <code><a href=#the-colgroup-element>colgroup</a></code> element as its parent and that
  <code><a href=#the-colgroup-element>colgroup</a></code> element has a <code><a href=#the-select-element>select</a></code> element as
  its parent, then the <code title=dom-option-form><a href=#dom-option-form>form</a></code> DOM
  attribute must return the same value as the <code title=dom-fae-form><a href=#dom-fae-form>form</a></code> DOM attribute on that
  <code><a href=#the-select-element>select</a></code> element. Otherwise, it must return null.</p>

  <p>Several constructors are provided for creating
  <code><a href=#htmloptionelement>HTMLOptionElement</a></code> objects (in addition to the factory
  methods from DOM Core such as <code title="">createElement()</code>): <dfn id=dom-option title=dom-option><code>Option()</code></dfn>, <dfn id=dom-option-t title=dom-option-t><code>Option(<var title="">text</var>)</code></dfn>, <dfn id=dom-option-tv title=dom-option-tv><code>Option(<var title="">text</var>, <var title="">value</var>)</code></dfn>, <dfn id=dom-option-tvd title=dom-option-tvd><code>Option(<var title="">text</var>, <var title="">value</var>, <var title="">defaultSelected</var>)</code></dfn>, and <dfn id=dom-option-tvds title=dom-option-tvds><code>Option(<var title="">text</var>, <var title="">value</var>, <var title="">defaultSelected</var>, <var title="">selected</var>)</code></dfn>. When invoked as constructors,
  these must return a new <code><a href=#htmloptionelement>HTMLOptionElement</a></code> object (a new
  <code><a href=#the-option-element>option</a></code> element). If the <var title="">text</var>
  argument is present, the new object must have a text node<!-- XXX
  clarify that we don't mean a CDATASection? (see dfn of 'text node')
  --> with the value of that argument as its data as its only
  child. If the <var title="">value</var> argument is present, the new
  object must have a <code title=attr-option-value><a href=#attr-option-value>value</a></code>
  attribute set with the value of the argument as its value. If the
  <var title="">defaultSelected</var> argument is present and true,
  the new object must have a <code title=attr-option-selected><a href=#attr-option-selected>selected</a></code> attribute set with no
  value. If the <var title="">selected</var> argument is present and
  true, the new object must have its <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> set to true;
  otherwise the fouth argument is absent or false, and the <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> must be set
  to false, even if the <var title="">defaultSelected</var> argument
  is present and true.</p>


  <h4 id=the-textarea-element><span class=secno>4.10.10 </span>The <dfn><code>textarea</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dd><a href=#category-listed title=category-listed>Listed</a>, <a href=#category-label title=category-label>labelable</a>, <a href=#category-submit title=category-submit>submittable</a>, and <a href=#category-reset title=category-reset>resettable</a> <a href=#form-associated-element>form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Text.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code></dd>
   <dd><code title=attr-textarea-cols><a href=#attr-textarea-cols>cols</a></code></dd>
   <dd><code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-textarea-maxlength><a href=#attr-textarea-maxlength>maxlength</a></code></dd>
   <dd><code title=attr-fe-name><a href=#attr-fe-name>name</a></code></dd>
   <dd><code title=attr-textarea-readonly><a href=#attr-textarea-readonly>readonly</a></code></dd>
   <dd><code title=attr-textarea-required><a href=#attr-textarea-required>required</a></code></dd>
   <dd><code title=attr-textarea-rows><a href=#attr-textarea-rows>rows</a></code></dd>
   <dd><code title=attr-textarea-wrap><a href=#attr-textarea-wrap>wrap</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmltextareaelement>HTMLTextAreaElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-fe-autofocus title=dom-fe-autofocus>autofocus</a>;
           attribute unsigned long <a href=#dom-textarea-cols title=dom-textarea-cols>cols</a>;
           attribute boolean <a href=#dom-fe-disabled title=dom-fe-disabled>disabled</a>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute long <a href=#dom-textarea-maxlength title=dom-textarea-maxLength>maxLength</a>;
           attribute DOMString <a href=#dom-fe-name title=dom-fe-name>name</a>;
           attribute boolean <a href=#dom-textarea-readonly title=dom-textarea-readOnly>readOnly</a>;
           attribute boolean <a href=#dom-textarea-required title=dom-textarea-required>required</a>;
           attribute unsigned long <a href=#dom-textarea-rows title=dom-textarea-rows>rows</a>;
           attribute DOMString <a href=#dom-textarea-wrap title=dom-textarea-wrap>wrap</a>;

  readonly attribute DOMString <a href=#dom-textarea-type title=dom-textarea-type>type</a>;
           attribute DOMString <a href=#dom-textarea-defaultvalue title=dom-textarea-defaultValue>defaultValue</a>;
           attribute DOMString <a href=#dom-textarea-value title=dom-textarea-value>value</a>;

  readonly attribute boolean <a href=#dom-cva-willvalidate title=dom-cva-willValidate>willValidate</a>;
  readonly attribute <a href=#validitystate>ValidityState</a> <a href=#dom-cva-validity title=dom-cva-validity>validity</a>;
  readonly attribute DOMString <a href=#dom-cva-validationmessage title=dom-cva-validationMessage>validationMessage</a>;
  boolean <a href=#dom-cva-checkvalidatity title=dom-cva-checkValidatity>checkValidity</a>();
  void <a href=#dom-cva-setcustomvalidity title=dom-cva-setCustomValidity>setCustomValidity</a>(in DOMString error);

  readonly attribute <span>NodeList</span> <a href=#dom-lfe-labels title=dom-lfe-labels>labels</a>;
};</pre>
   </dd> 
  </dl><!-- XXX add selectionStart and company --><p>The <code><a href=#the-textarea-element>textarea</a></code> element <a href=#represents>represents</a> a multiline plain
  text edit control for the element's <dfn id=concept-textarea-raw-value title=concept-textarea-raw-value>raw value</dfn>. The contents of
  the control represent the control's default value.</p>

  <p>The <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw value</a> of
  a <code><a href=#the-textarea-element>textarea</a></code> control must be initially the empty
  string.</p>

  <p>The <dfn id=attr-textarea-readonly title=attr-textarea-readonly><code>readonly</code></dfn> attribute
  is a <a href=#boolean-attribute>boolean attribute</a> used to control whether the text
  can be edited by the user or not.</p>

  <p><strong>Constraint validation:</strong> If the <code title=attr-textarea-readonly><a href=#attr-textarea-readonly>readonly</a></code> attribute is
  specified on a <code><a href=#the-textarea-element>textarea</a></code> element, the element is
  <a href=#barred-from-constraint-validation>barred from constraint validation</a>.</p>

  <p>A <code><a href=#the-textarea-element>textarea</a></code> element is <dfn id=concept-textarea-mutable title=concept-textarea-mutable>mutable</dfn> if it is neither
  <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a> nor has a <code title=attr-textarea-readonly><a href=#attr-textarea-readonly>readonly</a></code> attribute
  specified.</p>

  <p>When a <code><a href=#the-textarea-element>textarea</a></code> is <a href=#concept-textarea-mutable title=concept-textarea-mutable>mutable</a>, its <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw value</a> should be
  editable by the user. Any time the user causes the element's <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw value</a> to change, the
  user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
  event</a> called <code title=event-input>input</code> at the
  <code><a href=#the-textarea-element>textarea</a></code> element, then <a href=#broadcast-forminput-events>broadcast <code title=event-forminput>forminput</code> events</a> at the
  <code><a href=#the-textarea-element>textarea</a></code> element's <a href=#form-owner>form owner</a>. User agents
  may wait for a suitable break in the user's interaction before
  queuing the task; for example, a user agent could wait for the user
  to have not hit a key for 100ms, so as to only fire the event when
  the user pauses, instead of continuously for each keystroke.</p>
  <!-- same text is present in the <input> section -->

  <p>A <code><a href=#the-textarea-element>textarea</a></code> element has a <dfn id=concept-textarea-dirty title=concept-textarea-dirty>dirty value flag</dfn>, which must be
  initially set to false, and must be set to true whenever the user
  interacts with the control in a way that changes the <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw value</a>.</p>

  <p>When the <code><a href=#the-textarea-element>textarea</a></code> element's <code><a href=#textcontent>textContent</a></code>
  DOM attribute changes value, if the element's <a href=#concept-textarea-dirty title=concept-textarea-dirty>dirty value flag</a> is false,
  then the element's <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw
  value</a> must be set to the value of the element's
  <code><a href=#textcontent>textContent</a></code> DOM attribute.</p>

  <p>The <a href=#concept-form-reset-control title=concept-form-reset-control>reset
  algorithm</a> for <code><a href=#the-textarea-element>textarea</a></code> elements is to set the
  element's <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>value</a> to
  the value of the element's <code><a href=#textcontent>textContent</a></code> DOM
  attribute.</p>

  <p>The <dfn id=attr-textarea-cols title=attr-textarea-cols><code>cols</code></dfn>
  attribute specifies the expected maximum number of characters per
  line. If the <code title=attr-textarea-cols><a href=#attr-textarea-cols>cols</a></code> attribute
  is specified, its value must be a <a href=#valid-non-negative-integer>valid non-negative
  integer</a> greater than zero. If applying the <a href=#rules-for-parsing-non-negative-integers>rules for
  parsing non-negative integers</a> to the attribute's value
  results in a number greater than zero, then the element's <dfn id=attr-textarea-cols-value title=attr-textarea-cols-value>character width</dfn> is that value;
  otherwise, it is 20.</p>

  <p>The user agent may use the <code><a href=#the-textarea-element>textarea</a></code> element's <a href=#attr-textarea-cols-value title=attr-textarea-cols-value>character width</a> as a hint to
  the user as to how many characters the server prefers per line
  (e.g. for visual user agents by making the width of the control be
  that many characters). In visual renderings, the user agent should
  wrap the user's input in the rendering so that each line is no wider
  than this number of characters.</p>

  <p>The <dfn id=attr-textarea-rows title=attr-textarea-rows><code>rows</code></dfn>
  attribute specifies the number of lines to show. If the <code title=attr-textarea-rows><a href=#attr-textarea-rows>rows</a></code> attribute is specified, its
  value must be a <a href=#valid-non-negative-integer>valid non-negative integer</a> greater than
  zero. If applying the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
  integers</a> to the attribute's value results in a number greater
  than zero, then the element's <dfn id=attr-textarea-rows-value title=attr-textarea-rows-value>character height</dfn> is that
  value; otherwise, it is 2.</p>

  <p>Visual user agents should set the height of the control to the
  number of lines given by <a href=#attr-textarea-rows-value title=attr-textarea-rows-value>character height</a>.</p>

  <p>The <dfn id=attr-textarea-wrap title=attr-textarea-wrap><code>wrap</code></dfn>
  attribute is an <a href=#enumerated-attribute>enumerated attribute</a> with two keywords
  and states: the <dfn id=attr-textarea-wrap-soft title=attr-textarea-wrap-soft><code>soft</code></dfn> keyword
  which maps to the <dfn id=attr-textarea-wrap-soft-state title=attr-textarea-wrap-soft-state>Soft</dfn> state, and the the
  <dfn id=attr-textarea-wrap-hard title=attr-textarea-wrap-hard><code>hard</code></dfn> keyword
  which maps to the <dfn id=attr-textarea-wrap-hard-state title=attr-textarea-wrap-hard-state>Hard</dfn> state. The
  <i>missing value default</i> is the <a href=#attr-textarea-wrap-soft-state title=attr-textarea-wrap-soft-state>Soft</a> state.</p>

  <p>If the element's <code title=attr-textarea-wrap><a href=#attr-textarea-wrap>wrap</a></code>
  attribute is in the <a href=#attr-textarea-wrap-hard-state title=attr-textarea-wrap-hard-state>Hard</a> state, the <code title=attr-textarea-cols><a href=#attr-textarea-cols>cols</a></code> attribute must be
  specified.</p>

  <p>The element's <a href=#concept-fe-value title=concept-fe-value>value</a> is
  defined to be the element's <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw value</a> with the
  following transformation applied:</p>

  <ol><li><p>Replace every occurance of a U+000D CARRIAGE RETURN (CR)
   character not followed by a U+000A LINE FEED (LF) character, and
   every occurance of a U+000A LINE FEED (LF) character not proceeded
   by a U+000D CARRIAGE RETURN (CR) character, by a two-character
   string consisting of a U+000D CARRIAGE RETURN - U+000A LINE FEED
   (CRLF) character pair.</li>

   <li><p>If the element's <code title=attr-textarea-wrap><a href=#attr-textarea-wrap>wrap</a></code> attribute is in the <a href=#attr-textarea-wrap-hard-state title=attr-textarea-wrap-hard-state>Hard</a> state, insert
   U+000D CARRIAGE RETURN - U+000A LINE FEED (CRLF) character pairs
   into the string using a UA-defined algorithm so that each line so
   that each line has no more than <a href=#attr-textarea-cols-value title=attr-textarea-cols-value>character width</a>
   characters. The the purposes of this requirement, lines are
   delimited by the start of the string, the end of the string, and
   U+000D CARRIAGE RETURN - U+000A LINE FEED (CRLF) character
   pairs.</li>

  </ol><p>The <dfn id=attr-textarea-maxlength title=attr-textarea-maxlength><code>maxlength</code></dfn>
  attribute is a <a href=#attr-fe-maxlength title=attr-fe-maxlength>form control <code title="">maxlength</code> attribute</a> controlled by the
  <code><a href=#the-textarea-element>textarea</a></code> element's <a href=#concept-textarea-dirty title=concept-textarea-dirty>dirty value flag</a>.</p>

  <p>If the <code><a href=#the-textarea-element>textarea</a></code> element has a <a href=#maximum-allowed-value-length>maximum allowed
  value length</a>, then the element's children must be such that
  the <a href=#codepoint-length>codepoint length</a> of the value of the element's
  <code><a href=#textcontent>textContent</a></code> DOM attribute is equal to or less than the
  element's <a href=#maximum-allowed-value-length>maximum allowed value length</a>.</p>

  <p>The <dfn id=attr-textarea-required title=attr-textarea-required><code>required</code></dfn> attribute
  is a <a href=#boolean-attribute>boolean attribute</a>.</p>

  <p><strong>Constraint validation:</strong> If the element has its
  <code title=attr-textarea-required><a href=#attr-textarea-required>required</a></code> attribute
  specified, and the element is <a href=#concept-textarea-mutable title=concept-textarea-mutable>mutable</a>, and the element's
  <a href=#concept-fe-value title=concept-fe-value>value</a> is the empty string,
  then the element is <a href=#suffering-from-being-missing>suffering from being missing</a>.</p>

  <p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-textarea-element>textarea</a></code> element with its
  <a href=#form-owner>form owner</a>. The <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
  attribute represents the element's name. The <code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code> attribute is used to make
  the control non-interactive and to prevent its value from being
  submitted. The <code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code>
  attribute controls focus.</p>

  <p>The <dfn id=dom-textarea-cols title=dom-textarea-cols><code>cols</code></dfn>, <dfn id=dom-textarea-required title=dom-textarea-required><code>required</code></dfn>, <dfn id=dom-textarea-rows title=dom-textarea-rows><code>rows</code></dfn>, and <dfn id=dom-textarea-wrap title=dom-textarea-wrap><code>wrap</code></dfn> attributes must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name. The <code title=dom-textarea-cols><a href=#dom-textarea-cols>cols</a></code> and <code title=dom-textarea-rows><a href=#dom-textarea-rows>rows</a></code> attributes are <a href=#limited-to-only-positive-non-zero-numbers>limited
  to only positive non-zero numbers</a>. The <dfn id=dom-textarea-maxlength title=dom-textarea-maxLength><code>maxLength</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-textarea-maxlength><a href=#attr-textarea-maxlength>maxlength</a></code> content attribute.
  The <dfn id=dom-textarea-readonly title=dom-textarea-readOnly><code>readOnly</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the <code title=attr-textarea-readonly><a href=#attr-textarea-readonly>readonly</a></code> content
  attribute.</p>

  <p>The <dfn id=dom-textarea-type title=dom-textarea-type><code>type</code></dfn> DOM
  attribute must return the value "<code title="">textarea</code>".</p>

  <p>The <dfn id=dom-textarea-defaultvalue title=dom-textarea-defaultValue><code>defaultValue</code></dfn>
  DOM attribute must act like the element's <code><a href=#textcontent>textContent</a></code>
  DOM attribute.</p>

  <p>The <dfn id=dom-textarea-value title=dom-textarea-value><code>value</code></dfn>
  attribute must, on getting, return the element's <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw value</a>; on setting, it
  must set the element's <a href=#concept-textarea-raw-value title=concept-textarea-raw-value>raw
  value</a> to the new value.</p>

  <p>The <code title=dom-cva-willValidate><a href=#dom-cva-willvalidate>willValidate</a></code>, <code title=dom-cva-validity><a href=#dom-cva-validity>validity</a></code>, and <code title=dom-cva-validationMessage><a href=#dom-cva-validationmessage>validationMessage</a></code>
  attributes, and the <code title=dom-cva-checkValidatity><a href=#dom-cva-checkvalidatity>checkValidity()</a></code> and <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
  methods, are part of the <a href=#the-constraint-validation-api>constraint validation API</a>. The
  <code title=dom-lfe-labels><a href=#dom-lfe-labels>labels</a></code> attribute provides a list
  of the element's <code><a href=#the-label-element>label</a></code>s.</p>



  <h4 id=the-output-element><span class=secno>4.10.11 </span>The <dfn><code>output</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#category-listed title=category-listed>Listed</a> and <a href=#category-reset title=category-reset>resettable</a> <a href=#form-associated-element>form-associated element</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-output-for><a href=#attr-output-for>for</a></code></dd>
   <dd><code title=attr-fae-form><a href=#attr-fae-form>form</a></code></dd>
   <dd><code title=attr-fe-name><a href=#attr-fe-name>name</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmloutputelement>HTMLOutputElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <span title=dom-output-wrap>htmlFor</span>;
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-fae-form title=dom-fae-form>form</a>;
           attribute DOMString <a href=#dom-fe-name title=dom-fe-name>name</a>;

  readonly attribute DOMString <a href=#dom-output-type title=dom-output-type>type</a>;
           attribute DOMString <a href=#dom-output-defaultvalue title=dom-output-defaultValue>defaultValue</a>;
           attribute DOMString <a href=#dom-output-value title=dom-output-value>value</a>;

  readonly attribute boolean <a href=#dom-cva-willvalidate title=dom-cva-willValidate>willValidate</a>;
  readonly attribute <a href=#validitystate>ValidityState</a> <a href=#dom-cva-validity title=dom-cva-validity>validity</a>;
  readonly attribute DOMString <a href=#dom-cva-validationmessage title=dom-cva-validationMessage>validationMessage</a>;
  boolean <a href=#dom-cva-checkvalidatity title=dom-cva-checkValidatity>checkValidity</a>();
  void <a href=#dom-cva-setcustomvalidity title=dom-cva-setCustomValidity>setCustomValidity</a>(in DOMString error);
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-output-element>output</a></code> element <a href=#represents>represents</a> the result of a
  calculation.</p>

  <p>The <dfn id=attr-output-for title=attr-output-for><code>for</code></dfn> content
  attribute allows an explicit relationship to be made between the
  result of a calculation and the elements that represent the values
  that went into the calculation or that otherwise influenced the
  calculation. The <code title=attr-output-for><a href=#attr-output-for>for</a></code> attribute,
  if specified, must contain a string consisting of an <a href=#unordered-set-of-unique-space-separated-tokens>unordered
  set of unique space-separated tokens</a>, each of which must have
  the value of an ID of an element in the same
  <code>Document</code>.</p>

  <p>The <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is used to
  explicitly associate the <code><a href=#the-output-element>output</a></code> element with its
  <a href=#form-owner>form owner</a>. The <code title=attr-fe-name><a href=#attr-fe-name>name</a></code>
  attribute represents the element's name.</p>

  <p>The element has a <dfn id=concept-output-mode title=concept-output-mode>value mode
  flag</dfn> which is either <i title=concept-output-mode-value>value</i> or <i title=concept-output-mode-default>default</i>. Initially the <a href=#concept-output-mode title=concept-output-mode>value mode flag</a> must be set to <i title=concept-output-mode-default>default</i>.</p>

  <p>When the to <a href=#concept-output-mode title=concept-output-mode>value mode
  flag</a> is in mode <i title=concept-output-mode-default>default</i>, the contents of the
  element represent both the value of the element and its default
  value. When the <a href=#concept-output-mode title=concept-output-mode>value mode
  flag</a> is in mode <i title=concept-output-mode-value>value</i>, the contents of the
  element represent the value of the element only, and the default
  value is only accessible using the <code title=dom-output-defaultValue><a href=#dom-output-defaultvalue>defaultValue</a></code> DOM
  attribute.</p>

  <p>The element also has a <dfn id=concept-output-defaultvalue title=concept-output-defaultValue>default value</dfn>. Initially,
  the <a href=#concept-output-defaultvalue title=concept-output-defaultValue>default value</a>
  must be the empty string.</p>

  <p>Whenever the element's descendants are changed in any way, if the
  <a href=#concept-output-mode title=concept-output-mode>value mode flag</a> is in mode
  <i title=concept-output-mode-default>default</i>, the element's
  <a href=#concept-output-defaultvalue title=concept-output-defaultValue>default value</a> must
  be set to the value of the element's <code><a href=#textcontent>textContent</a></code> DOM
  attribute.</p>

  <p>The <a href=#concept-form-reset-control title=concept-form-reset-control>reset
  algorithm</a> for <code><a href=#the-textarea-element>textarea</a></code> elements is to set the
  element's <code><a href=#textcontent>textContent</a></code> DOM attribute to the value of the
  element's <code title=dom-output-defaultValue><a href=#dom-output-defaultvalue>defaultValue</a></code>
  DOM attribute (thus replacing the element's child nodes), and then
  to set the element's <a href=#concept-output-mode title=concept-output-mode>value mode
  flag</a> to <i title=concept-output-mode-default>default</i>.</p>

  <p>The <dfn id=dom-output-value title=dom-output-value><code>value</code></dfn> DOM
  attribute must act like the element's <code><a href=#textcontent>textContent</a></code> DOM
  attribute, except that on setting, in addition, before the child
  nodes are changed, the element's <a href=#concept-output-mode title=concept-output-mode>value mode flag</a> must be set to <i title=concept-output-mode-value>value</i>.</p>

  <p>The <dfn id=dom-output-defaultvalue title=dom-output-defaultValue><code>defaultValue</code></dfn> DOM
  attribute, on getting, must return the element's <a href=#concept-output-defaultvalue title=concept-output-defaultValue>default value</a>. On
  setting, the attribute must set the element's <a href=#concept-output-defaultvalue title=concept-output-defaultValue>default value</a>, and, if
  the element's <a href=#concept-output-mode title=concept-output-mode>value mode
  flag</a> is in the mode <i title=concept-output-mode-default>default</i>, set the element's
  <code><a href=#textcontent>textContent</a></code> DOM attribute as well.</p>

  <p>The <dfn id=dom-output-type title=dom-output-type><code>type</code></dfn>
  attribute must return the string "<code title="">output</code>".</p>

  <p>The <dfn id=dom-output-htmlfor title=dom-output-htmlFor><code>htmlFor</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the <code title=attr-output-for><a href=#attr-output-for>for</a></code> content attribute.</p>

  <p>The <code title=dom-cva-willValidate><a href=#dom-cva-willvalidate>willValidate</a></code>,
  <code title=dom-cva-validity><a href=#dom-cva-validity>validity</a></code>, and <code title=dom-cva-validationMessage><a href=#dom-cva-validationmessage>validationMessage</a></code>
  attributes, and the <code title=dom-cva-checkValidatity><a href=#dom-cva-checkvalidatity>checkValidity()</a></code> and
  <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
  methods, are part of the <a href=#the-constraint-validation-api>constraint validation API</a>.</p>

  <p><strong>Constraint validation:</strong> <code><a href=#the-output-element>output</a></code>
  elements are always <a href=#barred-from-constraint-validation>barred from constraint
  validation</a>.</p>



  <h4 id=association-of-controls-and-forms><span class=secno>4.10.12 </span>Association of controls and forms</h4>

  <!-- XXX consider xreffing the 'ID' term in this section -->

  <p>A <a href=#form-associated-element>form-associated element</a> can have a relationship
  with a <code><a href=#the-form-element>form</a></code> element, which is called the element's
  <dfn id=form-owner>form owner</dfn>. If a <a href=#form-associated-element>form-associated element</a> is
  not associated with a <code><a href=#the-form-element>form</a></code> element, its <a href=#form-owner>form
  owner</a> is said to be null.</p>

  <p>A <a href=#form-associated-element>form-associated element</a> is, by default, associated
  with its nearest ancestor <code><a href=#the-form-element>form</a></code> element (as described
  below), but may have a <dfn id=attr-fae-form title=attr-fae-form><code>form</code></dfn> attribute specified to
  override this.</p>

  <p>If a <a href=#form-associated-element>form-associated element</a> has a <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute specified, then its
  value must be the ID of a <code><a href=#the-form-element>form</a></code> element in the element's
  owner <code>Document</code>.</p>

  <p>When a <a href=#form-associated-element>form-associated element</a> is created, its
  <a href=#form-owner>form owner</a> must be initialized to null (no owner).</p>

  <p>When a <a href=#form-associated-element>form-associated element</a> is to be <dfn id=concept-form-association title=concept-form-association>associated</dfn> with a form, its
  <a href=#form-owner>form owner</a> must be set to that form.</p>

  <p>When a <a href=#form-associated-element>form-associated element</a>'s ancestor chain
  changes, e.g. because it or one of its ancestors was <a href=#insert-an-element-into-a-document title="insert an element into a document">inserted</a> or
  removed<!--XXX--> from a <code>Document</code>, then the user agent
  must <a href=#reset-the-form-owner>reset the form owner</a> of that element.</p>

  <p>When a <a href=#form-associated-element>form-associated element</a>'s <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute is added, removed, or
  has its value changed, then the user agent must <a href=#reset-the-form-owner>reset the form
  owner</a> of that element.</p>

  <p>When a <a href=#form-associated-element>form-associated element</a> has a <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute and the ID of any of the
  <code><a href=#the-form-element>form</a></code> elements in the <code>Document</code> changes,
  then the user agent must <a href=#reset-the-form-owner>reset the form owner</a> of that
  <a href=#form-associated-element>form-associated element</a>.</p>

  <p>When the user agent is to <dfn id=reset-the-form-owner>reset the form owner</dfn> of a
  <a href=#form-associated-element>form-associated element</a>, it must run the following
  steps:</p>

  <ol><li><p>If the element's <a href=#form-owner>form owner</a> is not null, and
   the element's <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> content
   attribute is not present, and the element's <a href=#form-owner>form owner</a>
   is one of the ancestors of the element after the change to the
   ancestor chain, then do nothing, and abort these steps.</li>

   <li><p>Let the element's <a href=#form-owner>form owner</a> be null.</li>

   <li>

    <p>If the element has a <code title=attr-fae-form><a href=#attr-fae-form>form</a></code>
    content attribute, then run these substeps:</p>

    <ol><!-- XXX how does ID matching get affected by quirks mode? --><li><p>If the first element in the <code>Document</code> to have
     an ID that is equal to the element's <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> content attribute's value is a
     <code><a href=#the-form-element>form</a></code> element, then <a href=#concept-form-association title=concept-form-association>associate</a> the
     <a href=#form-associated-element>form-associated element</a> with that <code><a href=#the-form-element>form</a></code>
     element.</li>

     <li><p>Abort the "reset the form owner" steps.</li>

    </ol></li>

   <li><p>Otherwise, if the <a href=#form-associated-element>form-associated element</a> in
   question has an ancestor <code><a href=#the-form-element>form</a></code> element, then <a href=#concept-form-association title=concept-form-association>associate</a> the
   <a href=#form-associated-element>form-associated element</a> with the nearest such ancestor
   <code><a href=#the-form-element>form</a></code> element.</li>

   <li><p>Otherwise, the element is left unassociated.</li>

  </ol><p><a href=#form-associated-element title="form-associated element">Form-associated
  elements</a> have a <dfn id=dom-fae-form title=dom-fae-form><code>form</code></dfn> DOM attribute, which,
  on getting, must return the element's <a href=#form-owner>form owner</a>, or
  null if there isn't one.</p>

  <p><strong>Constraint validation:</strong> If an element has no
  <a href=#form-owner>form owner</a>, it is <a href=#barred-from-constraint-validation>barred from constraint
  validation</a>.</p>



  <h4 id=attributes-common-to-form-controls><span class=secno>4.10.13 </span><dfn>Attributes common to form controls</dfn></h4>

  <h5 id=naming-form-controls><span class=secno>4.10.13.1 </span>Naming form controls</h5>

  <p>The <dfn id=attr-fe-name title=attr-fe-name><code>name</code></dfn> content
  attribute gives the name of the form control, as used in <a href=#form-submission-0>form
  submission</a> and in the <code><a href=#the-form-element>form</a></code> element's <code title=dom-form-elements><a href=#dom-form-elements>elements</a></code> object. If the attribute
  is specified, its value must not be the empty string.</p>

  <p><strong>Constraint validation:</strong> If an element does not
  have a <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute specified,
  or its <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute's value is
  the empty string, then it is <a href=#barred-from-constraint-validation>barred from constraint
  validation</a>.</p>

  <p>The <dfn id=dom-fe-name title=dom-fe-name><code>name</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> content attribute.</p>



  <h5 id=enabling-and-disabling-form-controls><span class=secno>4.10.13.2 </span>Enabling and disabling form controls</h5>

  <p>The <dfn id=attr-fe-disabled title=attr-fe-disabled><code>disabled</code></dfn>
  content attribute is a <a href=#boolean-attribute>boolean attribute</a>.</p>

  <p>A form control is <dfn id=concept-fe-disabled title=concept-fe-disabled>disabled</dfn>
  if its <code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code> attribute is
  set, or if it is a descendant of a <code><a href=#the-fieldset-element>fieldset</a></code> element
  whose <code title=attr-fieldset-disabled><a href=#attr-fieldset-disabled>disabled</a></code> attribute
  is set.</p>

  <p>A form control that is <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a> must prevent any <code title=event-click>click</code> events that are <a href=#queue-a-task title="queue
  a task">queued</a> on the <a href=#user-interaction-task-source>user interaction task
  source</a> from being dispatched on the element.</p>

  <p><strong>Constraint validation:</strong> If an element is <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>, it is <a href=#barred-from-constraint-validation>barred from
  constraint validation</a>.</p>

  <p>The <dfn id=dom-fe-disabled title=dom-fe-disabled><code>disabled</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the <code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code> content attribute.</p>



  <h5 id="a-form-control's-value"><span class=secno>4.10.13.3 </span>A form control's value</h5>

  <p>Form controls have a <dfn id=concept-fe-value title=concept-fe-value>value</dfn>
  and a <dfn id=concept-fe-checked title=concept-fe-checked>checkedness</dfn>. (The latter
  is only used by <code><a href=#the-input-element>input</a></code> elements.) These are used to
  describe how the user interacts with the control.</p>



  <h5 id=autofocusing-a-form-control><span class=secno>4.10.13.4 </span>Autofocusing a form control</h5>

  <p>The <dfn id=attr-fe-autofocus title=attr-fe-autofocus><code>autofocus</code></dfn>
  content attribute allows the user to indicate that a control is to
  be focused as soon as the page is loaded, allowing the user to just
  start typing without having to manually focus the main control.</p>

  <p>The <code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code> attribute is
  a <a href=#boolean-attribute>boolean attribute</a>.</p>

  <p>There must not be more than one element in the document with the
  <code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code> attribute
  specified.</p>

  <p>Whenever an element with the <code title=attr-fe-autofocus><a href=#attr-fe-autofocus>autofocus</a></code> attribute specified is
  <a href=#insert-an-element-into-a-document title="insert an element into a document">inserted into a
  document</a>, the user agent should <a href=#queue-a-task>queue a task</a>
  that checks to see if the element is <a href=#focusable>focusable</a>, and if
  so, runs the <a href=#focusing-steps>focusing steps</a> for that element. User
  agents may also change the scrolling position of the document, or
  perform some other action that brings the element to the user's
  attention. The <a href=#task-source>task source</a> for this task is the
  <a href=#dom-manipulation-task-source>DOM manipulation task source</a>.</p>

  <p>User agents may ignore this attribute if the user has indicated
  (for example, by starting to type in a form control) that he does
  not wish focus to be changed.</p>

  <p class=note>Focusing the control does not imply that the user
  agent must focus the browser window if it has lost focus.</p>

  <p>The <dfn id=dom-fe-autofocus title=dom-fe-autofocus><code>autofocus</code></dfn>
  DOM attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>

  <div class=example>
   <p>In the following snippet, the text control would be focused when
   the document was loaded.</p>
   <pre>&lt;input maxlength="256" name="q" value="" autofocus&gt;
&lt;input type="submit" value="Search"&gt;</pre>
  </div>


  <h5 id=limiting-user-input-length><span class=secno>4.10.13.5 </span>Limiting user input length</h5>

  <p>A <dfn id=attr-fe-maxlength title=attr-fe-maxlength>form control <code title="">maxlength</code> attribute</dfn>, controlled by a <var title="">dirty value flag</var> declares a limit on the number of
  characters a user can input.</p>

  <p>If an element has its <a href=#attr-fe-maxlength title=attr-fe-maxlength>form
  control <code title="">maxlength</code> attribute</a> specified,
  the attribute's value must be a <a href=#valid-non-negative-integer>valid non-negative
  integer</a>. If the attribute is specified and applying the
  <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative integers</a> to its value
  results in a number, then that number is the element's <dfn id=maximum-allowed-value-length>maximum
  allowed value length</dfn>. If the attribute is omitted or parsing
  its value results in an error, then there is no <a href=#maximum-allowed-value-length>maximum
  allowed value length</a>.</p>

  <p><strong>Constraint validation:</strong> If an element has a
  <a href=#maximum-allowed-value-length>maximum allowed value length</a>, and its <var title="">dirty value flag</var> is false, and the <a href=#codepoint-length>codepoint
  length</a> of the element's <a href=#concept-fe-value title=concept-fe-value>value</a> is greater than the element's
  <a href=#maximum-allowed-value-length>maximum allowed value length</a>, then the element is
  <a href=#suffering-from-being-too-long>suffering from being too long</a>.</p>

  <p>User agents may prevent the user from causing the element's <a href=#concept-fe-value title=concept-fe-value>value</a> to be set to a value whose
  <a href=#codepoint-length>codepoint length</a> is greater than the element's
  <a href=#maximum-allowed-value-length>maximum allowed value length</a>.</p>



  <h5 id=form-submission><span class=secno>4.10.13.6 </span><dfn title="attributes for form submission">Form submission</dfn></h5>

  <p>Attributes for form submission can be specified both on
  <code><a href=#the-form-element>form</a></code> elements and on elements that represent buttons
  that submit forms, e.g. an <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#submit-button-state title=attr-input-type-submit>Submit Button</a> state. The
  attributes on the buttons, when omitted, default to the values given
  on the corresponding the <code><a href=#the-form-element>form</a></code> element.</p>

  <p>The <dfn id=attr-fs-action title=attr-fs-action><code>action</code></dfn> content
  attribute, if specified, must have a value that is a <a href=#valid-url>valid
  URL</a>.</p>

  <p>The <dfn id=concept-fs-action title=concept-fs-action>action</dfn> of an element is
  the value of the element's <code title=attr-fs-action><a href=#attr-fs-action>action</a></code> attribute, if it has one, or
  the value of its <a href=#form-owner>form owner</a>'s <code title=attr-fs-action><a href=#attr-fs-action>action</a></code> attribute, if <em>it</em> has
  one, or else the empty string.</p>

  <p>The <dfn id=attr-fs-method title=attr-fs-method><code>method</code></dfn> content
  attribute is an <a href=#enumerated-attribute>enumerated attribute</a> with the following
  keywords and states:</p>

  <ul><li>The keyword <dfn id=attr-fs-method-get-keyword title=attr-fs-method-GET-keyword><code>GET</code></dfn>, mapping
   to the state <dfn id=attr-fs-method-get title=attr-fs-method-GET>GET</dfn>, indicating
   the HTTP GET method.</li>

   <li>The keyword <dfn id=attr-fs-method-post-keyword title=attr-fs-method-POST-keyword><code>POST</code></dfn>, mapping
   to the state <dfn id=attr-fs-method-post title=attr-fs-method-POST>POST</dfn>, indicating
   the HTTP POST method.</li>

   <li>The keyword <dfn id=attr-fs-method-put-keyword title=attr-fs-method-PUT-keyword><code>PUT</code></dfn>, mapping
   to the state <dfn id=attr-fs-method-put title=attr-fs-method-PUT>PUT</dfn>, indicating
   the HTTP PUT method.</li>

   <li>The keyword <dfn id=attr-fs-method-delete-keyword title=attr-fs-method-DELETE-keyword><code>DELETE</code></dfn>, mapping
   to the state <dfn id=attr-fs-method-delete title=attr-fs-method-DELETE>DELETE</dfn>, indicating
   the HTTP DELETE method.</li>

  </ul><p>The <i>missing value default</i> is the <a href=#attr-fs-method-get title=attr-fs-method-GET>GET</a> state.</p>

  <p>The <dfn id=concept-fs-method title=concept-fs-method>method</dfn> of an element is
  one of those four states. If the element has a <code title=attr-fs-method><a href=#attr-fs-method>method</a></code> attribute, then the element's
  <a href=#concept-fs-method title=concept-fs-method>method</a> is that attribute's
  state; otherwise, it is the <a href=#form-owner>form owner</a>'s <code title=attr-fs-method><a href=#attr-fs-method>method</a></code> attribute's state.</p>

  <p>The <dfn id=attr-fs-enctype title=attr-fs-enctype><code>enctype</code></dfn>
  content attribute is an <a href=#enumerated-attribute>enumerated attribute</a> with the
  following keywords and states:</p>

  <ul><li>The "<dfn id=attr-fs-enctype-urlencoded title=attr-fs-enctype-urlencoded><code>application/x-www-form-urlencoded</code></dfn>" keyword and corresponding state.</li>
   <li>The "<dfn id=attr-fs-enctype-formdata title=attr-fs-enctype-formdata><code>multipart/form-data</code></dfn>" keyword and corresponding state.</li>
   <li>The "<dfn id=attr-fs-enctype-text title=attr-fs-enctype-text><code>text/plain</code></dfn>" keyword and corresponding state.</li>
  </ul><p>The <i>missing value default</i> is the <code title=attr-fs-enctype-urlencoded><a href=#attr-fs-enctype-urlencoded>application/x-www-form-urlencoded</a></code>
  state.</p>

  <p>The <dfn id=concept-fs-enctype title=concept-fs-enctype>enctype</dfn> of an element is
  one of those three states. If the element has a <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code> attribute, then the element's
  <a href=#concept-fs-enctype title=concept-fs-enctype>enctype</a> is that attribute's
  state; otherwise, it is the <a href=#form-owner>form owner</a>'s <code title=attr-fs-enctype><a href=#attr-fs-enctype>enctype</a></code> attribute's state.</p>

  <p>The <dfn id=attr-fs-target title=attr-fs-target><code>target</code></dfn> content
  attribute, if present, must be a <a href=#valid-browsing-context-name-or-keyword>valid browsing context name
  or keyword</a>.</p>

  <p>The <dfn id=concept-fs-target title=concept-fs-target>target</dfn> of an element is
  the value of the element's <code title=attr-fs-target><a href=#attr-fs-target>target</a></code> attribute, if it has one; or
  the value of its <a href=#form-owner>form owner</a>'s <code title=attr-fs-target><a href=#attr-fs-target>target</a></code> attribute, if <em>it</em> has
  one; or, if one of the child nodes of <a href=#the-head-element-0>the <code>head</code>
  element</a> is a <code><a href=#the-base-element>base</a></code> element with a <code title=attr-base-target><a href=#attr-base-target>target</a></code> attribute, then the the value
  of the <code title=attr-base-target><a href=#attr-base-target>target</a></code> attribute of the
  first such <code><a href=#the-base-element>base</a></code> element; or, if there is no such
  element, the empty string.</p> <!-- c.f. hyperlink following -->

  <p>The <dfn id=attr-fs-novalidate title=attr-fs-novalidate><code>novalidate</code></dfn>
  content attribute is a <a href=#boolean-attribute>boolean attribute</a>. If present,
  it indicates that the form is not to be validated during
  submission.</p>

  <p>The <dfn id=concept-fs-novalidate title=concept-fs-novalidate>no-validate state</dfn> of
  an element is true if the element's <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code> attribute is present or
  if the element's <a href=#form-owner>form owner</a>'s <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code> attribute is present,
  and false otherwise.</p>

  <p>The <dfn id=dom-fs-action title=dom-fs-action><code>action</code></dfn>, <dfn id=dom-fs-method title=dom-fs-method><code>method</code></dfn>, <dfn id=dom-fs-enctype title=dom-fs-enctype><code>enctype</code></dfn>, and <dfn id=dom-fs-target title=dom-fs-target><code>target</code></dfn> DOM attributes must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name. The <dfn id=dom-fs-novalidate title=dom-fs-noValidate><code>noValidate</code></dfn> DOM
  attribute must reflect the <code title=attr-fs-novalidate><a href=#attr-fs-novalidate>novalidate</a></code> content attribute.</p>
  


  <h4 id=constraints><span class=secno>4.10.14 </span>Constraints</h4>

  <h5 id=definitions><span class=secno>4.10.14.1 </span>Definitions</h5>

  <p>A <a href=#category-listed title=category-listed>listed form-associated
  element</a> is a <dfn id=candidate-for-constraint-validation>candidate for constraint validation</dfn>
  unless a condition has <dfn id=barred-from-constraint-validation title="barred from constraint
  validation">barred the element from constraint
  validation</dfn>. (For example, an element is <a href=#barred-from-constraint-validation>barred from
  constraint validation</a> if it is an <code><a href=#the-output-element>output</a></code> or
  <code><a href=#the-fieldset-element>fieldset</a></code> element.)</p>

  <p>An element can have a <dfn id=custom-validity-error-message>custom validity error message</dfn>
  defined. Initially, an element must have its <a href=#custom-validity-error-message>custom validity
  error message</a> set to the empty string. When its value is not
  the empty string, the element is <a href=#suffering-from-a-custom-error>suffering from a custom
  error</a>. It can be set using the <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
  method. The user agent should use the <a href=#custom-validity-error-message>custom validity error
  message</a> when alerting the user to the problem with the
  control.</p>

  <p>An element can be constrained in various ways. The following is
  the list of <dfn id=validity-states>validity states</dfn> that a form control can be
  in, making the control invalid for the purposes of constraint
  validation. (The definitions below are non-normative; other parts of
  this specification define more precisely when each state applies or
  does not.)</p>

  <dl><dt> <dfn id=suffering-from-being-missing>Suffering from being missing</dfn> </dt>

   <dd> <p class=note>When a control has no <a href=#concept-fe-value title=concept-fe-value>value</a> but has a <code title="">required</code> attribute (<code><a href=#the-input-element>input</a></code> <code title=attr-input-required><a href=#attr-input-required>required</a></code>, <code><a href=#the-textarea-element>textarea</a></code>
   <code title=attr-textarea-required><a href=#attr-textarea-required>required</a></code>). </dd>

   <dt> <dfn id=suffering-from-a-type-mismatch>Suffering from a type mismatch</dfn> </dt>

   <dd> <p class=note>When a control that allows arbitrary user input has a <a href=#concept-fe-value title=concept-fe-value>value</a> that is not in the correct
   syntax (<a href=#e-mail-state title=attr-input-type-email>E-mail</a>, <a href=#url-state title=attr-input-type-url>URL</a>). </dd>

   <dt> <dfn id=suffering-from-a-pattern-mismatch>Suffering from a pattern mismatch</dfn> </dt>

   <dd> <p class=note>When a control has a <a href=#concept-fe-value title=concept-fe-value>value</a> that doesn't satisfy the
   <code title=attr-input-pattern><a href=#attr-input-pattern>pattern</a></code> attribute.</dd>

   <dt> <dfn id=suffering-from-being-too-long>Suffering from being too long</dfn> </dt>

   <dd> <p class=note>When a control has a <a href=#concept-fe-value title=concept-fe-value>value</a> that is too long for the
   <a href=#attr-fe-maxlength title=attr-fe-maxlength>form control <code title="">maxlength</code> attribute</a> (<code><a href=#the-input-element>input</a></code>
   <code title=attr-input-maxlength><a href=#attr-input-maxlength>maxlength</a></code>,
   <code><a href=#the-textarea-element>textarea</a></code> <code title=attr-textarea-maxlength><a href=#attr-textarea-maxlength>maxlength</a></code>). </dd>

   <dt> <dfn id=suffering-from-an-underflow>Suffering from an underflow</dfn> </dt>

   <dd> <p class=note>When a control has a <a href=#concept-fe-value title=concept-fe-value>value</a> that is too low for the <code title=attr-input-min><a href=#attr-input-min>min</a></code> attribute.</dd>

   <dt> <dfn id=suffering-from-an-overflow>Suffering from an overflow</dfn> </dt>

   <dd> <p class=note>When a control has a <a href=#concept-fe-value title=concept-fe-value>value</a> that is too high for the
   <code title=attr-input-max><a href=#attr-input-max>max</a></code> attribute.</dd>

   <dt> <dfn id=suffering-from-a-step-mismatch>Suffering from a step mismatch</dfn> </dt>

   <dd> <p class=note>When a control has a <a href=#concept-fe-value title=concept-fe-value>value</a> that doesn't fit the rules
   given by the <code title=attr-input-step><a href=#attr-input-step>step</a></code>
   attribute.</dd>

   <dt> <dfn id=suffering-from-a-custom-error>Suffering from a custom error</dfn> </dt>

   <dd> <p class=note>When a control's <a href=#custom-validity-error-message>custom validity error message</a>
   (as set by the element's <code title=dom-cva-setCustomValidity><a href=#dom-cva-setcustomvalidity>setCustomValidity()</a></code>
   method) is not the empty string.</p> </dd>

  </dl><p class=note>An element can still suffer from these states even
  when the element is <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>; thus these states can
  be represented in the DOM even if validating the form during
  submission wouldn't indicate a problem to the user.</p>

  <p>An element <dfn id=concept-fv-valid title=concept-fv-valid>satisfies its
  constraints</dfn> if it is not suffering from any of the above
  <a href=#validity-states>validity states</a>.</p>



  <h5 id=constraint-validation><span class=secno>4.10.14.2 </span>Constraint validation</h5>

  <p>When the user agent is required to <dfn id=statically-validate-the-constraints>statically validate the
  constraints</dfn> of <code><a href=#the-form-element>form</a></code> element <var title="">form</var>, it must run the following steps, which return
  either a <i>positive</i> result (all the controls in the form are
  valid) or a <i>negative</i> result (there are invalid controls)
  along with a (possibly empty) list of elements that are invalid and
  for which no script has claimed responsibility:</p>

  <ol><li><p>Let <var title="">controls</var> be a list of all the <a href=#category-submit title=category-submit>submittable</a> elements whose
   <a href=#form-owner>form owner</a> is <var title="">form</var>, in <a href=#tree-order>tree
   order</a>.</li>

   <li><p>Let <var title="">invalid controls</var> be an initially
   empty list of elements.</li>

   <li>

    <p>For each element <var title="">field</var> in <var title="">controls</var>, in <a href=#tree-order>tree order</a>, run the
    following substeps:</p>

    <ol><li><p>If <var title="">field</var> is not a <a href=#candidate-for-constraint-validation>candidate for
     constraint validation</a>, then move on to the next
     element.</li>

     <li><p>Otherwise, if <var title="">field</var> <a href=#concept-fv-valid title=concept-fv-valid>satisfies its constaints</a>, then
     move on to the next element.</li>

     <li><p>Otherwise, add <var title="">field</var> to <var title="">invalid controls</var>.</li>

    </ol></li>

   <li><p>If <var title="">invalid controls</var> is empty, then
   return a <i>positive</i> result and abort these steps.</li>

   <li><p>Let <var title="">unhandled invalid controls</var> be an
   initially empty list of elements.</li>

   <li>

    <p>For each element <var title="">field</var> in <var title="">invalid controls</var>, if any, in <a href=#tree-order>tree
    order</a>, run the following substeps:</p>

    <ol><li><p><a href=#fire-a-simple-event>Fire a simple event</a> named <code title=event-invalid>invalid</code> at <var title="">field</var>.</li>

     <li><p>If the event was not canceled, then add <var title="">field</var> to <var title="">unhandled invalid
     controls</var>.</li>

    </ol></li>

   <li><p>Return a <i>negative</i> result with the list of elements in
   the <var title="">unhandled invalid controls</var> list.</li>

  </ol><p>If a user agent is to <dfn id=interactively-validate-the-constraints>interactively validate the
  constraints</dfn> of <code><a href=#the-form-element>form</a></code> element <var title="">form</var>, then the user agent must run the following
  steps:</p>

  <ol><li><p><a href=#statically-validate-the-constraints>Statically validate the constraints</a> of <var title="">form</var>, and let <var title="">unhandled invalid
   controls</var> be the list of elements returned if the result was
   <i>negative</i>.</li>

   <li><p>If the result was <i>positive</i>, then return that result
   and abort these steps.</li>

   <li><p>Report the problems with the constraints of at least one of
   the elements given in <var title="">unhandled invalid
   controls</var> to the user. User agents may focus one of those
   elements in the process, by running the <a href=#focusing-steps>focusing steps</a>
   for that element, and may change the scrolling position of the
   document, or perform some other action that brings the element to
   the user's attention. User agents may report more than one
   constraint violation. User agents may coalesce related constraint
   violation reports if appropriate (e.g. if multiple radio buttons in
   a <a href=#radio-button-group title="radio button group">group</a> are marked as
   required, only one error need be reported). If one of the controls
   is not visible to the user (e.g. it has the <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute set) then user agents
   may report a script error.</li>

   <li><p>Return a <i>negative</i> result.</li>

  </ol><h5 id=the-constraint-validation-api><span class=secno>4.10.14.3 </span>The <dfn>constraint validation API</dfn></h5>

  <p>The <dfn id=dom-cva-willvalidate title=dom-cva-willValidate><code>willValidate</code></dfn>
  attribute must return true if an element is a <a href=#candidate-for-constraint-validation>candidate for
  constraint validation</a>, and false otherwise (i.e. false if any
  conditions are <a href=#barred-from-constraint-validation title="barred from constraint
  validation">barring it from constraint validation</a>).</p>

  <p>The <dfn id=dom-cva-setcustomvalidity title=dom-cva-setCustomValidity><code>setCustomValidity(<var title="">message</var>)</code></dfn>, when invoked, must set the
  <a href=#custom-validity-error-message>custom validity error message</a> to the value of the given
  <var title="">message</var> argument.</p>

  <p>The <dfn id=dom-cva-validity title=dom-cva-validity><code>validity</code></dfn>
  attribute must return a <code><a href=#validitystate>ValidityState</a></code> object that
  represents the <a href=#validity-states>validity states</a> of the element. This
  object is live, and the same object must be returned each time the
  element's <code title=dom-cva-validity><a href=#dom-cva-validity>validity</a></code> attribute
  is retrieved.</p>

<pre class=idl>interface <dfn id=validitystate>ValidityState</dfn> {
  readonly attribute boolean <a href=#dom-validitystate-valuemissing title=dom-ValidityState-valueMissing>valueMissing</a>;
  readonly attribute boolean <a href=#dom-validitystate-typemismatch title=dom-ValidityState-typeMismatch>typeMismatch</a>;
  readonly attribute boolean <a href=#dom-validitystate-patternmismatch title=dom-ValidityState-patternMismatch>patternMismatch</a>;
  readonly attribute boolean <a href=#dom-validitystate-toolong title=dom-ValidityState-tooLong>tooLong</a>;
  readonly attribute boolean <a href=#dom-validitystate-rangeunderflow title=dom-ValidityState-rangeUnderflow>rangeUnderflow</a>;
  readonly attribute boolean <a href=#dom-validitystate-rangeoverflow title=dom-ValidityState-rangeOverflow>rangeOverflow</a>;
  readonly attribute boolean <a href=#dom-validitystate-stepmismatch title=dom-ValidityState-stepMismatch>stepMismatch</a>;
  readonly attribute boolean <a href=#dom-validitystate-customerror title=dom-ValidityState-customError>customError</a>;
  readonly attribute boolean <a href=#dom-validitystate-valid title=dom-ValidityState-valid>valid</a>;
};</pre>

  <p>A <code><a href=#validitystate>ValidityState</a></code> object has the following
  attributes. On getting, they must return true if the corresponding
  condition given in the following list is true, and false
  otherwise.</p>

  <dl><dt><dfn id=dom-validitystate-valuemissing title=dom-ValidityState-valueMissing><code>valueMissing</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-being-missing>suffering from being missing</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-typemismatch title=dom-ValidityState-typeMismatch><code>typeMismatch</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-a-type-mismatch>suffering from a type mismatch</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-patternmismatch title=dom-ValidityState-patternMismatch><code>patternMismatch</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-a-pattern-mismatch>suffering from a pattern mismatch</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-toolong title=dom-ValidityState-tooLong><code>tooLong</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-being-too-long>suffering from being too long</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-rangeunderflow title=dom-ValidityState-rangeUnderflow><code>rangeUnderflow</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-an-underflow>suffering from an underflow</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-rangeoverflow title=dom-ValidityState-rangeOverflow><code>rangeOverflow</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-an-overflow>suffering from an overflow</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-stepmismatch title=dom-ValidityState-stepMismatch><code>stepMismatch</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-a-step-mismatch>suffering from a step mismatch</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-customerror title=dom-ValidityState-customError><code>customError</code></dfn></dt>
   <dd> <p>The control is <a href=#suffering-from-a-custom-error>suffering from a custom error</a>.</p> </dd>

   <dt><dfn id=dom-validitystate-valid title=dom-ValidityState-valid><code>valid</code></dfn></dt>
   <dd> <p>None of the other conditions are true.</p> </dd>

  </dl><p>When the <dfn id=dom-cva-checkvalidatity title=dom-cva-checkValidatity><code>checkValidity()</code></dfn>
  method is invoked, if the element is a <a href=#candidate-for-constraint-validation>candidate for
  constraint validation</a> and does not <a href=#concept-fv-valid title=concept-fv-valid>satisfy its constaints</a>, the user
  agent must <a href=#fire-a-simple-event>fire a simple event</a> named <code title=event-invalid>invalid</code> at the element and return
  false. Otherwise, it must only return true without doing anything
  else.</p>

  <p>The <dfn id=dom-cva-validationmessage title=dom-cva-validationMessage><code>validationMessage</code></dfn>
  attribute must return the empty string if the element is not a
  <a href=#candidate-for-constraint-validation>candidate for constraint validation</a> or if it is one but
  it <a href=#concept-fv-valid title=concept-fv-valid>satisfies its constaints</a>;
  otherwise, it must return a suitably localised message that the user
  agent would show the user if this were the only form with a validity
  constraint problem. If the element is <a href=#suffering-from-a-custom-error>suffering from a custom
  error</a>, then the <a href=#custom-validity-error-message>custom validity error message</a>
  should be present in the return value.</p>



  <h5 id=security-0><span class=secno>4.10.14.4 </span>Security</h5>

  <p>Servers should not rely on client-side validation. Client-side
  validation can be intentionally bypassed by hostile users, and
  unintentionally bypassed by users of older user agents or automated
  tools that do not implement these features. The constraint
  validation features are only intended to improve the user
  experience, not to provide any kind of security mechanism.</p>





  <h4 id=form-submission-0><span class=secno>4.10.15 </span><dfn>Form submission</dfn></h4>

  <h5 id=implicit-submission><span class=secno>4.10.15.1 </span>Implicit submission</h5>

  <p>User agents may establish a <a href=#concept-button title=concept-button>button</a> in each form as being the
  form's <dfn id=default-button>default button</dfn>. This should be the first <a href=#concept-submit-button title=concept-submit-button>submit button</a> in <a href=#tree-order>tree
  order</a> whose <a href=#form-owner>form owner</a> is that <code><a href=#the-form-element>form</a></code>
  element, but user agents may pick another button if another would be
  more appropriate for the platform. If the platform supports letting
  the user submit a form implicitly (for example, on some platforms
  hitting the "enter" key while a text field is focused implicitly
  submits the form), then doing so must cause the form's <a href=#default-button>default
  button</a>'s <a href=#activation-behavior>activation behavior</a>, if any, to be
  run.</p>

  <p class=note>Consequently, if the <a href=#default-button>default button</a> is
  <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>, the form is not
  submitted when such an implicit submission mechanism is used. (A
  button has no <a href=#activation-behavior>activation behavior</a> when disabled.)</p>

  <p>If the form has no <a href=#concept-submit-button title=concept-submit-button>submit
  button</a>, then the implicit submission mechanism must just
  <a href=#concept-form-submit title=concept-form-submit>submit</a> the
  <code><a href=#the-form-element>form</a></code> element from the <code><a href=#the-form-element>form</a></code> element
  itself.</p>


  <h5 id=form-submission-algorithm><span class=secno>4.10.15.2 </span>Form submission algorithm</h5>

  <p>When a form <var title="">form</var> is <dfn id=concept-form-submit title=concept-form-submit>submitted</dfn> from an element <var title="">submitter</var> (typically a button), the user agent must
  run the following steps:</p>

  <ol><li id=sandboxSubmitBlocked><p>If <var title="">form</var> is in
   a <code>Document</code> that has no associated <a href=#browsing-context>browsing
   context</a> or whose <a href=#browsing-context>browsing context</a> has its
   <a href=#sandboxed-forms-browsing-context-flag>sandboxed forms browsing context flag</a> set, then abort
   these steps without doing anything.</li>

   <li><p>If <var title="">form</var> is already being submitted
   (i.e. the form was <a href=#concept-form-submit title=concept-form-submit>submitted</a> again while processing
   the events fired from the next two steps, probably from a script
   redundantly calling the <code title=dom-form-submit><a href=#dom-form-submit>submit()</a></code> method on <var title="">form</var>), then abort these steps. This doesn't affect
   the earlier instance of this algorithm.</li>

   <!-- lock (implicit in previous step) -->

   <li><p>If the <var title="">submitter</var> is anything but a
   <code><a href=#the-form-element>form</a></code> element, and the <var title="">submitter</var>
   element's <a href=#concept-fs-novalidate title=concept-fs-novalidate>no-validate
   state</a> is false, then <a href=#interactively-validate-the-constraints>interactively validate the
   constraints</a> of <var title="">form</var> and examine the
   result: if the result is negative (the constraint validation
   concluded that there were invalid fields and probably informed the
   user of this) then abort these steps.</li>

   <li><p>If the <var title="">submitter</var> is anything but a
   <code><a href=#the-form-element>form</a></code> element, then <a href=#fire-a-simple-event>fire a simple event</a>
   that bubbles<!--XXX check it bubbles-->, named <code title=event-submit>submit</code>, at <var title="">form</var>. If
   the event's default action is prevented (i.e. if the event is
   canceled) then abort these steps. Otherwise, continue (effectively
   the default action is to perform the submission).</li>

   <!-- if you add any steps between the "lock" and "unlock" lines,
   make sure to update the step immediately before the "lock" line -->

   <!-- unlock -->

   <li><p>Let <var title="">controls</var> be a list of all the <a href=#category-submit title=category-submit>submittable</a> elements whose
   <a href=#form-owner>form owner</a> is <var title="">form</var>, in <a href=#tree-order>tree
   order</a>.</li>

   <li><p>Let the <var title="">form data set</var> be a list of
   name-value-type tuples, initially empty.</li>

   <li id=constructing-form-data-set>

    <p><strong>Constructing the form data set</strong>. For each
    element <var title="">field</var> in <var title="">controls</var>,
    in <a href=#tree-order>tree order</a>, run the following substeps:</p>

    <ol><li>

      <p>If any of the following conditions are met, then skip these
      substeps for this element:</p>

      <ul><li>The <var title="">field</var> element has a
       <code><a href=#the-datalist-element>datalist</a></code> element ancestor.</li>

       <li>The <var title="">field</var> element is <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a>.</li>

       <li>The <var title="">field</var> element is a <a href=#concept-button title=concept-button>button</a> but it is not <var title="">submitter</var>.</li>

       <li>The <var title="">field</var> element is an
       <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a> state and
       whose <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> is
       false.</li>

       <li>The <var title="">field</var> element is an
       <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a> state and
       whose <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> is
       false.</li>

       <li>The <var title="">field</var> element is an
       <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#file-upload-state title=attr-input-type-file>File Upload</a> state but
       the control does not have any files selected.</li>

       <li>The <var title="">field</var> element is an
       <code><a href=#the-object-element>object</a></code> element that is not using a
       <a href=#plugin>plugin</a>.</li>

      </ul><p>Otherwise, process <var title="">field</var> as follows:</p>

     </li>

     <li><p>Let <var title="">type</var> be the value of the <code title="">type</code> DOM attribute of <var title="">field</var>.</li> <!-- if the field is an <object>
     element, this will get ignored. -->

     <li>

      <p>If the <var title="">field</var> element is an
      <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state,
      then run these further nested substeps:</p>

      <ol><li><p>If the <var title="">field</var> element has an <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute specified and value
       is not the empty string, let <var title="">name</var> be that
       value followed by a single U+002E FULL STOP (.)
       character. Otherwise, let <var title="">name</var> be the empty
       string.</li>

       <li><p>Let <var title="">name<sub title="">x</sub></var> be the
       string consisting of the concatenation of <var title="">name</var> and a single U+0078 LATIN SMALL LETTER X
       (x) character.</li>

       <li><p>Let <var title="">name<sub title="">y</sub></var> be the
       string consisting of the concatenation of <var title="">name</var> and a single U+0079 LATIN SMALL LETTER Y
       (y) character.</li>

       <li><p>The <var title="">field</var> element is <var title="">submitter</var>, and before this algorithm was invoked
       the user <a href=#concept-input-type-image-coordinate title=concept-input-type-image-coordinate>indicated a
       coordinate</a>. Let <var title="">x</var> be the <var title="">x</var>-component of the coordindate selected by the
       user, and let <var title="">y</var> be the <var title="">y</var>-component of the coordinate selected by the
       user.</li>

       <li><p>Append an entry in the <var title="">form data set</var>
       with the name <var title="">name<sub title="">x</sub></var>,
       the value <var title="">x</var>, and the type <var title="">type</var>.</li>

       <li><p>Append an entry in the <var title="">form data set</var>
       with the name <var title="">name<sub title="">y</sub></var> and
       the value <var title="">y</var>, and the type <var title="">type</var>.</li>

       <li><p>Skip the remaining substeps for this element: if there
       are any more elements in <var title="">controls</var>, return
       to the top of the <a href=#constructing-form-data-set>constructing the form data
       set</a> step, otherwise, jump to the next step in the overall
       form submission algorithm.</li>

      </ol></li>

     <li><p>If the <var title="">field</var> element does not have a
     <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute specified, or
     its <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute's value is
     the empty string, skip these substeps for this element: if there
     are any more elements in <var title="">controls</var>, return to
     the top of the <a href=#constructing-form-data-set>constructing
     the form data set</a> step, otherwise, jump to the next step in
     the overall form submission algorithm.</li>

     <li><p>Let <var title="">name</var> be the value of the <var title="">field</var> element's <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute.</li>

     <li><p>If the <var title="">field</var> element is a
     <code><a href=#the-select-element>select</a></code> element, then for each <code><a href=#the-option-element>option</a></code>
     element in the <code><a href=#the-select-element>select</a></code> element whose <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> is true,
     append an entry in the <var title="">form data set</var> with the
     <var title="">name</var> as the name, the <a href=#concept-option-value title=concept-option-value>value</a> of the
     <code><a href=#the-option-element>option</a></code> element as the value, and <var title="">type</var> as the type.</li>

     <li>

      <p>Otherwise, if the <var title="">field</var> element is an
      <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a> state or the
      <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a> state,
      then then run these further nested substeps:</p>

      <ol><li><p>If the <var title="">field</var> element has a <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute specified, then
       let <var title="">value</var> be the value of that attribute;
       otherwise, let <var title="">value</var> be the string
       "<code title="">on</code>".</li>

       <li><p>Append an entry in the <var title="">form data set</var>
       with <var title="">name</var> as the name, <var title="">value</var> as the value, and <var title="">type</var>
       as the type.</li>

      </ol></li>

     <li><p>Otherwise, if the <var title="">field</var> element is an
     <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#file-upload-state title=attr-input-type-file>File Upload</a> state, then for
     each file <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>selected</a> in the
     <code><a href=#the-input-element>input</a></code> element, append an entry in the <var title="">form data set</var> with the <var title="">name</var> as
     the name, the file (consisting of the name, the type, and the
     body) as the value, and <var title="">type</var> as the
     type.</li>

     <li><p>Otherwise, if the <var title="">field</var> element is an
     <code><a href=#the-object-element>object</a></code> element: try to obtain a form submission
     value from the <a href=#plugin>plugin</a><!-- using NPAPI's
     NPP_GetValue() entry point with the NPPVformValue variable -->,
     and if that is successful, append an entry in the <var title="">form data set</var> with <var title="">name</var> as the
     name, the returned form submission value as the value, and the
     string "<code title="">object</code>" as the type.</li>

     <li><p>Otherwise, append an entry in the <var title="">form data
     set</var> with <var title="">name</var> as the name, the <a href=#concept-fe-value title=concept-fe-value>value</a> of the <var title="">field</var> element as the value, and <var title="">type</var> as the type.</li>

    </ol></li>

   <li><p>Let <var title="">action</var> be the <var title="">submitter</var> element's <a href=#concept-fs-action title=concept-fs-action>action</a>.</li>

   <li>

    <p>If <var title="">action</var> is the empty string, let <var title="">action</var> be <a href="#the-document's-address">the document's address</a>.</p>

    <p class=note>This step is a willful violation of RFC 3986. <a href=#refsRFC3986>[RFC3986]</a></p>

    <!-- Don't ask me why. But that's what IE does. It even treats
    action="" differently from action=" " or action="#" (the latter
    two resolve to the base URL, the first one resolves to the doc
    URL). And other browsers concur. It is even required, see e.g.
      http://bugs.webkit.org/show_bug.cgi?id=7763
      https://bugzilla.mozilla.org/show_bug.cgi?id=297761
    -->

   </li>

   <li><p><a href=#resolve-a-url title="resolve a url">Resolve</a> the
   <a href=#url>URL</a> <var title="">action</var>, relative to the <var title="">submitter</var> element. If this fails, abort these
   steps. Otherwise, let <var title="">action</var> be the resulting
   <a href=#absolute-url>absolute URL</a>.</li>

   <li><p>Let <var title="">scheme</var> be the <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a> of the resulting
   <a href=#absolute-url>absolute URL</a>.</li>

   <li><p>Let <var title="">enctype</var> be the <var title="">submitter</var> element's <a href=#concept-fs-enctype title=concept-fs-enctype>enctype</a>.</li>

   <li><p>Let <var title="">method</var> be the <var title="">submitter</var> element's <a href=#concept-fs-method title=concept-fs-method>method</a>.</li>

   <li><p>Let <var title="">target</var> be the <var title="">submitter</var> element's <a href=#concept-fs-target title=concept-fs-target>target</a>.</li>

   <li>

    <p>Select the appropriate row in the table below based on the
    value of <var title="">scheme</var> as given by the first cell of
    each row. Then, select the appropriate cell on that row based on
    the value of <var title="">method</var> as given in the first cell
    of each column. Then, jump to the steps named in that cell and
    defined below the table.</p>

    <table><tr><td>
      <th> <a href=#attr-fs-method-get title=attr-fs-method-GET>GET</a>
      <th> <a href=#attr-fs-method-post title=attr-fs-method-POST>POST</a>
      <th> <a href=#attr-fs-method-put title=attr-fs-method-PUT>PUT</a>
      <th> <a href=#attr-fs-method-delete title=attr-fs-method-DELETE>DELETE</a>
     <tr><th> <code title="">http</code>
      <td> <a href=#submit-mutate-action title=submit-mutate-action>Mutate action</a>
      <td> <a href=#submit-body title=submit-body>Submit as entity body</a>
      <td> <a href=#submit-body title=submit-body>Submit as entity body</a>
      <td> <a href=#submit-delete-action title=submit-delete-action>Delete action</a>
     <tr><th> <code title="">https</code>
      <td> <a href=#submit-mutate-action title=submit-mutate-action>Mutate action</a>
      <td> <a href=#submit-body title=submit-body>Submit as entity body</a>
      <td> <a href=#submit-body title=submit-body>Submit as entity body</a>
      <td> <a href=#submit-delete-action title=submit-delete-action>Delete action</a>
     <tr><th> <code title="">ftp</code>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
     <tr><th> <code title="">javascript</code>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
     <tr><th> <code title="">data</code>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
      <td> <a href=#submit-data-post title=submit-data-post>Post to data:</a>
      <td> <a href=#submit-data-put title=submit-data-put>Put to data:</a>
      <td> <a href=#submit-get-action title=submit-get-action>Get action</a>
     <tr><th> <code title="">mailto</code>
      <td> <a href=#submit-mailto-headers title=submit-mailto-headers>Mail with headers</a>
      <td> <a href=#submit-mailto-body title=submit-mailto-body>Mail as body</a>
      <td> <a href=#submit-mailto-headers title=submit-mailto-headers>Mail with headers</a>
      <td> <a href=#submit-mailto-headers title=submit-mailto-headers>Mail with headers</a>
    </table><p>If <var title="">scheme</var> is not one of those listed in
    this table, then the behavior is not defined by this
    specification. User agents should, in the absence of another
    specification defining this, act in a manner analogous to that
    defined in this specification for similar schemes.</p>

    <p>The behaviors are as follows:</p>

    <dl><dt><dfn id=submit-mutate-action title=submit-mutate-action>Mutate action</dfn>
     <dd>

      <p>Let <var title="">query</var> be the result of encoding the
      <var title="">form data set</var> using the <a href=#application/x-www-form-urlencoded-encoding-algorithm><code title="">application/x-www-form-urlencoded</code> encoding
      algorithm</a>, interpreted as a US-ASCII string.</p>

      <p>Let <var title="">destination</var> be a new <a href=#url>URL</a>
      that is equal to the <var title="">action</var> except that its
      <a href=#url-query title=url-query>&lt;query&gt;</a> component is
      replaced by <var title="">query</var> (adding a U+003F QUESTION
      MARK (?)  character if appropriate).</p>

      <p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to <var title="">destination</var>. If <var title="">target browsing context</var> was newly created for
      this purpose by the steps above, then it must be navigated with
      <a href=#replacement-enabled>replacement enabled</a>.</p>

     </dd>

     <dt><dfn id=submit-body title=submit-body>Submit as entity body</dfn>
     <dd>

      <p>Let <var title="">entity body</var> be the result of encoding
      the <var title="">form data set</var> using the
      <a href=#appropriate-form-encoding-algorithm>appropriate form encoding algorithm</a>.</p>

      <p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p>Let <var title="">MIME type</var> be determined as
      follows:</p>

      <dl><dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-urlencoded><a href=#attr-fs-enctype-urlencoded>application/x-www-form-urlencoded</a></code></dt>

       <dd>Let <var title="">MIME type</var> be "<code title="">application/x-www-form-urlencoded</code>".</dd>

       <dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-formdata><a href=#attr-fs-enctype-formdata>multipart/form-data</a></code></dt>

       <dd>Let <var title="">MIME type</var> be "<code title="">multipart/form-data</code>".</dd>

       <dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-text><a href=#attr-fs-enctype-text>text/plain</a></code></dt>

       <dd>Let <var title="">MIME type</var> be "<code title="">text/plain</code>".</dd>

      </dl><p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to <var title="">action</var> using the HTTP
      method given by <var title="">method</var> and with <var title="">entity body</var> as the entity body, of type <var title="">MIME type</var>. If <var title="">target browsing
      context</var> was newly created for this purpose by the steps
      above, then it must be navigated with <a href=#replacement-enabled>replacement
      enabled</a>.</p>

     </dd>

     <dt><dfn id=submit-delete-action title=submit-delete-action>Delete action</dfn>
     <dd>

      <p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to <var title="">action</var> using the DELETE
      method. If <var title="">target browsing context</var> was newly
      created for this purpose by the steps above, then it must be
      navigated with <a href=#replacement-enabled>replacement enabled</a>.</p>

     </dd>

     <dt><dfn id=submit-get-action title=submit-get-action>Get action</dfn>
     <dd>

      <p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to <var title="">action</var>. If <var title="">target browsing context</var> was newly created for
      this purpose by the steps above, then it must be navigated with
      <a href=#replacement-enabled>replacement enabled</a>.</p>

     </dd>

     <dt><dfn id=submit-data-post title=submit-data-post>Post to data:</dfn>
     <dd>

      <p>Let <var title="">data</var> be the result of encoding the
      <var title="">form data set</var> using the <a href=#appropriate-form-encoding-algorithm>appropriate
      form encoding algorithm</a>.</p>

      <p>If <var title="">action</var> contains the string "<code title="">%%%%</code>" (four U+0025 PERCENT SIGN characters),
      then %-escape all bytes in <var title="">data</var> that, if
      interpreted as US-ASCII, do not match the <code title="">unreserved</code> production in the URI Generic Syntax,
      and then, treating the result as a US-ASCII string, further
      %-escape all the U+0025 PERCENT SIGN characters in the resulting
      string and replace the first occurance of "<code title="">%%%%</code>" in <var title="">action</var> with the
      resulting double-escaped string. <a href=#refsRFC3986>[RFC3986]</a></p>

      <p>Otherwise, if <var title="">action</var> contains the string
      "<code title="">%%</code>" (two U+0025 PERCENT SIGN characters
      in a row, but not four), then %-escape all characters in <var title="">data</var> that, if interpreted as US-ASCII, do not
      match the <code title="">unreserved</code> production in the URI
      Generic Syntax, and then, treating the result as a US-ASCII
      string, replace the first occurance of "<code title="">%%</code>" in <var title="">action</var> with the
      resulting escaped string. <a href=#refsRFC3986>[RFC3986]</a></p>

      <p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to the potentially modified <var title="">action</var>. If <var title="">target browsing
      context</var> was newly created for this purpose by the steps
      above, then it must be navigated with <a href=#replacement-enabled>replacement
      enabled</a>.</p>

     </dd>

     <dt><dfn id=submit-data-put title=submit-data-put>Put to data:</dfn>
     <dd>

      <p>Let <var title="">data</var> be the result of encoding the
      <var title="">form data set</var> using the <a href=#appropriate-form-encoding-algorithm>appropriate
      form encoding algorithm</a>.</p>

      <p>Let <var title="">MIME type</var> be determined as
      follows:</p>

      <dl><dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-urlencoded><a href=#attr-fs-enctype-urlencoded>application/x-www-form-urlencoded</a></code></dt>

       <dd>Let <var title="">MIME type</var> be "<code title="">application/x-www-form-urlencoded</code>".</dd>

       <dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-formdata><a href=#attr-fs-enctype-formdata>multipart/form-data</a></code></dt>

       <dd>Let <var title="">MIME type</var> be "<code title="">multipart/form-data</code>".</dd>

       <dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-text><a href=#attr-fs-enctype-text>text/plain</a></code></dt>

       <dd>Let <var title="">MIME type</var> be "<code title="">text/plain</code>".</dd>

      </dl><p>Let <var title="">destination</var> be the result of
      concatenating the following:</p>

      <ol class=brief><li>The string "<code title="">data:</code>".</li>

       <li>The value of <var title="">MIME type</var>.</li>

       <li>The string "<code title="">;base64,</code>".</li>

       <li>A base-64 encoded representation of <var title="">data</var>. <a href=#refsRFC2045>[RFC2045]</a></li>

      </ol><p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to <var title="">destination</var>. If <var title="">target browsing context</var> was newly created for
      this purpose by the steps above, then it must be navigated with
      <a href=#replacement-enabled>replacement enabled</a>.</p>

     </dd>

     <dt><dfn id=submit-mailto-headers title=submit-mailto-headers>Mail with headers</dfn>
     <dd>

      <p>Let <var title="">headers</var> be the resulting encoding the
      <var title="">form data set</var> using the <a href=#application/x-www-form-urlencoded-encoding-algorithm><code title="">application/x-www-form-urlencoded</code> encoding
      algorithm</a>, interpreted as a US-ASCII string.</p>

      <p>Replace occurances of U+002B PLUS SIGN characters (+) in <var title="">headers</var> with the string "<code title="">%20</code>".</p>

      <p>Let <var title="">destination</var> consist of all the
      characters from the first character in <var title="">action</var> to the character immediately before the
      first U+003F QUESTION MARK character (?), if any, or the end of
      the string if there are none.</p>

      <p>Append a single U+003F QUESTION MARK character (?) to <var title="">destination</var>.</p>

      <p>Append <var title="">headers</var> to <var title="">destination</var>.</p>

      <p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to <var title="">destination</var>. If <var title="">target browsing context</var> was newly created for
      this purpose by the steps above, then it must be navigated with
      <a href=#replacement-enabled>replacement enabled</a>.</p>

     </dd>

     <dt><dfn id=submit-mailto-body title=submit-mailto-body>Mail as body</dfn>
     <dd>

      <p>Let <var title="">body</var> be the resulting encoding the
      <var title="">form data set</var> using the <a href=#appropriate-form-encoding-algorithm>appropriate
      form encoding algorithm</a> and then %-escaping all the bytes
      in the resulting byte string that, when interpreted as US-ASCII,
      do not match the <code title="">unreserved</code> production in
      the URI Generic Syntax. <a href=#refsRFC3986>[RFC3986]</a></p>
      
      <p>Let <var title="">destination</var> have the same value as
      <var title="">action</var>.</p>

      <p>If <var title="">destination</var> does not contain a U+003F
      QUESTION MARK character (?), append a single U+003F QUESTION
      MARK character (?) to <var title="">destination</var>. Otherwise, append a single U+0026
      AMPERSAND character (&amp;).</p>

      <p>Append the string "<code title="">body=</code>" to <var title="">destination</var>.</p>

      <p>Append <var title="">body</var>, interpreted as a US-ASCII
      string, to <var title="">destination</var>.</p>

      <p>Let <var title="">target browsing context</var> be <a href=#the-form-submission-target-browsing-context>the
      form submission target browsing context</a>.</p>

      <p><a href=#navigate>Navigate</a> <var title="">target browsing
      context</var> to <var title="">destination</var>. If <var title="">target browsing context</var> was newly created for
      this purpose by the steps above, then it must be navigated with
      <a href=#replacement-enabled>replacement enabled</a>.</p>

     </dd>

    </dl><p><dfn id=the-form-submission-target-browsing-context>The form submission target browsing context</dfn> is
    obtained, when needed by the behaviors described above, as
    follows: If the user indicated a specific <a href=#browsing-context>browsing
    context</a> to use when submitting the form, then that is the
    target browsing context. Otherwise, apply <a href=#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name>the rules for
    choosing a browsing context given a browsing context name</a>
    using <var title="">target</var> as the name and the
    <a href=#browsing-context>browsing context</a> of <var title="">form</var> as the
    context in which the algorithm is executed; the resulting
    <a href=#browsing-context>browsing context</a> is the target browsing context.</p>

    <p>The <dfn id=appropriate-form-encoding-algorithm>appropriate form encoding algorithm</dfn> is
    determined as follows:</p>

    <dl><dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-urlencoded><a href=#attr-fs-enctype-urlencoded>application/x-www-form-urlencoded</a></code></dt>

     <dd>Use the <a href=#application/x-www-form-urlencoded-encoding-algorithm><code title="">application/x-www-form-urlencoded</code> encoding
     algorithm</a>.</dd>

     <dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-formdata><a href=#attr-fs-enctype-formdata>multipart/form-data</a></code></dt>

     <dd>Use the <a href=#multipart/form-data-encoding-algorithm><code title="">multipart/form-data</code> encoding
     algorithm</a>.</dd>

     <dt>If <var title="">enctype</var> is <code title=attr-fs-enctype-text><a href=#attr-fs-enctype-text>text/plain</a></code></dt>

     <dd>Use the <a href=#text/plain-encoding-algorithm><code title="">text/plain</code> encoding
     algorithm</a>.</dd>

    </dl></li>

  </ol><h5 id=url-encoded-form-data><span class=secno>4.10.15.3 </span>URL-encoded form data</h5>

  <p>The <dfn id=application/x-www-form-urlencoded-encoding-algorithm><code title="">application/x-www-form-urlencoded</code> encoding
  algorithm</dfn> is as follows:</p>

  <ol><li><p>Let <var title="">result</var> be the empty string.</li>

   <li>

    <p>If the <code><a href=#the-form-element>form</a></code> element has an <code title=attr-form-accept-charset><a href=#attr-form-accept-charset>accept-charset</a></code> attribute,
    then, taking into account the characters found in the <var title="">form data set</var>'s names and values, and the character
    encodings supported by the user agent, select a character encoding
    from the list given in the <code><a href=#the-form-element>form</a></code>'s <code title=attr-form-accept-charset><a href=#attr-form-accept-charset>accept-charset</a></code> attribute
    that is an <a href=#ascii-compatible-character-encoding>ASCII-compatible character encoding</a>. If
    none of the encodings are supported, then let the selected
    character encoding be UTF-8.</p>

    <p>Otherwise, if the <a href="#document's-character-encoding">document's character encoding</a> is
    an <a href=#ascii-compatible-character-encoding>ASCII-compatible character encoding</a>, then that is
    the selected character encoding.</p>

    <p>Otherwise, let the selected character encoding be UTF-8.</p>

   </li>

   <li><p>Let <var title="">charset</var> be the preferred MIME name
   of the selected character encoding.</li>

   <li><p>If the entry's name is "<code title="">_charset_</code>" and
   its type is "<code title="">hidden</code>", replace its value with
   <var title="">charset</var>.</li>

   <li><p>If the entry's type is "<code title="">file</code>", replace
   its value with the file's filename only.</li>

   <li>

    <p>For each entry in the <var title="">form data set</var>,
    perform these substeps:</p>

    <ol><li><p>For each character in the entry's name and value that
     cannot be expressed using the selected character encoding,
     replace the character by a string consisting of a U+0026
     AMPERSAND character (&amp;), one of more characters in the range
     U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9) representing the
     Unicode codepoint of the character in base ten, and finally a
     U+003B SEMICOLON character (;).</li>

     <li>

      <p>For each character in the entry's name and value, apply the
      following subsubsteps:</p>

      <ol><!-- * - . _ 0-9 a-z A-Z --><li><p>If the character isn't in the range U+0020, U+002A,
       U+002D, U+002E, U+0030 .. U+0039, U+0041 .. U+005A, U+005F,
       U+0061 .. U+007A then replace the character with a string
       formed as follows: Start with the empty string, and then,
       taking each byte of the character when expressed in the
       selected character encoding in turn, append to the string a
       U+0025 PERCENT SIGN character (%) followed by two characters in
       the ranges U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9) and
       U+0041 LATIN CAPITAL LETTER A to U+005A LATIN CAPITAL LETTER Z
       representing the hexadecimal value of the byte (zero-padded if
       necessary).</li>

       <li><p>If the character is a U+0020 SPACE character, replace it
       with a single U+002B PLUS SIGN character (+).</li>

      </ol></li>

     <li><p>If the entry's name is "<code title="">isindex</code>",
     its type is "<code title="">text</code>", and this is the first
     entry in the <var title="">form data set</var>, then append the
     value to <var title="">result</var> and skip the rest of the
     substeps for this entry, moving on to the next entry, if any, or
     the next step in the overall algorithm otherwise.</li>

     <li><p>If this is not the first entry, append a single U+0026
     AMPERSAND character (&amp;) to <var title="">result</var>.</li>

     <li><p>Append the entry's name to <var title="">result</var>.</li>

     <li><p>Append a single U+003D EQUALS SIGN character (=) to <var title="">result</var>.</li>

     <li><p>Append the entry's value to <var title="">result</var>.</li>

    </ol></li>

   <li><p>Encode <var title="">result</var> as US-ASCII and return the
   resulting byte stream.</li>

  </ol><h5 id=multipart-form-data><span class=secno>4.10.15.4 </span>Multipart form data</h5>

  <p>The <dfn id=multipart/form-data-encoding-algorithm><code title="">multipart/form-data</code> encoding
  algorithm</dfn> is to encode the <var title="">form data set</var>
  using the rules described by RFC2388, <cite>Returning Values from
  Forms: <code title="">multipart/form-data</code></cite>, and return
  the resulting byte stream. <a href=#refsRFC2388>[RFC2388]</a></p>

  <p>Each entry in the <var title="">form data set</var> is a
  <i>field</i>, the name of the entry is the <i>field name</i> and the
  value of the entry is the <i>field value</i>.</p>

  <p>The order of parts must be the same as the order of fields in the
  <var title="">form data set</var>. Multiple entries with the same
  name must be treated as distinct fields.</p>

  <!-- XXX define default encoding? -->


  <h5 id=plain-text-form-data><span class=secno>4.10.15.5 </span>Plain text form data</h5>

  <p>The <dfn id=text/plain-encoding-algorithm><code title="">text/plain</code> encoding
  algorithm</dfn> is as follows:</p>

  <ol><li><p>Let <var title="">result</var> be the empty string.</li>

   <li>

    <!-- this is different from application/x-www-form-urlencoded in
    that it isn't limited to ASCII-compatible encodings -->

    <p>If the <code><a href=#the-form-element>form</a></code> element has an <code title=attr-form-accept-charset><a href=#attr-form-accept-charset>accept-charset</a></code> attribute,
    then, taking into account the characters found in the <var title="">form data set</var>'s names and values, and the character
    encodings supported by the user agent, select a character encoding
    from the list given in the <code><a href=#the-form-element>form</a></code>'s <code title=attr-form-accept-charset><a href=#attr-form-accept-charset>accept-charset</a></code>
    attribute. If none of the encodings are supported, then let the
    selected character encoding be UTF-8.</p>

    <p>Otherwise, the selected character encoding is the
    <a href="#document's-character-encoding">document's character encoding</a>.</p>

   </li>

   <li><p>Let <var title="">charset</var> be the preferred MIME name
   of the selected character encoding.</li>

   <li><p>If the entry's name is "<code title="">_charset_</code>" and
   its type is "<code title="">hidden</code>", replace its value with
   <var title="">charset</var>.</li>

   <li><p>If the entry's type is "<code title="">file</code>", replace
   its value with the file's filename only.</li>

   <li>

    <p>For each entry in the <var title="">form data set</var>,
    perform these substeps:</p>

    <ol><li><p>Append the entry's name to <var title="">result</var>.</li>

     <li><p>Append a single U+003D EQUALS SIGN character (=) to <var title="">result</var>.</li>

     <li><p>Append the entry's value to <var title="">result</var>.</li>

     <li><p>Append a U+000D CARRIAGE RETURN (CR) U+000A LINE FEED (LF)
     character pair to <var title="">result</var>.</li>

    </ol></li>

   <li><p>Encode <var title="">result</var> using the selected
   character encoding and return the resulting byte stream.</li>

  </ol><h4 id=resetting-a-form><span class=secno>4.10.16 </span>Resetting a form</h4>

  <p>When a form <var title="">form</var> is <dfn id=concept-form-reset title=concept-form-reset>reset</dfn>, the user agent must invoke
  the <a href=#concept-form-reset-control title=concept-form-reset-control>reset algorithm</a>
  of each <a href=#category-reset title=category-reset>resettable</a> elements
  whose <a href=#form-owner>form owner</a> is <var title="">form</var>, and must
  then <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a> from <var title="">form</var>.</p>

  <p>Each <a href=#category-reset title=category-reset>resettable</a> element
  defines its own <dfn id=concept-form-reset-control title=concept-form-reset-control>reset
  algorithm</dfn>. Changes made to form controls as part of these
  algorithms do not count as changes caused by the user (and thus,
  e.g., do not cause <code title=event-input>input</code> events to
  fire).</p>



  <h4 id=event-dispatch><span class=secno>4.10.17 </span>Event dispatch</h4>

  <p>When the user agent is to <dfn id=broadcast-forminput-events>broadcast <code title=event-forminput>forminput</code> events</dfn> or
  <dfn id=broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code>
  events</dfn> from a <code><a href=#the-form-element>form</a></code> element <var title="">form</var>, it must run the following steps:</p>

  <ol><li><p>Let <var title="">controls</var> be a list of all the <a href=#category-reset title=category-reset>resettable</a> elements whose <a href=#form-owner>form
   owner</a> is <var title="">form</var>.</li>

   <li>If the user agent was to <a href=#broadcast-forminput-events>broadcast <code title=event-forminput>forminput</code> events</a>, let <var title="">event name</var> be <code title=event-forminput>forminput</code>. Otherwise the user agent
   was to <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code> events</a>; let <var title="">event name</var> be <code title=event-formchange>formchange</code>.</li>

   <li><p>For each element in <var title="">controls</var>, in
   <a href=#tree-order>tree order</a>, <a href=#fire-a-simple-event>fire a simple event</a> named
   <var title="">event name</var> at the element.</li>

  </ol><h3 id=interactive-elements><span class=secno>4.11 </span>Interactive elements</h3>

  <h4 id=the-details-element><span class=secno>4.11.1 </span>The <dfn><code>details</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>One <code><a href=#the-legend-element>legend</a></code> element followed by <a href=#flow-content-0>flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-details-open><a href=#attr-details-open>open</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmldetailselement>HTMLDetailsElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute boolean <a href=#dom-details-open title=dom-details-open>open</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-details-element>details</a></code> element <a href=#represents>represents</a> additional
  information or controls which the user can obtain on demand.</p>

  <p class=note>The <code><a href=#the-details-element>details</a></code> element is not appropriate
  for footnotes. Please see <a href=#footnotes>the section on
  footnotes</a> for details on how to mark up footnotes.</p>

  <p>The first element child of a <code><a href=#the-details-element>details</a></code> element, if it
  is a <code><a href=#the-legend-element>legend</a></code> element, <a href=#represents>represents</a> the summary of the
  details.</p>

  <p>If the first element is not a <code><a href=#the-legend-element>legend</a></code> element, the
  UA should provide its own legend (e.g. "Details").</p>

  <p>The <dfn id=attr-details-open title=attr-details-open><code>open</code></dfn>
  content attribute is a <a href=#boolean-attribute>boolean attribute</a>. If present,
  it indicates that the details should be shown to the user. If the
  attribute is absent, the details should not be shown.</p>

  <p>If the attribute is removed, then the details should be
  hidden. If the attribute is added, the details should be shown.</p>

  <p>The user agent should allow the user to request that the details
  be shown or hidden. To honor a request for the details to be shown,
  the user agent must set the <code title=attr-details-open><a href=#attr-details-open>open</a></code> attribute on the element to
  the value <code title="">open</code>. To honour a request for the
  details to be hidden, the user agent must remove the <code title=attr-details-open><a href=#attr-details-open>open</a></code> attribute from the
  element.</p>

  <p>The <dfn id=dom-details-open title=dom-details-open><code>open</code></dfn>
  attribute must <a href=#reflect>reflect</a> the <code title=attr-details-open><a href=#attr-details-open>open</a></code> content attribute.</p>



<div class=bad>
  <h4 id=datagrid><span class=secno>4.11.2 </span>The <dfn><code>datagrid</code></dfn> element</h4>

<p class=XXX>The API here needs rewriting. Don't implement this right now.</p>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dd><a href=#sectioning-root>Sectioning root</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Either: Nothing.</dd>
   <dd>Or: <a href=#flow-content-0>Flow content</a>, but where the first element child node, if any, is not a <code><a href=#the-table-element>table</a></code>, <code><a href=#the-select-element>select</a></code>, or <code><a href=#the-datalist-element>datalist</a></code> element.</dd>
   <dd>Or: A single <code><a href=#the-table-element>table</a></code> element.</dd>
   <dd>Or: A single <code><a href=#the-select-element>select</a></code> element.</dd>
   <dd>Or: A single <code><a href=#the-datalist-element>datalist</a></code> element.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-datagrid-multiple><a href=#attr-datagrid-multiple>multiple</a></code></dd>
   <dd><code title=attr-datagrid-disabled><a href=#attr-datagrid-disabled>disabled</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmldatagridelement>HTMLDataGridElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute <a href=#datagriddataprovider>DataGridDataProvider</a> <a href=#dom-datagrid-data title=dom-datagrid-data>data</a>;
  readonly attribute <a href=#datagridselection>DataGridSelection</a> <a href=#dom-datagrid-selection title=dom-datagrid-selection>selection</a>;
           attribute boolean <a href=#dom-datagrid-multiple title=dom-datagrid-multiple>multiple</a>;
           attribute boolean <a href=#dom-datagrid-disabled title=dom-datagrid-disabled>disabled</a>;
  void <a href=#dom-datagrid-updateeverything title=dom-datagrid-updateEverything>updateEverything</a>();
  void <a href=#dom-datagrid-updaterowschanged title=dom-datagrid-updateRowsChanged>updateRowsChanged</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long count);
  void <a href=#dom-datagrid-updaterowsinserted title=dom-datagrid-updateRowsInserted>updateRowsInserted</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long count);
  void <a href=#dom-datagrid-updaterowsremoved title=dom-datagrid-updateRowsRemoved>updateRowsRemoved</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long count);
  void <a href=#dom-datagrid-updaterowchanged title=dom-datagrid-updateRowChanged>updateRowChanged</a>(in <a href=#rowspecification>RowSpecification</a> row);
  void <a href=#dom-datagrid-updatecolumnchanged title=dom-datagrid-updateColumnChanged>updateColumnChanged</a>(in unsigned long column);
  void <a href=#dom-datagrid-updatecellchanged title=dom-datagrid-updateCellChanged>updateCellChanged</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long column);
};</pre>
   </dd>
  </dl><p class=XXX>One possible thing to be added is a way to
  detect when a row/selection has been deleted, activated, etc, by the
  user (delete key, enter key, etc).</p> <!-- XXXPA -->

  <p>The <code><a href=#datagrid>datagrid</a></code> element <a href=#represents>represents</a> an interactive
  representation of tree, list, or tabular data.</p>

  <p>The data being presented can come either from the content, as
  elements given as children of the <code><a href=#datagrid>datagrid</a></code> element, or
  from a scripted data provider given by the <code title=dom-datagrid-data><a href=#dom-datagrid-data>data</a></code> DOM attribute.</p>

  <p>The <code title=attr-datagrid-multiple><a href=#attr-datagrid-multiple>multiple</a></code> and
  <code title=attr-datagrid-disabled><a href=#attr-datagrid-disabled>disabled</a></code> attributes are
  <a href=#boolean-attribute title="boolean attribute">boolean attributes</a>. Their
  effects are described in the processing model sections below.</p>

  <p>The <dfn id=dom-datagrid-multiple title=dom-datagrid-multiple><code>multiple</code></dfn> and <dfn id=dom-datagrid-disabled title=dom-datagrid-disabled><code>disabled</code></dfn> DOM
  attributes must <a href=#reflect>reflect</a> the <code title=attr-datagrid-multiple><a href=#attr-datagrid-multiple>multiple</a></code> and <code title=attr-datagrid-disabled><a href=#attr-datagrid-disabled>disabled</a></code> content attributes
  respectively.</p>


  <h5 id=the-datagrid-data-model><span class=secno>4.11.2.1 </span>The <code><a href=#datagrid>datagrid</a></code> data model</h5>

  <p><em>This section is non-normative.</em></p>

  <p>In the <code><a href=#datagrid>datagrid</a></code> data model, data is structured as a
  set of rows representing a tree, each row being split into a number
  of columns. The columns are always present in the data model,
  although individual columns may be hidden in the presentation.</p>

  <p>Each row can have child rows. Child rows may be hidden or
  shown, by closing or opening (respectively) the parent row.</p>

  <p>Rows are referred to by the path along the tree that one would
  take to reach the row, using zero-based indices. Thus, the first row
  of a list is row "0", the second row is row "1"; the first child row
  of the first row is row "0,0", the second child row of the first row
  is row "0,1"; the fourth child of the seventh child of the third
  child of the tenth row is "9,2,6,3", etc.</p>

  <p>The columns can have captions. Those captions are not considered
  a row in their own right, they are obtained separately.</p>

  <p>Selection of data in a <code><a href=#datagrid>datagrid</a></code> operates at the row
  level. If the <code title=attr-datagrid-multiple><a href=#attr-datagrid-multiple>multiple</a></code>
  attribute is present, multiple rows can be selected at once,
  otherwise the user can only select one row at a time.</p>

  <p>The <code><a href=#datagrid>datagrid</a></code> element can be disabled entirely by
  setting the <code title=attr-datagrid-disabled><a href=#attr-datagrid-disabled>disabled</a></code>
  attribute.</p>
<!--XXXDND
  <p class="XXX">selection draggable [normative definitions are
  in the interactive part below]</p>
-->

  <p>Columns, rows, and cells can each have specific flags, known as
  classes, applied to them by the data provider. These classes <a href=#datagridClassSummary>affect the functionality</a> of the
  <code><a href=#datagrid>datagrid</a></code> element, and are also <a href=#datagridPseudos>passed to the style system</a>. They are
  similar in concept to the <code title=attr-class><a href=#classes>class</a></code>
  attribute, except that they are not specified on elements but are
  given by scripted data providers.</p> <!-- XXX check xrefs -->


  <h5 id=how-rows-are-identified><span class=secno>4.11.2.2 </span>How rows are identified</h5>

  <p>The chains of numbers that give a row's path, or identifier, are
  represented by objects that implement the
  <a href=#rowspecification>RowSpecification</a> interface.</p>

  <pre class=idl>[NoInterfaceObject] interface <dfn id=rowspecification>RowSpecification</dfn> {
  // binding-specific interface
};</pre>

  <p>In ECMAScript, two classes of objects are said to implement this
  interface: Numbers representing non-negative integers, and
  homogeneous arrays of Numbers representing non-negative
  integers. Thus, <code>[1,0,9]</code> is a
  <a href=#rowspecification>RowSpecification</a>, as is <code>1</code> on its
  own. However, <code>[1,0.2,9]</code> is not a
  <a href=#rowspecification>RowSpecification</a> object, since its second value is not
  an integer.</p>

  <p>User agents must always represent <code><a href=#rowspecification>RowSpecification</a></code>s
  in ECMAScript by using arrays, even if the path only has one
  number.</p>

  <p>The root of the tree is represented by the empty path; in
  ECMAScript, this is the empty array (<code>[]</code>). Only the
  <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount()</a></code> and
  <code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>GetChildAtPosition()</a></code>
  methods ever get called with the empty path.</p>


  <h5 id=the-data-provider-interface><span class=secno>4.11.2.3 </span>The data provider interface</h5>

  <p><em>The conformance criteria in this section apply to any
  implementation of the <code><a href=#datagriddataprovider>DataGridDataProvider</a></code>, including
  (and most commonly) the content author's implementation(s).</em></p>

<p class=XXX>The API here needs rewriting. Don't implement this right now.</p>

  <pre class=idl>// To be implemented by Web authors as a JS object
[NoInterfaceObject] interface <dfn id=datagriddataprovider>DataGridDataProvider</dfn> {
  void <a href=#dom-provider-initialize title=dom-provider-initialize>initialize</a>(in <a href=#htmldatagridelement>HTMLDataGridElement</a> datagrid);
  unsigned long <a href=#dom-provider-getrowcount title=dom-provider-getRowCount>getRowCount</a>(in <a href=#rowspecification>RowSpecification</a> row);
  unsigned long <a href=#dom-provider-getchildatposition title=dom-provider-getChildAtPosition>getChildAtPosition</a>(in <a href=#rowspecification>RowSpecification</a> parentRow, in unsigned long position);
  unsigned long <a href=#dom-provider-getcolumncount title=dom-provider-getColumnCount>getColumnCount</a>();
  DOMString <a href=#dom-provider-getcaptiontext title=dom-provider-getCaptionText>getCaptionText</a>(in unsigned long column);
  void <a href=#dom-provider-getcaptionclasses title=dom-provider-getCaptionClasses>getCaptionClasses</a>(in unsigned long column, in DOMTokenList classes);
  DOMString <a href=#dom-provider-getrowimage title=dom-provider-getRowImage>getRowImage</a>(in <a href=#rowspecification>RowSpecification</a> row);
  <a href=#htmlmenuelement>HTMLMenuElement</a> <a href=#dom-provider-getrowmenu title=dom-provider-getRowMenu>getRowMenu</a>(in <a href=#rowspecification>RowSpecification</a> row);
  void <a href=#dom-provider-getrowclasses title=dom-provider-getRowClasses>getRowClasses</a>(in <a href=#rowspecification>RowSpecification</a> row, in DOMTokenList classes);
  DOMString <a href=#dom-provider-getcelldata title=dom-provider-getCellData>getCellData</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long column);
  void <a href=#dom-provider-getcellclasses title=dom-provider-getCellClasses>getCellClasses</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long column, in DOMTokenList classes);
<!--XXXDND
  boolean <span title="dom-provider-canDrop">canDrop</span>(in <span>RowSpecification</span> row, in <span>RowSpecification</span> position, data);
  boolean <span title="dom-provider-dropped">dropped</span>(in <span>RowSpecification</span> row, in <span>RowSpecification</span> position, data);
-->  void <a href=#dom-provider-togglecolumnsortstate title=dom-provider-toggleColumnSortState>toggleColumnSortState</a>(in unsigned long column);
  void <a href=#dom-provider-setcellcheckedstate title=dom-provider-setCellCheckedState>setCellCheckedState</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long column, in long state);
  void <a href=#dom-provider-cyclecell title=dom-provider-cycleCell>cycleCell</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long column);
  void <a href=#dom-provider-editcell title=dom-provider-editCell>editCell</a>(in <a href=#rowspecification>RowSpecification</a> row, in unsigned long column, in DOMString data);
<!--XXXPA
  void <span title="dom-provider-performAction">performAction</span>(in DOMString action); // required if .performAction() is ever invoked on the datagrid
  void <span title="dom-provider-performActionOnRow">performActionOnRow</span>(in <span>RowSpecification</span> row, in DOMString action); // required if getRowClasses ever includes 'deletable' or if <span title="dom-provider-.performActionOnRow">.performActionOnRow</span>() is ever invoked on the datagrid
  void <span title="dom-provider-performActionOnCell">performActionOnCell</span>(in <span>RowSpecification</span> row, in unsigned long column, in DOMString action); // required if .performActionOnCell() is ever invoked on the datagrid
-->};</pre>
<!-- based on http://lxr.mozilla.org/seamonkey/source/layout/xul/base/src/tree/public/nsITreeView.idl -->

  <p>The <code><a href=#datagriddataprovider>DataGridDataProvider</a></code> interface represents the
  interface that objects must implement to be used as custom data
  views for <code><a href=#datagrid>datagrid</a></code> elements.</p>

  <p>Not all the methods are required. The minimum number of methods
  that must be implemented in a useful view is two: the <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount()</a></code> and <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData()</a></code> methods.</p>

  <p>Once the object is written, it must be hooked up to the
  <code><a href=#datagrid>datagrid</a></code> using the <dfn id=dom-datagrid-data title=dom-datagrid-data><code>data</code></dfn> DOM attribute.</p>

  <p>The following methods may be usefully implemented:</p>

  <dl><dt><dfn id=dom-provider-initialize title=dom-provider-initialize><code>initialize(<var title="">datagrid</var>)</code></dfn></dt>

   <dd>Called by the <code><a href=#datagrid>datagrid</a></code> element (the one given by
   the <var title="">datagrid</var> argument) after it has first
   populated itself. This would typically be used to set the initial
   selection of the <code><a href=#datagrid>datagrid</a></code> element when it is first
   loaded. The data provider could also use this method call to
   register a <code title=event-select><a href=#event-select>select</a></code> event handler
   on the <code><a href=#datagrid>datagrid</a></code> in order to monitor selection
   changes.</dd>

   <dt><dfn id=dom-provider-getrowcount title=dom-provider-getRowCount><code>getRowCount(<var title="">row</var>)</code></dfn></dt>

   <dd>Must return the number of rows that are children of the
   specified <var title="">row</var>, including rows that are
   off-screen. If <var title="">row</var> is empty, then the number of
   rows at the top level must be returned. If the value that this
   method would return for a given <var title="">row</var> changes,
   the relevant update methods on the <code><a href=#datagrid>datagrid</a></code> must be
   called first. Otherwise, this method must always return the same
   number. For a list (as opposed to a tree), this method must return
   0 whenever it is called with a <var title="">row</var> identifier
   that is not empty.</dd>

   <dt><dfn id=dom-provider-getchildatposition title=dom-provider-getChildAtPosition><code>getChildAtPosition(<var title="">parentRow</var>, <var title="">position</var>)</code></dfn></dt>

   <dd>Must return the index of the row that is a child of <var title="">parentRow</var> and that is to be positioned as the <var title="">position</var>th row under <var title="">parentRow</var>
   when rendering the children of <var title="">parentRow</var>. If
   <var title="">parentRow</var> is empty, then <var title="">position</var> refers to the <var title="">position</var>th row at the top level of the data
   grid. May be omitted if the rows are always to be sorted in the
   natural order. (The natural order is the one where the method
   always returns <var title="">position</var>.) For a given <var title="">parentRow</var>, this method must never return the same
   value for different values of <var title="">position</var>. The
   returned value <var title="">x</var> must be in the range
   0&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<var title="">n</var>, where <var title="">n</var> is the value returned
   by <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount(<var title="">parentRow</var>)</a></code>.</dd>

   <dt><dfn id=dom-provider-getcolumncount title=dom-provider-getColumnCount><code>getColumnCount()</code></dfn></dt>

   <dd>Must return the number of columns currently in the data model
   (including columns that might be hidden). May be omitted if there
   is only one column. If the value that this method would return
   changes, the <code><a href=#datagrid>datagrid</a></code>'s <code title=dom-datagrid-updateEverything><a href=#dom-datagrid-updateeverything>updateEverything()</a></code>
   method must be called.</dd>

   <dt><dfn id=dom-provider-getcaptiontext title=dom-provider-getCaptionText><code>getCaptionText(<var title="">column</var>)</code></dfn></dt>

   <dd>Must return the caption, or label, for column <var title="">column</var>. May be omitted if the columns have no
   captions. If the value that this method would return changes, the
   <code><a href=#datagrid>datagrid</a></code>'s <code title=dom-datagrid-updateColumnChanged><a href=#dom-datagrid-updatecolumnchanged>updateColumnChanged()</a></code>
   method must be called with the appropriate column index.</dd>

   <dt><dfn id=dom-provider-getcaptionclasses title=dom-provider-getCaptionClasses><code>getCaptionClasses(<var title="">column</var>, <var title="">classes</var>)</code></dfn></dt>

   <dd>Must add the classes that apply to column <var title="">column</var> to the <var title="">classes</var> object.
   May be omitted if the columns have no special classes. If the
   classes that this method would add changes, the
   <code><a href=#datagrid>datagrid</a></code>'s <code title=dom-datagrid-updateColumnChanged><a href=#dom-datagrid-updatecolumnchanged>updateColumnChanged()</a></code>
   method must be called with the appropriate column index. Some
   classes have <a href=#datagridClassSummary>predefined
   meanings</a>.</dd>

   <dt><dfn id=dom-provider-getrowimage title=dom-provider-getRowImage><code>getRowImage(<var title="">row</var>)</code></dfn></dt>

   <dd>Must return a <a href=#url>URL</a> giving the address of an image
   that represents row <var title="">row</var>, or the empty string if
   there is no applicable image. May be omitted if no rows have
   associated images. If the value that this method would return
   changes, the <code><a href=#datagrid>datagrid</a></code>'s update methods must be called
   to update the row in question.</dd>

   <dt><dfn id=dom-provider-getrowmenu title=dom-provider-getRowMenu><code>getRowMenu(<var title="">row</var>)</code></dfn></dt>

   <dd>Must return an <code><a href=#htmlmenuelement>HTMLMenuElement</a></code> object that is to
   be used as a context menu for row <var title="">row</var>, or null
   if there is no particular context menu. May be omitted if none of
   the rows have a special context menu. As this method is called
   immediately before showing the menu in question, no precautions
   need to be taken if the return value of this method changes.</dd>

   <dt><dfn id=dom-provider-getrowclasses title=dom-provider-getRowClasses><code>getRowClasses(<var title="">row</var>, <var title="">classes</var>)</code></dfn></dt>

   <dd>Must add the classes that apply to row <var title="">row</var>
   to the <var title="">classes</var> object. May be omitted if the
   rows have no special classes. If the classes that this method would
   add changes, the <code><a href=#datagrid>datagrid</a></code>'s update methods must be
   called to update the row in question. Some classes have <a href=#datagridClassSummary>predefined meanings</a>.</dd>

   <dt><dfn id=dom-provider-getcelldata title=dom-provider-getCellData><code>getCellData(<var title="">row</var>, <var title="">column</var>)</code></dfn></dt>

   <dd>Must return the value of the cell on row <var title="">row</var> in column <var title="">column</var>. For text
   cells, this must be the text to show for that cell. For <a href=#datagrid-cell-class-progress title=datagrid-cell-class-progress>progress bar cells</a>,
   this must be either a floating point number in the range 0.0 to 1.0
   (converted to a string representation<!-- XXX this isn't
   technically enough to define what the author must be doing here,
   but let's let that slide until someone notices -->), indicating the
   fraction of the progress bar to show as full (1.0 meaning
   complete), or the empty string, indicating an indeterminate
   progress bar. If the value that this method would return changes,
   the <code><a href=#datagrid>datagrid</a></code>'s update methods must be called to update
   the rows that changed. If only one cell changed, the <code title=dom-datagrid-updateCellChanged><a href=#dom-datagrid-updatecellchanged>updateCellChanged()</a></code>
   method may be used.</dd>

   <dt><dfn id=dom-provider-getcellclasses title=dom-provider-getCellClasses><code>getCellClasses(<var title="">row</var>, <var title="">column</var>, <var title="">classes</var>)</code></dfn></dt>

   <dd>Must add the classes that apply to the cell on row <var title="">row</var> in column <var title="">column</var> to the <var title="">classes</var> object. May be omitted if the cells have no
   special classes. If the classes that this method would add changes,
   the <code><a href=#datagrid>datagrid</a></code>'s update methods must be called to update
   the rows or cells in question. Some classes have <a href=#datagridClassSummary>predefined meanings</a>.</dd>

   <dt><dfn id=dom-provider-togglecolumnsortstate title=dom-provider-toggleColumnSortState><code>toggleColumnSortState(<var title="">column</var>)</code></dfn></dt>

   <dd>Called by the <code><a href=#datagrid>datagrid</a></code> when the user tries to sort
   the data using a particular column <var title="">column</var>. The
   data provider must update its state so that the <code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>GetChildAtPosition()</a></code>
   method returns the new order, and the classes of the columns
   returned by <code title=dom-provider-getCaptionClasses><a href=#dom-provider-getcaptionclasses>getCaptionClasses()</a></code>
   represent the new sort status. There is no need to tell the
   <code><a href=#datagrid>datagrid</a></code> that it the data has changed, as the
   <code><a href=#datagrid>datagrid</a></code> automatically assumes that the entire data
   model will need updating.</dd>

   <dt><dfn id=dom-provider-setcellcheckedstate title=dom-provider-setCellCheckedState><code>setCellCheckedState(<var title="">row</var>, <var title="">column</var>, <var title="">state</var>)</code></dfn></dt>

   <dd>Called by the <code><a href=#datagrid>datagrid</a></code> when the user changes the
   state of a checkbox cell on row <var title="">row</var>, column
   <var title="">column</var>. The checkbox should be toggled to the
   state given by <var title="">state</var>, which is a positive
   integer (1) if the checkbox is to be checked, zero (0) if it is to
   be unchecked, and a negative number (&minus;1) if it is to be set to the
   indeterminate state. There is no need to tell the
   <code><a href=#datagrid>datagrid</a></code> that the cell has changed, as the
   <code><a href=#datagrid>datagrid</a></code> automatically assumes that the given cell
   will need updating.</dd>

   <dt><dfn id=dom-provider-cyclecell title=dom-provider-cycleCell><code>cycleCell(<var title="">row</var>, <var title="">column</var>)</code></dfn></dt>

   <dd>Called by the <code><a href=#datagrid>datagrid</a></code> when the user changes the
   state of a cyclable cell on row <var title="">row</var>, column
   <var title="">column</var>. The data provider should change the
   state of the cell to the new state, as appropriate. There is no
   need to tell the <code><a href=#datagrid>datagrid</a></code> that the cell has
   changed, as the <code><a href=#datagrid>datagrid</a></code> automatically assumes that
   the given cell will need updating.</dd>

   <dt><dfn id=dom-provider-editcell title=dom-provider-editCell><code>editCell(<var title="">row</var>, <var title="">column</var>, <var title="">data</var>)</code></dfn></dt>

   <dd>Called by the <code><a href=#datagrid>datagrid</a></code> when the user edits the
   cell on row <var title="">row</var>, column <var title="">column</var>. The new value of the cell is given by <var title="">data</var>. The data provider should update the cell
   accordingly. There is no need to tell the <code><a href=#datagrid>datagrid</a></code>
   that the cell has changed, as the <code><a href=#datagrid>datagrid</a></code>
   automatically assumes that the given cell will need updating.</dd>

<!--XXXPA
  void performAction(in DOMString action); // required if .performAction() is ever invoked on the datagrid
  void performActionOnRow(in <span>RowSpecification</span> row, in DOMString action); // required if getRowClasses ever includes 'deletable' or if .performActionOnRow() is ever invoked on the datagrid
  void performActionOnCell(in <span>RowSpecification</span> row, in unsigned long column, in DOMString action); // required if .performActionOnCell() is ever invoked on the datagrid
-->

  </dl><p>The following classes (for rows, columns, and cells) may be
  usefully used in conjunction with this interface:</p>

  <table id=datagridClassSummary><tr><th>Class name</th>
    <th>Applies to</th>
    <th>Description</th>
   <tr><td><!--checked--><dfn id=datagrid-cell-class-checked title=datagrid-cell-class-checked><code>checked</code></dfn></td>
    <td>Cells</td>
    <td>The cell has a checkbox and it is checked. (The <code title=datagrid-cell-class-cyclable><a href=#datagrid-cell-class-cyclable>cyclable</a></code> and <code title=datagrid-cell-class-progress><a href=#datagrid-cell-class-progress>progress</a></code> classes
    override this, though.)</td>
   <tr><td><!--cyclable--><dfn id=datagrid-cell-class-cyclable title=datagrid-cell-class-cyclable><code>cyclable</code></dfn></td>
    <td>Cells</td>
    <td>The cell can be cycled through multiple values. (The <code title=datagrid-cell-class-progress><a href=#datagrid-cell-class-progress>progress</a></code> class
    overrides this, though.)</td>
   <tr><td><!--editable--><dfn id=datagrid-cell-class-editable title=datagrid-cell-class-editable><code>editable</code></dfn></td>
    <td>Cells</td>
    <td>The cell can be edited. (The <code title=datagrid-cell-class-cyclable><a href=#datagrid-cell-class-cyclable>cyclable</a></code>, <code title=datagrid-cell-class-progress><a href=#datagrid-cell-class-progress>progress</a></code>, <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>checked</a></code>, <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>unchecked</a></code> and <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>indeterminate</a></code> classes
    override this, though.)</td>
   <tr><td><!--header--><dfn id=datagrid-row-class-header title=datagrid-row-class-header><code>header</code></dfn></td>
    <td>Rows</td>
    <td>The row is a heading, not a data row.</td>
   <tr><td><!--indeterminate--><dfn id=datagrid-cell-class-indeterminate title=datagrid-cell-class-indeterminate><code>indeterminate</code></dfn></td>
    <td>Cells</td>
    <td>The cell has a checkbox, and it can be set to an indeterminate
    state. If neither the <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>checked</a></code> nor <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>unchecked</a></code> classes are
    present, then the checkbox is in that state, too. (The <code title=datagrid-cell-class-cyclable><a href=#datagrid-cell-class-cyclable>cyclable</a></code> and <code title=datagrid-cell-class-progress><a href=#datagrid-cell-class-progress>progress</a></code> classes
    override this, though.)</td>
   <tr><td><!--initially-hidden--><dfn id=datagrid-column-class-initially-hidden title=datagrid-column-class-initially-hidden><code>initially-hidden</code></dfn></td>
    <td>Columns</td>
    <td>The column will not be shown when the <code><a href=#datagrid>datagrid</a></code> is
    initially rendered. If this class is not present on the column
    when the <code><a href=#datagrid>datagrid</a></code> is initially rendered, the column
    will be visible if space allows.</td>
   <tr><td><!--initially-closed--><dfn id=datagrid-row-class-initially-closed title=datagrid-row-class-initially-closed><code>initially-closed</code></dfn></td>
    <td>Rows</td>
    <td>The row will be closed when the <code><a href=#datagrid>datagrid</a></code> is
    initially rendered. If neither this class nor the <code title=datagrid-row-class-initially-open><a href=#datagrid-row-class-initially-open>initially-open</a></code>
    class is present on the row when the <code><a href=#datagrid>datagrid</a></code> is
    initially rendered, the initial state will depend on platform
    conventions.</td>
   <tr><td><!--initially-open--><dfn id=datagrid-row-class-initially-open title=datagrid-row-class-initially-open><code>initially-open</code></dfn></td>
    <td>Rows</td>
    <td>The row will be opened when the <code><a href=#datagrid>datagrid</a></code> is
    initially rendered. If neither this class nor the <code title=datagrid-row-class-initially-closed><a href=#datagrid-row-class-initially-closed>initially-closed</a></code>
    class is present on the row when the <code><a href=#datagrid>datagrid</a></code> is
    initially rendered, the initial state will depend on platform
    conventions.</td>
   <tr><td><!--progress--><dfn id=datagrid-cell-class-progress title=datagrid-cell-class-progress><code>progress</code></dfn></td>
    <td>Cells</td>
    <td>The cell is a progress bar.</td>
   <tr><td><!--reversed--><dfn id=datagrid-column-class-reversed title=datagrid-column-class-reversed><code>reversed</code></dfn></td>
    <td>Columns</td>
    <td>If the cell is sorted, the sort direction is descending,
    instead of ascending.</td>
   <tr><td><!--selectable-separator--><dfn id=datagrid-row-class-selectable-separator title=datagrid-row-class-selectable-separator><code>selectable-separator</code></dfn></td>
    <td>Rows</td>
    <td>The row is a normal, selectable, data row, except that instead
    of having data, it only has a separator. (The <code title=datagrid-row-class-header><a href=#datagrid-row-class-header>header</a></code> and <code title=datagrid-row-class-separator><a href=#datagrid-row-class-separator>separator</a></code> classes
    override this, though.)</td>
   <tr><td><!--separator--><dfn id=datagrid-row-class-separator title=datagrid-row-class-separator><code>separator</code></dfn></td>
    <td>Rows</td>
    <td>The row is a separator row, not a data row. (The <code title=datagrid-row-class-header><a href=#datagrid-row-class-header>header</a></code> class
    overrides this, though.)</td>
   <tr><td><!--sortable--><dfn id=datagrid-column-class-sortable title=datagrid-column-class-sortable><code>sortable</code></dfn></td>
    <td>Columns</td>
    <td>The data can be sorted by this column.</td>
   <tr><td><!--sorted--><dfn id=datagrid-column-class-sorted title=datagrid-column-class-sorted><code>sorted</code></dfn></td>
    <td>Columns</td>
    <td>The data is sorted by this column. Unless the <code title=datagrid-column-class-reversed><a href=#datagrid-column-class-reversed>reversed</a></code> class is
    also present, the sort direction is ascending.</td>
   <tr><td><!--unchecked--><dfn id=datagrid-cell-class-unchecked title=datagrid-cell-class-unchecked><code>unchecked</code></dfn></td>
    <td>Cells</td>
    <td>The cell has a checkbox and, unless the <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>checked</a></code> class is
    present as well, it is unchecked. (The <code title=datagrid-cell-class-cyclable><a href=#datagrid-cell-class-cyclable>cyclable</a></code> and <code title=datagrid-cell-class-progress><a href=#datagrid-cell-class-progress>progress</a></code> classes
    override this, though.)</td>
   </tr><!--XXXPA
   <tr>
    <td><!- -deletable- -><dfn title="datagrid-row-class-deletable"><code>deletable</code></dfn></td>
    <td>Rows</td>
    <td></td>
   </tr>
--></table><h5 id=the-default-data-provider><span class=secno>4.11.2.4 </span>The default data provider</h5>

  <p>The user agent must supply a default data provider for the case
  where the <code><a href=#datagrid>datagrid</a></code>'s <code title=dom-datagrid-data><a href=#dom-datagrid-data>data</a></code> attribute is null. It must act
  as described in this section.</p>

  <p>The behavior of the default data provider depends on the nature
  of the first element child of the <code><a href=#datagrid>datagrid</a></code>.</p>

  <dl class=switch><!-- XXX some of these entries say "the method must return" and
   other say "the characteristic must be"; this should be rationalized
   --><dt>While the first element child is a <code><a href=#the-table-element>table</a></code> element</dt>

   <dd>

    <p><strong><code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount(<var title="">row</var>)</a></code></strong>:
    The number of rows returned by the default data provider for the
    root of the tree (when <var title="">row</var> is empty) must be the total number of <code><a href=#the-tr-element>tr</a></code> elements
    that are children of <code><a href=#the-tbody-element>tbody</a></code> elements that are children
    of the <code><a href=#the-table-element>table</a></code>, if there are any such child
    <code><a href=#the-tbody-element>tbody</a></code> elements. If there are no such
    <code><a href=#the-tbody-element>tbody</a></code> elements then the number of rows returned for
    the root must be the number of <code><a href=#the-tr-element>tr</a></code> elements that are
    children of the <code><a href=#the-table-element>table</a></code>.</p>

    <p>When <var title="">row</var> is not empty, the number of rows
    returned must be zero.</p>

    <p class=note>The <code><a href=#the-table-element>table</a></code>-based default data provider
    cannot represent a tree.</p>

    <p class=note>Rows in <code><a href=#the-thead-element>thead</a></code> elements do not
    contribute to the number of rows returned, although they do affect
    the columns and column captions. Rows in <code><a href=#the-tfoot-element>tfoot</a></code>
    elements are <a href=#ignore title=ignore>ignored</a> completely by
    this algorithm.</p>

    <p id=defaultDataProviderTableMapper><strong><code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>getChildAtPosition(<var title="">row</var>, <var title="">i</var>)</a></code></strong>: The
    default data provider must return the mapping appropriate to the
    <a href=#defaultDataProviderTableSort>current sort
    order</a>.</p>

    <p><strong><code title=dom-provider-getColumnCount><a href=#dom-provider-getcolumncount>getColumnCount()</a></code></strong>:
    The number of columns returned must be the number of
    <code><a href=#the-td-element>td</a></code> element children in the first <code><a href=#the-tr-element>tr</a></code>
    element child of the first <code><a href=#the-tbody-element>tbody</a></code> element child of the
    <code><a href=#the-table-element>table</a></code>, if there are any such <code><a href=#the-tbody-element>tbody</a></code>
    elements. If there are no such <code><a href=#the-tbody-element>tbody</a></code> elements, then
    it must be the number of <code><a href=#the-td-element>td</a></code> element children in the
    first <code><a href=#the-tr-element>tr</a></code> element child of the <code><a href=#the-table-element>table</a></code>, if
    any, or otherwise 1. If the number that would be returned by these
    rules is 0, then 1 must be returned instead.</p>

    <p><strong><code title=dom-provider-getCaptionText><a href=#dom-provider-getcaptiontext>getCaptionText(<var title="">i</var>)</a></code></strong>: If the <code><a href=#the-table-element>table</a></code> has
    no <code><a href=#the-thead-element>thead</a></code> element child, or if its first
    <code><a href=#the-thead-element>thead</a></code> element child has no <code><a href=#the-tr-element>tr</a></code> element
    child, the default data provider must return the empty string for
    all captions. Otherwise, the value of the <code><a href=#textcontent>textContent</a></code>
    attribute of the <var title="">i</var>th <code><a href=#the-th-element>th</a></code> element
    child of the first <code><a href=#the-tr-element>tr</a></code> element child of the first
    <code><a href=#the-thead-element>thead</a></code> element child of the <code><a href=#the-table-element>table</a></code> element
    must be returned. If there is no such <code><a href=#the-th-element>th</a></code> element, the
    empty string must be returned.</p>

    <p><strong><code title=dom-provider-getCaptionClasses><a href=#dom-provider-getcaptionclasses>getCaptionClasses(<var title="">i</var>, <var title="">classes</var>)</a></code></strong>: If
    the <code><a href=#the-table-element>table</a></code> has no <code><a href=#the-thead-element>thead</a></code> element child, or
    if its first <code><a href=#the-thead-element>thead</a></code> element child has no
    <code><a href=#the-tr-element>tr</a></code> element child, the default data provider must not
    add any classes for any of the captions. Otherwise, each class
    in the <code title=attr-class><a href=#classes>class</a></code> attribute of the <var title="">i</var>th <code><a href=#the-th-element>th</a></code> element child of the first
    <code><a href=#the-tr-element>tr</a></code> element child of the first <code><a href=#the-thead-element>thead</a></code>
    element child of the <code><a href=#the-table-element>table</a></code> element must be added to
    the <var title="">classes</var>. If there is no such
    <code><a href=#the-th-element>th</a></code> element, no classes must be added. The user agent
    must then:</p>

    <ol><li>Remove the <code title=datagrid-column-class-sorted><a href=#datagrid-column-class-sorted>sorted</a></code> and <code title=datagrid-column-class-reversed><a href=#datagrid-column-class-reversed>reversed</a></code>
     classes.</li>

     <li>If the <code><a href=#the-table-element>table</a></code> element has a <code title=attr-class><a href=#classes>class</a></code> attribute that includes the <code title="">sortable</code> class, add the <code title=datagrid-column-class-sortable><a href=#datagrid-column-class-sortable>sortable</a></code>
     class.</li>

     <li>If the column is the one currently being used to
     sort the data, add the <code title=datagrid-column-class-sorted><a href=#datagrid-column-class-sorted>sorted</a></code> class.</li>

     <li>If the column is the one currently being used to sort the
     data, and it is sorted in descending order, add the <code title=datagrid-column-class-reversed><a href=#datagrid-column-class-reversed>reversed</a></code> class as
     well.</li>

    </ol><p>The various row- and cell- related methods operate relative to
    a particular element, the element of the row or cell specified by
    their arguments.</p>

    <p><strong>For rows</strong>: Since the default data provider for
    a <code><a href=#the-table-element>table</a></code> always returns 0 as the number of children
    for any row other than the root, the path to the row passed to
    these methods will always consist of a single number. In the prose
    below, this number is referred to as <var title="">i</var>.</p>

    <p>If the <code><a href=#the-table-element>table</a></code> has <code><a href=#the-tbody-element>tbody</a></code> element
    children, the element for the <var title="">i</var>th row is the
    <var title="">i</var>th <code><a href=#the-tr-element>tr</a></code> element that is a child of
    a <code><a href=#the-tbody-element>tbody</a></code> element that is a child of the
    <code><a href=#the-table-element>table</a></code> element. If the <code><a href=#the-table-element>table</a></code> does not
    have <code><a href=#the-tbody-element>tbody</a></code> element children, then the element for the
    <var title="">i</var>th real row is the <var title="">i</var>th
    <code><a href=#the-tr-element>tr</a></code> element that is a child of the <code><a href=#the-table-element>table</a></code>
    element.</p>

    <p><strong>For cells</strong>: Given a row and its element, the
    row's <var title="">i</var>th cell's element is the <var title="">i</var>th <code><a href=#the-td-element>td</a></code> element child of the row
    element.</p>

    <p class=note>The <code>colspan</code> and <code>rowspan</code>
    attributes are <a href=#ignore title=ignore>ignored</a> by this
    algorithm.</p>

    <p><strong><code title=dom-provider-getRowImage><a href=#dom-provider-getrowimage>getRowImage(<var title="">i</var>)</a></code></strong>: The <a href=#url>URL</a> of the
    row's image is the <a href=#absolute-url>absolute URL</a> obtained by <a href=#resolve-a-url title="resolve a url">resolving</a> the value of the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute of the first
    <code><a href=#the-img-element>img</a></code> element child of the row's first cell's element,
    relative to that element, if there is one and resolving its
    attribute is successful. Otherwise, the <a href=#url>URL</a> of the
    row's image is the empty string.</p> <!-- note that if the base
    URL has changed, this URL can be different than the one that the
    <img> element fetched when it was created -->

    <p><strong><code title=dom-provider-getRowMenu><a href=#dom-provider-getrowmenu>getRowMenu(<var title="">i</var>)</a></code></strong>: If the row's first cell's
    element has a <code><a href=#menus>menu</a></code> element child, then the row's menu
    is the first <code><a href=#menus>menu</a></code> element child of the row's first
    cell's element. Otherwise, the row has no menu.</p>

    <p><strong><code title=dom-provider-getRowClasses><a href=#dom-provider-getrowclasses>getRowClasses(<var title="">i</var>, <var title="">classes</var>)</a></code></strong>:
    The default data provider must never add a class to the row's
    classes.</p>

    <p id=defaultDataProviderTableSort><strong><code title=dom-provider-toggleColumnSortState><a href=#dom-provider-togglecolumnsortstate>toggleColumnSortState(<var title="">i</var>)</a></code></strong>: If the data is already being
    sorted on the given column, then the user agent must change the
    current sort mapping to be the inverse of the current sort
    mapping; if the sort order was ascending before, it is now
    descending, otherwise it is now ascending. Otherwise, if the
    current sort column is another column, or the data model is
    currently not sorted, the user agent must create a new mapping,
    which maps rows in the data model to rows in the DOM so that the
    rows in the data model are sorted by the specified column, in
    ascending order. (Which sort comparison operator to use is left up
    to the UA to decide.)</p>

    <p>When the sort mapping is changed, the values returned by the
    <code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>getChildAtPosition()</a></code>
    method for the default data provider <a href=#defaultDataProviderTableMapper>will change
    appropriately</a>.</p>

    <p><strong><code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData(<var title="">i</var>, <var title="">j</var>)</a></code>, <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses(<var title="">i</var>, <var title="">j</var>, <var title="">classes</var>)</a></code>, <code title=dom-provider-setCellCheckedState><a href=#dom-provider-setcellcheckedstate>getCellCheckedState(<var title="">i</var>, <var title="">j</var>, <var title="">state</var>)</a></code>, <code title=dom-provider-cycleCell><a href=#dom-provider-cyclecell>cycleCell(<var title="">i</var>,
    <var title="">j</var>)</a></code>, and <code title=dom-provider-editCell><a href=#dom-provider-editcell>editCell(<var title="">i</var>,
    <var title="">j</var>, <var title="">data</var>)</a></code></strong>:
    See <a href=#commonDefaultDataGridMethodDefinitions>the common
    definitions below</a>.</p>

    <p>The data provider must call the <code><a href=#datagrid>datagrid</a></code>'s update
    methods appropriately whenever the descendants of the
    <code><a href=#datagrid>datagrid</a></code> mutate. For example, if a <code><a href=#the-tr-element>tr</a></code> is
    removed, then the <code title=dom-datagrid-updateRowsRemoved><a href=#dom-datagrid-updaterowsremoved>updateRowsRemoved()</a></code>
    methods would probably need to be invoked, and any change to a
    cell or its descendants must cause the cell to be updated. If the
    <code><a href=#the-table-element>table</a></code> element stops being the first child of the
    <code><a href=#datagrid>datagrid</a></code>, then the data provider must call the <code title=dom-datagrid-updateEverything><a href=#dom-datagrid-updateeverything>updateEverything()</a></code>
    method on the <code><a href=#datagrid>datagrid</a></code>. Any change to a cell that is
    in the column that the data provider is currently using as its
    sort column must also cause the sort to be reperformed, with a
    call to <code title=dom-datagrid-updateEverything><a href=#dom-datagrid-updateeverything>updateEverything()</a></code> if
    the change did affect the sort order.</p>

   </dd>


   <dt>While the first element child is a <code><a href=#the-select-element>select</a></code> or <code><a href=#the-datalist-element>datalist</a></code> element</dt>

   <dd>

    <p>The default data provider must return 1 for the column count,
    the empty string for the column's caption, and must not add any
    classes to the column's classes.</p>

    <p>For the rows, assume the existence of a node filter view of the
    descendants of the first element child of the
    <code><a href=#datagrid>datagrid</a></code> element (the <code><a href=#the-select-element>select</a></code> or
    <code><a href=#the-datalist-element>datalist</a></code> element), that skips all nodes other than
    <code><a href=#the-optgroup-element>optgroup</a></code> and <code><a href=#the-option-element>option</a></code> elements, as well as
    any descendents of any <code><a href=#the-option-element>option</a></code> elements.</p>

    <p>Given a path <var title="">row</var>, the corresponding element
    is the one obtained by drilling into the view, taking the child
    given by the path each time.</p>

    <div class=example>

     <p>Given the following XML markup:</p>

     <pre>&lt;datagrid&gt;
 &lt;select&gt;
  &lt;!-- the options and optgroups have had their labels and values removed
       to make the underlying structure clearer --&gt;
  &lt;optgroup&gt;
   &lt;option/&gt;
   &lt;option/&gt;
  &lt;/optgroup&gt;
  &lt;optgroup&gt;
   &lt;option/&gt;
   &lt;optgroup id="a"&gt;
    &lt;option/&gt;
    &lt;option/&gt;
    &lt;bogus/&gt;
    &lt;option id="b"/&gt;
   &lt;/optgroup&gt;
   &lt;option/&gt;
  &lt;/optgroup&gt;
 &lt;/select&gt;
&lt;/datagrid&gt;</pre>

     <p>The path "1,1,2" would select the element with ID "b". In the
     filtered view, the text nodes, comment nodes, and bogus elements
     are ignored; so for instance, the element with ID "a" (path
     "1,1") has only 3 child nodes in the view.</p>

    </div>

    <p><code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount(<var title="">row</var>)</a></code> must drill through the view to find the
    element corresponding to the method's argument, and return the
    number of child nodes in the filtered view that the corresponding
    element has. (If the <var title="">row</var> is empty, the
    corresponding element is the <code><a href=#the-select-element>select</a></code> element at the
    root of the filtered view.)</p>

    <p><code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>getChildAtPosition(<var title="">row</var>, <var title="">position</var>)</a></code> must
    return <var title="">position</var>. (The
    <code><a href=#the-select-element>select</a></code>/<code><a href=#the-datalist-element>datalist</a></code> default data provider
    does not support sorting the data grid.)</p>

    <p><code title=dom-provider-getRowImage><a href=#dom-provider-getrowimage>getRowImage(<var title="">i</var>)</a></code> must return the empty string, <code title=dom-provider-getRowMenu><a href=#dom-provider-getrowmenu>getRowMenu(<var title="">i</var>)</a></code> must return null.</p>

    <p><code title=dom-provider-getRowClasses><a href=#dom-provider-getrowclasses>getRowClasses(<var title="">row</var>, <var title="">classes</var>)</a></code> must add the
    classes from the following list to <var title="">classes</var>
    when their condition is met:</p>

    <ul><li>If the <var title="">row</var>'s corresponding element is an
     <code><a href=#the-optgroup-element>optgroup</a></code> element: <code title=datagrid-row-class-header><a href=#datagrid-row-class-header>header</a></code></li>

     <li>If the <var title="">row</var>'s corresponding element
     contains other elements that are also in the view, and the
     element's <code title=attr-class><a href=#classes>class</a></code> attribute
     contains the <code title="">closed</code> class: <code title=datagrid-row-class-initially-closed><a href=#datagrid-row-class-initially-closed>initially-closed</a></code></li>

     <li>If the <var title="">row</var>'s corresponding element
     contains other elements that are also in the view, and the
     element's <code title=attr-class><a href=#classes>class</a></code> attribute
     contains the <code title="">open</code> class: <code title=datagrid-row-class-initially-open><a href=#datagrid-row-class-initially-open>initially-open</a></code></li>

    </ul><p>The <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData(<var title="">row</var>, <var title="">cell</var>)</a></code> method must
    return the value of the <code title=attr-optgroup-label><a href=#attr-optgroup-label>label</a></code> attribute if the <var title="">row</var>'s corresponding element is an
    <code><a href=#the-optgroup-element>optgroup</a></code> element, otherwise, if the <var title="">row</var>'s corresponding element is an
    <code><a href=#the-option-element>option</a></code>element, its <code title=attr-option-label><a href=#attr-option-label>label</a></code> attribute if it has one,
    otherwise the value of its <code><a href=#textcontent>textContent</a></code> DOM
    attribute.</p>

    <p>The <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses(<var title="">row</var>, <var title="">cell</var>, <var title="">classes</var>)</a></code> method must add no classes.</p>

    <p class=XXX><!-- select-provider-selection
    XXX-->autoselect some rows when initialized, reflect the selection
    in the select, reflect the multiple attribute somehow.</p>

    <p>The data provider must call the <code><a href=#datagrid>datagrid</a></code>'s update
    methods appropriately whenever the descendants of the
    <code><a href=#datagrid>datagrid</a></code> mutate.</p>

   </dd>


   <dt>While the first element child is another element</dt>

   <dd>

    <p>The default data provider must return 1 for the column count,
    the empty string for the column's caption, and must not add any
    classes to the column's classes.</p>

    <p>For the rows, assume the existence of a node filter view of the
    descendants of the <code><a href=#datagrid>datagrid</a></code> that skips all nodes
    other than <code><a href=#the-li-element>li</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>&ndash;<code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code>, and
    <code><a href=#the-hr-element>hr</a></code> elements, and skips any descendants of
    <code><a href=#menus>menu</a></code> elements.</p>

    <p>Given this view, each element in the view represents a row in
    the data model. The element corresponding to a path <var title="">row</var> is the one obtained by drilling into the view,
    taking the child given by the path each time. The element of the
    row of a particular method call is the element given by drilling
    into the view along the path given by the method's arguments.</p>

    <p><code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount(<var title="">row</var>)</a></code> must return the number of child
    elements in this view for the given row, or the number of elements
    at the root of the view if the <var title="">row</var> is
    empty.</p>

    <div class=example>

     <p>In the following example, the elements are identified by the
     paths given by their child text nodes:</p>

     <pre>&lt;datagrid&gt;
 &lt;ol&gt;
  &lt;li&gt; row 0 &lt;/li&gt;
  &lt;li&gt; row 1
   &lt;ol&gt;
    &lt;li&gt; row 1,0 &lt;/li&gt;
   &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt; row 2 &lt;/li&gt;
 &lt;/ol&gt;
&lt;/datagrid&gt;</pre>

     <p>In this example, only the <code><a href=#the-li-element>li</a></code> elements actually
     appear in the data grid; the <code><a href=#the-ol-element>ol</a></code> element does not
     affect the data grid's processing model.</p>

    </div>

    <p><code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>getChildAtPosition(<var title="">row</var>, <var title="">position</var>)</a></code> must
    return <var title="">position</var>. (The generic default data
    provider does not support sorting the data grid.)</p>

    <p><code title=dom-provider-getRowImage><a href=#dom-provider-getrowimage>getRowImage(<var title="">i</var>)</a></code> must return the <a href=#absolute-url>absolute URL</a>
    obtained from <a href=#resolve-a-url title="resolve a url">resolving</a> the
    value of the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute of
    the first <code><a href=#the-img-element>img</a></code> element descendant (in the real DOM) of
    the row's element, that is not also a descendant of another
    element in the filtered view that is a descendant of the row's
    element, if such an element exists and resolving its attribute
    relative to the element itself, is successful. Otherwise, it must
    return the empty string.</p> <!-- note that if the base URL has
    changed, this URL can be different than the one that the <img>
    element fetched when it was created -->

    <div class=example>

     <p>In the following example, the row with path "1,0" returns
     "http://example.com/a" as its image URL, and the other rows
     (including the row with path "1") return the empty string:</p>

     <pre>&lt;datagrid&gt;
 &lt;ol&gt;
  &lt;li&gt; row 0 &lt;/li&gt;
  &lt;li&gt; row 1
   &lt;ol&gt;
    &lt;li&gt; row 1,0 &lt;img src="http://example.com/a" alt=""&gt; &lt;/li&gt;
   &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt; row 2 &lt;/li&gt;
 &lt;/ol&gt;
&lt;/datagrid&gt;</pre>

    </div>

    <p><code title=dom-provider-getRowMenu><a href=#dom-provider-getrowmenu>getRowMenu(<var title="">i</var>)</a></code> must return the first <code><a href=#menus>menu</a></code>
    element descendant (in the real DOM) of the row's element, that is
    not also a descendant of another element in the filtered view that
    is a descendant of the row's element. (This is analogous to the
    image case above.)</p>

    <p><code title=dom-provider-getRowClasses><a href=#dom-provider-getrowclasses>getRowClasses(<var title="">i</var>, <var title="">classes</var>)</a></code> must add the
    classes from the following list to <var title="">classes</var>
    when their condition is met:</p>

    <ul><li>If the row's element contains other elements that are also in
     the view, and the element's <code title=attr-class><a href=#classes>class</a></code>
     attribute contains the <code title="">closed</code> class: <code title=datagrid-row-class-initially-closed><a href=#datagrid-row-class-initially-closed>initially-closed</a></code></li>

     <li>If the row's element contains other elements that are also in
     the view, and the element's <code title=attr-class><a href=#classes>class</a></code>
     attribute contains the <code title="">open</code> class: <code title=datagrid-row-class-initially-open><a href=#datagrid-row-class-initially-open>initially-open</a></code></li>

     <li>If the row's element is an <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>&ndash;<code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code>
     element: <code title=datagrid-row-class-header><a href=#datagrid-row-class-header>header</a></code></li>

     <li>If the row's element is an <code><a href=#the-hr-element>hr</a></code> element: <code title=datagrid-row-class-separator><a href=#datagrid-row-class-separator>separator</a></code></li> <!--
     XXX no way to get selectable-separator -->

    </ul><p>The <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData(<var title="">i</var>, <var title="">j</var>)</a></code>, <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses(<var title="">i</var>, <var title="">j</var>, <var title="">classes</var>)</a></code>, <code title=dom-provider-setCellCheckedState><a href=#dom-provider-setcellcheckedstate>getCellCheckedState(<var title="">i</var>, <var title="">j</var>, <var title="">state</var>)</a></code>, <code title=dom-provider-cycleCell><a href=#dom-provider-cyclecell>cycleCell(<var title="">i</var>,
    <var title="">j</var>)</a></code>, and <code title=dom-provider-editCell><a href=#dom-provider-editcell>editCell(<var title="">i</var>, <var title="">j</var>, <var title="">data</var>)</a></code> methods must
    act as described in <a href=#commonDefaultDataGridMethodDefinitions>the common
    definitions below</a>, treating the row's element as being the
    cell's element.</p>

    <p class=XXX id=generic-provider-selection>selection
    handling?</p>

    <p>The data provider must call the <code><a href=#datagrid>datagrid</a></code>'s update
    methods appropriately whenever the descendants of the
    <code><a href=#datagrid>datagrid</a></code> mutate.</p>

   </dd>


   <dt>Otherwise, while there is no element child</dt>

   <dd>

    <p>The data provider must return 0 for the number of rows, 1 for
    the number of columns, the empty string for the first column's
    caption, and must add no classes when asked for that column's
    classes. If the <code><a href=#datagrid>datagrid</a></code>'s child list changes such
    that there is a first element child, then the data provider must
    call the <code title=dom-datagrid-updateEverything><a href=#dom-datagrid-updateeverything>updateEverything()</a></code>
    method on the <code><a href=#datagrid>datagrid</a></code>.</p>

   </dd>

  </dl><h6 id=commonDefaultDataGridMethodDefinitions><span class=secno>4.11.2.4.1 </span>Common default data
  provider method definitions for cells</h6>

  <p>These definitions are used for the cell-specific methods of the
  default data providers (other than in the
  <code><a href=#the-select-element>select</a></code>/<code><a href=#the-datalist-element>datalist</a></code> case).  How they behave is
  based on the contents of an element that represents the cell given
  by their first two arguments. Which element that is is defined in
  the previous section.</p>

  <dl><dt>Cyclable cells</dt>

   <dd>

    <p>If the first element child of a cell's element is a
    <code><a href=#the-select-element>select</a></code> element that has a no <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute and has at
    least one <code><a href=#the-option-element>option</a></code> element descendent, then the cell
    acts as a cyclable cell.</p>

    <p>The "current" <code><a href=#the-option-element>option</a></code> element is the selected
    <code><a href=#the-option-element>option</a></code> element, or the first <code><a href=#the-option-element>option</a></code>
    element if none is selected.</p>

    <p>The <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData()</a></code>
    method must return the <code><a href=#textcontent>textContent</a></code> of the current
    <code><a href=#the-option-element>option</a></code> element (the <code title=attr-option-label><a href=#attr-option-label>label</a></code> attribute is <a href=#ignore title=ignore>ignored</a> in this context as the
    <code><a href=#the-optgroup-element>optgroup</a></code>s are not displayed).</p>

    <p>The <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses()</a></code> method
    must add the <code title=datagrid-cell-class-cyclable><a href=#datagrid-cell-class-cyclable>cyclable</a></code> class and
    then all the classes of the current <code><a href=#the-option-element>option</a></code>
    element.</p>

    <p>The <code title=dom-provider-cycleCell><a href=#dom-provider-cyclecell>cycleCell()</a></code>
    method must change the selection of the <code><a href=#the-select-element>select</a></code>
    element such that the next <code><a href=#the-option-element>option</a></code> element after the
    current <code><a href=#the-option-element>option</a></code> element is the only one that is
    selected (in <a href=#tree-order>tree order</a>). If the current <code><a href=#the-option-element>option</a></code>
    element is the last <code><a href=#the-option-element>option</a></code> element descendent of the
    <code><a href=#the-select-element>select</a></code>, then the first <code><a href=#the-option-element>option</a></code> element
    descendent must be selected instead.</p>

    <p>The <code title=dom-provider-setCellCheckedState><a href=#dom-provider-setcellcheckedstate>setCellCheckedState()</a></code>
    and <code title=dom-provider-editCell><a href=#dom-provider-editcell>editCell()</a></code> methods
    must do nothing.</p>

   </dd>

   <dt>Progress bar cells</dt>

   <dd>

    <p>If the first element child of a cell's element is a
    <code><a href=#the-progress-element>progress</a></code> element, then the cell acts as a progress
    bar cell.</p>

    <p>The <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData()</a></code>
    method must return the value returned by the <code><a href=#the-progress-element>progress</a></code>
    element's <code title=dom-progress-position><a href=#dom-progress-position>position</a></code> DOM
    attribute.</p>

    <p>The <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses()</a></code> method
    must add the <code title=datagrid-cell-class-progress><a href=#datagrid-cell-class-progress>progress</a></code> class.</p>

    <p>The <code title=dom-provider-setCellCheckedState><a href=#dom-provider-setcellcheckedstate>setCellCheckedState()</a></code>,
    <code title=dom-provider-cycleCell><a href=#dom-provider-cyclecell>cycleCell()</a></code>, and
    <code title=dom-provider-editCell><a href=#dom-provider-editcell>editCell()</a></code> methods must
    do nothing.</p>

   </dd>

   <dt>Checkbox cells</dt>

   <dd>

    <p>If the first element child of a cell's element is an
    <code><a href=#the-input-element>input</a></code> element that has a <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute with the value <code title="">checkbox</code>, then the cell acts as a check box
    cell.</p>

    <p>The <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData()</a></code>
    method must return the <code><a href=#textcontent>textContent</a></code> of the cell
    element.</p>

    <p>The <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses()</a></code> method
    must add the <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>checked</a></code> class if the
    <code><a href=#the-input-element>input</a></code> element's <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> is true, and the
    <code title=datagrid-cell-class-unchecked><a href=#datagrid-cell-class-unchecked>unchecked</a></code> class
    otherwise.</p>

    <p>The <code title=dom-provider-setCellCheckedState><a href=#dom-provider-setcellcheckedstate>setCellCheckedState()</a></code>
    method must set the <code><a href=#the-input-element>input</a></code> element's checkbox <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> to true if the
    method's third argument is 1, and to false otherwise.</p>

    <p>The <code title=dom-provider-cycleCell><a href=#dom-provider-cyclecell>cycleCell()</a></code> and
    <code title=dom-provider-editCell><a href=#dom-provider-editcell>editCell()</a></code> methods must
    do nothing.</p>

   </dd>

   <dt>Editable cells</dt>

   <dd>

    <p>If the first element child of a cell's element is an
    <code><a href=#the-input-element>input</a></code> element that has a <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute with the value <code title="">text</code> or that has no <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute at all, then the
    cell acts as an editable cell.</p>

    <p>The <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData()</a></code>
    method must return the <code title=dom-input-value><a href=#dom-input-value>value</a></code>
    of the <code><a href=#the-input-element>input</a></code> element.</p>

    <p>The <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses()</a></code> method
    must add the <code title=datagrid-cell-class-editable><a href=#datagrid-cell-class-editable>editable</a></code> class.</p>

    <p>The <code title=dom-provider-editCell><a href=#dom-provider-editcell>editCell()</a></code>
    method must set the <code><a href=#the-input-element>input</a></code> element's <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM attribute to the value of
    the third argument to the method.</p>

    <p>The <code title=dom-provider-setCellCheckedState><a href=#dom-provider-setcellcheckedstate>setCellCheckedState()</a></code>
    and <code title=dom-provider-cycleCell><a href=#dom-provider-cyclecell>cycleCell()</a></code>
    methods must do nothing.</p>

   </dd>

  </dl><!-- XXX Calculated cells, like in spreadsheets? --><h5 id=populating-the-datagrid-element><span class=secno>4.11.2.5 </span>Populating the <code><a href=#datagrid>datagrid</a></code> element</h5>

  <p>A <code><a href=#datagrid>datagrid</a></code> must be disabled until its end tag has
  been parsed<!-- XXX do we define that? what if the end tag is never
  seen, but the element is popped off the stack?--> (in the case of a
  <code><a href=#datagrid>datagrid</a></code> element in the original document markup) or
  until it has been <a href=#insert-an-element-into-a-document title="insert an element into a
  document">inserted into the document</a> (in the case of a
  dynamically created element). After that point, the element must
  fire a single <code title=event-load><a href=#event-load>load</a></code> event at itself,
  which doesn't bubble and cannot be canceled.</p>

  <p class=XXX>The end-tag parsing thing should be moved to
  the parsing section.</p>

  <p>The <code><a href=#datagrid>datagrid</a></code> must then populate itself using the
  data provided by the data provider assigned to the <code title=dom-datagrid-data><a href=#dom-datagrid-data>data</a></code> DOM attribute. After the view
  is populated (using the methods described below), the
  <code><a href=#datagrid>datagrid</a></code> must invoke the <code title=dom-provider-initialize><a href=#dom-provider-initialize>initialize()</a></code> method on the
  data provider specified by the <code title=dom-datagrid-data><a href=#dom-datagrid-data>data</a></code> attribute, passing itself (the
  <code><a href=#htmldatagridelement>HTMLDataGridElement</a></code> object) as the only argument.</p>

  <p>When the <code title=dom-datagrid-data><a href=#dom-datagrid-data>data</a></code> attribute is
  null, the <code><a href=#datagrid>datagrid</a></code> must use the default data provider
  described in the previous section.</p>

  <p>To obtain data from the data provider, the element must invoke
  methods on the data provider object in the following ways:</p>

  <dl><dt>To determine the total number of columns</dt>

   <dd>Invoke the <code title=dom-provider-getColumnCount><a href=#dom-provider-getcolumncount>getColumnCount()</a></code> method
   with no arguments. The return value is the number of columns. If
   the return value is zero or negative, not an integer, or simply not
   a numeric type, or if the method is not defined, then 1 must be
   used instead.</dd>

   <dt>To get the captions to use for the columns</dt>

   <dd>Invoke the <code title=dom-provider-getCaptionText><a href=#dom-provider-getcaptiontext>getCaptionText()</a></code> method
   with the index of the column in question. The index <var title="">i</var> must be in the range 0 &le; <var title="">i</var>
   &lt; <var title="">N</var>, where <var title="">N</var> is the
   total number of columns. The return value is the string to use when
   referring to that column. If the method returns null or the empty
   string, the column has no caption. If the method is not defined,
   then none of the columns have any captions.</dd>

   <dt>To establish what classes apply to a column</dt>

   <dd>Invoke the <code title=dom-provider-getCaptionClasses><a href=#dom-provider-getcaptionclasses>getCaptionClasses()</a></code>
   method with the index of the column in question, and an object
   implementing the <code><a href=#domtokenlist-0>DOMTokenList</a></code> interface, associated
   with an anonymous empty string. The index <var title="">i</var>
   must be in the range 0 &le; <var title="">i</var> &lt; <var title="">N</var>, where <var title="">N</var> is the total number
   of columns. The tokens contained in the string underlying
   <code><a href=#domtokenlist-0>DOMTokenList</a></code> object when the method returns represent
   the classes that apply to the given column. If the method is not
   defined, no classes apply to the column.</dd>

   <dt>To establish whether a column should be initially included in
   the visible columns</dt>

   <dd>Check whether the <code title=datagrid-column-class-initially-hidden><a href=#datagrid-column-class-initially-hidden>initially-hidden</a></code>
   class applies to the column. If it does, then the column should not
   be initially included; if it does not, then the column should be
   initially included.</dd>

   <dt id=columnType2>To establish whether the data can be sorted
   relative to a particular column</dt>

   <dd>Check whether the <code title=datagrid-column-class-sortable><a href=#datagrid-column-class-sortable>sortable</a></code> class
   applies to the column. If it does, then the user agent should offer
   the user the option to have the data displayed sorted by that
   column; if it does not, then the user agent must not allow the user
   to ask for the data to be sorted by that column.</dd>

   <dt>To establish if a column is a sorted column</dt>

   <dd>If the user agent can handle multiple columns being marked as
   sorted simultaneously: Check whether the <code title=datagrid-column-class-sorted><a href=#datagrid-column-class-sorted>sorted</a></code> class applies to
   the column. If it does, then that column is the sorted column,
   otherwise it is not.</dd>

   <dd>If the user agent can only handle one column being marked as
   sorted at a time: Check each column in turn, starting with the
   first one, to see whether the <code title=datagrid-column-class-sorted><a href=#datagrid-column-class-sorted>sorted</a></code> class applies to
   that column. The first column that has that class, if any, is the
   sorted column. If none of the columns have that class, there is no
   sorted column.</dd>

   <dt>To establish the sort direction of a sorted column</dt>

   <dd>Check whether the <code title=datagrid-column-class-reversed><a href=#datagrid-column-class-reversed>reversed</a></code> class
   applies to the column. If it does, then the sort direction is
   descending (down; first rows have the highest values), otherwise it
   is ascending (up; first rows have the lowest values).</dd>

   <dt>To determine the total number of rows</dt>

   <dd>Determine the number of rows for the root of the data grid, and
   determine the number of child rows for each open row. The total
   number of rows is the sum of all these numbers.</dd>

   <dt>To determine the number of rows for the root of the data grid</dt>

   <dd>Invoke the <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount()</a></code> method with a
   <code><a href=#rowspecification>RowSpecification</a></code> object representing the empty path as
   its only argument. The return value is the number of rows at the
   top level of the data grid. If the return value of the method is
   negative, not an integer, or simply not a numeric type, or if the
   method is not defined, then zero must be used instead.</dd>

   <dt>To determine the number of child rows for a row</dt>

   <dd>Invoke the <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount()</a></code> method with a
   <code><a href=#rowspecification>RowSpecification</a></code> object representing the path to the
   row in question. The return value is the number of child rows for
   the given row. If the return value of the method is negative, not
   an integer, or simply not a numeric type, or if the method is not
   defined, then zero must be used instead.</dd>

   <dt>To determine what order to render rows in</dt>

   <dd>

    <p>Invoke the <code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>getChildAtPosition()</a></code>
    method with a <code><a href=#rowspecification>RowSpecification</a></code> object representing
    the path to the parent of the rows that are being rendered as the
    first argument, and the position that is being rendered as the
    second argument. The return value is the index of the row to
    render in that position.</p>

    <div class=example>

     <p>If the rows are:</p>

     <ol><li> Row "0"
       <ol><li> Row "0,0"
        <li> Row "0,1"
       </ol></li>
      <li> Row "1"
       <ol><li> Row "1,0"
        <li> Row "1,1"
       </ol></li>
     </ol><p>...and the <code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>getChildAtPosition()</a></code>
    method is implemented as follows:</p>

    <pre>function getChildAtPosition(parent, child) {
  // always return the reverse order
  return getRowCount(parent)-child-1;
}</pre>

     <p>...then the rendering would actually be:</p>

     <ol><li> Row "1"
       <ol><li> Row "1,1"
        <li> Row "1,0"
       </ol></li>
      <li> Row "0"
       <ol><li> Row "0,1"
        <li> Row "0,0"
       </ol></li>
     </ol></div>

    <p>If the return value of the method is negative, larger than the
    number of rows that the <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount()</a></code> method
    reported for that parent, not an integer, or simply not a numeric
    type, then the entire data grid should be disabled. Similarly, if
    the method returns the same value for two or more different values
    for the second argument (with the same first argument, and
    assuming that the data grid hasn't had relevant update methods
    invoked in the meantime), then the data grid should be
    disabled. Instead of disabling the data grid, the user agent may
    act as if the <code title=dom-provider-getChildAtPosition><a href=#dom-provider-getchildatposition>getChildAtPosition()</a></code>
    method was not defined on the data provider (thus disabling
    sorting for that data grid, but still letting the user interact
    with the data). If the method is not defined, then the return
    value must be assumed to be the same as the second argument (an
    identity transform; the data is rendered in its natural
    order).</p>

   </dd>

   <dt>To establish what classes apply to a row</dt>

   <dd>Invoke the <code title=dom-provider-getRowClasses><a href=#dom-provider-getrowclasses>getRowClasses()</a></code> method
   with a <code><a href=#rowspecification>RowSpecification</a></code> object representing the row in
   question, and a <code><a href=#domtokenlist-0>DOMTokenList</a></code> associated with an empty
   string. The tokens contained in the <code><a href=#domtokenlist-0>DOMTokenList</a></code>
   object's underlying string when the method returns represent the
   classes that apply to the row in question. If the method is not
   defined, no classes apply to the row.</dd>

   <dt>To establish whether a row is a data row or a special row</dt>

   <dd>Examine the classes that apply to the row. If the <code title=datagrid-row-class-header><a href=#datagrid-row-class-header>header</a></code> class applies to
   the row, then it is not a data row, it is a subheading. The data
   from the first cell of the row is the text of the subheading, the
   rest of the cells must be ignored. Otherwise, if the <code title=datagrid-row-class-separator><a href=#datagrid-row-class-separator>separator</a></code> class applies
   to the row, then in the place of the row, a separator should be
   shown. Otherwise, if the <code title=datagrid-row-class-selectable-separator><a href=#datagrid-row-class-selectable-separator>selectable-separator</a></code>
   class applies to the row, then the row should be a data row, but
   represented as a separator. (The difference between a <code title=datagrid-row-class-separator><a href=#datagrid-row-class-separator>separator</a></code> and a <code title=datagrid-row-class-selectable-separator><a href=#datagrid-row-class-selectable-separator>selectable-separator</a></code>
   is that the former is not an item that can be actually selected,
   whereas the second can be selected and thus has a context menu that
   applies to it, and so forth.) For both kinds of separator rows, the
   data of the rows' cells must all be ignored. If none of those three
   classes apply then the row is a simple data row.</dd>

   <dt id=rowType1>To establish whether a row is openable</dt>

   <dd>Determine the number of child rows for that row. If there are
   one or more child rows, then the row is openable.</dd>

   <dt>To establish whether a row should be initially open or closed</dt>

   <dd>If <a href=#rowType1>the row is openable</a>, examine the
   classes that apply to the row. If the <code title=datagrid-row-class-initially-open><a href=#datagrid-row-class-initially-open>initially-open</a></code>
   class applies to the row, then it should be initially
   open. Otherwise, if the <code title=datagrid-row-class-initially-closed><a href=#datagrid-row-class-initially-closed>initially-closed</a></code>
   class applies to the row, then it must be initially
   closed. Otherwise, if neither class applies to the row, or if the
   row is not openable, then the initial state of the row should be
   based on platform conventions.</dd>

<!-- XXXPA
   <dt>To establish whether a row is deletable</dt>

   <dd>Check whether the <code
   title="datagrid-row-class-deletable">deletable</code> class applies
   to the row. If it does, the row is deletable, and interactive user
   agents should provide a way for the user to request that the row be
   deleted. (See the <code
   title="dom-provider-performActionOnRow">performActionOnRow()</code>
   method for more details.) Otherwise, the user agent should not
   provide the user with a method for requesting that the row be
   deleted.</dd>
-->

   <dt>To obtain a <a href=#url>URL</a> identifying an image representing a row</dt>

   <dd>Invoke the <code title=dom-provider-getRowImage><a href=#dom-provider-getrowimage>getRowImage()</a></code> method with a
   <code><a href=#rowspecification>RowSpecification</a></code> object representing the row in
   question. The return value is a <a href=#url>URL</a>. Immediately <a href=#resolve-a-url title="resolve a url">resolve</a> that URL, relative to the
   <code><a href=#datagrid>datagrid</a></code> element, to obtain an <a href=#absolute-url>absolute
   URL</a> identifying the image that represents the row. If the
   method returns the empty string, null, or if the method is not
   defined, then the row has no associated image.</dd> <!-- changing
   the base URL doesn't change the image used later -->

   <dt>To obtain a context menu appropriate for a particular row</dt>

   <dd>Invoke the <code title=dom-provider-getRowMenu><a href=#dom-provider-getrowmenu>getRowMenu()</a></code> method with a
   <code><a href=#rowspecification>RowSpecification</a></code> object representing the row in
   question. The return value is a reference to an object implementing
   the <code><a href=#htmlmenuelement>HTMLMenuElement</a></code> interface, i.e. a
   <code><a href=#menus>menu</a></code> element DOM node. (This element must then be
   interpreted as described in the section on context menus to obtain
   the actual context menu to use.<!-- XXX update once menu section
   works; with xrefs -->) If the method returns something that is not
   an <code><a href=#htmlmenuelement>HTMLMenuElement</a></code>, or if the method is not defined,
   then the row has no associated context menu. User agents may
   provide their own default context menu, and may add items to the
   author-provided context menu. For example, such a menu could allow
   the user to change the presentation of the <code><a href=#datagrid>datagrid</a></code>
   element.</dd>

   <dt>To establish the value of a particular cell</dt>

   <dd>Invoke the <code title=dom-provider-getCellData><a href=#dom-provider-getcelldata>getCellData()</a></code> method with
   the first argument being a <code><a href=#rowspecification>RowSpecification</a></code> object
   representing the row of the cell in question and the second
   argument being the index of the cell's column. The second argument
   must be a non-negative integer less than the total number of
   columns. The return value is the value of the cell. If the return
   value is null or the empty string, or if the method is not defined,
   then the cell has no data. (For progress bar cells, the cell's
   value must be further interpreted, as described below.)</dd>

   <dt>To establish what classes apply to a cell</dt>

   <dd>Invoke the <code title=dom-provider-getCellClasses><a href=#dom-provider-getcellclasses>getCellClasses()</a></code> method
   with the first argument being a <code><a href=#rowspecification>RowSpecification</a></code>
   object representing the row of the cell in question, the second
   argument being the index of the cell's column, and the third being
   an object implementing the <code><a href=#domtokenlist-0>DOMTokenList</a></code> interface,
   associated with an empty string. The second argument must be a
   non-negative integer less than the total number of columns. The
   tokens contained in the <code><a href=#domtokenlist-0>DOMTokenList</a></code> object's
   underlying string when the method returns represent the classes
   that apply to that cell. If the method is not defined, no classes
   apply to the cell.</dd>

   <dt id=cellType1>To establish the type of a cell</dt>

   <dd>Examine the classes that apply to the cell. If the <code title=datagrid-cell-class-progress><a href=#datagrid-cell-class-progress>progress</a></code> class applies
   to the cell, it is a progress bar. Otherwise, if the <code title=datagrid-cell-class-cyclable><a href=#datagrid-cell-class-cyclable>cyclable</a></code> class applies
   to the cell, it is a cycling cell whose value can be cycled between
   multiple states. Otherwise, none of these classes apply, and the
   cell is a simple text cell.</dd>

   <dt>To establish the value of a progress bar cell</dt>

   <dd>If the value <var title="">x</var> of the cell is a string that
   can be <a href=#rules-for-parsing-floating-point-number-values title="rules for parsing floating point number
   values">converted to a floating-point number</a> in the range
   0.0&nbsp;&le;&nbsp;<var title="">x</var>&nbsp;&le;&nbsp;1.0, then
   the progress bar has that value (0.0 means no progress, 1.0 means
   complete). Otherwise, the progress bar is an indeterminate progress
   bar.</dd>

   <dt id=cellType2>To establish how a simple text cell should be presented</dt>

   <dd>Check whether one of the <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>checked</a></code>, <code title=datagrid-cell-class-unchecked><a href=#datagrid-cell-class-unchecked>unchecked</a></code>, or <code title=datagrid-cell-class-indeterminate><a href=#datagrid-cell-class-indeterminate>indeterminate</a></code>
   classes applies to the cell. If any of these are present, then the
   cell has a checkbox, otherwise none are present and the cell does
   not have a checkbox. If the cell has no checkbox, check whether the
   <code title=datagrid-cell-class-editable><a href=#datagrid-cell-class-editable>editable</a></code> class
   applies to the cell. If it does, then the cell value is editable,
   otherwise the cell value is static.</dd>

   <dt>To establish the state of a cell's checkbox, if it has one</dt>

   <dd>Check whether the <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>checked</a></code> class applies to
   the cell. If it does, the cell is checked. Otherwise, check whether
   the <code title=datagrid-cell-class-unchecked><a href=#datagrid-cell-class-unchecked>unchecked</a></code>
   class applies to the cell. If it does, the cell is unchecked.
   Otherwise, the <code title=datagrid-cell-class-indeterminate><a href=#datagrid-cell-class-indeterminate>indeterminate</a></code>
   class applies to the cell and the cell's checkbox is in an
   indeterminate state. When the <code title=datagrid-cell-class-indeterminate><a href=#datagrid-cell-class-indeterminate>indeterminate</a></code>
   class applies to the cell, the checkbox is a tristate checkbox,
   and the user can set it to the indeterminate state. Otherwise, only
   the <code title=datagrid-cell-class-checked><a href=#datagrid-cell-class-checked>checked</a></code> and/or
   <code title=datagrid-cell-class-unchecked><a href=#datagrid-cell-class-unchecked>unchecked</a></code>
   classes apply to the cell, and the cell can only be toggled between
   those two states.</dd>

  </dl><p>If the data provider ever raises an exception while the
  <code><a href=#datagrid>datagrid</a></code> is invoking one of its methods, the
  <code><a href=#datagrid>datagrid</a></code> must act, for the purposes of that particular
  method call, as if the relevant method had not been defined.</p>

  <p>A <code><a href=#rowspecification>RowSpecification</a></code> object <var title="">p</var> with
  <var title="">n</var> path components passed to a method of the data
  provider must fulfill the constraint <span>0&nbsp;&le;&nbsp;<var title="">p<sub title=""><var title="">i</var></sub></var>&nbsp;&lt;&nbsp;<var title="">m</var>-1</span> for all integer values of <var title="">i</var> in the range <span>0&nbsp;&le;&nbsp;<var title="">i</var>&nbsp;&lt;&nbsp;<var title="">n</var>-1</span>,
  where <var title="">m</var> is the value that was last returned by
  the <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount()</a></code>
  method when it was passed the <code><a href=#rowspecification>RowSpecification</a></code> object
  <var title="">q</var> with <span><var title="">i</var>-1</span>
  items, where <span><var title="">p<sub title=""><var title="">i</var></sub></var>&nbsp;=&nbsp;<var title="">q<sub title=""><var title="">i</var></sub></var></span> for all integer
  values of <var title="">i</var> in the range
  <span>0&nbsp;&le;&nbsp;<var title="">i</var>&nbsp;&lt;&nbsp;<var title="">n</var>-1</span>, with any changes implied by the update
  methods taken into account.</p>

  <p id=inconsistentDataProvider>The data model is considered
  stable: user agents may assume that subsequent calls to the data
  provider methods will return the same data, until one of the update
  methods is called on the <code><a href=#datagrid>datagrid</a></code> element. If a user
  agent is returned inconsistent data, for example if the number of
  rows returned by <code title=dom-provider-getRowCount><a href=#dom-provider-getrowcount>getRowCount()</a></code> varies in ways
  that do not match the calls made to the update methods, the user
  agent may disable the <code><a href=#datagrid>datagrid</a></code>. User agents that do not
  disable the <code><a href=#datagrid>datagrid</a></code> in inconsistent cases must honor
  the most recently returned values.</p>

  <p>User agents may cache returned values so that the data provider
  is never asked for data that could contradict earlier data. User
  agents must not cache the return value of the <code title=dom-provider-getRowMenu><a href=#dom-provider-getrowmenu>getRowMenu</a></code> method.</p>

  <p>The exact algorithm used to populate the data grid is not defined
  here, since it will differ based on the presentation used. However,
  the behavior of user agents must be consistent with the
  descriptions above. For example, it would be non-conformant for a
  user agent to make cells have both a checkbox and be editable, as
  the descriptions above state that cells that have a checkbox cannot
  be edited.</p> <!-- XXX speaking of which, do we actually want that
  limitation? -->


  <h5 id=updating-the-datagrid><span class=secno>4.11.2.6 </span>Updating the <code><a href=#datagrid>datagrid</a></code></h5>

  <p>Whenever the <code title=dom-datagrid-data><a href=#dom-datagrid-data>data</a></code>
  attribute is set to a new value, the <code><a href=#datagrid>datagrid</a></code> must
  clear the current selection, remove all the displayed rows, and plan
  to repopulate itself using the information from the new data
  provider at the earliest opportunity.</p>

  <p>There are a number of update methods that can be invoked on the
  <code><a href=#datagrid>datagrid</a></code> element to cause it to refresh itself in
  slightly less drastic ways:</p>

  <p>When the <dfn id=dom-datagrid-updateeverything title=dom-datagrid-updateEverything><code>updateEverything()</code></dfn>
  method is called, the user agent must repopulate the entire
  <code><a href=#datagrid>datagrid</a></code>. If the number of rows decreased, the
  selection must be updated appropriately. If the number of rows
  increased, the new rows should be left unselected.</p>

  <p>When the <dfn id=dom-datagrid-updaterowschanged title=dom-datagrid-updateRowsChanged><code>updateRowsChanged(<var title="">row</var>, <var title="">count</var>)</code></dfn> method
  is called, the user agent must refresh the rendering of the rows
  starting from the row specified by <var title="">row</var>, and
  including the <var title="">count</var> next siblings of the row (or
  as many next siblings as it has, if that is less than <var title="">count</var>), including all descendant rows.</p>

  <p>When the <dfn id=dom-datagrid-updaterowsinserted title=dom-datagrid-updateRowsInserted><code>updateRowsInserted(<var title="">row</var>, <var title="">count</var>)</code></dfn> method
  is called, the user agent must assume that <var title="">count</var>
  new rows have been inserted, such that the first new row is
  identified by <var title="">row</var>. The user agent must update
  its rendering and the selection accordingly. The new rows should not
  be selected.</p>

  <p>When the <dfn id=dom-datagrid-updaterowsremoved title=dom-datagrid-updateRowsRemoved><code>updateRowsRemoved(<var title="">row</var>, <var title="">count</var>)</code></dfn> method
  is called, the user agent must assume that <var title="">count</var>
  rows have been removed starting from the row that used to be
  identifier by <var title="">row</var>.  The user agent must update
  its rendering and the selection accordingly.</p>

  <p>The <dfn id=dom-datagrid-updaterowchanged title=dom-datagrid-updateRowChanged><code>updateRowChanged(<var title="">row</var>)</code></dfn> method must be exactly equivalent
  to calling <code title=dom-datagrid-updateRowsChanged><a href=#dom-datagrid-updaterowschanged>updateRowsChanged(<var title="">row</var>, 1)</a></code>.</p>

  <p>When the <dfn id=dom-datagrid-updatecolumnchanged title=dom-datagrid-updateColumnChanged><code>updateColumnChanged(<var title="">column</var>)</code></dfn> method is called, the user agent
  must refresh the rendering of the specified column <var title="">column</var>, for all rows.</p>

  <p>When the <dfn id=dom-datagrid-updatecellchanged title=dom-datagrid-updateCellChanged><code>updateCellChanged(<var title="">row</var>, <var title="">column</var>)</code></dfn> method
  is called, the user agent must refresh the rendering of the cell on
  row <var title="">row</var>, in column <var title="">column</var>.</p>

  <p>Any effects the update methods have on the
  <code><a href=#datagrid>datagrid</a></code>'s selection is not considered a change to the
  selection, and must therefore not fire the <code title=event-select><a href=#event-select>select</a></code> event.</p>

  <p>These update methods should be called only by the data provider,
  or code acting on behalf of the data provider. In particular,
  calling the <code title=dom-datagrid-updateRowsInserted><a href=#dom-datagrid-updaterowsinserted>updateRowsInserted()</a></code>
  and <code title=dom-datagrid-updateRowsRemoved><a href=#dom-datagrid-updaterowsremoved>updateRowsRemoved()</a></code>
  methods without actually inserting or removing rows from the data
  provider is <a href=#inconsistentDataProvider>likely to result in
  inconsistent renderings</a>, and the user agent is likely to disable
  the data grid.</p>


  <h5 id=requirements-for-interactive-user-agents><span class=secno>4.11.2.7 </span>Requirements for interactive user agents</h5>

  <p><em>This section only applies to interactive user agents.</em></p>

  <p>If the <code><a href=#datagrid>datagrid</a></code> element has a <dfn id=attr-datagrid-disabled title=attr-datagrid-disabled><code>disabled</code></dfn>
  attribute, then the user agent must disable the
  <code><a href=#datagrid>datagrid</a></code>, preventing the user from interacting with it.
  The <code><a href=#datagrid>datagrid</a></code> element should still continue to update
  itself when the data provider signals changes to the data, though.
  Obviously, conformance requirements stating that
  <code><a href=#datagrid>datagrid</a></code> elements must react to users in particular
  ways do not apply when one is disabled.</p>

  <p>If <a href=#rowType1>a row is openable</a>, then the user agent
  should offer to the user the option of toggling the row's
  open/closed state. When a row's open/closed state changes, the user
  agent must update the rendering to match the new state.</p>

  <p>If a cell is a cell whose value <a href=#cellType1>can be
  cycled between multiple states</a>, then the user agent should allow
  the user to activate the cell to cycle its value. When the user
  activates this "cycling" behavior of a cell, then the
  <code><a href=#datagrid>datagrid</a></code> must invoke the data provider's <code title=dom-provider-cycleCell><a href=#dom-provider-cyclecell>cycleCell()</a></code> method, with a
  <code><a href=#rowspecification>RowSpecification</a></code> object representing the cell's row as
  the first argument and the cell's column index as the second. The
  <code><a href=#datagrid>datagrid</a></code> must then act as if the
  <code><a href=#datagrid>datagrid</a></code>'s <code title=dom-datagrid-updateCellChanged><a href=#dom-datagrid-updatecellchanged>updateCellChanged()</a></code>
  method had been invoked with those same arguments.</p>

  <p>When a cell <a href=#cellType2>has a checkbox</a>, the user
  agent should allow the user to set the checkbox's state. When the
  user changes the state of a checkbox in such a cell, the
  <code><a href=#datagrid>datagrid</a></code> must invoke the data provider's <code title=dom-provider-setCellCheckedState><a href=#dom-provider-setcellcheckedstate>setCellCheckedState()</a></code>
  method, with a <code><a href=#rowspecification>RowSpecification</a></code> object representing the
  cell's row as the first argument, the cell's column index as the
  second, and the checkbox's new state as the third. The state should
  be represented by the number 1 if the new state is checked, 0 if the
  new state is unchecked, and &minus;1 if the new state is
  indeterminate (which must be possible only if the cell has the <code title=datagrid-cell-class-indeterminate><a href=#datagrid-cell-class-indeterminate>indeterminate</a></code> class
  set). The <code><a href=#datagrid>datagrid</a></code> must then act as if the
  <code><a href=#datagrid>datagrid</a></code>'s <code title=dom-datagrid-updateCellChanged><a href=#dom-datagrid-updatecellchanged>updateCellChanged()</a></code>
  method had been invoked, specifying the same cell.</p>

  <p>If a cell <a href=#cellType2>is editable</a>, the user agent
  should allow the user to edit the data for that cell, and doing so
  must cause the user agent to invoke the <code title=dom-provider-editCell><a href=#dom-provider-editcell>editCell()</a></code> method of the data
  provider with three arguments: a <code><a href=#rowspecification>RowSpecification</a></code>
  object representing the cell's row, the cell's column's index, and
  the new text entered by the user. The user agent must then act as if
  the <code title=dom-datagrid-updateCellChanged><a href=#dom-datagrid-updatecellchanged>updateCellChanged()</a></code>
  method had been invoked, with the same row and column specified.</p>

  <!-- XXXPA <p class="XXX">define actions (performAction(), etc)</p> -->

  <h5 id=the-selection><span class=secno>4.11.2.8 </span>The selection</h5>

  <p><em>This section only applies to interactive user agents. For
  other user agents, the <code title=dom-datagrid-selection><a href=#dom-datagrid-selection>selection</a></code> attribute must
  return null.</em></p>

  <pre class=idl>interface <dfn id=datagridselection>DataGridSelection</dfn> {
  readonly attribute unsigned long <span title=dom-DataGridSelection-count>length</span>;
  [IndexGetter] <a href=#rowspecification>RowSpecification</a> <span title=dom-DataGridSelection->item</span>(in unsigned long index);
  boolean <a href=#dom-datagridselection-isselected title=dom-DataGridSelection-isSelected>isSelected</a>(in <a href=#rowspecification>RowSpecification</a> row);
  void <a href=#dom-datagridselection-setselected title=dom-DataGridSelection-setSelected>setSelected</a>(in <a href=#rowspecification>RowSpecification</a> row, in boolean selected);
<!--  void <span title="dom-DataGridSelection-addRange">addRange</span>(in <span>RowSpecification</span> first, in <span>RowSpecification</span> last);
  void <span title="dom-DataGridSelection-removeRange">removeRange</span>(in <span>RowSpecification</span> first, in <span>RowSpecification</span> last);
XXX selection ranges -->
  void <a href=#dom-datagridselection-selectall title=dom-DataGridSelection-selectAll>selectAll</a>();
  void <a href=#dom-datagridselection-invert title=dom-DataGridSelection-invert>invert</a>();
  void <a href=#dom-datagridselection-clear title=dom-DataGridSelection-clear>clear</a>();
};</pre>

  <p>Each <code><a href=#datagrid>datagrid</a></code> element must keep track of which rows
  are currently selected. Initially no rows are selected, but this can
  be changed via the methods described in this section. <!--XXX
  select-provider-selection The default data provider, for instance,
  changes which rows are selected when it is first initialized.--></p>

  <p>The selection of a <code><a href=#datagrid>datagrid</a></code> is represented by its
  <dfn id=dom-datagrid-selection title=dom-datagrid-selection><code>selection</code></dfn> DOM
  attribute, which must be a <code><a href=#datagridselection>DataGridSelection</a></code> object.</p>

  <p><code><a href=#datagridselection>DataGridSelection</a></code> objects represent the rows in the
  selection. In the selection the rows must be ordered in the natural
  order of the data provider (and not, e.g., the rendered order). Rows
  that are not rendered because one of their ancestors is closed must
  share the same selection state as their nearest rendered
  ancestor. Such rows are not considered part of the selection for the
  purposes of iterating over the selection.</p>

  <p class=note>This selection API doesn't allow for hidden rows to
  be selected because it is trivial to create a data provider that has
  infinite depth, which would then require the selection to be
  infinite if every row, including every hidden row, was selected.</p>

  <p>The <dfn id=dom-datagridselection-length title=dom-DataGridSelection-length><code>length</code></dfn>
  attribute must return the number of rows currently present in the
  selection. This is the <var title=dom-DataGridSelection-length><a href=#dom-datagridselection-length>length</a></var>.</p>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to <span><var title=dom-DataGridSelection-length><a href=#dom-datagridselection-length>length</a></var>-1</span>, unless
  the <var title=dom-DataGridSelection-length><a href=#dom-datagridselection-length>length</a></var> is zero,
  in which case there are no <span>supported indexed
  properties</span>.</p>

  <p>The <dfn id=dom-datagridselection-item title=dom-DataGridSelection-item><code>item(<var title="">index</var>)</code></dfn> method must return the <var title="">index</var>th row in the selection. If the argument is out
  of range (less than zero or greater than the number of selected rows
  minus one), then it must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
  exception. <a href=#refsDOM3CORE>[DOM3CORE]</a></p>

  <p>The <dfn id=dom-datagridselection-isselected title=dom-DataGridSelection-isSelected><code>isSelected()</code></dfn>
  method must return the selected state of the row specified by its
  argument. If the specified row exists and is selected, it must
  return true, otherwise it must return false.</p>

  <p>The <dfn id=dom-datagridselection-setselected title=dom-DataGridSelection-setSelected><code>setSelected()</code></dfn>
  method takes two arguments, <var title="">row</var> and <var title="">selected</var>. When invoked, it must set the selection
  state of row <var title="">row</var> to selected if <var title="">selected</var> is true, and unselected if it is false. If
  <var title="">row</var> is not a row in the data grid, the method
  must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception. If the
  specified row is not rendered because one of its ancestors is
  closed, the method must do nothing.</p>

  <p>The <dfn id=dom-datagridselection-selectall title=dom-DataGridSelection-selectAll><code>selectAll()</code></dfn>
  method must mark all the rows in the data grid as selected. After a
  call to <code title=dom-DataGridSelection-selectAll><a href=#dom-datagridselection-selectall>selectAll()</a></code>, the
  <code title=dom-DataGridSelection-length><a href=#dom-datagridselection-length>length</a></code> attribute
  will return the number of rows in the data grid, not counting
  children of closed rows.</p>

  <p>The <dfn id=dom-datagridselection-invert title=dom-DataGridSelection-invert><code>invert()</code></dfn>
  method must cause all the rows in the selection that were marked as
  selected to now be marked as not selected, and vice versa.</p>

  <p>The <dfn id=dom-datagridselection-clear title=dom-DataGridSelection-clear><code>clear()</code></dfn>
  method must mark all the rows in the data grid to be marked as not
  selected.  After a call to <code title=dom-DataGridSelection-clear><a href=#dom-datagridselection-clear>clear()</a></code>, the <code title=dom-DataGridSelection-length><a href=#dom-datagridselection-length>length</a></code> attribute will
  return zero.</p>

  <p>If the <code><a href=#datagrid>datagrid</a></code> element has a <dfn id=attr-datagrid-multiple title=attr-datagrid-multiple><code>multiple</code></dfn>
  attribute, then the user agent should allow the user to select any
  number of rows (zero or more). If the attribute is not present, then
  the user agent must not allow the user to select more than a single
  row at a time, and selecting another one must unselect all the other
  rows.</p>

  <p class=note>This only applies to the user. Scripts can select
  multiple rows even when the <code title=attr-datagrid-multiple><a href=#attr-datagrid-multiple>multiple</a></code> attribute is
  absent.</p>

  <p>Whenever the selection of a <code><a href=#datagrid>datagrid</a></code> changes,
  whether due to the user interacting with the element, or as a result
  of calls to methods of the <code title=dom-datagrid-selection><a href=#dom-datagrid-selection>selection</a></code> object, a <dfn id=event-select title=event-select><code>select</code></dfn><!-- XXX check if we
  really should be DFNing this here. It's a DOM3 Core event. What's
  our story going to be regarding events and defining them? --> event
  that bubbles but is not cancelable must be fired on the
  <code><a href=#datagrid>datagrid</a></code> element. If changes are made to the selection
  via calls to the object's methods during the execution of a
  script<!-- XXX should xref to a better explanation -->, then the
  <code title=event-select><a href=#event-select>select</a></code> events must be coalesced
  into one, which must then be fired<!--XXX xref again--> when the
  script execution has completed<!-- XXX xref -->.</p>

  <p class=note>The <code><a href=#datagridselection>DataGridSelection</a></code> interface has no
  relation to the <code><a href=#selection-0>Selection</a></code> interface.</p>


  <h5 id=columns-and-captions><span class=secno>4.11.2.9 </span>Columns and captions</h5>

  <p><em>This section only applies to interactive user agents.</em></p>

  <p>Each <code><a href=#datagrid>datagrid</a></code> element must keep track of which
  columns are currently being rendered. User agents should initially
  show all the columns except those with the <code title=datagrid-column-class-initially-hidden><a href=#datagrid-column-class-initially-hidden>initially-hidden</a></code>
  class, but may allow users to hide or show columns. User agents
  should initially display the columns in the order given by the data
  provider, but may allow this order to be changed by the user.</p>

  <p>If columns are not being used, as might be the case if the data
  grid is being presented in an icon view, or if an overview of data
  is being read in an aural context, then the text of the first column
  of each row should be used to represent the row.</p>

  <p>If none of the columns have any captions (i.e. if the data
  provider does not provide a <code title=dom-provider-getCaptionText><a href=#dom-provider-getcaptiontext>getCaptionText()</a></code> method),
  then user agents may avoid showing the column headers at all. This
  may prevent the user from performing actions on the columns (such as
  reordering them, changing the sort column, and so on).</p>

  <p class=note>Whatever the order used for rendering, and
  irrespective of what columns are being shown or hidden, the "first
  column" as referred to in this specification is always the column
  with index zero, and the "last column" is always the column with the
  index one less than the value returned by the <code title=dom-provider-getcolumnCount><a href=#dom-provider-getcolumncount>getColumnCount()</a></code> method
  of the data provider.</p>

  <p>If <a href=#columnType2>a column is sortable</a>, then the user
  agent should allow the user to request that the data be sorted using
  that column. When the user does so, then the <code><a href=#datagrid>datagrid</a></code>
  must invoke the data provider's <code title=dom-provider-toggleColumnSortState><a href=#dom-provider-togglecolumnsortstate>toggleColumnSortState()</a></code>
  method, with the column's index as the only argument. The
  <code><a href=#datagrid>datagrid</a></code> must <em>then</em> act as if the
  <code><a href=#datagrid>datagrid</a></code>'s <code title=dom-datagrid-updateEverything><a href=#dom-datagrid-updateeverything>updateEverything()</a></code>
  method had been invoked.</p>

<!--XXXDND
  <h5>Drag and drop in <code>datagrid</code>s</h5>

  <p><em>This section only applies to interactive user agents.</em></p>

  <p class="XXX">define drag and drop in datagrids; selectiondraggable, etc.</p>
-->
</div>


  <h4 id=the-command><span class=secno>4.11.3 </span>The <dfn><code>command</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#metadata-content-0>Metadata content</a>.</dd>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#metadata-content-0>metadata content</a> is expected.</dd>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-command-type><a href=#attr-command-type>type</a></code></dd>
   <dd><code title=attr-command-label><a href=#attr-command-label>label</a></code></dd>
   <dd><code title=attr-command-icon><a href=#attr-command-icon>icon</a></code></dd>
   <dd><code title=attr-command-disabled><a href=#attr-command-disabled>disabled</a></code></dd>
   <dd><code title=attr-command-checked><a href=#attr-command-checked>checked</a></code></dd>
   <dd><code title=attr-command-radiogroup><a href=#attr-command-radiogroup>radiogroup</a></code></dd>
   <dd><code title=attr-command-default><a href=#attr-command-default>default</a></code></dd>
   <dd>Also, the <code title=attr-command-title><a href=#attr-command-title>title</a></code> attribute has special semantics on this element.</dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlcommandelement>HTMLCommandElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-command-type title=dom-command-type>type</a>;
           attribute DOMString <a href=#dom-command-label title=dom-command-label>label</a>;
           attribute DOMString <a href=#dom-command-icon title=dom-command-icon>icon</a>;
           attribute boolean <a href=#dom-command-disabled title=dom-command-disabled>disabled</a>;
           attribute boolean <a href=#dom-command-checked title=dom-command-checked>checked</a>;
           attribute DOMString <a href=#dom-command-radiogroup title=dom-command-radiogroup>radiogroup</a>;
           attribute boolean <a href=#dom-command-default title=dom-command-default>default</a>;
 void <a href=#dom-command-click title=dom-command-click>click</a>(); // shadows <code><a href=#htmlelement>HTMLElement</a></code>.<code title=dom-click><a href=#dom-click>click()</a></code>
};</pre>
    <p>The <code title=command-ro><a href=#command-ro>Command</a></code> interface must also be implemented by
    this element.</p>
   </dd>
  </dl><p>The <code><a href=#the-command>command</a></code> element represents a command that the user
  can invoke.</p>

  <p>The <dfn id=attr-command-type title=attr-command-type><code>type</code></dfn>
  attribute indicates the kind of command: either a normal command
  with an associated action, or a state or option that can be toggled,
  or a selection of one item from a list of items.</p>

  <p>The attribute is an <a href=#enumerated-attribute>enumerated attribute</a> with three
  keywords and states. The keyword "<dfn id=attr-command-type-keyword-command title=attr-command-type-keyword-command><code>command</code></dfn>"
  maps to the <a href=#attr-command-type-state-command title=attr-command-type-state-command>Command</a> state, the
  <dfn id=attr-command-type-keyword-checkbox title=attr-command-type-keyword-checkbox><code>checkbox</code></dfn>"
  maps to the <a href=#attr-command-type-state-checkbox title=attr-command-type-state-checkbox>Checkbox</a>, and the
  "<dfn id=attr-command-type-keyword-radio title=attr-command-type-keyword-radio><code>radio</code></dfn>"
  keyword maps to the <a href=#attr-command-type-state-radio title=attr-command-type-state-radio>Radio</a> state. The
  <i>missing value default</i> is the <a href=#attr-command-type-state-command title=attr-command-type-state-command>Command</a> state.</p>

  <dl><dt>The <dfn id=attr-command-type-state-command title=attr-command-type-state-command>Command</dfn> state</dt>

   <dd><p>The element <a href=#represents>represents</a> a normal command with an associated action.</dd>

   <dt>The <dfn id=attr-command-type-state-checkbox title=attr-command-type-state-checkbox>Checkbox</dfn> state</dt>

   <dd><p>The element <a href=#represents>represents</a> a state or option that can be toggled.</dd>

   <dt>The <dfn id=attr-command-type-state-radio title=attr-command-type-state-radio>Radio</dfn> state</dt>

   <dd><p>The element <a href=#represents>represents</a> a selection of one item from a list of items.</dd>

  </dl><p>The <dfn id=attr-command-label title=attr-command-label><code>label</code></dfn>
  attribute gives the name of the command, as shown to the user.</p>

  <p>The <dfn id=attr-command-title title=attr-command-title><code>title</code></dfn>
  attribute gives a hint describing the command, which might be shown
  to the user to help him.</p>

  <p>The <dfn id=attr-command-icon title=attr-command-icon><code>icon</code></dfn>
  attribute gives a picture that represents the command. If the
  attribute is specified, the attribute's value must contain a
  <a href=#valid-url>valid URL</a>. To obtain the <a href=#absolute-url>absolute URL</a> of
  the icon, the attribute's value must be <a href=#resolve-a-url title="resolve a
  url">resolved</a> relative to the element.</p> <!-- this is
  affected by the base URL being changed, so users of this should
  cache the image once they've fetched it once, at least until the
  relative url changes again -->

  <p>The <dfn id=attr-command-disabled title=attr-command-disabled><code>disabled</code></dfn> attribute
  is a <a href=#boolean-attribute>boolean attribute</a> that, if present, indicates that
  the command is not available in the current state.</p>

  <p class=note>The distinction between <code title=attr-command-disabled><a href=#attr-command-disabled>disabled</a></code> and <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> is subtle. A command should be
  disabled if, in the same context, it could be enabled if only
  certain aspects of the situation were changed. A command should be
  marked as hidden if, in that situation, the command will never be
  enabled. For example, in the context menu for a water faucet, the
  command "open" might be disabled if the faucet is already open, but
  the command "eat" would be marked hidden since the faucet could
  never be eaten.</p>

  <p>The <dfn id=attr-command-checked title=attr-command-checked><code>checked</code></dfn>
  attribute is a <a href=#boolean-attribute>boolean attribute</a> that, if present,
  indicates that the command is selected. The attribute must be
  omitted unless the <code title=attr-command-type><a href=#attr-command-type>type</a></code>
  attribute is in either the <a href=#attr-command-type-state-checkbox title=attr-command-type-state-checkbox>Checkbox</a> state or
  the <a href=#attr-command-type-state-radio title=attr-command-type-state-radio>Radio</a>
  state.</p>

  <p>The <dfn id=attr-command-radiogroup title=attr-command-radiogroup><code>radiogroup</code></dfn>
  attribute gives the name of the group of commands that will be
  toggled when the command itself is toggled, for commands whose <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute has the value "<code title="">radio</code>". The scope of the name is the child list of
  the parent element. The attribute must be omitted unless the <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute is in the <a href=#attr-command-type-state-radio title=attr-command-type-state-radio>Radio</a> state.</p>

  <p>If the <code><a href=#the-command>command</a></code> element is used when <span title="menu generation">generating</span> a <span>context
  menu</span>, then the <dfn id=attr-command-default title=attr-command-default><code>default</code></dfn> attribute
  indicates, if present, that the command is the one that would have
  been invoked if the user had directly activated the menu's subject
  instead of using its context menu. The <code title=attr-command-default><a href=#attr-command-default>default</a></code> attribute is a
  <a href=#boolean-attribute>boolean attribute</a>.  The attribute must be omitted
  unless the <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute is
  in the <a href=#attr-command-type-state-command title=attr-command-type-state-command>Command</a>
  state.</p>

  <div class=example>

   <p class=XXX>Need an example that shows an element that, if
   double-clicked, invokes an action, but that also has a context
   menu, showing the various <code><a href=#the-command>command</a></code> attributes off, and
   that has a default command.</p>

  </div>

  <p>The <dfn id=dom-command-type title=dom-command-type><code>type</code></dfn>, <dfn id=dom-command-label title=dom-command-label><code>label</code></dfn>, <dfn id=dom-command-icon title=dom-command-icon><code>icon</code></dfn>, <dfn id=dom-command-disabled title=dom-command-disabled><code>disabled</code></dfn>, <dfn id=dom-command-checked title=dom-command-checked><code>checked</code></dfn>, <dfn id=dom-command-radiogroup title=dom-command-radiogroup><code>radiogroup</code></dfn>, and
  <dfn id=dom-command-default title=dom-command-default><code>default</code></dfn> DOM
  attributes must <a href=#reflect>reflect</a> the respective content
  attributes of the same name.</p>

  <p>The <dfn id=dom-command-click title=dom-command-click><code>click()</code></dfn>
  method's behavior depends on the value of the <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute of the element, as
  follows:</p>

  <!-- XXX should integrate this better with the normal click() method -->

  <dl class=switch><dt>If the <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute is
   in the <a href=#attr-command-type-state-checkbox title=attr-command-type-state-checkbox>Checkbox</a> state</dt>

   <dd><p>If the element has a <code title=attr-command-checked><a href=#attr-command-checked>checked</a></code> attribute, the UA must
   remove that attribute. Otherwise, the UA must add a <code title=attr-command-checked><a href=#attr-command-checked>checked</a></code> attribute, with the
   literal value <code title="">checked</code>. The UA must then
   <a href=#fire-a-click-event>fire a <code title="">click</code> event</a> at the
   element.</dd>


   <dt>If the <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute is
   in the <a href=#attr-command-type-state-radio title=attr-command-type-state-radio>Radio</a> state</dt>

   <dd><p>If the element has a parent, then the UA must walk the list
   of child nodes of that parent element, and for each node that is a
   <code><a href=#the-command>command</a></code> element, if that element has a <code title=attr-command-radiogroup><a href=#attr-command-radiogroup>radiogroup</a></code> attribute whose
   value exactly matches the current element's (treating missing <code title=attr-command-radiogroup><a href=#attr-command-radiogroup>radiogroup</a></code> attributes as if
   they were the empty string), and has a <code title=attr-command-checked><a href=#attr-command-checked>checked</a></code> attribute, must remove
   that attribute and <a href=#fire-a-click-event>fire a <code title="">click</code>
   event</a> at the element.</p>

   <p>Then, the element's <code title=attr-command-checked><a href=#attr-command-checked>checked</a></code> attribute attribute
   must be set to the literal value <code title="">checked</code> and
   a <span title="file a click event"><code title="">click</code>
   event must be fired</span> at the element.</dd>


   <dt>Otherwise</dt>

   <dd><p>The UA must <a href=#fire-a-click-event>fire a <code title="">click</code>
   event</a> at the element.</dd>

  </dl><p class=note>Firing a synthetic <code title=event-click>click</code> event at the element does not cause
  any of the actions described above to happen.</p>

  <p class=XXX>Need to define the command="" attribute</p>

  <p class=note><code><a href=#the-command>command</a></code> elements are not rendered
  unless they <a href=#menus title=menu>form part of a menu</a>.</p>



  <h4 id=the-bb-element><span class=secno>4.11.4 </span>The <dfn><code>bb</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dd><a href=#interactive-content-0>Interactive content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#phrasing-content-0>phrasing content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>, but there must be no <a href=#interactive-content-0>interactive content</a> descendant.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-command-type><a href=#attr-command-type>type</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlbrowserbuttonelement>HTMLBrowserButtonElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-bb-type title=dom-bb-type>type</a>;
  readonly attribute boolean <a href=#dom-bb-supported title=dom-bb-supported>supported</a>;
  readonly attribute boolean <a href=#dom-bb-disabled title=dom-bb-disabled>disabled</a>;
};</pre>
    <p>The <code title=command-ro><a href=#command-ro>Command</a></code> interface must also
    be implemented by this element.</p>
   </dd>
  </dl><p>The <code><a href=#the-bb-element>bb</a></code> element represents a user agent command that
  the user can invoke.</p>

  <p>The <dfn id=attr-bb-type title=attr-bb-type><code>type</code></dfn> attribute
  indicates the kind of command. The <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute is an <a href=#enumerated-attribute>enumerated
  attribute</a>. The following table lists the keywords and states
  for the attribute &mdash; the keywords in the left column map to the
  states listed in the cell in the second column on the same row as
  the keyword.</p>

  <table><thead><tr><th> Keyword <th> State
   <tbody><tr><td> <dfn id=attr-bb-type-makeapp title=attr-bb-type-makeapp><code>makeapp</code></dfn>
     <td> <i title=attr-bb-type-makeapp-state><a href=#the-make-application-state>make application</a></i>
  </table><p>The <i>missing value default</i> state is the <i title=attr-bb-type-null-state><a href=#attr-bb-type-null-state>null</a></i> state.</p>

  <p>Each state has an <i>action</i> and a <i>relevance</i>, defined
  in the following sections.</p>

  <p>When the attribute is in the <dfn id=attr-bb-type-null-state title=attr-bb-type-null-state><i>null</i></dfn> state, the
  <i>action</i> is to not do anything, and the <i>relevance</i> is
  unconditionally false.</p>

  <p>A <code><a href=#the-bb-element>bb</a></code> element whose <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute is in a state whose
  <i>relevance</i> is true must be enabled. Conversely, a
  <code><a href=#the-bb-element>bb</a></code> element whose <code title=attr-bb-type><a href=#attr-bb-type>type</a></code>
  attribute is in a state whose <i>relevance</i> is false must be
  disabled.</p>

  <p class=note>If a <code><a href=#the-bb-element>bb</a></code> element is enabled, it will
  match the <code title=selector-enabled><a href=#selector-enabled>:enabled</a></code>
  pseudo-class; otherwise, it will match the <code title=selector-disabled><a href=#selector-disabled>:disabled</a></code> pseudo-class.</p>

  <p>User agents should allow users to invoke <code><a href=#the-bb-element>bb</a></code> elements
  when they are enabled. When a user invokes a <code><a href=#the-bb-element>bb</a></code>
  element, its <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's
  state's <i>action</i> must be invoked.</p>

  <p>When the element has no descendant element children and has no
  descendant <a href=#text-node>text node</a> children of non-zero length, the
  element <a href=#represents>represents</a> a browser button with a
  user-agent-defined icon or text representing the <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's state's <i>action</i>
  and <i>relevance</i> (enabled vs disabled). Otherwise, the element
  <a href=#represents>represents</a> its children.</p>

  <p>The <dfn id=dom-bb-type title=dom-bb-type><code>type</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>

  <p>The <dfn id=dom-bb-supported title=dom-bb-supported><code>supported</code></dfn>
  DOM attribute must return true if the <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute is in a state other than
  the <i title=attr-bb-type-null-state><a href=#attr-bb-type-null-state>null</a></i> state and the user
  agent supports that state's <i>action</i> (i.e. when the attribute's
  value is one that the user agent recognises and supports), and false
  otherwise.</p>

  <p>The <dfn id=dom-bb-disabled title=dom-bb-disabled><code>disabled</code></dfn> DOM
  attribute must return true if the element is disabled, and false
  otherwise (i.e. it returns the opposite of the <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's state's
  <i>relevance</i>).</p>


  <h5 id=browser-button-types><span class=secno>4.11.4.1 </span>Browser button types</h5>

  <h6 id=the-make-application-state><span class=secno>4.11.4.1.1 </span>The <dfn title=attr-bb-type-makeapp-state><i>make application</i></dfn> state</h6>

  <p>Some user agents support making sites accessible as independent
  applications, as if they were not Web sites at all. The <i title=attr-bb-type-makeapp-state><a href=#the-make-application-state>make application</a></i> state exists
  to allow Web pages to offer themselves to the user as targets for
  this mode of operation.</p>

  <p>The <i>action</i> of the <i title=attr-bb-type-makeapp-state><a href=#the-make-application-state>make application</a></i> state is to
  confirm the user's intent to use the current site in a standalone
  fashion, and, provided the user's intent is confirmed, offer the
  user a way to make the resource identified by <a href="#the-document's-address">the document's
  address</a> available in such a fashion.</p>

  <p class=warning>The confirmation is needed because it is
  relatively easy to trick users into activating buttons. The
  confirmation could, e.g. take the form of asking the user where to
  "save" the application, or non-modal information panel that is
  clearly from the user agent and gives the user the opportunity to
  drag an icon to their system's application launcher.</p>

  <p>The <i>relevance</i> of the <i title=attr-bb-type-makeapp-state><a href=#the-make-application-state>make application</a></i> state is
  false if the user agent is already handling the site in such a
  fashion, or if the user agent doesn't support making the site
  available in that fashion, and true otherwise.</p>

  <div class=example>

   <p>In the following example, a few links are listed on an
   application's page, to allow the user perform certain actions,
   including making the application standalone:</p>

   <pre>&lt;menu&gt;
 &lt;li&gt;&lt;a href="settings.html" onclick="panels.show('settings')"&gt;Settings&lt;/a&gt;
 &lt;li&gt;&lt;bb type="makeapp"&gt;Download standalone application&lt;/bb&gt;
 &lt;li&gt;&lt;a href="help.html" onclick="panels.show('help')"&gt;Help&lt;/a&gt;
 &lt;li&gt;&lt;a href="logout.html" onclick="panels.show('logout')"&gt;Sign out&lt;/a&gt;
&lt;/menu&gt;</pre>

   <p>With the following stylesheet, it could be make to look like a
   single line of text with vertical bars separating the options, with
   the "make app" option disappearing when it's not supported or
   relevant:</p>

   <pre>menu li { display: none; }
menu li:enabled { display: inline; }
menu li:not(:first-child)::before { content: ' | '; }</pre>

   <p>This could look like this:</p>

   <p><img alt='"Settings&nbsp;|&nbsp;Download&nbsp;standalone&nbsp;application&nbsp;|&nbsp;Help&nbsp;|&nbsp;Sign&nbsp;out"' src=images/sample-makeapp.png></p>

  </div>

  <div class=example>

   <p>The following example shows another way to do the same thing as
   the previous one, this time not relying on CSS support to hide the
   "make app" link if it doesn't apply:</p>

   <pre>&lt;menu&gt;
 &lt;a href="settings.html" onclick="panels.show('settings')"&gt;Settings&lt;/a&gt; |
 &lt;bb type="makeapp" id="makeapp"&gt; &lt;/bb&gt;
 &lt;a href="help.html" onclick="panels.show('help')"&gt;Help&lt;/a&gt; |
 &lt;a href="logout.html" onclick="panels.show('logout')"&gt;Sign out&lt;/a&gt;
&lt;/menu&gt;
&lt;script&gt;
 var bb = document.getElementById('makeapp');
 if (bb.supported &amp;&amp; bb.enabled) {
   bb.parentNode.nextSibling.textContent = ' | ';
   bb.textContent = 'Download standalone application';
 } else {
   bb.parentNode.removeChild(bb);
 }
&lt;/script&gt;</pre>

  </div>




  <h4 id=menus><span class=secno>4.11.5 </span>The <dfn><code>menu</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dd>If the element's <code title=attr-menu-type><a href=#attr-menu-type>type</a></code> attribute is in the <a href=#tool-bar-state title="tool bar state">tool bar</a> state: <a href=#interactive-content-0>Interactive content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd>Either: Zero or more <code><a href=#the-li-element>li</a></code> elements.</dd>
   <dd>Or: <a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dd><code title=attr-menu-type><a href=#attr-menu-type>type</a></code></dd>
   <dd><code title=attr-menu-label><a href=#attr-menu-label>label</a></code></dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class=idl>interface <dfn id=htmlmenuelement>HTMLMenuElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
           attribute DOMString <a href=#dom-menu-type title=dom-menu-type>type</a>;
           attribute DOMString <a href=#dom-menu-label title=dom-menu-label>label</a>;
};</pre>
  </dl><p>The <code><a href=#menus>menu</a></code> element represents a list of commands.</p>

  <p>The <dfn id=attr-menu-type title=attr-menu-type><code>type</code></dfn> attribute
  is an <a href=#enumerated-attribute>enumerated attribute</a> indicating the kind of menu
  being declared. The attribute has three states. The <code title=attr-menu-type-context>context</code> keyword maps to the
  <dfn id=context-menu-state title="context menu state">context menu</dfn> state, in which
  the element is declaring a context menu. The <code title=attr-menu-type-toolbar>toolbar</code> keyword maps to the
  <dfn id=tool-bar-state title="tool bar state">tool bar</dfn> state, in which the
  element is declaring a tool bar. The attribute may also be
  omitted. The <i>missing value default</i> is the <dfn id=list-state title="list
  state">list</dfn> state, which indicates that the element is merely
  a list of commands that is neither declaring a context menu nor
  defining a tool bar.</p>

  <p>If a <code><a href=#menus>menu</a></code> element's <code title=attr-menu-type><a href=#attr-menu-type>type</a></code> attribute is in the <a href=#context-menu-state title="context menu state">context menu</a> state, then the
  element <a href=#represents>represents</a> the commands of a context menu, and the user can
  only interact with the commands if that context menu is
  activated.</p>

  <p>If a <code><a href=#menus>menu</a></code> element's <code title=attr-menu-type><a href=#attr-menu-type>type</a></code> attribute is in the <a href=#tool-bar-state title="tool bar state">tool bar</a> state, then the element
  <a href=#represents>represents</a> a list of active commands that the user can immediately
  interact with.</p>

  <p>If a <code><a href=#menus>menu</a></code> element's <code title=attr-menu-type><a href=#attr-menu-type>type</a></code> attribute is in the <a href=#list-state title="list state">list</a> state, then the element either
  <a href=#represents>represents</a> an unordered list of items (each represented by an
  <code><a href=#the-li-element>li</a></code> element), each of which represents a command that
  the user can perform or activate, or, if the element has no
  <code><a href=#the-li-element>li</a></code> element children, <a href=#flow-content-0>flow content</a>
  describing available commands.</p>

  <p>The <dfn id=attr-menu-label title=attr-menu-label><code>label</code></dfn>
  attribute gives the label of the menu. It is used by user agents to
  display nested menus in the UI. For example, a context menu
  containing another menu would use the nested menu's <code title=attr-menu-label><a href=#attr-menu-label>label</a></code> attribute for the submenu's
  menu label.</p>

  <p>The <dfn id=dom-menu-type title=dom-menu-type><code>type</code></dfn> and <dfn id=dom-menu-label title=dom-menu-label><code>label</code></dfn> DOM attributes must
  <a href=#reflect>reflect</a> the respective content attributes of the same
  name.</p>



  <h5 id=menus-intro><span class=secno>4.11.5.1 </span>Introduction</h5>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>...</p>

<!--


  <pre>&lt;menu type="commands"&gt;
 &lt;li&gt;
  &lt;menu label="File"&gt;
   &lt;button type="button" onclick="fnew()"&gt;New...&lt;/button&gt;
   &lt;button type="button" onclick="fopen()"&gt;Open...&lt;/button&gt;
   &lt;button type="button" onclick="fsave()" id="save"&gt;Save&lt;/button&gt;
   &lt;button type="button" onclick="fsaveas()"&gt;Save as...&lt;/button&gt;
  &lt;/menu&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;menu label="Edit"&gt;
   &lt;button type="button" onclick="ecopy()"&gt;Copy&lt;/button&gt;
   &lt;button type="button" onclick="ecut()"&gt;Cut&lt;/button&gt;
   &lt;button type="button" onclick="epaste()"&gt;Paste&lt;/button&gt;
  &lt;/menu&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;menu label="Help"&gt;
   &lt;li&gt;&lt;a href="help.html"&gt;Help&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="about.html"&gt;About&lt;/a&gt;&lt;/li&gt;
  &lt;/menu&gt;
 &lt;/li&gt;
&lt;/menu&gt;

...

&lt;input command="save"/&gt; &lt;!- - This will act exactly like the
                             Save button above, including reflecting
                             its <code>disabled</code> state dynamically - -&gt;

</pre>

  <p>Here's some markup that falls back on the traditional abuse of
  the <code>select</code> element as a navigation menu, but which is
  implemented as a semi-correct menu using the new techniques of this
  document:</p>

<pre>&lt;form action="redirect.cgi"&gt;
 &lt;menu type="commands"&gt;
  &lt;label for="goto"&gt;Go to...&lt;/label&gt;
  &lt;menu label="Go"&gt;
   &lt;select id="goto"
           onchange="if (this.options[this.selectedIndex].value)
                     window.location = this.options[this.selectedIndex].value"&gt;
    &lt;option value="" selected="selected"&gt; Select site: &lt;/option&gt;
    &lt;option value="http://www.apple.com/"&gt; Apple &lt;/option&gt;
    &lt;option value="http://www.mozilla.org/"&gt; Mozilla &lt;/option&gt;
    &lt;option value="http://www.opera.com/"&gt; Opera &lt;/option&gt;
   &lt;/select&gt;
   &lt;span&gt;&lt;input type="submit" value="Go"&gt;&lt;/span&gt;
  &lt;/menu&gt;
 &lt;/menu&gt;
&lt;/form&gt;</pre>

<form ...>
 <menu type="toolbar">
  <li>
   <select name="foo" onchange="form.submit()">
     ...
   </select>
   <button>Go</button>
  </li>
  <li>
   <select name="bar" onchange="form.submit()">
     ...
   </select>
   <button>Go</button>
  </li>
 </menu>
</form>

<form ...>
 <menu type="toolbar">
  <menu label="Foo">
   <select name="foo" onchange="form.submit()">
     ...
   </select>
   <button>Go</button>
  </menu>
  <menu label="Bar">
   <select name="bar" onchange="form.submit()">
     ...
   </select>
   <button>Go</button>
  </menu>
 </menu>
</form>


explain that only direct children of the <menu> matter

-->


  <h5 id=building-menus-and-tool-bars><span class=secno>4.11.5.2 </span><dfn>Building menus and tool bars</dfn></h5>

  <p>A menu (or tool bar) consists of a list of zero or more of the
  following components:</p>

  <ul class=brief><li><a href=#concept-command title=concept-command>Commands</a>, which can be marked as default commands</li>
   <li>Separators</li>
   <li>Other menus (which allows the list to be nested)</li>
  </ul><p>The list corresponding to a particular <code><a href=#menus>menu</a></code> element
  is built by iterating over its child nodes. For each child node in
  <a href=#tree-order>tree order</a>, the required behavior depends on what the
  node is, as follows:</p>

  <dl class=switch><dt>An element that <a href=#concept-command title=concept-command>defines a command</a></dt>

   <dd>Append the command to the menu, respecting its <a href=#concept-facet title=concept-facet>facets</a><!-- XXX be explicit about what
   this means for each facet -->. If the element is a
   <code><a href=#the-command>command</a></code> element with a <code title=attr-command-default><a href=#attr-command-default>default</a></code> attribute, mark the
   command as being a default command.</dd> <!-- XXX if there's an
   Icon facet for the command, it should be <span
   title="fetch">fetched</span>, and then that image should be
   associated with the command, such that each command only has its
   image fetched once, to prevent changes to the base URL from having
   effects after the image has been fetched once. (no need to resolve
   the Icon facet, it's an absolute URL) -->


   <dt>An <code><a href=#the-hr-element>hr</a></code> element</dt>
   <dt>An <code><a href=#the-option-element>option</a></code> element that has a <code title=attr-option-value><a href=#attr-option-value>value</a></code> attribute set to the empty
   string, and has a <code title=attr-option-disabled><a href=#attr-option-disabled>disabled</a></code> attribute, and whose
   <code><a href=#textcontent>textContent</a></code> consists of a string of one or more
   hyphens (U+002D HYPHEN-MINUS)</dt>

   <dd>Append a separator to the menu.</dd>


   <dt>An <code><a href=#the-li-element>li</a></code> element</dt>

   <dd>Iterate over the children of the <code><a href=#the-li-element>li</a></code> element.</dd>


   <dt>A <code><a href=#menus>menu</a></code> element with no <code title=attr-menu-label><a href=#attr-menu-label>label</a></code> attribute</dt>
   <dt>A <code><a href=#the-select-element>select</a></code> element</dt>

   <dd>Append a separator to the menu, then iterate over the children
   of the <code><a href=#menus>menu</a></code> or <code><a href=#the-select-element>select</a></code> element, then
   append another separator.</dd>


   <dt>A <code><a href=#menus>menu</a></code> element with a <code title=attr-menu-label><a href=#attr-menu-label>label</a></code> attribute</dt>
   <dt>An <code><a href=#the-optgroup-element>optgroup</a></code> element</dt>

   <dd>Append a submenu to the menu, using the value of the element's
   <code title="">label</code> attribute as the label of the menu. The
   submenu must be constructed by taking the element and creating a
   new menu for it using the complete process described in this
   section.</dd>


   <dt>Any other node</dt>

   <dd><a href=#ignore>Ignore</a> the node.</dd>

  </dl><p class=XXX>We should support <code><a href=#the-label-element>label</a></code> in the
  algorithm above -- just iterate through the contents like with
  <code><a href=#the-li-element>li</a></code>, to support <code><a href=#the-input-element>input</a></code> elements in
  <code><a href=#the-label-element>label</a></code> elements. Also, <code><a href=#the-optgroup-element>optgroup</a></code> elements
  without labels should be ignored (maybe? or at least should say they
  have no label so that they are dropped below), and
  <code><a href=#the-select-element>select</a></code> elements inside <code><a href=#the-label-element>label</a></code> elements may
  need special processing.</p>

  <p>Once all the nodes have been processed as described above, the
  user agent must the post-process the menu as follows:</p>

  <ol><li>Any menu item with no label, or whose label is the empty string, must be removed.</li>

   <li>Any sequence of two or more separators in a row must be collapsed to a single separator.</li>

   <li>Any separator at the start or end of the menu must be removed.</li>

  </ol><h5 id=context-menus><span class=secno>4.11.5.3 </span><dfn>Context menus</dfn></h5>

  <p>The <dfn id=attr-contextmenu title=attr-contextmenu><code>contextmenu</code></dfn>
  attribute gives the element's <a href=#context-menus title="context menus">context
  menu</a>. The value must be the ID of a <code><a href=#menus>menu</a></code> element
  in the DOM. If the node that would be obtained by the invoking the
  <code>getElementById()</code> method using the attribute's value as
  the only argument is null or not a <code><a href=#menus>menu</a></code> element, then
  the element has no assigned context menu. Otherwise, the element's
  assigned context menu is the element so identified.</p>

  <p>When an element's context menu is requested (e.g. by the user
  right-clicking the element, or pressing a context menu key), the UA
  must <a href=#fire-a-contextmenu-event>fire a <code title="">contextmenu</code> event</a> on
  the element for which the menu was requested.</p>

  <p class=note>Typically, therefore, the firing of the <code title=event-contextmenu>contextmenu</code> event will be the
  default action of a <code title=mouseup>mouseup</code> or <code title=event-keyup>keyup</code> event. The exact sequence of events
  is UA-dependent, as it will vary based on platform conventions.</p>

  <p>The default action of the <code title=event-contextmenu>contextmenu</code> event depends on
  whether the element has a context menu assigned (using the <code title=attr-contextmenu><a href=#attr-contextmenu>contextmenu</a></code> attribute) or not. If it
  does not, the default action must be for the user agent to show its
  default context menu, if it has one.</p>

  <p class=XXX>Context menus should inherit (so clicking on a
  span in a paragraph with a context menu should show the menu).</p>

  <p>If the element <em>does</em> have a context menu assigned, then
  the user agent must <a href=#fire-a-show-event>fire a <code title="">show</code>
  event</a> on the relevant <code><a href=#menus>menu</a></code> element.</p>

  <p>The default action of <em>this</em> event is that the user agent
  must show a context menu <a href=#building-menus-and-tool-bars title="building menus and tool
  bars">built</a> from the <code><a href=#menus>menu</a></code> element.</p>

  <p>The user agent may also provide access to its default context
  menu, if any, with the context menu shown. For example, it could
  merge the menu items from the two menus together, or provide the
  page's context menu as a submenu of the default menu.</p>

  <p>If the user dismisses the menu without making a selection,
  nothing in particular happens.</p>

  <p>If the user selects a menu item that represents a <span title=concept-commands>command</span>, then the UA must invoke
  that command's <a href=#command-facet-action title=command-facet-Action>Action</a>.</p>

  <p>Context menus must not, while being shown, reflect changes in the
  DOM; they are constructed as the default action of the <code title=event-show>show</code> event and must remain like that until
  dismissed.</p>

  <p>User agents may provide means for bypassing the context menu
  processing model, ensuring that the user can always access the UA's
  default context menus. For example, the user agent could handle
  right-clicks that have the Shift key depressed in such a way that it
  does not fire the <code title=event-contextmenu>contextmenu</code>
  event and instead always shows the default context menu.</p>

  <p>The <dfn id=dom-contextmenu title=dom-contextMenu><code>contextMenu</code></dfn>
  attribute must <a href=#reflect>reflect</a> the <code title=attr-contextmenu><a href=#attr-contextmenu>contextmenu</a></code> content attribute.</p>


  <h5 id=tool-bars><span class=secno>4.11.5.4 </span><dfn>Tool bars</dfn></h5>

  <p>When a <code><a href=#menus>menu</a></code> element has a <code title=attr-menu-type><a href=#attr-menu-type>type</a></code> attribute in the <a href=#tool-bar-state title="tool bar state">tool bar</a> state, then the user agent
  must <a href=#building-menus-and-tool-bars title="building menus and tool bars">build</a> the
  menu for that <code><a href=#menus>menu</a></code> element, and use the result in the
  rendering.</p>

  <p>The user agent must reflect changes made to the
  <code><a href=#menus>menu</a></code>'s DOM, by immediately <a href=#building-menus-and-tool-bars title="building menus
  and tool bars">rebuilding</a> the menu.</p>



  <h4 id=commands><span class=secno>4.11.6 </span>Commands</h4>

  <p>A <dfn id=concept-command title=concept-command>command</dfn> is the abstraction
  behind menu items, buttons, and links. Once a command is defined,
  other parts of the interface can refer to the same command, allowing
  many access points to a single feature to share aspects such as the
  disabled state.</p>

  <p id=facets>Commands are defined to have the following
  <dfn id=concept-facet title=concept-facet>facets</dfn>:</p>

  <dl><dt><dfn id=command-facet-type title=command-facet-Type>Type</dfn></dt>

   <dd>The kind of command: "command", meaning it is a normal command;
   "radio", meaning that triggering the command will, amongst other
   things, set the <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked
   State</a> to true (and probably uncheck some other commands); or
   "checkbox", meaning that triggering the command will, amongst other
   things, toggle the value of the <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a>.</dd>

   <dt><dfn id=command-facet-id title=command-facet-ID>ID</dfn></dt>

   <dd>The name of the command, for referring to the command from the
   markup or from script. If a command has no ID, it is an
   <dfn id=anonymous-command>anonymous command</dfn>.</dd>

   <dt><dfn id=command-facet-label title=command-facet-Label>Label</dfn></dt>

   <dd>The name of the command as seen by the user.</dd>

   <dt><dfn id=command-facet-hint title=command-facet-Hint>Hint</dfn></dt>

   <dd>A helpful or descriptive string that can be shown to the
   user.</dd>

   <dt><dfn id=command-facet-icon title=command-facet-Icon>Icon</dfn></dt>

   <dd>An <a href=#absolute-url>absolute URL</a> identifying a graphical image that
   represents the action. A command might not have an Icon.</dd> <!--
   changing base URLs might change the icon -->

   <dt><dfn id=command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</dfn></dt>

   <dd>Whether the command is hidden or not (basically, whether it
   should be shown in menus).</dd>

   <dt><dfn id=command-facet-disabledstate title=command-facet-DisabledState>Disabled State</dfn></dt>

   <dd>Whether the command is relevant and can be triggered or not.</dd>

   <dt><dfn id=command-facet-checkedstate title=command-facet-CheckedState>Checked State</dfn></dt>

   <dd>Whether the command is checked or not.</dd>

   <dt><dfn id=command-facet-action title=command-facet-Action>Action</dfn></dt>

   <dd>The actual effect that triggering the command will have. This
   could be a scripted event handler, a <a href=#url>URL</a> to which to
   <a href=#navigate>navigate</a>, or a form submission.</dd>

   <dt><dfn id=command-facet-triggers title=command-facet-Triggers>Triggers</dfn></dt>

   <dd>The list of elements that can trigger the command. The element
   defining a command is always in the list of elements that can
   trigger the command. For anonymous commands, only the element
   defining the command is on the list, since other elements have no
   way to refer to it.</dd>

  </dl><p>Commands are represented by elements in the DOM. Any element that
  can define a command also implements the <code title=command-ro><a href=#command-ro>Command</a></code> interface:</p>

  <p class=XXX>Actually even better would be to just mix it
  straight into those interfaces somehow.</p>

  <pre class=idl>[NoInterfaceObject] interface <dfn id=command-ro title=command-ro>Command</dfn> {<!--
 NOTE: to avoid clashing with the HTMLCommandElement interface's names,
       the members of this interface use cross-references with the title
       dom-command-ro-foo (note the "ro", which stands for "readonly").
-->
  readonly attribute DOMString <a href=#dom-command-ro-commandtype title=dom-command-ro-commandType>commandType</a>;          
  readonly attribute DOMString <a href=#dom-command-ro-id title=dom-command-ro-id>id</a>;
  readonly attribute DOMString <a href=#dom-command-ro-label title=dom-command-ro-label>label</a>;
  readonly attribute DOMString <a href=#dom-command-ro-title title=dom-command-ro-title>title</a>;
  readonly attribute DOMString <a href=#dom-command-ro-icon title=dom-command-ro-icon>icon</a>;
  readonly attribute boolean <a href=#dom-command-ro-hidden title=dom-command-ro-hidden>hidden</a>;
  readonly attribute boolean <a href=#dom-command-ro-disabled title=dom-command-ro-disabled>disabled</a>;              
  readonly attribute boolean <a href=#dom-command-ro-checked title=dom-command-ro-checked>checked</a>;              
  void <a href=#dom-command-ro-click title=dom-command-ro-click>click</a>();
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-command-ro-triggers title=dom-command-ro-triggers>triggers</a>;
  readonly attribute <a href=#the-command>Command</a> <span title=dom-command-ro-command>command</span>;
};</pre>

  <p>The <code title=command-ro><a href=#command-ro>Command</a></code> interface is
  implemented by any element capable of defining a command. (If an
  element can define a command, its definition will list this
  interface explicitly.) All the attributes of the <code title=command-ro><a href=#command-ro>Command</a></code> interface are read-only. Elements
  implementing this interface may implement other interfaces that have
  attributes with identical names but that are mutable; in bindings
  that flatten all supported interfaces on the object, the mutable
  attributes must shadow the readonly attributes defined in the <code title=command-ro><a href=#command-ro>Command</a></code> interface.</p>

  <p>The <dfn id=dom-command-ro-commandtype title=dom-command-ro-commandType><code>commandType</code></dfn>
  attribute must return a string whose value is either "<code title="">command</code>", "<code title="">radio</code>", or "<code title="">checked</code>", depending on whether the <a href=#command-facet-type title=command-facet-Type>Type</a> of the command defined by the
  element is "command", "radio", or "checked" respectively. If the
  element does not define a command, it must return null.</p>

  <p>The <dfn id=dom-command-ro-id title=dom-command-ro-id><code>id</code></dfn> attribute
  must return the command's <a href=#command-facet-id title=command-facet-ID>ID</a>,
  or null if the element does not define a command or defines an
  <a href=#anonymous-command>anonymous command</a>. This attribute will be shadowed by
  the <code title=dom-id><a href=#dom-id>id</a></code> DOM attribute on the
  <code><a href=#htmlelement>HTMLElement</a></code> interface.</p>

  <p>The <dfn id=dom-command-ro-label title=dom-command-ro-label><code>label</code></dfn>
  attribute must return the command's <a href=#command-facet-label title=command-facet-Label>Label</a>, or null if the element
  does not define a command or does not specify a <a href=#command-facet-label title=command-facet-Label>Label</a>. This attribute will be
  shadowed by the <code title="">label</code> DOM attribute on
  <code><a href=#the-option-element>option</a></code> and <code><a href=#the-command>command</a></code> elements.</p>

  <p>The <dfn id=dom-command-ro-title title=dom-command-ro-title><code>title</code></dfn>
  attribute must return the command's <a href=#command-facet-hint title=command-facet-Hint>Hint</a>, or null if the element does
  not define a command or does not specify a <a href=#command-facet-hint title=command-facet-Hint>Hint</a>. This attribute will be
  shadowed by the <code title=dom-title><a href=#dom-title>title</a></code> DOM attribute
  on the <code><a href=#htmlelement>HTMLElement</a></code> interface.</p>

  <p>The <dfn id=dom-command-ro-icon title=dom-command-ro-icon><code>icon</code></dfn>
  attribute must return the <a href=#absolute-url>absolute URL</a> of the command's
  <a href=#command-facet-icon title=command-facet-Icon>Icon</a>. If the element does
  not specify an icon, or if the element does not define a command,
  then the attribute must return null. This attribute will be shadowed
  by the <code title=dom-command-icon><a href=#dom-command-icon>icon</a></code> DOM attribute on
  <code><a href=#the-command>command</a></code> elements.</p>

  <p>The <dfn id=dom-command-ro-hidden title=dom-command-ro-hidden><code>hidden</code></dfn>
  attribute must return true if the command's <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a> is that the
  command is hidden, and false if it is that the command is not
  hidden. If the element does not define a command, the attribute must
  return false. This attribute will be shadowed by the <code title=dom-hidden><a href=#dom-hidden>hidden</a></code> DOM attribute on the
  <code><a href=#htmlelement>HTMLElement</a></code> interface.</p>

  <p>The <dfn id=dom-command-ro-disabled title=dom-command-ro-disabled><code>disabled</code></dfn>
  attribute must return true if the command's <a href=#command-facet-disabledstate title=command-facet-DisabledState>Disabled State</a> is that
  the command is disabled, and false if the command is not
  disabled. This attribute is not affected by the command's <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a>. If the
  element does not define a command, the attribute must return
  false. This attribute will be shadowed by the <code title="">disabled</code> attribute on <code><a href=#the-button-element>button</a></code>,
  <code><a href=#the-input-element>input</a></code>, <code><a href=#the-option-element>option</a></code>, and <code><a href=#the-command>command</a></code>
  elements.</p>

  <p>The <dfn id=dom-command-ro-checked title=dom-command-ro-checked><code>checked</code></dfn> attribute
  must return true if the command's <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a> is that the
  command is checked, and false if it is that the command is not
  checked. If the element does not define a command, the attribute
  must return false. This attribute will be shadowed by the <code title="">checked</code> attribute on <code><a href=#the-input-element>input</a></code> and
  <code><a href=#the-command>command</a></code> elements.</p>

  <p>The <dfn id=dom-command-ro-click title=dom-command-ro-click><code>click()</code></dfn>
  method must trigger the <a href=#command-facet-action title=command-facet-Action>Action</a> for the command. If the
  element does not define a command, this method must do nothing. This
  method will be shadowed by the <code title=dom-click><a href=#dom-click>click()</a></code> method on <a href=#html-elements>HTML
  elements</a>, and is included only for completeness.</p>

  <p>The <dfn id=dom-command-ro-triggers title=dom-command-ro-triggers><code>triggers</code></dfn>
  attribute must return a list containing the elements that can
  trigger the command (the command's <a href=#command-facet-triggers title=command-facet-Triggers>Triggers</a>). The list must be
  <a href=#live>live</a>. While the element does not define a command, the
  list must be empty.</p>

  <p>The <dfn id=dom-document-commands title=dom-document-commands><code>commands</code></dfn> attribute
  of the document's <code><a href=#htmldocument>HTMLDocument</a></code> interface must return an
  <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the <code>Document</code>
  node, whose filter matches only elements that define commands and
  have IDs.</p>

  <p>The following elements can define commands: <code title=a-command><a href=#using-the-a-element-to-define-a-command>a</a></code>, <code title=button-command><a href=#using-the-button-element-to-define-a-command>button</a></code>, <code title=input-command><a href=#using-the-input-element-to-define-a-command>input</a></code>, <code title=option-command><a href=#using-the-option-element-to-define-a-command>option</a></code>, <code title=command-element><a href=#using-the-command-element-to-define-a-command>command</a></code>, <code title=bb-command><a href=#using-the-bb-element-to-define-a-command>bb</a></code>.</p>


  <h5 id=using-the-a-element-to-define-a-command><span class=secno>4.11.6.1 </span><dfn title=a-command>Using the <code>a</code> element to define a command</dfn></h5>

  <p>An <code><a href=#the-a-element>a</a></code> element with an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute <a href=#concept-command title=concept-command>defines a command</a>.</p>

  <p>The <a href=#command-facet-type title=command-facet-Type>Type</a> of the command
  is "command".</p>

  <p>The <a href=#command-facet-id title=command-facet-ID>ID</a> of the command is
  the value of the <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute of the
  element, if the attribute is present and not empty. Otherwise the
  command is an <a href=#anonymous-command>anonymous command</a>.</p>

  <p>The <a href=#command-facet-label title=command-facet-Label>Label</a> of the command
  is the string given by the element's <code><a href=#textcontent>textContent</a></code> DOM
  attribute.</p>

  <p>The <a href=#command-facet-hint title=command-facet-Hint>Hint</a> of the command
  is the value of the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute
  of the element. If the attribute is not present, the <a href=#command-facet-hint title=command-facet-Hint>Hint</a> is the empty string.</p>

  <p>The <a href=#command-facet-icon title=command-facet-Icon>Icon</a> of the command
  is the <a href=#absolute-url>absolute URL</a> obtained from <a href=#resolve-a-url title="resolve
  a url">resolving</a> the value of the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute of the first
  <code><a href=#the-img-element>img</a></code> element descendant of the element, relative to that
  element, if there is such an element and resolving its attribute is
  successful. Otherwise, there is no <a href=#command-facet-icon title=command-facet-Icon>Icon</a> for the command.</p>

  <p>The <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a>
  of the command is true (hidden) if the element has a <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute, and false
  otherwise.</p>

  <p>The <a href=#command-facet-disabledstate title=command-facet-DisabledState>Disabled
  State</a> facet of the command is always false. (The command is
  always enabled.)</p>

  <p>The <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a>
  of the command is always false. (The command is never checked.)</p>

  <p>The <a href=#command-facet-action title=command-facet-Action>Action</a> of the
  command is to <a href=#fire-a-click-event title="fire a click event">fire a <code title="">click</code> event</a> at the element.</p>


  <h5 id=using-the-button-element-to-define-a-command><span class=secno>4.11.6.2 </span><dfn title=button-command>Using the <code>button</code> element to define a command</dfn></h5>

  <p>A <code><a href=#the-button-element>button</a></code> element always <a href=#concept-command title=concept-command>defines a command</a>.</p>

  <p>The <a href=#command-facet-type title=command-facet-Type>Type</a>, <a href=#command-facet-id title=command-facet-ID>ID</a>, <a href=#command-facet-label title=command-facet-Label>Label</a>, <a href=#command-facet-hint title=command-facet-Hint>Hint</a>, <a href=#command-facet-icon title=command-facet-Icon>Icon</a>, <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a>, <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a>, and <a href=#command-facet-action title=command-facet-Action>Action</a> facets of the command are
  determined <a href=#using-the-a-element-to-define-a-command title=a-command>as for <code>a</code>
  elements</a> (see the previous section).</p>

  <p>The <a href=#command-facet-disabledstate title=command-facet-DisabledState>Disabled
  State</a> of the command mirrors the <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a> state of the button.</p>


  <h5 id=using-the-input-element-to-define-a-command><span class=secno>4.11.6.3 </span><dfn title=input-command>Using the <code>input</code> element to define a command</dfn></h5>

  <p>An <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in one of the <a href=#submit-button-state title=attr-input-type-submit>Submit Button</a>, <a href=#reset-button-state title=attr-input-type-reset>Reset Button</a>, <a href=#button-state title=attr-input-type-button>Button</a>, <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a>, or <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a> states <a href=#concept-command title=concept-command>defines a command</a>.</p>

  <p>The <a href=#command-facet-type title=command-facet-Type>Type</a> of the command
  is "radio" if the <code title=attr-input-type><a href=#attr-input-type>type</a></code>
  attribute is in the <code title=attr-input-type-radio><a href=#radio-button-state>Radio
  Button</a></code> state, "checkbox" if the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <code title=attr-input-type-checkbox><a href=#checkbox-state>Checkbox</a></code> state, and
  "command" otherwise.</p>

  <p>The <a href=#command-facet-id title=command-facet-ID>ID</a> of the command is
  the value of the <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute of the
  element, if the attribute is present and not empty. Otherwise the
  command is an <a href=#anonymous-command>anonymous command</a>.</p>

  <p>The <a href=#command-facet-label title=command-facet-Label>Label</a> of the command
  depends on the Type of the command:</p>

  <p>If the <a href=#command-facet-type title=command-facet-Type>Type</a> is "command",
  then it is the string given by the <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if any, and a
  <span>UA-dependent value</span><!-- XXX xref--> that the UA uses to
  label the button itself if the attribute is absent.</p>

  <p>Otherwise, the <a href=#command-facet-type title=command-facet-Type>Type</a> is
  "radio" or "checkbox". If the element is a <a href=#labeled-control>labeled
  control</a>, the <code><a href=#textcontent>textContent</a></code> of the first
  <code><a href=#the-label-element>label</a></code> element in <a href=#tree-order>tree order</a> whose
  <a href=#labeled-control>labeled control</a> is the element in question is the <a href=#command-facet-label title=command-facet-Label>Label</a> (in DOM terms, this the
  string given by <code><var title="">element</var>.labels[0].textContent</code>).  Otherwise,
  the value of the <code title=attr-input-value><a href=#attr-input-value>value</a></code>
  attribute, if present, is the <a href=#command-facet-label title=command-facet-Label>Label</a>. Otherwise, the <a href=#command-facet-label title=command-facet-Label>Label</a> is the empty string.</p>

  <p>The <a href=#command-facet-hint title=command-facet-Hint>Hint</a> of the command
  is the value of the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute
  of the <code><a href=#the-input-element>input</a></code> element. If the attribute is not present, the
  <a href=#command-facet-hint title=command-facet-Hint>Hint</a> is the empty
  string.</p>

  <p>There is no <a href=#command-facet-icon title=command-facet-Icon>Icon</a> for the
  command.</p>

  <p>The <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a>
  of the command is true (hidden) if the element has a <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute, and false
  otherwise.</p>

  <p>The <a href=#command-facet-disabledstate title=command-facet-DisabledState>Disabled
  State</a> of the command mirrors the <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a> state of the
  control.</p>

  <p>The <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a>
  of the command is true if the command is of <a href=#command-facet-type title=command-facet-Type>Type</a> "radio" or "checkbox" and the
  element is <a href=#concept-fe-checked title=concept-fe-checked>checked</a>
  attribute, and false otherwise.</p>

  <p>The <a href=#command-facet-action title=command-facet-Action>Action</a> of the
  command is to <a href=#fire-a-click-event title="fire a click event">fire a <code title="">click</code> event</a> at the element.</p> <!-- XXX this
  is probably wrong for radio and checkbox types, depending on how we
  define <input>. -->


  <h5 id=using-the-option-element-to-define-a-command><span class=secno>4.11.6.4 </span><dfn title=option-command>Using the <code>option</code> element to define a command</dfn></h5>

  <p>An <code><a href=#the-option-element>option</a></code> element with an ancestor
  <code><a href=#the-select-element>select</a></code> element and either no <code title=attr-option-value><a href=#attr-option-value>value</a></code> attribute or a <code title=attr-option-value><a href=#attr-option-value>value</a></code> attribute that is not the
  empty string <a href=#concept-command title=concept-command>defines a
  command</a>.</p>

  <p>The <a href=#command-facet-type title=command-facet-Type>Type</a> of the command
  is "radio" if the <code><a href=#the-option-element>option</a></code>'s nearest ancestor
  <code><a href=#the-select-element>select</a></code> element has no <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute, and
  "checkbox" if it does.</p>

  <p>The <a href=#command-facet-id title=command-facet-ID>ID</a> of the command is
  the value of the <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute of the
  element, if the attribute is present and not empty. Otherwise the
  command is an <a href=#anonymous-command>anonymous command</a>.</p>

  <p>The <a href=#command-facet-label title=command-facet-Label>Label</a> of the command
  is the value of the <code><a href=#the-option-element>option</a></code> element's <code title=attr-option-label><a href=#attr-option-label>label</a></code> attribute, if there is one,
  or the value of the <code><a href=#the-option-element>option</a></code> element's
  <code><a href=#textcontent>textContent</a></code> DOM attribute if there isn't.</p>

  <p>The <a href=#command-facet-hint title=command-facet-Hint>Hint</a> of the command
  is the string given by the element's <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute, if any, and the empty
  string if the attribute is absent.</p>

  <p>There is no <a href=#command-facet-icon title=command-facet-Icon>Icon</a> for the
  command.</p>

  <p>The <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a>
  of the command is true (hidden) if the element has a <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute, and false
  otherwise.</p>

  <p>The <a href=#command-facet-disabledstate title=command-facet-DisabledState>Disabled
  State</a> of the command is true (disabled) if the element is
  <a href=#concept-option-disabled title=concept-option-disabled>disabled</a> or if its
  nearest ancestor <code><a href=#the-select-element>select</a></code> element is <a href=#concept-option-disabled title=concept-option-disabled>disabled</a>, and false
  otherwise.</p>

  <p>The <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a>
  of the command is true (checked) if the element's <a href=#concept-option-selectedness title=concept-option-selectedness>selectedness</a> is true, and
  false otherwise.</p>

  <p>The <a href=#command-facet-action title=command-facet-Action>Action</a> of the
  command depends on its <a href=#command-facet-type title=command-facet-Type>Type</a>. If the command is of <a href=#command-facet-type title=command-facet-Type>Type</a> "radio" then it must <a href=#concept-select-pick title=concept-select-pick>pick</a> the <code><a href=#the-option-element>option</a></code>
  element. Otherwise, it must <a href=#concept-select-toggle title=concept-select-toggle>toggle</a> the <code><a href=#the-option-element>option</a></code>
  element.</p>


  <h5 id=using-the-command-element-to-define-a-command><span class=secno>4.11.6.5 </span>Using the <dfn title=command-element><code>command</code></dfn> element to define
  a command</h5>

  <p>A <code><a href=#the-command>command</a></code> element <a href=#concept-command title=concept-command>defines a command</a>.</p>

  <p>The <a href=#command-facet-type title=command-facet-Type>Type</a> of the command
  is "radio" if the <code><a href=#the-command>command</a></code>'s <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute is
  "<code>radio</code>", "checkbox" if the attribute's value is
  "<code>checkbox</code>", and "command" otherwise.</p>

  <p>The <a href=#command-facet-id title=command-facet-ID>ID</a> of the command is
  the value of the <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute of the
  element, if the attribute is present and not empty. Otherwise the
  command is an <a href=#anonymous-command>anonymous command</a>.</p>

  <p>The <a href=#command-facet-label title=command-facet-Label>Label</a> of the command
  is the value of the element's <code title=attr-command-label><a href=#attr-command-label>label</a></code> attribute, if there is one,
  or the empty string if it doesn't.</p>

  <p>The <a href=#command-facet-hint title=command-facet-Hint>Hint</a> of the command
  is the string given by the element's <code title=attr-command-title><a href=#attr-command-title>title</a></code> attribute, if any, and the
  empty string if the attribute is absent.</p>

  <p>The <a href=#command-facet-icon title=command-facet-Icon>Icon</a> for the command
  is the <a href=#absolute-url>absolute URL</a> obtained from <a href=#resolve-a-url title="resolve
  a url">resolving</a> the value of the element's <code title=attr-command-icon><a href=#attr-command-icon>icon</a></code> attribute, relative to the
  element, if it has such an attribute and resolving it is
  successful. Otherwise, there is no <a href=#command-facet-icon title=command-facet-Icon>Icon</a> for the command.</p>

  <p>The <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a>
  of the command is true (hidden) if the element has a <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute, and false
  otherwise.</p>

  <p>The <a href=#command-facet-disabledstate title=command-facet-DisabledState>Disabled
  State</a> of the command is true (disabled) if the element has a
  <code title=attr-command-disabled><a href=#attr-command-disabled>disabled</a></code> attribute, and
  false otherwise.</p>

  <p>The <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a>
  of the command is true (checked) if the element has a <code title=attr-command-checked><a href=#attr-command-checked>checked</a></code> attribute, and false
  otherwise.</p>

  <p>The <a href=#command-facet-action title=command-facet-Action>Action</a> of the
  command is to invoke the behavior described in the definition of
  the <code title=dom-command-click><a href=#dom-command-click>click()</a></code> method of the
  <code><a href=#htmlcommandelement>HTMLCommandElement</a></code> interface.</p> <!-- XXX update to
  point to dom-click when we remove dom-command-click -->


  <h5 id=using-the-bb-element-to-define-a-command><span class=secno>4.11.6.6 </span><dfn title=bb-command>Using the <code>bb</code> element to define a command</dfn></h5>

  <p>A <code><a href=#the-bb-element>bb</a></code> element always <a href=#concept-command title=concept-command>defines a command</a>.</p>

  <p>The <a href=#command-facet-type title=command-facet-Type>Type</a> of the command
  is "command".</p>

  <p>The <a href=#command-facet-id title=command-facet-ID>ID</a> of the command is
  the value of the <code title=attr-id><a href=#the-id-attribute>id</a></code> attribute of the
  element, if the attribute is present and not empty. Otherwise the
  command is an <a href=#anonymous-command>anonymous command</a>.</p>

  <p>The <a href=#command-facet-label title=command-facet-Label>Label</a> of the command
  is the string given by the element's <code><a href=#textcontent>textContent</a></code> DOM
  attribute, if that is not the empty string, or a user-agent-defined
  string appropriate for the <code><a href=#the-bb-element>bb</a></code> element's <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's state.</p>

  <p>The <a href=#command-facet-hint title=command-facet-Hint>Hint</a> of the command
  is the value of the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute
  of the element. If the attribute is not present, the <a href=#command-facet-hint title=command-facet-Hint>Hint</a> is a user-agent-defined
  string appropriate for the <code><a href=#the-bb-element>bb</a></code> element's <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's state.</p>

  <p>The <a href=#command-facet-icon title=command-facet-Icon>Icon</a> of the command
  is the <a href=#absolute-url>absolute URL</a> obtained from <a href=#resolve-a-url title="resolve
  a url">resolving</a> the value of the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute of the first
  <code><a href=#the-img-element>img</a></code> element descendant of the element, relative to that
  element, if there is such an element and resolving its attribute is
  successful. Otherwise, the <a href=#command-facet-icon title=command-facet-Icon>Icon</a> is a user-agent-defined image
  appropriate for the <code><a href=#the-bb-element>bb</a></code> element's <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's state.</p>

  <p>The <a href=#command-facet-hiddenstate title=command-facet-HiddenState>Hidden State</a>
  facet of the command is true (hidden) if the <code><a href=#the-bb-element>bb</a></code>
  element's <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's state
  is <i title=attr-bb-type-null-state><a href=#attr-bb-type-null-state>null</a></i> or if the element has
  a <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute, and false
  otherwise.</p>

  <p>The <a href=#command-facet-disabledstate title=command-facet-DisabledState>Disabled
  State</a> facet of the command is true if the <code><a href=#the-bb-element>bb</a></code>
  element's <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's state's
  <i>relevance</i> is false, and true otherwise.</p>

  <p>The <a href=#command-facet-checkedstate title=command-facet-CheckedState>Checked State</a>
  of the command is always false. (The command is never checked.)</p>

  <p>The <a href=#command-facet-action title=command-facet-Action>Action</a> of the
  command is to perform the <i>action</i> of the <code><a href=#the-bb-element>bb</a></code>
  element's <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute's
  state.</p>



  <h3 id=miscellaneous-elements><span class=secno>4.12 </span>Miscellaneous elements</h3>

  <h4 id=the-legend-element><span class=secno>4.12.1 </span>The <dfn><code>legend</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd>None.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>As the first child of a <code><a href=#the-fieldset-element>fieldset</a></code> element.</dd>
   <dd>As the first child of a <code><a href=#the-details-element>details</a></code> element.</dd>
   <dd>As a child of a <code><a href=#the-figure-element>figure</a></code> element, if there are no other <code><a href=#the-legend-element>legend</a></code> element children of that element.</dd>
   <dt>Content model:</dt>
   <dd><a href=#phrasing-content-0>Phrasing content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>
    <pre class=idl>interface <dfn id=htmllegendelement>HTMLLegendElement</dfn> : <a href=#htmlelement>HTMLElement</a> {
  readonly attribute <a href=#htmlformelement>HTMLFormElement</a> <a href=#dom-legend-form title=dom-legend-form>form</a>;
};</pre>
   </dd>
  </dl><p>The <code><a href=#the-legend-element>legend</a></code> element <a href=#represents>represents</a> a title or explanatory
  caption for the rest of the contents of the <code><a href=#the-legend-element>legend</a></code>
  element's parent element.</p>

  <p>The <dfn id=dom-legend-form title=dom-legend-form><code>form</code></dfn> DOM
  attribute's behavior depends on whether the <code><a href=#the-legend-element>legend</a></code>
  element is in a <code><a href=#the-fieldset-element>fieldset</a></code> element or not. If the
  <code><a href=#the-legend-element>legend</a></code> has a <code><a href=#the-fieldset-element>fieldset</a></code> element as its
  parent, then the <code title=dom-legend-form><a href=#dom-legend-form>form</a></code> DOM
  attribute must return the same value as the <code title=dom-fae-form><a href=#dom-fae-form>form</a></code> DOM attribute on that
  <code><a href=#the-fieldset-element>fieldset</a></code> element. Otherwise, it must return null.</p>


  <h4 id=the-div-element><span class=secno>4.12.2 </span>The <dfn><code>div</code></dfn> element</h4>

  <dl class=element><dt>Categories</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <a href=#flow-content-0>flow content</a> is expected.</dd>
   <dt>Content model:</dt>
   <dd><a href=#flow-content-0>Flow content</a>.</dd>
   <dt>Content attributes:</dt>
   <dd><a href=#global-attributes>Global attributes</a></dd>
   <dt>DOM interface:</dt>
   <dd>Uses <code><a href=#htmlelement>HTMLElement</a></code>.</dd>
  </dl><p>The <code><a href=#the-div-element>div</a></code> element has no special meaning at all. It
  <a href=#represents>represents</a> its children. It can be used with the <code title=attr-class><a href=#classes>class</a></code>, <code title=attr-lang><a href=#the-lang-and-xml:lang-attributes>lang</a></code>/<code title=attr-xml-lang><a href=#the-lang-and-xml:lang-attributes>xml:lang</a></code>, and <code title=attr-title><a href=#the-title-attribute>title</a></code> attributes to mark up semantics
  common to a group of consecutive elements.</p>

  <p class=XXX>Allowing <code><a href=#the-div-element>div</a></code> elements to contain
  phrasing content makes it easy for authors to abuse
  <code><a href=#the-div-element>div</a></code>, using it with the <code>class=""</code> attribute
  to the point of not having any other elements in the markup. This is
  a disaster from an accessibility point of view, and it would be nice
  if we could somehow make such pages non-compliant without preventing
  people from using <code><a href=#the-div-element>div</a></code>s as the extension mechanism that
  they are, to handle things the spec can't otherwise do (like making
  new widgets).</p>



  <h3 id=matching-html-elements-using-selectors><span class=secno>4.13 </span>Matching HTML elements using selectors</h3>

  <p>There are a number of dynamic selectors that can be used with
  HTML. This section defines when these selectors match HTML
  elements.</p>

  <dl><dt><dfn id=selector-link title=selector-link><code>:link</code></dfn></dt>
   <dt><dfn id=selector-visited title=selector-visited><code>:visited</code></dfn></dt>

   <dd>

    <p>All <code><a href=#the-a-element>a</a></code> elements that have an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute, all
    <code><a href=#the-area-element>area</a></code> elements that have an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute, and all
    <code><a href=#the-link-element>link</a></code> elements that have an <code title=attr-link-href><a href=#attr-link-href>href</a></code> attribute, must match one of
    <code title=selector-link><a href=#selector-link>:link</a></code> and <code title=selector-visited><a href=#selector-visited>:visited</a></code>.</p>

   </dd>


   <dt><dfn id=selector-active title=selector-active><code>:active</code></dfn></dt>

   <dd>

    <p>The <code title=selector-active><a href=#selector-active>:active</a></code> pseudo-class
    must match the following elements between the time the user begins
    to activate the element and the time the users stops activating
    the element:</p>

    <ul><li><code><a href=#the-a-element>a</a></code> elements that have an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute</li>

     <li><code><a href=#the-area-element>area</a></code> elements that have an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute</li>

     <li><code><a href=#the-link-element>link</a></code> elements that have an <code title=attr-link-href><a href=#attr-link-href>href</a></code> attribute</li>

     <li><code><a href=#the-bb-element>bb</a></code> elements whose <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute is in a state whose
     <i>relevance</i> is true</li>

     <li><code><a href=#the-button-element>button</a></code> elements that are not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-input-element>input</a></code> elements whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#submit-button-state title=attr-input-type-submit>Submit Button</a>, <a href=#image-button-state title=attr-input-type-image>Image Button</a>, <a href=#reset-button-state title=attr-input-type-reset>Reset Button</a>, or <a href=#button-state title=attr-input-type-button>Button</a> state</li>

     <li><code><a href=#the-command>command</a></code> elements that do not have a <code title=attr-command-disabled><a href=#attr-command-disabled>disabled</a></code> attribute</li>

    </ul><p class=example>For example, if the user is using a keyboard to
    push a <code><a href=#the-button-element>button</a></code> element by pressing the space bar, the
    element would match this pseudo-class in between the time that the
    element received the <code title=event-keydown>keydown</code>
    event and the time the element received the <code title=event-keyup>keyup</code> event.</p>

   </dd>


   <dt><dfn id=selector-enabled title=selector-enabled><code>:enabled</code></dfn></dt>

   <dd>

    <p>The <code title=selector-enabled><a href=#selector-enabled>:enabled</a></code> pseudo-class
    must match the following elements:</p>

    <ul><li><code><a href=#the-a-element>a</a></code> elements that have an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute</li>

     <li><code><a href=#the-area-element>area</a></code> elements that have an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute</li>

     <li><code><a href=#the-link-element>link</a></code> elements that have an <code title=attr-link-href><a href=#attr-link-href>href</a></code> attribute</li>

     <li><code><a href=#the-bb-element>bb</a></code> elements whose <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute is in a state whose
     <i>relevance</i> is true</li>

     <li><code><a href=#the-button-element>button</a></code> elements that are not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-input-element>input</a></code> elements that are not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-select-element>select</a></code> elements that are not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-textarea-element>textarea</a></code> elements that are not <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-option-element>option</a></code> elements that do not have a <code title=attr-option-disabled><a href=#attr-option-disabled>disabled</a></code> attribute</li>

     <li><code><a href=#the-command>command</a></code> elements that do not have a <code title=attr-command-disabled><a href=#attr-command-disabled>disabled</a></code> attribute</li>

     <li><code><a href=#the-li-element>li</a></code> elements that are children of
     <code><a href=#menus>menu</a></code> elements, and that have a child element that
     defines a <a href=#concept-command title=concept-command>command</a>, if the
     first such element's <a href=#command-facet-disabledstate title=command-facet-disabledstate>Disabled State</a> facet
     is false (not disabled)</li>

     <li>any other element, if it is <a href=#focusable>focusable</a></li>

    </ul></dd>


   <dt><dfn id=selector-disabled title=selector-disabled><code>:disabled</code></dfn></dt>

   <dd>

    <p>The <code title=selector-disabled><a href=#selector-disabled>:disabled</a></code>
    pseudo-class must match the following elements:</p>

    <ul><li><code><a href=#the-bb-element>bb</a></code> elements whose <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute is in a state whose
     <i>relevance</i> is false</li>

     <li><code><a href=#the-button-element>button</a></code> elements that are <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-input-element>input</a></code> elements that are <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-select-element>select</a></code> elements that are <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-textarea-element>textarea</a></code> elements that are <a href=#concept-fe-disabled title=concept-fe-disabled>disabled</a></li>

     <li><code><a href=#the-option-element>option</a></code> elements that have a <code title=attr-option-disabled><a href=#attr-option-disabled>disabled</a></code> attribute</li>

     <li><code><a href=#the-command>command</a></code> elements that have a <code title=attr-command-disabled><a href=#attr-command-disabled>disabled</a></code> attribute</li>

     <li><code><a href=#the-li-element>li</a></code> elements that are children of
     <code><a href=#menus>menu</a></code> elements, and that have a child element that
     defines a <a href=#concept-command title=concept-command>command</a>, if the
     first such element's <a href=#command-facet-disabledstate title=command-facet-disabledstate>Disabled State</a> facet
     is true (disabled)</li>

    </ul></dd>


   <dt><dfn id=selector-checked title=selector-checked><code>:checked</code></dfn></dt>

   <dd>

    <p>The <code title=selector-checked><a href=#selector-checked>:checked</a></code> pseudo-class
    must match the following elements:</p>

    <ul><li><code><a href=#the-input-element>input</a></code> elements whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a> state and whose
     <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state is
     true</li>

     <li><code><a href=#the-input-element>input</a></code> elements whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a> state and whose
     <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> state is
     true</li>

     <li><code><a href=#the-command>command</a></code> elements whose <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute is in the <a href=#attr-command-type-state-checkbox title=attr-command-type-state-checkbox>Checkbox</a> state
     and that have a <code title=attr-command-checked><a href=#attr-command-checked>checked</a></code>
     attribute</li>

     <li><code><a href=#the-command>command</a></code> elements whose <code title=attr-command-type><a href=#attr-command-type>type</a></code> attribute is in the <a href=#attr-command-type-state-radio title=attr-command-type-state-radio>Radio</a> state and that
     have a <code title=attr-command-checked><a href=#attr-command-checked>checked</a></code>
     attribute</li>

    </ul></dd>


   <dt><dfn id=selector-indeterminate title=selector-indeterminate><code>:indeterminate</code></dfn></dt>

   <dd>

    <p>The <code title=selector-indeterminate><a href=#selector-indeterminate>:indeterminate</a></code>
    pseudo-class must match <code><a href=#the-input-element>input</a></code> elements whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a> state and whose
    <code title=dom-input-indeterminate><a href=#dom-input-indeterminate>indeterminate</a></code> DOM
    attribute is set to true.</p>

   </dd>


   <dt><dfn id=selector-default title=selector-default><code>:default</code></dfn></dt>

   <dd>

    <p>The <code title=selector-default><a href=#selector-default>:default</a></code> pseudo-class
    must match the following elements:</p>

    <ul><li><code><a href=#the-button-element>button</a></code> elements that are their form's
     <a href=#default-button>default button</a></li>

     <li><code><a href=#the-input-element>input</a></code> elements whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#submit-button-state title=attr-input-type-submit>Submit Button</a> or <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, and that
     are their form's <a href=#default-button>default button</a></li>
 
     <li><code><a href=#the-command>command</a></code> elements that have a <code title=attr-command-default><a href=#attr-command-default>default</a></code> attribute</li>

    </ul></dd>


   <dt><dfn id=selector-valid title=selector-valid><code>:valid</code></dfn></dt>

   <dd>

    <p>The <code title=selector-valid><a href=#selector-valid>:valid</a></code> pseudo-class
    must match all elements that are <a href=#candidate-for-constraint-validation title="candidate for
    constraint validation">candidates for constraint validation</a>
    and that <a href=#concept-fv-valid title=concept-fv-valid>satisfy their
    constraints</a>.</p>

   </dd>


   <dt><dfn id=selector-invalid title=selector-invalid><code>:invalid</code></dfn></dt>

   <dd>

    <p>The <code title=selector-invalid><a href=#selector-invalid>:invalid</a></code> pseudo-class
    must match all elements that are <a href=#candidate-for-constraint-validation title="candidate for
    constraint validation">candidates for constraint validation</a>
    but that do not <a href=#concept-fv-valid title=concept-fv-valid>satisfy their
    constraints</a>.</p>

   </dd>


   <dt><dfn id=selector-in-range title=selector-in-range><code>:in-range</code></dfn></dt>

   <dd>

    <p>The <code title=selector-in-range><a href=#selector-in-range>:in-range</a></code>
    pseudo-class must match all elements that are <a href=#candidate-for-constraint-validation title="candidate for constraint validation">candidates for
    constraint validation</a> and that are neither <a href=#suffering-from-an-underflow>suffering
    from an underflow</a> nor <a href=#suffering-from-an-overflow>suffering from an
    overflow</a>.</p>

   </dd>


   <dt><dfn id=selector-out-of-range title=selector-out-of-range><code>:out-of-range</code></dfn></dt>

   <dd>

    <p>The <code title=selector-out-of-range><a href=#selector-out-of-range>:out-of-range</a></code>
    pseudo-class must match all elements that are <a href=#candidate-for-constraint-validation title="candidate for constraint validation">candidates for
    constraint validation</a> and that are <a href=#suffering-from-an-underflow>suffering from an
    underflow</a> or <a href=#suffering-from-an-overflow>suffering from an overflow</a>.</p>

   </dd>


   <dt><dfn id=selector-required title=selector-required><code>:required</code></dfn></dt>

   <dd>

    <p>The <code title=selector-required><a href=#selector-required>:required</a></code>
    pseudo-class must match the following elements:</p>

    <ul><li><code><a href=#the-input-element>input</a></code> elements that are <i title=concept-input-required><a href=#concept-input-required>required</a></i></li>

     <li><code><a href=#the-textarea-element>textarea</a></code> elements that have a <code title=attr-textarea-required><a href=#attr-textarea-required>required</a></code>
     attribute</li>

    </ul></dd>


   <dt><dfn id=selector-optional title=selector-optional><code>:optional</code></dfn></dt>

   <dd>

    <p>The <code title=selector-optional><a href=#selector-optional>:optional</a></code>
    pseudo-class must match the following elements:</p>

    <ul><li><code><a href=#the-button-element>button</a></code> elements</li>

     <li><code><a href=#the-input-element>input</a></code> elements that are not <i title=concept-input-required><a href=#concept-input-required>required</a></i></li>

     <li><code><a href=#the-select-element>select</a></code> elements</li>

     <li><code><a href=#the-textarea-element>textarea</a></code> elements that do not have a <code title=attr-textarea-required><a href=#attr-textarea-required>required</a></code>
     attribute</li>

    </ul></dd>


   <dt><dfn id=selector-read-only title=selector-read-only><code>:read-only</code></dfn></dt>
   <dt><dfn id="title=-selector-read-write-:read-write"> title="selector-read-write"&gt;<code>:read-write</code></dfn></dt>

   <dd>

    <p>The <code title=selector-read-write>:read-write</code>
    pseudo-class must match the following elements:</p>

    <ul><li>an <code><a href=#the-input-element>input</a></code> element to which the <code title=attr-input-readonly><a href=#attr-input-readonly>readonly</a></code> attribute applies,
     but that is not <i title=concept-input-immutable><a href=#concept-input-immutable>immutable</a></i>
     (i.e. that does not have the attribute specified)</li>

     <li><code><a href=#the-textarea-element>textarea</a></code> elements that do not have a <code title=attr-textarea-readonly><a href=#attr-textarea-readonly>readonly</a></code> attribute</li>

     <li>any element that is <a href=#editable>editable</a></li>

    </ul><p>The <code title=selector-read-only><a href=#selector-read-only>:read-only</a></code>
    pseudo-class must match all other <a href=#html-elements>HTML elements</a>.</p>

   </dd>

  </dl><p class=note>Another section of this specification defines the
  <i><a href=#target-element>target element</a></i> used with the <code title=selector-target>:target</code> pseudo-class.</p>

  <p class=note>This specification does not define when an element
  matches the <code title=selector-hover>:hover</code>, <code title=selector-focus>:focus</code>, or <code title=selector-lang()>:lang()</code> dynamic pseudo-classes, as
  those are all defined in sufficient detail in a language-agnostic
  fashion in the Selectors specification. <a href=#refsSELECTORS>[SELECTORS]</a></p>




  <h2 id=browsers><span class=secno>5 </span>Web browsers</h2>

  <p>This section describes features that apply most directly to Web
  browsers. Having said that, unless specified elsewhere, the
  requirements defined in this section <em>do</em> apply to all user
  agents, whether they are Web browsers or not.</p>


  <h3 id=windows><span class=secno>5.1 </span>Browsing contexts</h3>

  <p>A <dfn id=browsing-context>browsing context</dfn> is an environment in which
  <code>Document</code> objects are presented to the user. At any
  time, one <code>Document</code> is designated the <dfn id=active-document>active
  document</dfn>. The collection of <code>Document</code>s is the
  <a href=#browsing-context>browsing context</a>'s <a href=#session-history>session history</a>.</p>

  <p>Each <a href=#browsing-context>browsing context</a> has a corresponding
  <code><a href=#windowproxy>WindowProxy</a></code> object.</p>

  <p>Each <code>Document</code> has a collection of one or more <a href=#view title=view>views</a>.</p>

  <p>A <dfn id=view>view</dfn> is a user agent interface tied to a particular
  media used for the presentation of a particular
  <code>Document</code> object in some media. A view may be
  interactive. Each view is represented by an
  <code>AbstractView</code> object. <a href=#refsDOM2VIEWS>[DOM2VIEWS]</a></p>

  <p>The main <a href=#view>view</a> through which a user primarily
  interacts with a user agent is the <dfn id=default-view>default view</dfn>. The
  <code>AbstractView</code> object that represents this view must also
  implement the <code><a href=#window>Window</a></code> interface, and is referred to as
  the <code>Document</code>'s <code><a href=#window>Window</a></code> object.</p>

  <p class=note>The <a href=#default-view>default view</a> of a
  <code>Document</code> is given by the <code title="">defaultView</code> attribute on the <code>Document</code>
  object's <code>DocumentView</code> interface. <a href=#refsDOM3VIEWS>[DOM3VIEWS]</a></p>

  <p class=note>The <code title="">document</code> attribute of an
  <code>AbstractView</code> object representing a <a href=#view>view</a>
  gives the view's corresponding <code>Document</code> object. <a href=#refsDOM2VIEWS>[DOM2VIEWS]</a></p>

  <p class=note>Events that use the <code>UIEvent</code> interface
  are related to a specific <a href=#view>view</a> (the view in which the
  event happened); the <code>AbstractView</code> of that view is given
  in the event object's <code title="">view</code> attribute. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p class=note>A typical Web browser has one obvious
  <a href=#view>view</a> per <code>Document</code>: the browser's window
  (screen media). This is typically the <a href=#default-view>default view</a>. If
  a page is printed, however, a second view becomes evident, that of
  the print media. The two views always share the same underlying
  <code>Document</code> object, but they have a different presentation
  of that object. A speech browser might have a different
  <a href=#default-view>default view</a>, using the speech media.</p>

  <p class=note>A <code>Document</code> does not necessarily have a
  <a href=#browsing-context>browsing context</a> associated with it. In particular,
  data mining tools are likely to never instantiate browsing
  contexts.</p>

  <hr><p>A <a href=#browsing-context>browsing context</a> can have a <dfn id=creator-browsing-context>creator browsing
  context</dfn>, the <a href=#browsing-context>browsing context</a> that was
  responsible for its creation. Unless otherwise specified, a
  <a href=#browsing-context>browsing context</a> has no <a href=#creator-browsing-context>creator browsing
  context</a>.</p>

  <p>If a <a href=#browsing-context>browsing context</a> <var title="">A</var> has a
  <a href=#creator-browsing-context>creator browsing context</a>, then the
  <code>Document</code> that was the <a href=#active-document>active document</a> of
  that <a href=#creator-browsing-context>creator browsing context</a> at the time <var title="">A</var> was created is the <dfn id=creator-document>creator
  <code>Document</code></dfn>.</p>

  <p>When a <a href=#browsing-context>browsing context</a> is first created, it must be
  created with a single <code>Document</code> in its session history,
  whose <a href="#the-document's-address" title="the document's address">address</a> is
  <code><a href=#about:blank>about:blank</a></code>, which is marked as being an <a href=#html-documents title="HTML documents">HTML document</a>, and whose <a href="#document's-character-encoding" title="document's character encoding">character encoding</a> is
  UTF-8. The <code>Document</code> must have a single child
  <code><a href=#the-html-element>html</a></code> node, which itself has a single child
  <code><a href=#the-body-element>body</a></code> node. If the <a href=#browsing-context>browsing context</a> is
  created specifically to be immediately navigated, then that initial
  navigation will have <a href=#replacement-enabled>replacement enabled</a>.</p>

  <p id=about-blank-origin>The <a href=#origin-0>origin</a> of the
  <code><a href=#about:blank>about:blank</a></code> <code>Document</code> is set when the
  <code>Document</code> is created. If the new <a href=#browsing-context>browsing
  context</a> has a <a href=#creator-browsing-context>creator browsing context</a>, then the
  <a href=#origin-0>origin</a> of the <code><a href=#about:blank>about:blank</a></code>
  <code>Document</code> is the <a href=#origin-0>origin</a> of the
  <a href=#creator-document>creator <code>Document</code></a>. Otherwise, the
  <a href=#origin-0>origin</a> of the <code><a href=#about:blank>about:blank</a></code>
  <code>Document</code> is a globally unique identifier assigned when
  the new <a href=#browsing-context>browsing context</a> is created.</p>


  <h4 id=nested-browsing-contexts><span class=secno>5.1.1 </span>Nested browsing contexts</h4>

  <p>Certain elements (for example, <code><a href=#the-iframe-element>iframe</a></code> elements) can
  instantiate further <a href=#browsing-context title="browsing context">browsing
  contexts</a>. These are called <dfn id=nested-browsing-context title="nested browsing
  context">nested browsing contexts</dfn>. If a browsing context <var title="">P</var> has an element <var title="">E</var> in one of its
  <code>Document</code>s <var title="">D</var> that nests another
  browsing context <var title="">C</var> inside it, then <var title="">P</var> is said to be the <dfn id=parent-browsing-context>parent browsing
  context</dfn> of <var title="">C</var>, <var title="">C</var> is
  said to be a <dfn id=child-browsing-context>child browsing context</dfn> of <var title="">P</var>, <var title="">C</var> is said to be <dfn id=browsing-context-nested-through title="browsing context nested through">nested through</dfn> <var title="">D</var>, and <var title="">E</var> is said to be the
  <dfn id=browsing-context-container>browsing context container</dfn> of <var title="">C</var>.</p>

  <p>A browsing context <var title="">A</var> is said to be an
  ancestor of a browsing context <var title="">B</var> if there exists
  a browsing context <var title="">A'</var> that is a <a href=#child-browsing-context>child
  browsing context</a> of <var title="">A</var> and that is itself
  an ancestor of <var title="">B</var>, or if there is a browsing
  context <var title="">P</var> that is a <a href=#child-browsing-context>child browsing
  context</a> of <var title="">A</var> and that is the <a href=#parent-browsing-context>parent
  browsing context</a> of <var title="">B</var>.</p>

  <p>The browsing context with no <a href=#parent-browsing-context>parent browsing context</a>
  is the <dfn id=top-level-browsing-context>top-level browsing context</dfn> of all the browsing
  contexts <a href=#nested-browsing-context title="nested browsing context">nested</a> within
  it (either directly or indirectly through other nested browsing
  contexts).</p>

  <p>The transitive closure of <a href=#parent-browsing-context title="parent browsing
  context">parent browsing contexts</a> for a <a href=#nested-browsing-context>nested browsing
  context</a> gives the list of <dfn id=ancestor-browsing-context title="ancestor browsing
  context">ancestor browsing contexts</dfn>.</p>

  <p>A <code>Document</code> is said to be <dfn id=fully-active>fully active</dfn>
  when it is the <a href=#active-document>active document</a> of its <a href=#browsing-context>browsing
  context</a>, and either its browsing context is a <a href=#top-level-browsing-context>top-level
  browsing context</a>, or the <code>Document</code> <a href=#browsing-context-nested-through title="browsing context nested through">through which</a> that
  browsing context is <a href=#nested-browsing-context title="nested browsing
  context">nested</a> is itself <a href=#fully-active>fully active</a>.</p>

  <p>Because they are nested through an element, <a href=#child-browsing-context title="child
  browsing context">child browsing contexts</a> are always tied to
  a specific <code>Document</code> in their <a href=#parent-browsing-context>parent browsing
  context</a>. User agents must not allow the user to interact with
  <a href=#child-browsing-context title="child browsing context">child browsing contexts</a>
  of elements that are in <code>Document</code>s that are not
  themselves <a href=#fully-active>fully active</a>.</p>

  <p>A <a href=#nested-browsing-context>nested browsing context</a> can have a <a href=#seamless-browsing-context-flag>seamless
  browsing context flag</a> set, if it is embedded through an
  <code><a href=#the-iframe-element>iframe</a></code> element with a <code title=attr-iframe-seamless><a href=#attr-iframe-seamless>seamless</a></code> attribute.</p>


  <h5 id=navigating-nested-browsing-contexts-in-the-dom><span class=secno>5.1.1.1 </span>Navigating nested browsing contexts in the DOM</h5>

  <p>The <dfn id=dom-top title=dom-top><code>top</code></dfn> DOM attribute on
  the <code><a href=#window>Window</a></code> object of a <code>Document</code> in a
  <a href=#browsing-context>browsing context</a> <var title="">b</var> must return the
  <code><a href=#windowproxy>WindowProxy</a></code> object of its <a href=#top-level-browsing-context>top-level browsing
  context</a> (which would be its own <code><a href=#windowproxy>WindowProxy</a></code>
  object if it was a <a href=#top-level-browsing-context>top-level browsing context</a>
  itself).</p>

  <p>The <dfn id=dom-parent title=dom-parent><code>parent</code></dfn> DOM
  attribute on the <code><a href=#window>Window</a></code> object of a
  <code>Document</code> in a <a href=#browsing-context>browsing context</a> <var title="">b</var> must return the <code><a href=#windowproxy>WindowProxy</a></code> object of
  the <a href=#parent-browsing-context>parent browsing context</a>, if there is one (i.e. if
  <var title="">b</var> is a <a href=#child-browsing-context>child browsing context</a>), or
  the <code><a href=#windowproxy>WindowProxy</a></code> object of the <a href=#browsing-context>browsing
  context</a> <var title="">b</var> itself, otherwise (i.e. if it
  is a <a href=#top-level-browsing-context>top-level browsing context</a>).</p>

  <p>The <dfn id=dom-frameelement title=dom-frameElement><code>frameElement</code></dfn>
  DOM attribute on the <code><a href=#window>Window</a></code> object of a
  <code>Document</code> <var title="">d</var>, on getting, must run
  the following algorithm:</p>

  <ol><li><p>If <var title="">d</var> is not a <code>Document</code> in a
   <a href=#child-browsing-context>child browsing context</a>, return null and abort these
   steps.</li>

   <li><p>If the <a href=#parent-browsing-context>parent browsing context</a>'s <a href=#active-document>active
   document</a> does not have the <span>same</span> <a href=#effective-script-origin>effective
   script origin</a> as the script that is accessing the <code title=dom-frameElement><a href=#dom-frameelement>frameElement</a></code> attribute, then throw
   a <code><a href=#security_err>SECURITY_ERR</a></code> exception.</li>

   <li><p>Otherwise, return the <a href=#browsing-context-container>browsing context
   container</a> for <var title="">b</var>.</li>

  </ol><h4 id=auxiliary-browsing-contexts><span class=secno>5.1.2 </span>Auxiliary browsing contexts</h4>

  <p>It is possible to create new browsing contexts that are related
  to a <span>top level browsing context</span> without being nested
  through an element. Such browsing contexts are called <dfn id=auxiliary-browsing-context title="auxiliary browsing context">auxiliary browsing
  contexts</dfn>. Auxiliary browsing contexts are always <a href=#top-level-browsing-context title="top-level browsing context">top-level browsing
  contexts</a>.</p>

  <p>An <a href=#auxiliary-browsing-context>auxiliary browsing context</a> has an <dfn id=opener-browsing-context>opener
  browsing context</dfn>, which is the <a href=#browsing-context>browsing context</a>
  from which the <a href=#auxiliary-browsing-context>auxiliary browsing context</a> was created,
  and it has a <dfn id=furthest-ancestor-browsing-context>furthest ancestor browsing context</dfn>, which is
  the <a href=#top-level-browsing-context>top-level browsing context</a> of the <a href=#opener-browsing-context>opener
  browsing context</a> when the <a href=#auxiliary-browsing-context>auxiliary browsing
  context</a> was created.</p>


  <h5 id=navigating-auxiliary-browsing-contexts-in-the-dom><span class=secno>5.1.2.1 </span>Navigating auxiliary browsing contexts in the DOM</h5>

  <p>The <dfn id=dom-opener title=dom-opener><code>opener</code></dfn> DOM
  attribute on the <code><a href=#window>Window</a></code> object must return the
  <code><a href=#windowproxy>WindowProxy</a></code> object of the <a href=#browsing-context>browsing context</a>
  from which the current <a href=#browsing-context>browsing context</a> was created
  (its <a href=#opener-browsing-context>opener browsing context</a>), if there is one and it
  is still available.</p>




  <h4 id=secondary-browsing-contexts><span class=secno>5.1.3 </span>Secondary browsing contexts</h4>

  <p>User agents may support <dfn id=secondary-browsing-context title="secondary browsing
  context">secondary browsing contexts</dfn>, which are <a href=#browsing-context title="browsing context">browsing contexts</a> that form part of
  the user agent's interface, apart from the main content area.</p>


  <h4 id=security-1><span class=secno>5.1.4 </span>Security</h4>

  <p>A <a href=#browsing-context>browsing context</a> <var title="">A</var> is
  <dfn id=allowed-to-navigate>allowed to navigate</dfn> a second <a href=#browsing-context>browsing
  context</a> <var title="">B</var> if one of the following
  conditions is true:</p>

  <ul><li>Either the <a href=#origin-0>origin</a> of the <a href=#active-document>active
   document</a> of <var title="">A</var> is the <a href=#same-origin title="same
   origin">same</a> as the <a href=#origin-0>origin</a> of the <a href=#active-document>active
   document</a> of <var title="">B</var>, or</li>

   <li>The browsing context <var title="">A</var> is a <a href=#nested-browsing-context>nested
   browsing context</a> and its <a href=#top-level-browsing-context>top-level browsing
   context</a> is <var title="">B</var>, or</li>

   <li>The browsing context <var title="">B</var> is an
   <a href=#auxiliary-browsing-context>auxiliary browsing context</a> and <var title="">A</var>
   is <a href=#allowed-to-navigate>allowed to navigate</a> <var title="">B</var>'s
   <a href=#opener-browsing-context>opener browsing context</a>, or</li>

   <li>The browsing context <var title="">B</var> is not a
   <a href=#top-level-browsing-context>top-level browsing context</a>, but there exists an
   <a href=#ancestor-browsing-context>ancestor browsing context</a> of <var title="">B</var>
   whose <a href=#active-document>active document</a> has the <a href=#same-origin title="same
   origin">same</a> <a href=#origin-0>origin</a> as the <a href=#active-document>active
   document</a> of <var title="">A</var> (possibly in fact being
   <var title="">A</var> itself).</li>

  </ul><h4 id=groupings-of-browsing-contexts><span class=secno>5.1.5 </span>Groupings of browsing contexts</h4>

  <p>Each <a href=#browsing-context>browsing context</a> is defined as having a list of
  zero or more <dfn id=directly-reachable-browsing-contexts>directly reachable browsing contexts</dfn>. These
  are:</p>

  <ul><li>All the <a href=#browsing-context>browsing context</a>'s <a href=#child-browsing-context title="child
   browsing context">child browsing contexts</a>.</li>

   <li>The <a href=#browsing-context>browsing context</a>'s <a href=#parent-browsing-context>parent browsing
   context</a>.</li>

   <li>All the <a href=#browsing-context title="browsing context">browsing contexts</a>
   that have the <a href=#browsing-context>browsing context</a> as their <a href=#opener-browsing-context>opener
   browsing context</a>.</li>

   <li>The <a href=#browsing-context>browsing context</a>'s <a href=#opener-browsing-context>opener browsing
   context</a>.</li>

  </ul><p>The transitive closure of all the <a href=#browsing-context title="browsing
  context">browsing contexts</a> that are <a href=#directly-reachable-browsing-contexts>directly reachable
  browsing contexts</a> forms a <dfn id=unit-of-related-browsing-contexts>unit of related browsing
  contexts</dfn>.</p>

  <p>Each <a href=#unit-of-related-browsing-contexts>unit of related browsing contexts</a> is then
  further divided into the smallest number of groups such that every
  member of each group has an <a href=#effective-script-origin>effective script origin</a>
  that, through appropriate manipulation of the <code title=dom-document-domain><a href=#dom-document-domain>document.domain</a></code> attribute, could
  be made to be the same as other members of the group, but could not
  be made the same as members of any other group. Each such group is a
  <dfn id=unit-of-related-similar-origin-browsing-contexts>unit of related similar-origin browsing contexts</dfn>.</p>

  <p>Each <a href=#unit-of-related-similar-origin-browsing-contexts>unit of related similar-origin browsing
  contexts</a> can have a <dfn id=first-script>first script</dfn> which is used to
  obtain, amongst other things, the <a href="#script's-base-url">script's base URL</a> to
  <a href=#resolve-a-url title="resolve a url">resolve</a> relative <a href=#url title=URL>URLs</a> used in scripts running in that <a href=#unit-of-related-similar-origin-browsing-contexts>unit
  of related similar-origin browsing contexts</a>. Initially there
  is no <a href=#first-script>first script</a>.</p>



  <h4 id=browsing-context-names><span class=secno>5.1.6 </span>Browsing context names</h4>

  <p>Browsing contexts can have a <dfn id=browsing-context-name>browsing context name</dfn>. By
  default, a browsing context has no name (its name is not set).</p>

  <p>A <dfn id=valid-browsing-context-name>valid browsing context name</dfn> is any string with at
  least one character that does not start with a U+005F LOW LINE
  character. (Names starting with an underscore are reserved for
  special keywords.)</p>

  <p>A <dfn id=valid-browsing-context-name-or-keyword>valid browsing context name or keyword</dfn> is any string
  that is either a <a href=#valid-browsing-context-name>valid browsing context name</a> or that is
  an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for one of: <code title="">_blank</code>, <code title="">_self</code>, <code title="">_parent</code>, or <code title="">_top</code>.</p>

  <p><dfn id=the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name>The rules for choosing a browsing context given a browsing
  context name</dfn> are as follows. The rules assume that they are
  being applied in the context of a <a href=#browsing-context>browsing context</a>.</p>

  <ol><li><p>If the given browsing context name is the empty string or
   <code title="">_self</code>, then the chosen browsing context must
   be the current one.</li>

   <li><p>If the given browsing context name is <code title="">_parent</code>, then the chosen browsing context must be
   the <a href=#parent-browsing-context><em>parent</em> browsing context</a> of the current
   one, unless there isn't one, in which case the chosen browsing
   context must be the current browsing context.</li>

   <li><p>If the given browsing context name is <code title="">_top</code>, then the chosen browsing context must be the
   most <a href=#top-level-browsing-context>top-level browsing context</a> of the current
   one.</li>

   <li>

    <p>If the given browsing context name is not <code title="">_blank</code> and there exists a browsing context whose
    <a href=#browsing-context-name title="browsing context name">name</a> is the same as the
    given browsing context name, and the current browsing context is
    <a href=#allowed-to-navigate>allowed to navigate</a> that browsing context, and the
    user agent determines that the two browsing contexts are related
    enough that it is ok if they reach each other, then that browsing
    context must be the chosen one. If there are multiple matching
    browsing contexts, the user agent should select one in some
    arbitrary consistent manner, such as the most recently opened,
    most recently focused, or more closely related.</p>

   </li>

   <li>

    <p>Otherwise, a new browsing context is being requested, and what
    happens depends on the user agent's configuration and/or
    abilities:</p>

    <dl><dt id=sandboxWindowOpen>If the current browsing context has
     the <a href=#sandboxed-navigation-browsing-context-flag>sandboxed navigation browsing context flag</a>
     set.</dt>

     <dd>The user agent may offer to create a new <a href=#top-level-browsing-context>top-level
     browsing context</a> or reuse an existing <a href=#top-level-browsing-context>top-level
     browsing context</a>. If the user picks one of those options,
     then the designated browsing context must be the chosen one (the
     browsing context's name isn't set to the given browsing context
     name). Otherwise (if the user agent doesn't offer the option to
     the user, or if the user declines to allow a browsing context to
     be used) there must not be a chosen browsing context.</dd>

     <dt id=noopener>If the user agent has been configured such that
     in this instance it will create a new browsing context, and the
     browsing context is being requested as part of <a href=#following-hyperlinks title="following hyperlinks">following a hyperlink</a> whose
     <a href=#linkTypes>link types</a> include the <code title=rel-noreferrer><a href=#link-type-noreferrer>noreferrer</a></code> keyword</dt>

     <dd>A new <a href=#top-level-browsing-context>top-level browsing context</a> must be
     created. If the given browsing context name is not <code title="">_blank</code>, then the new top-level browsing context's
     name must be the given browsing context name (otherwise, it has
     no name). The chosen browsing context must be this new browsing
     context. If it is immediately <a href=#navigate title=navigate>navigated</a>, then the navigation will be
     done with <a href=#replacement-enabled>replacement enabled</a>.</dd>

     <dt>If the user agent has been configured such that in this
     instance it will create a new browsing context, and the <code title=rel-noreferrer><a href=#link-type-noreferrer>noreferrer</a></code> keyword doesn't
     apply</dt>

     <dd>A new <a href=#auxiliary-browsing-context>auxiliary browsing context</a> must be
     created, with the <a href=#opener-browsing-context>opener browsing context</a> being the
     current one. If the given browsing context name is not <code title="">_blank</code>, then the new auxiliary browsing context's
     name must be the given browsing context name (otherwise, it has
     no name). The chosen browsing context must be this new browsing
     context. If it is immediately <a href=#navigate title=navigate>navigated</a>, then the navigation will be
     done with <a href=#replacement-enabled>replacement enabled</a>.</dd>

     <dt>If the user agent has been configured such that in this
     instance it will reuse the current browsing context</dt>

     <dd>The chosen browsing context is the current browsing
     context.</dd>

     <dt>If the user agent has been configured such that in this
     instance it will not find a browsing context</dt>

     <dd>There must not be a chosen browsing context.</dd>

    </dl><p>User agent implementors are encouraged to provide a way for
    users to configure the user agent to always reuse the current
    browsing context.</p>

   </li>

  </ol><h3 id=the-windowproxy-object><span class=secno>5.2 </span>The <code><a href=#windowproxy>WindowProxy</a></code> object</h3>

  <p>As mentioned earlier, each <a href=#browsing-context>browsing context</a> has a
  <dfn id=windowproxy>WindowProxy</dfn> object. This object is unusual in that it
  must proxy all operations to the <code><a href=#window>Window</a></code> object of the
  <a href=#browsing-context>browsing context</a>'s <a href=#active-document>active document</a>. It is
  thus indistinguishable from that <code><a href=#window>Window</a></code> object in every
  way, except that it is not equal to it.</p>



  <h3 id=the-window-object><span class=secno>5.3 </span>The <code><a href=#window>Window</a></code> object</h3>

  <pre class=idl>[<a href=#dom-window-item title=dom-window-item>IndexGetter</a>, <a href=#dom-window-nameditem title=dom-window-namedItem>NameGetter</a>=OverrideBuiltins]
interface <dfn id=window>Window</dfn> {
  // the current browsing context
  readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-window title=dom-window>window</a>;
  readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-self title=dom-self>self</a>;
           attribute DOMString <a href=#dom-name title=dom-name>name</a>;
  [PutForwards=href] readonly attribute <a href=#location>Location</a> <a href=#dom-document-location title=dom-document-location>location</a>;
  readonly attribute <a href=#history-1>History</a> <a href=#dom-history title=dom-history>history</a>;
  readonly attribute <a href=#undomanager>UndoManager</a> <a href=#dom-undomanager title=dom-undoManager>undoManager</a>;
  <a href=#selection-0>Selection</a> <a href=#dom-getselection title=dom-getSelection>getSelection</a>();
  [Replaceable] readonly attribute <a href=#barprop>BarProp</a> <a href=#dom-window-locationbar title=dom-window-locationbar>locationbar</a>;
  [Replaceable] readonly attribute <a href=#barprop>BarProp</a> <a href=#dom-window-menubar title=dom-window-menubar>menubar</a>;
  [Replaceable] readonly attribute <a href=#barprop>BarProp</a> <a href=#dom-window-personalbar title=dom-window-personalbar>personalbar</a>;
  [Replaceable] readonly attribute <a href=#barprop>BarProp</a> <a href=#dom-window-scrollbars title=dom-window-scrollbars>scrollbars</a>;
  [Replaceable] readonly attribute <a href=#barprop>BarProp</a> <a href=#dom-window-statusbar title=dom-window-statusbar>statusbar</a>;
  [Replaceable] readonly attribute <a href=#barprop>BarProp</a> <a href=#dom-window-toolbar title=dom-window-toolbar>toolbar</a>;<!--
  [Replaceable] readonly attribute <span>BarProp</span> <span title="dom-window-directories">directories</span>; // legacy (Gecko-only) -->
  void <a href=#dom-window-close title=dom-window-close>close</a>();
  void <a href=#dom-window-focus title=dom-window-focus>focus</a>();
  void <a href=#dom-window-blur title=dom-window-blur>blur</a>();

  // other browsing contexts
  readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-frames title=dom-frames>frames</a>;
  readonly attribute unsigned long <a href=#dom-length title=dom-length>length</a>;
  readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-top title=dom-top>top</a>;
  [Replaceable] readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-opener title=dom-opener>opener</a>;
  readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-parent title=dom-parent>parent</a>;
  readonly attribute <span>Element</span> <a href=#dom-frameelement title=dom-frameElement>frameElement</a>;
  <a href=#windowproxy>WindowProxy</a> <a href=#dom-open title=dom-open>open</a>([Optional] in DOMString url, [Optional] in DOMString target, [Optional] in DOMString features, [Optional] in DOMString replace);

  // the user agent
  readonly attribute <a href=#navigator>Navigator</a> <a href=#dom-navigator title=dom-navigator>navigator</a>; <!-- XXX IE6 also has window.clientInformation pointing to this same object -->
  readonly attribute <a href=#storage-0>Storage</a> <a href=#dom-localstorage title=dom-localStorage>localStorage</a>;
  readonly attribute <a href=#storage-0>Storage</a> <a href=#dom-sessionstorage title=dom-sessionStorage>sessionStorage</a>;
  <a href=#database>Database</a> <a href=#dom-opendatabase title=dom-opendatabase>openDatabase</a>(in DOMString name, in DOMString version, in DOMString displayName, in unsigned long estimatedSize);
  readonly attribute <a href=#applicationcache>ApplicationCache</a> <a href=#dom-applicationcache title=dom-applicationCache>applicationCache</a>;

  // user prompts
  void <a href=#dom-alert title=dom-alert>alert</a>(in DOMString message);
  boolean <a href=#dom-confirm title=dom-confirm>confirm</a>(in DOMString message);
  DOMString <a href=#dom-prompt title=dom-prompt>prompt</a>(in DOMString message, [Optional] in DOMString default);
  void <a href=#dom-print title=dom-print>print</a>();
  any <a href=#dom-showmodaldialog title=dom-showModalDialog>showModalDialog</a>(in DOMString url, [Optional] in any argument<!--, [Optional] in DOMString features-->);<!-- XXX-NOTIFY
  void <span title="dom-showNotification">showNotification</span>(in DOMString title, in DOMString subtitle, in DOMString description, [Optional] in VoidCallback onclick);-->

  // <a href=#crossDocumentMessages>cross-document messaging</a>
  void <a href=#dom-window-postmessage-2 title=dom-window-postMessage-2>postMessage</a>(in any message, in DOMString targetOrigin);
  void <a href=#dom-window-postmessage-3 title=dom-window-postMessage-3>postMessage</a>(in any message, in <a href=#messageport>MessagePort</a> messagePort, in DOMString targetOrigin);

  // <a href=#event-handler-dom-attributes>event handler DOM attributes</a>
           attribute <a href=#function>Function</a> <a href=#handler-onabort title=handler-onabort>onabort</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onbeforeunload title=handler-window-onbeforeunload>onbeforeunload</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onblur title=handler-onblur>onblur</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onchange title=handler-onchange>onchange</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onclick title=handler-onclick>onclick</a>;
           attribute <a href=#function>Function</a> <a href=#handler-oncontextmenu title=handler-oncontextmenu>oncontextmenu</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondblclick title=handler-ondblclick>ondblclick</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondrag title=handler-ondrag>ondrag</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragend title=handler-ondragend>ondragend</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragenter title=handler-ondragenter>ondragenter</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragleave title=handler-ondragleave>ondragleave</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragover title=handler-ondragover>ondragover</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondragstart title=handler-ondragstart>ondragstart</a>;
           attribute <a href=#function>Function</a> <a href=#handler-ondrop title=handler-ondrop>ondrop</a>;
           attribute any     <!--      --> <a href=#handler-window-onerror title=handler-window-onerror>onerror</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onfocus title=handler-onfocus>onfocus</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onhashchange title=handler-window-onhashchange>onhashchange</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onkeydown title=handler-onkeydown>onkeydown</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onkeypress title=handler-onkeypress>onkeypress</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onkeyup title=handler-onkeyup>onkeyup</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onload title=handler-window-onload>onload</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onmessage title=handler-window-onmessage>onmessage</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmousedown title=handler-onmousedown>onmousedown</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmousemove title=handler-onmousemove>onmousemove</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmouseout title=handler-onmouseout>onmouseout</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmouseover title=handler-onmouseover>onmouseover</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmouseup title=handler-onmouseup>onmouseup</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onmousewheel title=handler-onmousewheel>onmousewheel</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-ononline title=handler-window-ononline>ononline</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onoffline title=handler-window-onoffline>onoffline</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onpopstate title=handler-window-onpopstate>onpopstate</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onresize title=handler-window-onresize>onresize</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onscroll title=handler-onscroll>onscroll</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onselect title=handler-onselect>onselect</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onstorage title=handler-window-onstorage>onstorage</a>;
           attribute <a href=#function>Function</a> <a href=#handler-onsubmit title=handler-onsubmit>onsubmit</a>;
           attribute <a href=#function>Function</a> <a href=#handler-window-onunload title=handler-window-onunload>onunload</a>;
};</pre>

 <!-- XXX http://msdn.microsoft.com/workshop/author/dhtml/reference/objects/obj_window.asp
          http://www.mozilla.org/docs/dom/domref/dom_window_ref.html
          http://lxr.mozilla.org/mozilla/source/dom/public/idl/base/nsIDOMWindow.idl - scrollBy, etc
          http://lxr.mozilla.org/mozilla/source/dom/public/idl/base/nsIDOMWindowInternal.idl - DOM level 0
   -->

  <p>The <code><a href=#window>Window</a></code> object must also implement the
  <code>EventTarget</code> interface.</p>

  <p>The <dfn id=dom-window title=dom-window><code>window</code></dfn>, <dfn id=dom-frames title=dom-frames><code>frames</code></dfn>, and <dfn id=dom-self title=dom-self><code>self</code></dfn> DOM attributes must all
  return the <code><a href=#window>Window</a></code> object's <a href=#browsing-context>browsing
  context</a>'s <code><a href=#windowproxy>WindowProxy</a></code> object.</p>



  <h4 id=security-2><span class=secno>5.3.1 </span>Security</h4>

  <p>User agents must raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception
  whenever any of the members of a <code><a href=#window>Window</a></code> object are
  accessed by scripts whose <a href=#effective-script-origin>effective script origin</a> is
  not the same as the <code><a href=#window>Window</a></code> object's
  <code>Document</code>'s <a href=#effective-script-origin>effective script origin</a>, with
  the following exceptions:</p>

  <ul><li>The <code title=dom-location><a href=#dom-location>location</a></code> object

   <li>The <code title=dom-window-postMessage-2><a href=#dom-window-postmessage-2>postMessage()</a></code>
   method with two arguments

   <li>The <code title=dom-window-postMessage-3><a href=#dom-window-postmessage-3>postMessage()</a></code>
   method with three arguments

   <li>The <code title=dom-frames><a href=#dom-frames>frames</a></code> attribute

   <li>The <a href=#dynamic-nested-browsing-context-properties>dynamic nested browsing context properties</a>

  </ul><p>User agents must not allow scripts to override the <code title=dom-location><a href=#dom-location>location</a></code> object's setter.</p>




  <h4 id=apis-for-creating-and-navigating-browsing-contexts-by-name><span class=secno>5.3.2 </span>APIs for creating and navigating browsing contexts by name</h4>

  <p>The <dfn id=dom-open title=dom-open><code>open()</code></dfn> method on
  <code><a href=#window>Window</a></code> objects provides a mechanism for <a href=#navigate title=navigate>navigating</a> an existing <a href=#browsing-context>browsing
  context</a> or opening and navigating an <a href=#auxiliary-browsing-context>auxiliary browsing
  context</a>.</p>

  <p>The method has four arguments, though they are all optional.</p>

  <p>The first argument, <var title="">url</var>, must be a
  <a href=#valid-url>valid URL</a> for a page to load in the browsing
  context. If no arguments are provided, or if the first argument is
  the empty string, then the <var title="">url</var> argument defaults
  to "<code><a href=#about:blank>about:blank</a></code>". The argument must be <a href=#resolve-a-url title="resolve a url">resolved</a> to an <a href=#absolute-url>absolute
  URL</a> (or an error), relative to the <a href=#first-script>first
  script</a>'s <a href="#script's-base-url" title="script's base URL">base URL</a>,
  when the method is invoked.</p>

  <p>The second argument, <var title="">target</var>, specifies the
  <a href=#browsing-context-name title="browsing context name">name</a> of the browsing
  context that is to be navigated. It must be a <a href=#valid-browsing-context-name-or-keyword>valid browsing
  context name or keyword</a>. If fewer than two arguments are
  provided, then the <var title="">name</var> argument defaults to the
  value "<code>_blank</code>".</p>

  <p>The third argument, <var title="">features</var>, has no effect
  and is supported for historical reasons only.</p>

  <p>The fourth argument, <var title="">replace</var>, specifies
  whether or not the new page will <a href=#replacement-enabled title="replacement
  enabled">replace</a> the page currently loaded in the browsing
  context, when <var title="">target</var> identifies an existing
  browsing context (as opposed to leaving the current page in the
  browsing context's <a href=#session-history>session history</a>). When three or
  fewer arguments are provided, <var title="">replace</var> defaults
  to false.</p>

  <p>When the method is invoked, the user agent must first select a
  <a href=#browsing-context>browsing context</a> to navigate by applying <a href=#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name>the
  rules for choosing a browsing context given a browsing context
  name</a> using the <var title="">target</var> argument as the
  name and the <a href=#browsing-context>browsing context</a> of the script as the
  context in which the algorithm is executed, unless the user has
  indicated a preference, in which case the browsing context to
  navigate may instead be the one indicated by the user.</p>

  <p class=example>For example, suppose there is a user agent that
  supports control-clicking a link to open it in a new tab. If a user
  clicks in that user agent on an element whose <code title=handler-onclick><a href=#handler-onclick>onclick</a></code> handler uses the <code title=dom-open><a href=#dom-open>window.open()</a></code> API to open a page in an
  iframe, but, while doing so, holds the control key down, the user
  agent could override the selection of the target browsing context to
  instead target a new tab.</p>

  <p>Then, the user agent must <a href=#navigate>navigate</a> the selected
  <a href=#browsing-context>browsing context</a> to the <a href=#absolute-url>absolute URL</a> (or
  error) obtained from <a href=#resolve-a-url title="resolve a url">resolving</a>
  <var title="">url</var> earlier. If the <var title="">replace</var>
  is true, then <a href=#replacement-enabled title="replacement enabled">replacement must be
  enabled</a>; otherwise, it must not be enabled unless the
  <a href=#browsing-context>browsing context</a> was just created as part of the
  <a href=#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name>the rules for choosing a browsing context given a browsing
  context name</a>. The navigation must be done with the <a href="#script's-browsing-context" title="script's browsing context">browsing context</a> of the
  <a href=#concept-script title=concept-script>script</a> that invoked the method
  as the <a href=#source-browsing-context>source browsing context</a>.</p>

  <p>The method must return the <code><a href=#windowproxy>WindowProxy</a></code> object of the
  <a href=#browsing-context>browsing context</a> that was navigated, or null if no
  browsing context was navigated.</p>

  <hr><p>The <dfn id=dom-name title=dom-name><code>name</code></dfn> attribute of
  the <code><a href=#window>Window</a></code> object must, on getting, return the current
  name of the <a href=#browsing-context>browsing context</a>, and, on setting, set the
  name of the <a href=#browsing-context>browsing context</a> to the new value.</p>

  <p class=note>The name <a href=#resetBCName>gets reset</a> when
  the browsing context is navigated to another domain.</p>

  <hr><p>The <dfn id=dom-window-close title=dom-window-close><code>close()</code></dfn>
  method on <code><a href=#window>Window</a></code> objects should, if the corresponding
  <a href=#browsing-context>browsing context</a> <var title="">A</var> is an
  <a href=#auxiliary-browsing-context>auxiliary browsing context</a> that was created by a script
  (as opposed to by an action of the user), and if the <a href="#script's-browsing-context" title="script's browsing context">browsing context</a> of the
  <a href=#concept-script title=concept-script>script</a> that invokes the method
  is <a href=#allowed-to-navigate>allowed to navigate</a> the <a href=#browsing-context>browsing
  context</a> <var title="">A</var>, close the <a href=#browsing-context>browsing
  context</a> <var title="">A</var> (and may <a href=#a-browsing-context-is-discarded title="a
  browsing context is discarded">discard</a> it too).</p>



  <h4 id=accessing-other-browsing-contexts><span class=secno>5.3.3 </span>Accessing other browsing contexts</h4>

  <p>The <dfn id=dom-length title=dom-length><code>length</code></dfn> DOM
  attribute on the <code><a href=#window>Window</a></code> interface must return the
  number of <a href=#child-browsing-context title="child browsing context">child browsing
  contexts</a> of the <code>Document</code>.</p>

  <p>The <span>indices of the supported indexed properties</span> on
  the <code><a href=#window>Window</a></code> object at any instant are the numbers in the
  range 0 .. <span><var title="">n</var>-1</span>, where <var title="">n</var> is the number of <a href=#child-browsing-context title="child browsing
  context">child browsing contexts</a> of the
  <code>Document</code>. If <var title="">n</var> is zero then there
  are no <span>supported indexed properties</span>.</p>

  <p>When a <code><a href=#window>Window</a></code> object is <dfn id=dom-window-item title=dom-window-item>indexed to retrieve an indexed
  property</dfn> <var title="">index</var>, the value returned must be
  the <var title="">index</var>th <a href=#child-browsing-context>child browsing context</a>
  of the <code>Document</code>, sorted in the <a href=#tree-order>tree order</a>
  of the elements nesting those <a href=#browsing-context title="browsing
  context">browsing contexts</a>.</p>

  <p>These properties are the <dfn id=dynamic-nested-browsing-context-properties>dynamic nested browsing context
  properties</dfn>.</p>


  <h4 id=garbage-collection-and-browsing-contexts><span class=secno>5.3.4 </span>Garbage collection and browsing contexts</h4>

  <p>A <a href=#browsing-context>browsing context</a> has a strong reference to each of
  its <code>Document</code>s and its <code>WindowProxt</code> object,
  and the user agent itself has a strong reference to its <a href=#top-level-browsing-context title="top-level browsing context">top-level browsing
  contexts</a>.</p>

  <p>A <code>Document</code> has a strong reference to each of its
  <a href=#view title=view>views</a> and their <code>AbstractView</code>
  objects.</p>

  <p>When a <a href=#browsing-context>browsing context</a> is to <dfn id=discard-a-document>discard a
  <code>Document</code></dfn>, that means that it is to lose the
  strong reference from the <code>Document</code>'s <a href=#browsing-context>browsing
  context</a> to the <code>Document</code>.</p>

  <p class=note>The <a href=#browsing-context>browsing context</a>'s <a href=#default-view>default
  view</a>'s <code><a href=#window>Window</a></code> object <a href=#implied-strong-reference title="implied strong
  reference">has a strong reference of its own</a> to its
  <code>Document</code> object.</p>

  <p>When <dfn id=a-browsing-context-is-discarded>a <em><span>browsing context</span></em> is
  discarded</dfn>, the strong reference from the user agent itself to
  the <a href=#browsing-context>browsing context</a> must be severed, and all the
  <code>Document</code> objects for all the entries in the
  <a href=#browsing-context>browsing context</a>'s session history must be <a href=#discard-a-document title="discard a document">discarded</a> as well.</p>

  <p>User agents may <a href=#a-browsing-context-is-discarded title="a browsing context is
  discarded">discard</a> <a href=#top-level-browsing-context title="top-level browsing
  context">top-level browsing contexts</a> at any time (typically,
  in response to user requests, e.g. when a user closes a window
  containing one or more <a href=#top-level-browsing-context title="top-level browsing
  context">top-level browsing contexts</a>). Other <a href=#browsing-context title="browsing context">browsing contexts</a> must be discarded
  once their <code><a href=#windowproxy>WindowProxy</a></code> object is eligible for garbage
  collection.</p>



  <h4 id=named-access-on-the-window-object><span class=secno>5.3.5 </span>Named access on the <code><a href=#window>Window</a></code> object</h4>

  <p>The <code><a href=#window>Window</a></code> interface <span title="support named
  properties">supports named properties</span>. The <span>names of the
  supported named properties</span> at any moment consist of:</p>

  <ul><li>The value of the <code title="">name</code> content attribute
   for all <code><a href=#the-a-element>a</a></code>, <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-area-element>area</a></code>,
   <code><a href=#the-embed-element>embed</a></code>, <code>frame</code>, <code>frameset</code>,
   <code><a href=#the-form-element>form</a></code>, <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-img-element>img</a></code>, and
   <code><a href=#the-object-element>object</a></code> elements in the <a href=#active-document>active document</a>
   that have a <code title="">name</code> content attribute, and,</li>

   <li>The value of the <code title=attr-id><a href=#the-id-attribute>id</a></code> content
   attribute of any <a href=#html-elements title="HTML elements">HTML element</a> in
   the <a href=#active-document>active document</a> with an <code title=attr-id><a href=#the-id-attribute>id</a></code> content attribute.</li>

  </ul><p>When <dfn id=dom-window-nameditem title=dom-window-namedItem>the <code>Window</code>
  object is indexed for property retrieval</dfn> using a name <var title="">name</var>, then the user agent must return the value
  obtained using the following steps:</p>

  <ol><li>

    <p>Let <var title="">elements</var> be the list of <a href=#dom-window-nameditem-filter title=dom-window-namedItem-filter>named elements</a> with the
    name <var title="">name</var> in the <a href=#active-document>active document</a>.

    <p class=note>There will be at least one such element, by
    definition.<!-- (If there wasn't, then this algorithm wouldn't
    have been invoked by WebIDL.) --></p>

   </li>

   <li>

    <p>If <var title="">elements</var> contains an <code><a href=#the-iframe-element>iframe</a></code>
    element, then return the <code><a href=#windowproxy>WindowProxy</a></code> object of the
    <a href=#nested-browsing-context>nested browsing context</a> represented by the first such
    <code><a href=#the-iframe-element>iframe</a></code> element in <a href=#tree-order>tree order</a>, and abort
    these steps.</p>

   </li>

   <li>

    <p>Otherwise, if <var title="">elements</var> has only one
    element, return that element and abort these steps.</p>

   </li>

   <li>

    <p>Otherwise return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
    <code>Document</code> node, whose filter matches only <a href=#dom-window-nameditem-filter title=dom-window-namedItem-filter>named elements</a> with
    the name <var title="">name</var>.</p> <!-- the same one each time
    is returned, because of the rule under collections -->

   </li>

  </ol><p><dfn id=dom-window-nameditem-filter title=dom-window-nameditem-filter>Named elements</dfn>
  with the name <var title="">name</var>, for the purposes of the
  above algorithm, are those that are either:</p>

  <ul><li><code><a href=#the-a-element>a</a></code>, <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-area-element>area</a></code>,
   <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-form-element>form</a></code>, <code>frame</code>,
   <code>frameset</code>, <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-img-element>img</a></code>, or
   <code><a href=#the-object-element>object</a></code> elements that have a <code title=attr-name>name</code> content attribute whose value is <var title="">name</var>, or</li>

   <li><a href=#html-elements>HTML elements</a> elements that have an <code title=attr-id><a href=#the-id-attribute>id</a></code> content attribute whose value is <var title="">name</var>.</li>

  </ul><h4 id=browser-interface-elements><span class=secno>5.3.6 </span>Browser interface elements</h4>

  <p>To allow Web pages to integrate with Web browsers, certain Web
  browser interface elements are exposed in a limited way to scripts
  in Web pages.</p>

  <p>Each interface element is represented by a <code><a href=#barprop>BarProp</a></code>
  object:</p>

  <pre class=idl>interface <dfn id=barprop>BarProp</dfn> {
           attribute boolean <a href=#dom-barprop-visible title=dom-BarProp-visible>visible</a>;
};</pre>

  <p>The <dfn id=dom-barprop-visible title=dom-BarProp-visible>visible</dfn> attribute, on
  getting, must return either true or a value determined by the user
  agent to most accurately represent the visibility state of the user
  interface element that the object represents, as described below. On
  setting, the new value must be discarded.</p>

  <p>The following <code><a href=#barprop>BarProp</a></code> objects exist for each
  <code>Document</code> object in a <a href=#browsing-context>browsing
  context</a>. Some of the user interface elements represented by
  these objects might have no equivalent in some user agents; for
  those user agents, unless otherwise specified, the object must act
  as if it was present and visible (i.e. its <code title=dom-BarProp-visible><a href=#dom-barprop-visible>visible</a></code> attribute must return
  true).</p>

  <dl><dt><dfn id=the-location-bar-barprop-object>The location bar <code>BarProp</code> object</dfn></dt>

   <dd>Represents the user interface element that contains a control
   that displays the <a href=#url>URL</a> of the <a href=#active-document>active
   document</a>, or some similar interface concept.</dd>

   <dt><dfn id=the-menu-bar-barprop-object>The menu bar <code>BarProp</code> object</dfn></dt>

   <dd>Represents the user interface element that contains a list of
   commands in menu form, or some similar interface concept.</dd>

   <dt><dfn id=the-personal-bar-barprop-object>The personal bar <code>BarProp</code> object</dfn></dt>

   <dd>Represents the user interface element that contains links to
   the user's favorite pages, or some similar interface concept.</dd>

   <dt><dfn id=the-scrollbar-barprop-object>The scrollbar <code>BarProp</code> object</dfn></dt>

   <dd>Represents the user interface element that contains a scrolling
   mechanism, or some similar interface concept.</dd>

   <dt><dfn id=the-status-bar-barprop-object>The status bar <code>BarProp</code> object</dfn></dt>

   <dd>Represents a user interface element found immediately below or
   after the document, as appropriate for the <a href=#default-view>default
   view</a>'s media. If the user agent has no such user interface
   element, then the object may act as if the corresponding user
   interface element was absent (i.e. its <code title=dom-BarProp-visible><a href=#dom-barprop-visible>visible</a></code> attribute may return
   false).</dd>

   <dt><dfn id=the-tool-bar-barprop-object>The tool bar <code>BarProp</code> object</dfn></dt>

   <dd>Represents the user interface element found immediately above
   or before the document, as appropriate for the <a href=#default-view>default
   view</a>'s media. If the user agent has no such user interface
   element, then the object may act as if the corresponding user
   interface element was absent (i.e. its <code title=dom-BarProp-visible><a href=#dom-barprop-visible>visible</a></code> attribute may return
   false).</dd>

  </dl><p>The <dfn id=dom-window-locationbar title=dom-window-locationbar><code>locationbar</code></dfn>
  attribute must return <a href=#the-location-bar-barprop-object>the location bar <code>BarProp</code>
  object</a>.</p>

  <p>The <dfn id=dom-window-menubar title=dom-window-menubar><code>menubar</code></dfn>
  attribute must return <a href=#the-menu-bar-barprop-object>the menu bar <code>BarProp</code>
  object</a>.</p>

  <p>The <dfn id=dom-window-personalbar title=dom-window-personalbar><code>personalbar</code></dfn>
  attribute must return <a href=#the-personal-bar-barprop-object>the personal bar <code>BarProp</code>
  object</a>.</p>

  <p>The <dfn id=dom-window-scrollbars title=dom-window-scrollbars><code>scrollbars</code></dfn>
  attribute must return <a href=#the-scrollbar-barprop-object>the scrollbar <code>BarProp</code>
  object</a>.</p>

  <p>The <dfn id=dom-window-statusbar title=dom-window-statusbar><code>statusbar</code></dfn> attribute
  must return <a href=#the-status-bar-barprop-object>the status bar <code>BarProp</code>
  object</a>.</p>

  <p>The <dfn id=dom-window-toolbar title=dom-window-toolbar><code>toolbar</code></dfn>
  attribute must return <a href=#the-tool-bar-barprop-object>the tool bar <code>BarProp</code>
  object</a>.</p>

<!--
  <p>For legacy reasons, the <dfn
  title="dom-window-directories"><code>directories</code></dfn>
  attribute must also return <span>the personal bar
  <code>BarProp</code> object</span>.</p>
-->


  <h3 id=origin><span class=secno>5.4 </span>Origin</h3>
  <!-- Hallowed are the Ori -->

  <p>The <dfn id=origin-0>origin</dfn> of a resource and the <dfn id=effective-script-origin>effective script
  origin</dfn> of a resource are both either opaque identifiers or
  tuples consisting of a scheme component, a host component, a port
  component, and optionally extra data.</p>

  <p class=note>The extra data could include the certificate of the
  site when using encrypted connections, to ensure that if the site's
  secure certificate changes, the origin is considered to change as
  well.</p>

  <p>These characteristics are defined as follows:</p>

  <dl><dt>For URLs</dt>

   <dd>

    <p>The <a href=#origin-0>origin</a> and <a href=#effective-script-origin>effective script
    origin</a> of the <a href=#url>URL</a> is whatever is returned by
    the following algorithm:</p>

    <ol><li><p>Let <var title="">url</var> be the <a href=#url>URL</a> for
     which the <a href=#origin-0>origin</a> is being determined.</li>

     <li><p><a href=#parse-a-url title="parse a url">Parse</a> <var title="">url</var>.</li>

     <li><p>If <var title="">url</var> does not use a server-based
     naming authority, or if parsing <var title="">url</var> failed,
     or if <var title="">url</var> is not an <a href=#absolute-url>absolute
     URL</a>, then return a new globally unique
     identifier.</li>

     <li><p>Let <var title="">scheme</var> be the <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a> component of <var title="">url</var>, <a href=#converted-to-lowercase>converted to lowercase</a>.</li>

     <li><p>If the UA doesn't support the protocol given by <var title="">scheme</var>, then return a new globally unique
     identifier.</li>

     <li><p>If <var title="">scheme</var> is "<code title="">file</code>", then the user agent may return a
     UA-specific value.</li>

     <li><p>Let <var title="">host</var> be the <a href=#url-host title=url-host>&lt;host&gt;</a> component of <var title="">url</var>.</li>

     <li>

      <p>Apply the IDNA ToASCII algorithm to <var title="">host</var>,
      with both the AllowUnassigned and UseSTD3ASCIIRules flags
      set. Let <var title="">host</var> be the result of the ToASCII
      algorithm.</p>

      <p>If ToASCII fails to convert one of the components of the
      string, e.g. because it is too long or because it contains
      invalid characters, then return a new globally unique
      identifier. <a href=#refsRFC3490>[RFC3490]</a></p>

     </li>

     <li><p>Let <var title="">host</var> be the result of converting
     <var title="">host</var> <a href=#converted-to-lowercase title="converted to lowercase">to
     lowercase</a>.</li>

     <li><p>If there is no <a href=#url-port title=url-port>&lt;port&gt;</a>
     component, then let <var title="">port</var> be the default port
     for the protocol given by <var title="">scheme</var>. Otherwise,
     let <var title="">port</var> be the <a href=#url-port title=url-port>&lt;port&gt;</a> component of <var title="">url</var>.</li>

     <li><p>Return the tuple (<var title="">scheme</var>, <var title="">host</var>, <var title="">port</var>).</li>

    </ol><p>In addition, if the <a href=#url>URL</a> is in fact associated with
    a <code>Document</code> object that was created by parsing the
    resource obtained from fetching <a href=#url>URL</a>, and this was
    done over a secure connection, then the server's secure
    certificate may be added to the origin as additional data.</p>

   </dd>

   <dt>For scripts</dt>

   <dd>

    <p>The <a href=#origin-0>origin</a> and <a href=#effective-script-origin>effective script
    origin</a> of a script are determined from another resource,
    called the <i>owner</i>:</p>

    <dl class=switch><dt>If a script is in a <code><a href=#script>script</a></code> element</dt>

     <dd>The owner is the <code>Document</code> to which the
     <code><a href=#script>script</a></code> element belongs.</dd>


     <dt>If a script is in an <a href=#event-handler-content-attributes title="event handler content
     attributes">event handler content attribute</a></dt>

     <dd>The owner is the <code>Document</code> to which the
     attribute node belongs.</dd>


     <dt>If a script is a function or other code reference created by
     another script</dt>

     <dd>The owner is the script that created it.</dd>


     <dt>If a script is a <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code> URL</a> that was returned as the
     location of an HTTP redirect (<a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a> in
     other protocols)</dt>

     <dd>The owner is the <a href=#url>URL</a> that redirected to the
     <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code> URL</a>.</dd>


     <dt>If a script is a <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code> URL</a> in an attribute</dt>

     <dd>The owner is the <code>Document</code> of the element on
     which the attribute is found.</dd>


     <dt>If a script is a <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code> URL</a> in a style sheet</dt>

     <dd>The owner is the <a href=#url>URL</a> of the style sheet.</dd>


     <dt>If a script is a <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code> URL</a> to which a <a href=#browsing-context>browsing
     context</a> is being <a href=#navigate title=navigate>navigated</a>,
     the URL having been provided by the user (e.g. by using a
     <i>bookmarklet</i>)</dt>

     <dd>The owner is the <code>Document</code> of the <a href=#browsing-context>browsing
     context</a>'s <a href=#active-document>active document</a>.</dd>


     <dt>If a script is a <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code> URL</a> to which a <a href=#browsing-context>browsing
     context</a> is being <a href=#navigate title=navigate>navigated</a>,
     the URL having been declared in markup</dt>

     <dd>The owner is the <code>Document</code> of the element
     (e.g. an <code><a href=#the-a-element>a</a></code> or <code><a href=#the-area-element>area</a></code> element) that
     declared the URL.</dd>


     <dt>If a script is a <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code> URL</a> to which a <a href=#browsing-context>browsing
     context</a> is being <a href=#navigate title=navigate>navigated</a>,
     the URL having been provided by script</dt>

     <dd>The owner is the script that provided the URL.</dd>

    </dl><p>The <a href=#origin-0>origin</a> of the script is then equal to the
    <a href=#origin-0>origin</a> of the owner, and the <a href=#effective-script-origin>effective script
    origin</a> of the script is equal to the <a href=#effective-script-origin>effective script
    origin</a> of the owner.</p>

   </dd>

   <dt>For <code>Document</code> objects and images</dt>

   <dd>

    <dl class=switch><dt id=sandboxOrigin>If a <code>Document</code> is in a
     <a href=#browsing-context>browsing context</a> whose <a href=#sandboxed-origin-browsing-context-flag>sandboxed origin
     browsing context flag</a> is set</dt>

     <dd>The <a href=#origin-0>origin</a> is a globally unique identifier
     assigned when the <code>Document</code> is created.</dd>


     <dt>If a <code>Document</code> or image was returned by the
     <code>XMLHttpRequest</code> API</dt>

     <dd>The <a href=#origin-0>origin</a> and <a href=#effective-script-origin>effective script
     origin</a> are equal to the <a href=#origin-0>origin</a> and
     <a href=#effective-script-origin>effective script origin</a> of the <code>Document</code>
     object of the <code><a href=#window>Window</a></code> object from which the
     <code>XMLHttpRequest</code> constructor was invoked. (That is,
     they track the <code>Document</code> to which the
     <code>XMLHttpRequest</code> object's <a href=http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#document-pointer><code>Document</code>
     pointer</a> pointed when it was created.) <a href=#refsXHR>[XHR]</a></dd>


     <dt>If a <code>Document</code> or image was generated from a
     <a href=#javascript-protocol title="javascript protocol"><code>javascript:</code>
     URL</a></dt>

     <dd>The <a href=#origin-0>origin</a> is equal to the <a href=#origin-0>origin</a>
     of the script of that <a href=#javascript-protocol title="javascript
     protocol"><code>javascript:</code> URL</a>.</dd>


     <dt>If a <code>Document</code> or image was served over the
     network and has an address that uses a URL scheme with a
     server-based naming authority</dt>

     <dd>The <a href=#origin-0>origin</a> is the <a href=#origin-0>origin</a> of the
     <a href="#the-document's-address" title="the document's address">address</a> of the
     <code>Document</code> or the <a href=#url>URL</a> of the image, as
     appropriate.</dd>


     <dt>If a <code>Document</code> or image was generated from a
     <code title="">data:</code> URL that was returned as the location
     of an HTTP redirect (<a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a> in
     other protocols)</dt>

     <dd>The <a href=#origin-0>origin</a> is the <a href=#origin-0>origin</a> of the
     <a href=#url>URL</a> that redirected to the <code title="">data:</code> URL.</dd>


     <dt>If a <code>Document</code> or image was generated from a
     <code title="">data:</code> URL found in another
     <code>Document</code> or in a script</dt>

     <dd>The <a href=#origin-0>origin</a> is the <a href=#origin-0>origin</a> of the
     <code>Document</code> or script in which the <code title="">data:</code> URL was found.</dd>


     <dt>If a <code>Document</code> has the <a href="#the-document's-address" title="the
     document's address">address</a>
     "<code><a href=#about:blank>about:blank</a></code>"</dt>

     <dd>The <a href=#origin-0>origin</a> of the <code>Document</code> is <a href=#about-blank-origin>the <span>origin</span> it was
     assigned when its browsing context was created</a>.</dd>


     <dt>If a <code>Document</code> or image was obtained in some
     other manner (e.g. a <code title="">data:</code> URL typed in by
     the user, a <code>Document</code> created using the <code title="">createDocument()</code> API, a <code title="">data:</code> URL returned as the location of an HTTP
     redirect, etc)</dt>

     <dd>The <a href=#origin-0>origin</a> is a globally unique identifier
     assigned when the <code>Document</code> or image is created.</dd>

    </dl><p>When a <code>Document</code> is created, unless stated
    otherwise above, its <a href=#effective-script-origin>effective script origin</a> is
    initialized to the <a href=#origin-0>origin</a> of the
    <code>Document</code>. However, the <code title=dom-document-domain><a href=#dom-document-domain>document.domain</a></code> attribute can
    be used to change it.</p>

   </dd>

  </dl><p>The <dfn id=unicode-serialization-of-an-origin>Unicode serialization of an origin</dfn> is the string
  obtained by applying the following algorithm to the given
  <a href=#origin-0>origin</a>:</p>

  <ol><li><p>If the <a href=#origin-0>origin</a> in question is not a
   scheme/host/port tuple, then return the literal string "<code title="">null</code>" and abort these steps.</li>

   <li><p>Otherwise, let <var title="">result</var> be the scheme part
   of the <a href=#origin-0>origin</a> tuple.</li>

   <li><p>Append the string "<code title="">://</code>" to <var title="">result</var>.</li>

   <li><p>Apply the IDNA ToUnicode algorithm to each component of the
   host part of the <a href=#origin-0>origin</a> tuple, and append the results
   &mdash; each component, in the same order, separated by U+002E FULL
   STOP characters (".") &mdash; to <var title="">result</var>.</li>

   <li><p>If the port part of the <a href=#origin-0>origin</a> tuple gives a port
   that is different from the default port for the protocol given by
   the scheme part of the <a href=#origin-0>origin</a> tuple, then append a
   U+003A COLON character (":") and the given port, in base ten, to
   <var title="">result</var>.</li>

   <li><p>Return <var title="">result</var>.</li>

  </ol><p>The <dfn id=ascii-serialization-of-an-origin>ASCII serialization of an origin</dfn> is the string
  obtained by applying the following algorithm to the given
  <a href=#origin-0>origin</a>:</p>

  <ol><li><p>If the <a href=#origin-0>origin</a> in question is not a
   scheme/host/port tuple, then return the literal string "<code title="">null</code>" and abort these steps.</li>

   <li><p>Otherwise, let <var title="">result</var> be the scheme part
   of the <a href=#origin-0>origin</a> tuple.</li>

   <li><p>Append the string "<code title="">://</code>" to <var title="">result</var>.</li>

   <li>

    <p>Apply the IDNA ToASCII algorithm the host part of the
    <a href=#origin-0>origin</a> tuple, with both the AllowUnassigned and
    UseSTD3ASCIIRules flags set, and append the results <var title="">result</var>.</p>

    <p>If ToASCII fails to convert one of the components of the
    string, e.g. because it is too long or because it contains invalid
    characters, then return the empty string and abort these steps. <a href=#refsRFC3490>[RFC3490]</a></p>

   </li>

   <li><p>If the port part of the <a href=#origin-0>origin</a> tuple gives a port
   that is different from the default port for the protocol given by
   the scheme part of the <a href=#origin-0>origin</a> tuple, then append a
   U+003A COLON character (":") and the given port, in base ten, to
   <var title="">result</var>.</li>

   <li><p>Return <var title="">result</var>.</li>

  </ol><p>Two <a href=#origin-0 title=origin>origins</a> are said to be the
  <dfn id=same-origin>same origin</dfn> if the following algorithm returns true:</p>

  <ol><li><p>Let <var title="">A</var> be the first <a href=#origin-0>origin</a>
   being compared, and <var title="">B</var> be the second
   <a href=#origin-0>origin</a> being compared.</li>

   <li><p>If <var title="">A</var> and <var title="">B</var> are both
   opaque identifiers, and their value is equal, then return
   true.</li>

   <li><p>Otherwise, if either <var title="">A</var> or <var title="">B</var> or both are opaque identifiers, return
   false.</li>

   <li><p>If <var title="">A</var> and <var title="">B</var> have
   scheme components that are not identical, return false.</li>

   <li><p>If <var title="">A</var> and <var title="">B</var> have host
   components that are not identical, return false.</li>

   <li><p>If <var title="">A</var> and <var title="">B</var> have port
   components that are not identical, return false.</li>

   <li><p>If either <var title="">A</var> or <var title="">B</var>
   have additional data, but that data is not identical for both,
   return false.</li>

   <li><p>Return true.</li>

  </ol><h4 id=relaxing-the-same-origin-restriction><span class=secno>5.4.1 </span>Relaxing the same-origin restriction</h4>

  <p>The <dfn id=dom-document-domain title=dom-document-domain><code>domain</code></dfn>
  attribute on <code>Document</code> objects must be initialized to
  <a href="#the-document's-domain">the document's domain</a>, if it has one, and the empty
  string otherwise. On getting, the attribute must return its current
  value, unless the document was created by
  <code>XMLHttpRequest</code>, in which case it must throw an
  <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception. On setting, the user
  agent must run the following algorithm:</p>

  <ol><li>

    <p>If the document was created by <code>XMLHttpRequest</code>,
    throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception and abort these
    steps.</p>

   </li>

   <li>

    <p>Apply the IDNA ToASCII algorithm to the new value, with both
    the AllowUnassigned and UseSTD3ASCIIRules flags set. Let <var title="">new value</var> be the result of the ToASCII
    algorithm.</p>

    <p>If ToASCII fails to convert one of the components of the
    string, e.g. because it is too long or because it contains invalid
    characters, then throw a <code><a href=#security_err>SECURITY_ERR</a></code> exception and abort
    these steps. <a href=#refsRFC3490>[RFC3490]</a></p>

   </li>

   <li>

    <p>If <var title="">new value</var> is not exactly equal to the
    current value of the <code title=dom-document-domain><a href=#dom-document-domain>document.domain</a></code> attribute, then
    run these substeps:</p>

    <ol><li>

      <p>If the current value is an IP address, throw a <code><a href=#security_err>SECURITY_ERR</a></code>
      exception and abort these steps.</p>

     </li>

     <li>

      <p>If <var title="">new value</var>, prefixed by a U+002E FULL
      STOP ("."), does not exactly match the end of the current value,
      throw a <code><a href=#security_err>SECURITY_ERR</a></code> exception and abort these
      steps.</p>

     </li>

     <li>

      <p>If <var title="">new value</var> matches a suffix in the
      Public Suffix List, or, if <var title="">new value</var>,
      prefixed by a U+002E FULL STOP ("."), matches the end of a
      suffix in the Public Suffix List, then throw a
      <code><a href=#security_err>SECURITY_ERR</a></code> exception and abort these steps. <a href=#refsPSL>[PSL]</a></p> <!-- [PSL]
      http://publicsuffix.org/ -->

      <p>Suffixes must be compared after applying the IDNA ToASCII
      algorithm to them, with both the AllowUnassigned and
      UseSTD3ASCIIRules flags set, in an <a href=#ascii-case-insensitive>ASCII
      case-insensitive</a> manner. <a href=#refsRFC3490>[RFC3490]</a></p>

     </li>

    </ol></li>

   <li>

    <p>Set the attribute's value to <var title="">new value</var>.</p>

   </li>

   <li>

    <p>Set the host part of the <a href=#effective-script-origin>effective script origin</a>
    tuple of the <code>Document</code> to <var title="">new
    value</var>.</p>

   </li>

   <li>

    <p>Set the port part of the <a href=#effective-script-origin>effective script origin</a>
    tuple of the <code>Document</code> to "manual override" (a value
    that, for the purposes of <a href=#same-origin title="same origin">comparing
    origins</a>, is identical to "manual override" but not
    identical to any other value).</p>

   </li>

  </ol><p>The <dfn id="the-document's-domain" title="the document's domain">domain</dfn> of a
  <code>Document</code> is the host part of the document's
  <a href=#origin-0>origin</a>, if that is a scheme/host/port tuple. If it
  isn't, then the document does not have a domain.</p>

  <p class=note>The <code title=dom-document-domain><a href=#dom-document-domain>domain</a></code>
  attribute is used to enable pages on different hosts of a domain to
  access each others' DOMs.</p>



  <h3 id=scripting><span class=secno>5.5 </span>Scripting</h3>

  <h4 id=introduction-0><span class=secno>5.5.1 </span>Introduction</h4>

  <p>Various mechanisms can cause author-provided executable code to
  run in the context of a document. These mechanisms include, but are
  probably not limited to:</p>

  <ul><li>Processing of <code><a href=#script>script</a></code> elements.</li>

   <li>Processing of inline <code title="javascript
   protocol"><a href=#javascript-protocol>javascript:</a></code> URLs (e.g. the <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute of <code><a href=#the-img-element>img</a></code>
   elements, or an <code title="">@import</code> rule in a CSS
   <code><a href=#the-style-element>style</a></code> element block).</li>

   <li>Event handlers, whether registered through the DOM using <code title="">addEventListener()</code>, by explicit <a href=#event-handler-content-attributes>event handler
   content attributes</a>, by <a href=#event-handler-dom-attributes>event handler DOM
   attributes</a>, or otherwise.</li>

   <li>Processing of technologies like XBL or SVG that have their own
   scripting features.</li>

  </ul><h4 id=enabling-and-disabling-scripting><span class=secno>5.5.2 </span>Enabling and disabling scripting</h4>

  <p><dfn id=concept-bc-script title=concept-bc-script>Scripting is enabled</dfn> in a
  <em><a href=#browsing-context>browsing context</a></em> when all of the
  following conditions are true:</p>

  <ul><li>The user agent supports scripting.</li>

   <li>The user has not disabled scripting for this <a href=#browsing-context>browsing
   context</a> at this time. (User agents may provide users with
   the option to disable scripting globally, or in a finer-grained
   manner, e.g. on a per-origin basis.)</li>

   <li id=sandboxScriptBlocked>The <a href=#browsing-context>browsing context</a>
   does not have the <a href=#sandboxed-scripts-browsing-context-flag>sandboxed scripts browsing context
   flag</a> set.</li>

  </ul><p><dfn id=concept-bc-noscript title=concept-bc-noscript>Scripting is disabled</dfn> in a
  <a href=#browsing-context>browsing context</a> when any of the above conditions are
  false (i.e. when scripting is not <a href=#concept-bc-script title=concept-bc-script>enabled</a>).</p>

  <hr><p><dfn id=concept-n-script title=concept-n-script>Scripting is enabled</dfn> for a
  <em>node</em> if the <code>Document</code> object of the node (the
  node itself, if it is itself a <code>Document</code> object) has an
  associated <a href=#browsing-context>browsing context</a>, and <a href=#concept-bc-script title=concept-bc-script>scripting is enabled</a> in that
  <a href=#browsing-context>browsing context</a>.</p>

  <p><dfn id=concept-n-noscript title=concept-n-noscript>Scripting is disabled</dfn> for a
  node if there is no such <a href=#browsing-context>browsing context</a>, or if <a href=#concept-bc-noscript title=concept-bc-noscript>scripting is disabled</a> in that
  <a href=#browsing-context>browsing context</a>.</p>



  <!-- SCRIPT EXEC (marks areas related to creation of scripts) -->
  <h4 id=processing-model-1><span class=secno>5.5.3 </span>Processing model</h4>

  <h5 id=definitions-0><span class=secno>5.5.3.1 </span>Definitions</h5>

  <p>A <dfn id=concept-script title=concept-script>script</dfn> has:</p>

  <dl><dt>A <dfn id=script-execution-environment>script execution environment</dfn></dt>

   <dd>

    <p>The characteristics of the script execution environment depend
    on the language, and are not defined by this specification.</p>

    <p class=example>In JavaScript, the script execution environment
    consists of the interpreter, the stack of <i>execution
    contexts</i>, the <i>global code</i> and <i>function code</i> and
    the Function objects resulting, and so forth.</p>

   </dd>

   <dt>A <dfn id=list-of-code-entry-points>list of code entry-points</dfn></dt>

   <dd>

    <p>Each code entry-point represents a block of executable code
    that the script exposes to other scripts and to the user
    agent.</p>

    <p class=example>Each Function object in a JavaScript
    <a href=#script-execution-environment>script execution environment</a> has a corresponding code
    entry-point, for instance.</p>

    <p>The main program code of the script, if any, is the
    <dfn id=initial-code-entry-point><i>initial code entry-point</i></dfn>. Typically, the code
    corresponding to this entry-point is executed immediately after
    the script is parsed.</p>

    <p class=example>In JavaScript, this corresponds to the
    execution context of the global code.</p>

   </dd>

   <dt>A relationship with the <dfn id="script's-global-object">script's global object</dfn></dt>

   <dd>

    <p>An object that provides the APIs that the code can use.</p>

    <p class=example>This is typically a <code><a href=#window>Window</a></code>
    object. In JavaScript, this corresponds to the <i>global
    object</i>.</p>

    <p class=note>When a <a href="#script's-global-object">script's global object</a> is an
    empty object, it can't do anything that interacts with the
    environment.</p>

   </dd>

   <dt>A relationship with the <dfn id="script's-browsing-context">script's browsing context</dfn></dt>

   <dd>

    <p>A <a href=#browsing-context>browsing context</a> that is assigned responsibility
    for actions taken by the script.</p>

    <p class=example>When a script creates and <a href=#navigate title=navigate>navigates</a> a new <a href=#top-level-browsing-context>top-level browsing
    context</a>, the <code title=dom-opener><a href=#dom-opener>opener</a></code>
    attribute of the new <a href=#browsing-context>browsing context</a>'s
    <code><a href=#window>Window</a></code> object will be set to the <a href="#script's-browsing-context">script's
    browsing context</a>'s <code><a href=#window>Window</a></code> object.</p>

   </dd>

   <dt>A <dfn id="script's-character-encoding" title="script's character encoding">character encoding</dfn></dt>

   <dd>

    <p>A character encoding, set when the script is created, used to
    encode URLs.  <span id=sce-not-copy>If the character encoding is
    set from another source, e.g. a <a href="#document's-character-encoding">document's character
    encoding</a>, then the <a href="#script's-character-encoding">script's character encoding</a>
    must follow the source, so that if the source's changes, so does
    the script's.</span></p>

   </dd>

   <dt>A <dfn id="script's-base-url" title="script's base URL">base URL</dfn></dt>

   <dd>

    <p>A <a href=#url>URL</a>, set when the script is created, used to
    resolve relative URLs. <span id=sbu-not-copy>If the base URL is
    set from another source, e.g. a <a href=#document-base-url>document base URL</a>,
    then the <a href="#script's-base-url">script's base URL</a> must follow the source, so
    that if the source's changes, so does the script's.</span></p>

   </dd>

  </dl><h5 id=calling-scripts><span class=secno>5.5.3.2 </span>Calling scripts</h5>

  <p>When a user agent is to <dfn id=jump-to-a-code-entry-point>jump to a code entry-point</dfn> for
  a <a href=#concept-script title=concept-script>script</a>, for example to invoke
  an event listener defined in that <a href=#concept-script title=concept-script>script</a>, the user agent must run the
  following steps:</p>

  <ol><li><p>If the <a href="#script's-global-object">script's global object</a> is a
   <code><a href=#window>Window</a></code> object whose <code>Document</code> object is
   not <a href=#fully-active>fully active</a>, then abort these steps without doing
   anything. The callback is not fired.</p>

   <li><p>Set the <a href=#first-script>first script</a> to be the <a href=#concept-script title=concept-script>script</a> being invoked.</li>

   <li><p>Make the <a href=#script-execution-environment title="script execution environment">script
   execution environment</a> for the <a href=#concept-script title=concept-script>script</a> execute the code for the given
   code entry-point.</li>

   <li><p>Set the <a href=#first-script>first script</a> back to whatever it was
   when this algorithm started.</li>

  </ol><p>This algorithm is not invoked by one script calling another.</p>


  <h5 id=creating-scripts><span class=secno>5.5.3.3 </span>Creating scripts</h5>

  <p>When the specification says that a <a href=#concept-script title=concept-script>script</a> is to be <dfn id=create-a-script title="create a
  script">created</dfn>, given some script source, its scripting
  language, a global object, a browsing context, a character encoding,
  and a base URL, the user agent must run the following steps:</p>

  <ol><li><p>Set up a <a href=#script-execution-environment>script execution environment</a> as
   appropriate for the scripting language.</li>

   <li><p>Parse/compile/initialize the source of the script using the
   <a href=#script-execution-environment>script execution environment</a>, as appropriate for the
   scripting language, and thus obtain the <a href=#list-of-code-entry-points>list of code
   entry-points</a> for the script. If the semantics of the
   scripting language and the given source code are such that there is
   executable code to be immediately run, then the <i><a href=#initial-code-entry-point>initial code
   entry-point</a></i> is the entry-point for that code.</li>

   <li><p>Set up the <a href="#script's-global-object">script's global object</a>, the
   <a href="#script's-browsing-context">script's browsing context</a>, the <a href="#script's-character-encoding">script's
   character encoding</a>, and the <a href="#script's-base-url">script's base URL</a>
   from the settings passed to this algorithm.</li>

   <li><p><a href=#jump-to-a-code-entry-point title="jump to a code entry-point">Jump</a> to the
   <a href=#concept-script title=concept-script>script</a>'s <i><a href=#initial-code-entry-point>initial code
   entry-point</a></i>.</li>

  </ol><hr><p>When the user agent is to <dfn id=create-an-impotent-script>create an impotent script</dfn>,
  given some script source, its scripting language, and a browsing
  context, the user agent must <a href=#create-a-script>create a script</a>, using the
  given script source and scripting language, using a new empty object
  as the global object, and using the given browsing context as the
  browsing context. The character encoding and base URL for the
  resulting <a href=#concept-script title=concept-script>script</a> are not
  important as no APIs are exposed to the script.</p>

  <hr><p>When the specification says that a <a href=#concept-script title=concept-script>script</a> is to be <dfn id=create-a-script-from-a-node title="create a
  script from a node">created from a node</dfn> <var title="">node</var>, given some script source and its scripting
  language, the user agent must <a href=#create-a-script>create a script</a>, using
  the given script source and scripting language, and using <a href=#the-script-settings-determined-from-the-node>the
  script settings determined from the node</a> <var title="">node</var>.</p>

  <p><dfn id=the-script-settings-determined-from-the-node>The script settings determined from the node</dfn> <var title="">node</var> are computed as follows:</p>

  <ol><li><p>Let <var title="">document</var> be the
   <code>Document</code> of <var title="">node</var> (or <var title="">node</var> itself if it is a
   <code>Document</code>).</li>

   <li><p>The browsing context is the <a href=#browsing-context>browsing context</a> of
   <var title="">document</var>.</p>

   <li><p>The global object is the <code><a href=#window>Window</a></code> object of
   <var title="">document</var>.</li>

   <li><p>The character encoding is the <a href="#document's-character-encoding" title="document's
   character encoding">character encoding</a> of <var title="">document</var>. (<a href=#sce-not-copy>This is a
   reference, not a copy</a>.)</li>

   <li><p>The base URL is the <a href=#document-base-url title="document base URL">base
   URL</a> of <var title="">document</var>. (<a href=#sbu-not-copy>This is a reference, not a copy</a>.)</li>

  </ol><h5 id=killing-scripts><span class=secno>5.5.3.4 </span>Killing scripts</h5>

  <p>User agents may impose resource limitations on scripts, for
  example CPU quotas, memory limits, total execution time limits, or
  bandwidth limitations. When a script exceeds a limit, the user agent
  may either throw a <code><a href=#quota_exceeded_err>QUOTA_EXCEEDED_ERR</a></code> exception, abort
  the script without an exception, prompt the user, or throttle script
  execution.</p>

  <div class=example>

   <p>For example, the following script never terminates. A user agent
   could, after waiting for a few seconds, prompt the user to either
   terminate the script or let it continue.</p>

   <pre>&lt;script&gt;
 while (true) { /* loop */ }
&lt;/script&gt;</pre>

  </div>

  <p>User agents are encouraged to allow users to disable scripting
  whenever the user is prompted either by a script (e.g. using the
  <code title=dom-alert><a href=#dom-alert>window.alert()</a></code> API) or because of a
  script's actions (e.g. because it has exceeded a time limit).</p>

  <p>If scripting is disabled while a script is executing, the script
  should be terminated immediately.</p>


  <h4 id=event-loops><span class=secno>5.5.4 </span>Event loops</h4>

  <p>To coordinate events, user interaction, scripts, rendering,
  networking, and so forth, user agents must use <dfn id=event-loop title="event
  loop">event loops</dfn> as described in this section.</p>

  <p>There must be at least one <a href=#event-loop>event loop</a> per user
  agent, and at most one <a href=#event-loop>event loop</a> per <a href=#unit-of-related-similar-origin-browsing-contexts>unit of
  related similar-origin browsing contexts</a>.</p>

  <p>An <a href=#event-loop>event loop</a> always has at least one <a href=#browsing-context>browsing
  context</a>. If an <a href=#event-loop>event loop</a>'s <a href=#browsing-context title="browsing context">browsing contexts</a> all go away, then
  the <a href=#event-loop>event loop</a> goes away as well. A <a href=#browsing-context>browsing
  context</a> always has an <a href=#event-loop>event loop</a> coordinating
  its activities.</p>

  <p class=note>Other specifications can define new kinds of event
  loops that aren't associated with browsing contexts.</p>

  <p>An <a href=#event-loop>event loop</a> has one or more <dfn id=task-queue title="task
  queue">task queues</dfn>. A <a href=#task-queue>task queue</a> is an ordered
  list of <dfn id=concept-task title=concept-task>tasks</dfn>, which can be:</p>

  <dl><dt>Events</dt>

   <dd>

    <p>Asynchronously dispatching an <code>Event</code> object at a
    particular <code>EventTarget</code> object is a task.</p>

    <p class=note>Not all events are dispatched using the <a href=#task-queue>task
    queue</a>, many are dispatched synchronously during other
    tasks.</p>

   </dd>


   <dt>Parsing</dt>

   <dd><p>The <a href=#html-parser>HTML parser</a> tokenising a single byte, and
   then processing any resulting tokens, is a task.</dd>


   <dt>Callbacks</dt>

   <dd><p>Calling a callback asynchronously is a task.</dd>


   <dt>Using a resource</dt>

   <dd><p>When an algorithm <a href=#fetch title=fetch>fetches</a> a
   resource, if the fetching occurs asynchronously then the processing
   of the resource once some or all of the resource is available is a
   task.</dd>


   <dt>Reacting to DOM manipulation</dt>

   <dd><p>Some elements have tasks that trigger in response to DOM
   manipulation, e.g. when that element is <a href=#insert-an-element-into-a-document title="insert an
   element into a document">inserted into the document</a>.</p>

  </dl><p>Each <a href=#concept-task title=concept-task>task</a> is associated with a
  <code>Document</code>; if the task was queued in the context of an
  element, then it is the element's <code>Document</code>; if the task
  was queued in the context of a <a href=#browsing-context>browsing context</a>, then
  it is the <a href=#browsing-context>browsing context</a>'s <a href=#active-document>active
  document</a> at the time the task was queued; if the task was
  queued by or for a <a href=#concept-script title=concept-script>script</a> then
  the document is the script's <a href="#script's-browsing-context">script's browsing
  context</a>'s <a href=#active-document>active document</a> at the time the task
  was queued.</p>

  <p>When a user agent is to <dfn id=queue-a-task>queue a task</dfn>, it must add the
  given task to one of the <a href=#task-queue title="task queue">task queues</a>
  of the relevant <a href=#event-loop>event loop</a>. All the tasks from one
  particular <dfn id=task-source>task source</dfn> (e.g. the callbacks generated by
  timers, the events dispatched for mouse movements, the tasks queued
  for the parser) must always be added to the same <a href=#task-queue>task
  queue</a>, but tasks from different <a href=#task-source title="task
  source">task sources</a> may be placed in different <a href=#task-queue title="task queue">task queues</a>.</p>

  <p class=example>For example, a user agent could have one
  <a href=#task-queue>task queue</a> for mouse and key events (the <a href=#user-interaction-task-source>user
  interaction task source</a>), and another for everything
  else. The user agent could then give keyboard and mouse events
  preference over other tasks three quarters of the time, keeping the
  interface responsive but not starving other task queues, and never
  processing events from any one <a href=#task-source>task source</a> out of
  order.</p>

  <p>An <a href=#event-loop>event loop</a> must continually run through the
  following steps for as long as it exists:</p>

  <ol><li><p>Run the oldest task on one of the <a href=#event-loop>event loop</a>'s
   <a href=#task-queue title="task queue">task queues</a>, ignoring tasks whose
   associated <code>Document</code>s are not <a href=#fully-active>fully
   active</a>. The user agent may pick any <a href=#task-queue>task
   queue</a>.</li>

   <li><p>Remove that task from its <a href=#task-queue>task queue</a>.</li>

   <li><p>If necessary, update the rendering or user interface of any
   <code>Document</code> or <a href=#browsing-context>browsing context</a> to reflect
   the current state.</li>

   <li><p>Return to the first step of the <a href=#event-loop>event
   loop</a>.</li>

  </ol><h5 id=generic-task-sources><span class=secno>5.5.4.1 </span>Generic task sources</h5>

  <p>The following <a href=#task-source title="task source">task sources</a> are
  used by a number of mostly unrelated features in this and other
  specifications.</p>

  <dl><dt>The <dfn id=dom-manipulation-task-source>DOM manipulation task source</dfn></dt>

   <dd>

    <p>This <a href=#task-source>task source</a> is used for features that react
    to DOM manipulations, such as things that happen asynchronously
    when an element is <a href=#insert-an-element-into-a-document title="insert an element into a
    document">inserted into the document</a>.</p>

    <p>Asynchronous mutation events must be dispatched using <a href=#concept-task title=concept-task>tasks</a> <a href=#queue-a-task title="queue a
    task">queued</a> with the <a href=#dom-manipulation-task-source>DOM manipulation task
    source</a>. <a href=#refsDOMEVENTS>[DOMEVENTS]</a></p>

   </dd>

   <dt>The <dfn id=user-interaction-task-source>user interaction task source</dfn></dt>

   <dd>

    <p>This <a href=#task-source>task source</a> is used for features that react
    to user interaction, for example keyboard or mouse input.</p>

    <p>Asynchronous events sent in response to user input (e.g. <span title=event-click>click</span> events) must be dispatched using
    <a href=#concept-task title=concept-task>tasks</a> <a href=#queue-a-task title="queue a
    task">queued</a> with the <a href=#user-interaction-task-source>user interaction task
    source</a>. <a href=#refsDOMEVENTS>[DOMEVENTS]</a></p>

   </dd>

   <dt>The <dfn id=networking-task-source>networking task source</dfn></dt>

   <dd>

    <p>This <a href=#task-source>task source</a> is used for features that trigger
    in response to network activity.</p>

    <!-- XHR should use this -->

   </dd>

  </dl><!-- SCRIPT EXEC --><h4 id=javascript-protocol><span class=secno>5.5.5 </span><dfn title="javascript protocol">The <code title="">javascript:</code> protocol</dfn></h4>

  <p>When a <a href=#url>URL</a> using the <code title="">javascript:</code> protocol is <dfn id=concept-js-deref title=concept-js-deref>dereferenced</dfn>, the user agent must run
  the following steps:</p>

  <ol><li><p>Let the script source be the string obtained using the
   content retrieval operation defined for <code title="">javascript:</code> URLs. <a href=#refsJSURL>[JSURL]</a></li>

<!--
JSURL: http://ietfreport.isoc.org/all-ids/draft-hoehrmann-javascript-scheme-00.txt and
       http://www.websitedev.de/ietf/draft-hoehrmann-javascript-scheme-00.txt should be as stable as it gets,
       http://ietfreport.isoc.org/idref/draft-hoehrmann-javascript-scheme/ for the latest version
-->

   <li>

    <p>Use the appropriate step from the following list:</p>

    <dl><dt>If a <a href=#browsing-context>browsing context</a> is being <a href=#navigate title=navigate>navigated</a> to a <code>javascript:</code>
     URL, and the <a href=#active-document>active document</a> of that browsing
     context has the <a href=#same-origin>same origin</a> as the script given by
     that URL</dt>

     <dd>

      <!-- http://www.hixie.ch/tests/adhoc/html/navigation/javascript-url/ -->

      <p>Let <var title="">address</var> be the <a href="#the-document's-address" title="the
      document's address">address</a> of the <a href=#active-document>active
      document</a> of the <a href=#browsing-context>browsing context</a> being
      navigated.</p>

      <p>If <var title="">address</var> is <code><a href=#about:blank>about:blank</a></code>,
      and the <a href=#browsing-context>browsing context</a> being navigated has a
      <a href=#creator-browsing-context>creator browsing context</a>, then let <var title="">address</var> be the <a href="#the-document's-address" title="the document's
      address">address</a> of the <a href=#creator-document>creator
      <code>Document</code></a> instead.</p>

      <p><a href=#create-a-script-from-a-node title="create a script from a node">Create a
      script</a> from the <code>Document</code> node of the
      <a href=#active-document>active document</a>, using the aforementioned script
      source, and assuming the scripting language is JavaScript.</p>

      <p>Let <var title="">result</var> be the return value of the
      <i><a href=#initial-code-entry-point>initial code entry-point</a></i> of this <a href=#concept-script title=concept-script>script</a>. If an exception was
      raised, let <var title="">result</var> be void instead.</p>

      <p>When it comes time to <a href="#set-the-document's-address">set the document's address</a>
      in the <a href=#navigate title=navigate>navigation algorithm</a>, use
      <var title="">address</var> as the <a href=#override-url>override
      URL</a>.</p>

     </dd>

     <dt>If the <code>Document</code> object of the element,
     attribute, or style sheet from which the <code>javascript:</code>
     URL was reached has an associated <a href=#browsing-context>browsing
     context</a></dt>

     <dd>

      <p><a href=#create-an-impotent-script>Create an impotent script</a> using the
      aforementioned script source, with the scripting language set to
      JavaScript, and with the <code>Document</code>'s object's
      <a href=#browsing-context>browsing context</a> as the browsing context.</p>

      <p>Let <var title="">result</var> be the return value of the
      <i><a href=#initial-code-entry-point>initial code entry-point</a></i> of this <a href=#concept-script title=concept-script>script</a>. If an exception was
      raised, let <var title="">result</var> be void instead.</p>

     </dd>

     <dt>Otherwise</dt>

     <dd>

      <p>Let <var title="">result</var> be void.</p>

     </dd>

    </dl></li>

   <li>

    <p>If the result of executing the script is void (there is no
    return value), then the URL must be treated in a manner equivalent
    to an HTTP resource with an HTTP 204 No Content response.</p>

    <p>Otherwise, the URL must be treated in a manner equivalent to an
    HTTP resource with a 200 OK response whose <a href=#content-type-0 title=Content-Type>Content-Type metadata</a> is <code title="">text/html</code> and whose response body is the return
    value converted to a string value.</p>

    <p class=note>Certain contexts, in particular <code><a href=#the-img-element>img</a></code>
    elements, ignore the <a href=#content-type-0 title=Content-Type>Content-Type
    metadata</a>.</p>

   </li>

  </ol><div class=example>

   <p>So for example a <code title="">javascript:</code> URL for a
   <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute of an
   <code><a href=#the-img-element>img</a></code> element would be evaluated in the context of an
   empty object as soon as the attribute is set; it would then be
   sniffed to determine the image type and decoded as an image.</p>

   <p>A <code title="">javascript:</code> URL in an <code title=attr-a-href>href</code> attribute of an <code><a href=#the-a-element>a</a></code>
   element would only be evaluated when the link was <a href=#following-hyperlinks title="following hyperlinks">followed</a>.</p>

   <p>The <code title=attr-iframe-src><a href=#attr-iframe-src>src</a></code> attribute of an
   <code><a href=#the-iframe-element>iframe</a></code> element would be evaluated in the context of
   the <code><a href=#the-iframe-element>iframe</a></code>'s own <a href=#browsing-context>browsing context</a>; once
   evaluated, its return value (if it was not void) would replace that
   <a href=#browsing-context>browsing context</a>'s document, thus changing the
   variables visible in that <a href=#browsing-context>browsing context</a>.</p>

  </div>

  <p class=note>The rules for <a href=#create-a-script title="create a script">creating
  a script</a> include making the script not execute (and just
  return void) in certain cases, e.g. in a sandbox or when the user
  has disabled scripting altogether.</p>


  <h4 id=events><span class=secno>5.5.6 </span>Events</h4>


  <h5 id=event-handler-attributes><span class=secno>5.5.6.1 </span>Event handler attributes</h5>

  <!--test: <a href="http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A...%3Cscript%3E%0Aw(a%3Ddocument.implementation.createDocument(null%2C%20null%2C%20null))%3B%0Aw(a.appendChild(a.createElementNS('http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml'%2C%20'html')))%3B%0Aw(b%3Da.firstChild.appendChild(a.createElementNS('http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml'%2C%20'body')))%3B%0Aw(b.test%20%3D%20w)%3B%0Aw(b.setAttribute('onclick'%2C%20'test(%22fire%3A%20%22%20%2B%20event)'))%3B%0Aw(b.onclick)%3B%0Aw(e%3Da.createEvent('Event'))%3B%0Aw(e.initEvent('click'%2C%20false%2C%20false))%3B%0Aw(b.dispatchEvent(e))%3B%0A%3C%2Fscript%3E">test</a>-->

  <p>Many objects can have <dfn id=event-handler-attributes-0>event handler attributes</dfn>
  specified. These act as bubbling event listeners for the element on
  which they are specified.</p>

  <p>An <a href=#event-handler-attributes-0 title="event handler attributes">event handler
  attribute</a>, unless otherwise specified, can either have the
  value null or be set to a <code><a href=#function>Function</a></code> object. Initially,
  unless otherwise specified, an event handler attribute must be set
  to null.</p>

  <p class=note>Some event handler attributes allow other values and
  have other initial values, in particular the <code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code> event handler
  attribute on the <code><a href=#window>Window</a></code> object.</p>

  <p>Event handler attributes are exposed in one or two ways.</p>

  <p>The first way, common to all event handler attributes, is as an
  <a href=#event-handler-dom-attributes title="event handler DOM attributes">event handler DOM
  attribute</a>.</p>

  <p>The second way is as an <a href=#event-handler-content-attributes title="event handler content
  attributes">event handler content attribute</a>. Event handlers on
  <a href=#html-elements>HTML elements</a> and some of the event handlers on
  <code><a href=#window>Window</a></code> objects are exposed in this way.</p>

  <hr><p><dfn id=event-handler-dom-attributes>Event handler DOM attributes</dfn>, on setting, must set the
  corresponding event handler attribute to their new value, and on
  getting, must return whatever the current value of the corresponding
  event handler attribute is (possibly null).</p>

  <p class=note>Certain event handler DOM attributes have additional
  requirements, in particular the <code title=handler-MessagePort-onmessage><a href=#handler-messageport-onmessage>onmessage</a></code> attribute of
  <code><a href=#messageport>MessagePort</a></code> objects.</p>

  <hr><p><dfn id=event-handler-content-attributes>Event handler content attributes</dfn>, when specified, must
  contain valid ECMAScript code matching the ECMAScript <code title="">FunctionBody</code> production. <a href=#refsECMA262>[ECMA262]</a></p>

  <!-- SCRIPT EXEC -->
  <p>When an event handler content attribute is set, if the element is
  owned by a <code>Document</code> that is in a <a href=#browsing-context>browsing
  context</a>, the user agent must run the following steps to
  create a <a href=#concept-script title=concept-script>script</a> after setting
  the content attribute to its new value:</p>

  <ol><li><p>Set up a <a href=#script-execution-environment>script execution environment</a> for
   JavaScript.</li>

   <li>

    <p>Using this script execution environment, interpret the
    attribute's new value as the body of an anonymous function, with
    the function's arguments set as follows:</p>

    <dl class=switch><dt>If the attribute is the <code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code> attribute of the
     <code><a href=#window>Window</a></code> object</dt>

     <dd>Let the function have three arguments, named <code title="">event</code>, <code title="">source</code>, and <code title="">fileno</code>.</dd>

     <dt>Otherwise</dt>

     <dd>Let the function have a single argument called <code title="">event</code>.</dd>

    </dl><p>Link the new function's scope chain from the activation object
    of the handler, to the element's object, to the element's
    <a href=#form-owner>form owner</a>, if it has one, to the element's
    <code>Document</code> object, to the <code><a href=#window>Window</a></code> object of
    that <code>Document</code>. Set the function's <code>this</code>
    parameter to the <code>Element</code> object representing the
    element. Let this function be the only entry in the script's
    <a href=#list-of-code-entry-points>list of code entry-points</a>.</p>

    <p class=note>See ECMA262 Edition 3, sections 10.1.6 and 10.2.3,
    for more details on activation objects. <a href=#refsECMA262>[ECMA262]</a></p>

   </li>

   <li><p>If the previous steps failed to compile the script, then set
   the corresponding event handler attribute to null and abort these
   steps.</li>

   <li><p>Set up the <a href="#script's-global-object">script's global object</a>, the
   <a href="#script's-browsing-context">script's browsing context</a>, the <a href="#script's-character-encoding">script's
   character encoding</a>, and the <a href="#script's-base-url">script's base URL</a>
   from <a href=#the-script-settings-determined-from-the-node>the script settings determined from the node</a> on
   which the attribute is being set.</li>

   <li><p>Set the corresponding event handler attribute to the
   aforementioned function.</li>

  </ol><p class=note>When an event handler content attribute is set on an
  element owned by a <code>Document</code> that is not in a
  <a href=#browsing-context>browsing context</a>, the corresponding event handler
  attribute is not changed.</p>

  <p class=note>Removing an event handler content attribute does not
  reset the corresponding event handler attribute.</p>
  <!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A...%3Cbody%20onload%3D%22w(%27pass%27)%22%3E%0A%3Cscript%3Edocument.body.removeAttribute(%27onload%27)%3B%3C%2Fscript%3E -->

  <p class=XXX>How do we allow non-JS event handlers?</p>

  <hr><p>All event handler attributes on an element, whether set to null
  or to a <code><a href=#function>Function</a></code> object<!-- or to anything else, in the
  case of 'onerror' -->, must be registered as event listeners on the
  element, as if the <code title=dom-EventTarget-addEventListenerNS>addEventListenerNS()</code>
  method on the <code>Element</code> object's <code>EventTarget</code>
  interface had been invoked when the event handler attribute's
  element or object was created, with the event type (<var title=dom-event-type>type</var> argument) equal to the type
  described for the event handler attribute in the list above, the
  namespace (<var title=dom-event-namespaceURI>namespaceURI</var>
  argument) set to null, the listener set to be a target and bubbling
  phase listener (<var title=dom-event-useCapture>useCapture</var>
  argument set to false), the event group set to the default group
  (<var title=dom-event-evtGroup>evtGroup</var> argument set to
  null), and the event listener itself (<var title=dom-event-listener>listener</var> argument) set to do
  nothing while the event handler attribute's value is not a
  <code><a href=#function>Function</a></code> object, and set to invoke the <code title=dom-function-call><a href=#dom-function-call>call()</a></code> callback of the
  <code><a href=#function>Function</a></code> object associated with the event handler
  attribute otherwise.</p>

  <p class=note>The <var title=dom-event-listener>listener</var>
  argument is emphatically <em>not</em> the event handler attribute
  itself.</p>

  <p>When an event handler attribute's <code><a href=#function>Function</a></code> objectw
  is invoked, its <code title=dom-function-call><a href=#dom-function-call>call()</a></code>
  callback must be invoked with one argument, set to the
  <code>Event</code> object of the event in question.</p>

  <p>The handler's return value must then be processed as follows:</p>

  <dl class=switch><dt>If the event type is <code class=event-mouseover>mouseover</code></dt>

   <dd><p>If the return value is a boolean with the value true, then
   the event must be canceled.</dd>

   <dt>If the event object is a <code><a href=#beforeunloadevent>BeforeUnloadEvent</a></code> object</dt>

   <dd><p>If the return value is a string, and the event object's
   <code title=dom-BeforeUnloadEvent-returnValue><a href=#dom-beforeunloadevent-returnvalue>returnValue</a></code>
   attribute's value is the empty string, then set the <code title=dom-BeforeUnloadEvent-returnValue><a href=#dom-beforeunloadevent-returnvalue>returnValue</a></code>
   attribute's value to the return value.</dd>

   <dt>Otherwise</dt>

   <dd><p>If the return value is a boolean with the value false, then
   the event must be canceled.</dd>

  </dl><!-- IE actually uncancels the event if the function returns true --><hr><p>The <code><a href=#function>Function</a></code> interface represents a function in the
  scripting language being used. It is represented in IDL as
  follows:</p>

  <pre class=idl>[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=function>Function</dfn> {
  any <a href=#dom-function-call title=dom-function-call>call</a>([Variadic] in any arguments);
};</pre>

  <p>The <dfn id=dom-function-call title=dom-function-call><code>call(...)</code></dfn>
  method is the object's callback.</p>

  <p class=note>In JavaScript, any <code title="">Function</code>
  object implements this interface.</p>



  <h5 id=event-handler-attributes-on-elements-and-on-window-objects><span class=secno>5.5.6.2 </span>Event handler attributes on elements and on <code><a href=#window>Window</a></code> objects</h5>

  <p>The following are the event handler attributes that must be
  supported by all <a href=#html-elements>HTML elements</a>, as both content
  attributes and DOM attributes, and on <code><a href=#window>Window</a></code> objects,
  as DOM attributes:</p>

  <dl><dt><dfn id=handler-onabort title=handler-onabort><code>onabort</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-abort><a href=#event-abort>abort</a></code> event is targeted at or bubbles
   through the element or object.</dd>

<!--
   <dt><dfn title="handler-onbeforecopy"><code>onbeforecopy</code></dfn></dt> --><!-- widely used --><!--

   <dd><p>Must be invoked whenever a <code
   title="event-beforecopy">beforecopy</code> event is targeted at or bubbles
   through the element or object.</p></dd>
-->

   <dt><dfn id=handler-onblur title=handler-onblur><code>onblur</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-blur>blur</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onchange title=handler-onchange><code>onchange</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-change>change</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onclick title=handler-onclick><code>onclick</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-click>click</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-oncontextmenu title=handler-oncontextmenu><code>oncontextmenu</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-contextmenu>contextmenu</code> event is targeted at or bubbles
   through the element or object.</dd>

<!--
   <dt><dfn title="handler-oncopy"><code>oncopy</code></dfn></dt> --><!-- widely used --><!--

   <dd><p>Must be invoked whenever a <code
   title="event-copy">copy</code> event is targeted at or bubbles
   through the element or object.</p></dd>
-->

   <dt><dfn id=handler-ondblclick title=handler-ondblclick><code>ondblclick</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-dblclick>dblclick</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-ondrag title=handler-ondrag><code>ondrag</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-drag><a href=#event-drag>drag</a></code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-ondragend title=handler-ondragend><code>ondragend</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-dragend><a href=#event-dragend>dragend</a></code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-ondragenter title=handler-ondragenter><code>ondragenter</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-dragenter><a href=#event-dragenter>dragenter</a></code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-ondragleave title=handler-ondragleave><code>ondragleave</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-dragleave><a href=#event-dragleave>dragleave</a></code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-ondragover title=handler-ondragover><code>ondragover</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-dragover><a href=#event-dragover>dragover</a></code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-ondragstart title=handler-ondragstart><code>ondragstart</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-ondrop title=handler-ondrop><code>ondrop</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-drop><a href=#event-drop>drop</a></code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onfocus title=handler-onfocus><code>onfocus</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-focus>focus</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onkeydown title=handler-onkeydown><code>onkeydown</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-keydown>keydown</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onkeypress title=handler-onkeypress><code>onkeypress</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-keypress>keypress</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onkeyup title=handler-onkeyup><code>onkeyup</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-keyup>keyup</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onmousedown title=handler-onmousedown><code>onmousedown</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-mousedown>mousedown</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onmousemove title=handler-onmousemove><code>onmousemove</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-mousemove>mousemove</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onmouseout title=handler-onmouseout><code>onmouseout</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-mouseout>mouseout</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onmouseover title=handler-onmouseover><code>onmouseover</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-mouseover>mouseover</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onmouseup title=handler-onmouseup><code>onmouseup</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-mouseup>mouseup</code> event is targeted at or bubbles
   through the element or object.</dd>

   <dt><dfn id=handler-onmousewheel title=handler-onmousewheel><code>onmousewheel</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-mousewheel>mousewheel</code> event is targeted at or bubbles
   through the element or object.</dd>

<!--
   <dt><dfn title="handler-onpaste"><code>onpaste</code></dfn></dt> --><!-- widely used --><!--

   <dd><p>Must be invoked whenever a <code
   title="event-paste">paste</code> event is targeted at or bubbles
   through the element or object.</p></dd>
-->

   <dt><dfn id=handler-onscroll title=handler-onscroll><code>onscroll</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-scroll>scroll</code> event is targeted at or bubbles
   through the element or object.</dd> <!-- XXX should define when it fires -->

   <dt><dfn id=handler-onselect title=handler-onselect><code>onselect</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-select><a href=#event-select>select</a></code> event is targeted at or bubbles
   through the element or object.</dd> <!-- XXX should define when it fires -->

<!--XXX
   <dt><dfn title="handler-onselectstart"><code>onselectstart</code></dfn></dt> --><!-- widely used --><!--

   <dd><p>Must be invoked whenever a <code
   title="event-selectstart">selectstart</code> event is targeted at or bubbles
   through the element or object.</p></dd>
--> <!-- XXX should define when it fires -->

   <dt><dfn id=handler-onsubmit title=handler-onsubmit><code>onsubmit</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-submit>submit</code> event is targeted at or bubbles
   through the element or object.</dd>

  </dl><hr><p>The following are the event handler attributes that must be
  supported by all <a href=#html-elements>HTML elements</a> other than
  <code><a href=#the-body-element>body</a></code>, as both content attributes and DOM
  attributes:</p>

  <dl><dt><dfn id=handler-onerror title=handler-onerror><code>onerror</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-error><a href=#event-error>error</a></code> event is targeted at or bubbles
   through the element.</dd>

   <dt><dfn id=handler-onload title=handler-onload><code>onload</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-load><a href=#event-load>load</a></code> event is targeted at or bubbles
   through the element.</dd>

   <dt><dfn id=handler-onmessage title=handler-onmessage><code>onmessage</code></dfn></dt> <!-- new for <eventsource> -->

   <dd><p>Must be invoked whenever a <code title=event-message><a href=#event-message>message</a></code> event is targeted at or bubbles
   through the element.</dd>

  </dl><hr><p>The following are the event handler attributes that must be
  supported by <code><a href=#window>Window</a></code> objects, as DOM attributes on the
  <code><a href=#window>Window</a></code> object, and with corresponding content
  attributes and DOM attributes exposed on the <code><a href=#the-body-element>body</a></code>
  element:</p>

  <dl><dt><dfn id=handler-window-onbeforeunload title=handler-window-onbeforeunload><code>onbeforeunload</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-beforeunload>beforeunload</code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-onerror title=handler-window-onerror><code>onerror</code></dfn></dt>

   <dd>

    <p>Must be invoked whenever an <code title=event-error><a href=#event-error>error</a></code> event is targeted at or bubbles
    through the object.</p>

    <p>Unlike other event handler attributes, the <code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code> event handler attribute can
    have any value. The initial value of <code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code> must be
    <code>undefined</code>.</p>

    <p class=note>The <code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code>
    handler is also used for <a href=#runtime-script-errors>reporting script errors</a>.</p>

   </dd>

   <dt><dfn id=handler-window-onhashchange title=handler-window-onhashchange><code>onhashchange</code></dfn></dt> <!-- new -->

   <dd><p>Must be invoked whenever a <code title=event-hashchange>hashchange</code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-onload title=handler-window-onload><code>onload</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-load><a href=#event-load>load</a></code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-onmessage title=handler-window-onmessage><code>onmessage</code></dfn></dt> <!-- new for postMessage -->

   <dd><p>Must be invoked whenever a <code title=event-message><a href=#event-message>message</a></code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-onoffline title=handler-window-onoffline><code>onoffline</code></dfn></dt> <!-- new -->

   <dd><p>Must be invoked whenever a <code title=event-offline><a href=#event-offline>offline</a></code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-ononline title=handler-window-ononline><code>ononline</code></dfn></dt> <!-- new -->

   <dd><p>Must be invoked whenever a <code title=event-online><a href=#event-online>online</a></code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-onpopstate title=handler-window-onpopstate><code>onpopstate</code></dfn></dt> <!-- new -->

   <dd><p>Must be invoked whenever a <code title=event-popstate><a href=#event-popstate>popstate</a></code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-onresize title=handler-window-onresize><code>onresize</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever a <code title=event-resize>resize</code> event is targeted at or bubbles
   through the object.</dd> <!-- XXX should define when it fires -->

   <dt><dfn id=handler-window-onstorage title=handler-window-onstorage><code>onstorage</code></dfn></dt> <!-- new -->

   <dd><p>Must be invoked whenever a <code title=event-storage><a href=#event-storage>storage</a></code> event is targeted at or bubbles
   through the object.</dd>

   <dt><dfn id=handler-window-onunload title=handler-window-onunload><code>onunload</code></dfn></dt> <!-- widely used -->

   <dd><p>Must be invoked whenever an <code title=event-unload>unload</code> event is targeted at or bubbles
   through the object.</dd>

  </dl><h5 id=event-firing><span class=secno>5.5.6.3 </span>Event firing</h5>

  <p class=XXX>maybe this should be moved higher up
  (terminology? conformance? DOM?) Also, the whole terminology thing
  should be changed so that we don't define any specific events here,
  we only define 'simple event', 'progress event', 'mouse event', 'key
  event', and the like, and have the actual dispatch use those generic
  terms when firing events.</p>

  <p>Certain operations and methods are defined as firing events on
  elements. For example, the <code title=dom-click><a href=#dom-click>click()</a></code>
  method on the <code><a href=#htmlelement>HTMLElement</a></code> interface is defined as
  firing a <code title=event-click>click</code> event on the
  element.  <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p><dfn id=fire-a-click-event title="fire a click event">Firing a <code title=event-click>click</code> event</dfn> means that a <a href=http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-click><code>click</code></a>
  event with no
  namespace, which bubbles and is cancelable, and which uses the
  <code>MouseEvent</code> interface, must be dispatched at the given
  target. The event object must have its <code title="">screenX</code>, <code title="">screenY</code>, <code title="">clientX</code>, <code title="">clientY</code>, and <code title="">button</code> attributes set to 0, its <code title="">ctrlKey</code>, <code title="">shiftKey</code>, <code title="">altKey</code>, and <code title="">metaKey</code> attributes
  set according to the current state of the key input device, if any
  (false for any keys that are not available), its <code title="">detail</code> attribute set to 1, and its <code title="">relatedTarget</code> attribute set to null. The <code title="">getModifierState()</code> method on the object must return
  values appropriately describing the state of the key input device at
  the time the event is created.</p>

  <p><dfn id=fire-a-contextmenu-event title="fire a contextmenu event">Firing a <code title=event-contextmenu>contextmenu</code> event</dfn> means that
  a <code title=event-contextmenu>contextmenu</code> event with no
  namespace, which bubbles and is cancelable, and which uses the
  <code>Event</code> interface, must be dispatched at the given
  target.</p>

  <p><dfn id=fire-a-simple-event title="fire a simple event">Firing a simple event called
  <var title="">e</var></dfn> means that an event with the name <var title="">e</var>, with no namespace, which does not bubble but is
  cancelable (unless otherwise stated), and which uses the
  <code>Event</code> interface, must be dispatched at the given
  target.</p>

  <p><dfn id=fire-a-show-event title="fire a show event">Firing a <code title=event-show>show</code> event</dfn> means <a href=#fire-a-simple-event title="fire a
  simple event">firing a simple event called <code title=event-show>show</code></a>. <span class=XXX>Actually this should fire an event that has
  modifier information (shift/ctrl etc), as well as having a pointer
  to the node on which the menu was fired, and with which the menu was
  associated (which could be an ancestor of the former).</span></p>

  <p><dfn id=fire-a-load-event title="fire a load event">Firing a <code title=event-load>load</code> event</dfn> means <a href=#fire-a-simple-event title="fire a
  simple event">firing a simple event called <code title=event-load>load</code></a>. <!--<dfn title="fire a
  DOMContentLoaded event">Firing a <code
  title="event-DOMContentLoaded">DOMContentLoaded</code> event</dfn>
  means <span title="fire a simple event">firing a simple event called
  <code
  title="event-DOMContentLoaded">DOMContentLoaded</code></span>.-->
  <dfn id=fire-an-error-event title="fire an error event">Firing an <code title=event-error>error</code> event</dfn> means <a href=#fire-a-simple-event title="fire
  a simple event">firing a simple event called <code title=event-error>error</code></a>.</p>

  <!-- XXX need to define the dispatching of DOMActivate -->

  <p class=XXX><dfn id=fire-a-progress-event title="fire a progress event">Firing a
  progress event called <var title="">e</var></dfn> means something
  that hasn't yet been defined, in the <a href=#refsPROGRESS>[PROGRESS]</a> spec.</p>

  <p>The default action of these event is to do nothing unless
  otherwise stated.</p>

  <p class=XXX>If you dispatch a custom "click" event at an
  element that would normally have default actions, should they get
  triggered? If so, we need to go through the entire spec and make
  sure that any default actions are defined in terms of <em>any</em>
  event of the right type on that element, not those that are
  dispatched in expected ways.</p>


  <h5 id=events-and-the-window-object><span class=secno>5.5.6.4 </span>Events and the <code><a href=#window>Window</a></code> object</h5>

  <p>When an event is dispatched at a DOM node in a
  <code>Document</code> in a <a href=#browsing-context>browsing context</a>, if the
  event is not a <code title=event-load><a href=#event-load>load</a></code> event, the user
  agent must also dispatch the event to the <code><a href=#window>Window</a></code>, as
  follows:</p>

  <ol><li>In the capture phase, the event must be dispatched to the
   <code><a href=#window>Window</a></code> object before being dispatched to any of the
   nodes.</li>

   <li>In the bubble phase, the event must be dispatched to the
   <code><a href=#window>Window</a></code> object at the end of the phase, unless bubbling
   has been prevented.</li>

  </ol><h5 id=runtime-script-errors><span class=secno>5.5.6.5 </span>Runtime script errors</h5>

  <p><em>This section only applies to user agents that support
  scripting in general and ECMAScript in particular.</em></p>

  <p>Whenever a runtime script error occurs in one of the scripts
  associated with a <code>Document</code>, the user agent must
  <a href=#report-the-error>report the error</a> using the <code title=handler-window-onerror><a href=#handler-window-onerror>onerror</a></code> <a href=#event-handler-attributes-0 title="event
  handler attributes">event handler attribute</a> of the
  <a href="#script's-global-object">script's global object</a>. If the error is still <i title="">not handled</i> after this, then the error should be
  reported to the user.</p>

  <hr><p>When the user agent is required to <dfn id=report-the-error title="report the
  error">report an error</dfn> <var title="">error</var> using the
  event handler attribute <var title="">onerror</var>, it must run
  these steps, after which the error is either <i title="">handled</i>
  or <i title="">not handled</i>:</p>

  <dl class=switch><dt>If the value of <var title="">onerror</var> is a
   <code><a href=#function>Function</a></code></dt>

   <dd>

    <p>The function must be invoked with three arguments. The three
    arguments passed to the function are all <code>DOMString</code>s;
    the first must give the message that the UA is considering
    reporting, the second must give the <a href=#absolute-url>absolute URL</a> of
    the resource in which the error occurred, and the third must give
    the line number in that resource on which the error occurred.</p>

    <p>If the function returns false, then the error is <i title="">handled</i>. Otherwise, the error is <i title="">not
    handled</i>.</p>

    <p>Any exceptions thrown or errors caused by this function must be
    reported to the user immediately after the error that the function
    was called for, without using the <a href=#report-the-error title="report the
    error">report an error</a> algorithm again.</p>

   </dd>

   <dt>If the value is <code>null</code></dt>

   <dd>

    <p>The error is <i title="">handled</i>.</p>

   </dd>

   <dt>If the value is anything else</dt>

   <dd>

    <p>The error is <i title="">not handled</i>.</p>

   </dd>

  </dl><h3 id=user-prompts><span class=secno>5.6 </span>User prompts</h3>

  <h4 id=simple-dialogs><span class=secno>5.6.1 </span>Simple dialogs</h4>

  <p>The <dfn id=dom-alert title=dom-alert><code>alert(<var title="">message</var>)</code></dfn> method, when invoked, must show
  the given <var title="">message</var> to the user. The user agent
  may make the method wait for the user to acknowledge the message
  before returning; if so, the user agent must <a href=#pause>pause</a>
  while the method is waiting.</p>

  <p>The <dfn id=dom-confirm title=dom-confirm><code>confirm(<var title="">message</var>)</code></dfn> method, when invoked, must show
  the given <var title="">message</var> to the user, and ask the user
  to respond with a positive or negative response. The user agent must
  then <a href=#pause>pause</a> as the method waits for the user's
  response. If the user responds positively, the method must return
  true, and if the user responds negatively, the method must return
  false.</p>

  <p>The <dfn id=dom-prompt title=dom-prompt><code>prompt(<var title="">message</var>, <var title="">default</var>)</code></dfn>
  method, when invoked, must show the given <var title="">message</var> to the user, and ask the user to either
  respond with a string value or abort. The user agent must then
  <a href=#pause>pause</a> as the method waits for the user's
  response. The second argument is optional. If the second argument
  (<var title="">default</var>) is present, then the response must be
  defaulted to the value given by <var title="">default</var>. If the
  user aborts, then the method must return null; otherwise, the method
  must return the string that the user responded with.</p>


  <h4 id=printing><span class=secno>5.6.2 </span>Printing</h4>

  <p>The <dfn id=dom-print title=dom-print><code>print()</code></dfn> method,
  when invoked, must run the <a href=#printing-steps>printing steps</a>.</p>

  <p>User agents should also run the <a href=#printing-steps>printing steps</a>
  whenever the user asks for the opportunity to <a href=#obtain-a-physical-form>obtain a
  physical form</a> (e.g. printed copy), or the representation of a
  physical form (e.g. PDF copy), of a document.</p>

  <p>The <dfn id=printing-steps>printing steps</dfn> are as follows:</p>

  <ol><li>

    <p>The user agent may display a message to the user and/or may
    abort these steps.</p>

    <p class=example>For instance, a kiosk browser could silently
    ignore any invocations of the <code title=dom-print><a href=#dom-print>print()</a></code> method.</p>

    <p class=example>For instance, a browser on a mobile device
    could detect that there are no printers in the vicinity and
    display a message saying so before continuing to offer a "save to
    PDF" option.</p>

   </li>

   <li>

    <p>The user agent must <a href=#fire-a-simple-event>fire a simple event</a> called
    <code title=event-beforeprint>beforeprint</code> at the
    <code><a href=#window>Window</a></code> object of the <code>Document</code> that is
    being printed, as well as any <a href=#nested-browsing-context title="nested browsing
    context">nested browsing contexts</a> in it.</p>

    <p class=example>The <code title=event-beforeprint>beforeprint</code> event can be used
    to annotate the printed copy, for instance adding the time at
    which the document was printed.</p>
   
   </li>

   <li>

    <p>The user agent should offer the user the opportunity to
    <a href=#obtain-a-physical-form>obtain a physical form</a> (or the representation of a
    physical form) of the document. The user agent may wait for the
    user to either accept or decline before returning; if so, the user
    agent must <a href=#pause>pause</a> while the method is waiting. Even if
    the user agent doesn't wait at this point, the user agent must use
    the state of the relevant documents as they are at this point in
    the algorithm if and when it eventually creates the alternate
    form.</p>

   </li>

   <li>

    <p>The user agent must <a href=#fire-a-simple-event>fire a simple event</a> called
    <code title=event-afterprint>afterprint</code> at the
    <code><a href=#window>Window</a></code> object of the <code>Document</code> that is
    being printed, as well as any <a href=#nested-browsing-context title="nested browsing
    context">nested browsing contexts</a> in it.</p>

    <p class=example>The <code title=event-afterprint>afterprint</code> event can be used
    to revert annotations added in the earlier event, as well as
    showing post-printing UI. For instance, if a page is walking the
    user through the steps of applying for a home loan, the script
    could automatically advance to the next step after having printed
    a form or other.</p>

   </li>

  </ol><h4 id=dialogs-implemented-using-separate-documents><span class=secno>5.6.3 </span>Dialogs implemented using separate documents</h4>

  <p>The <dfn id=dom-showmodaldialog title=dom-showModalDialog><code>showModalDialog(<var title="">url</var>, <var title="">argument</var><!--, <var
  title="">features</var>-->)</code></dfn> method, when invoked, must
  cause the user agent to run the following steps:</p>

  <ol><li>

    <p><a href=#resolve-a-url title="resolve a url">Resolve</a> <var title="">url</var> relative to the <a href=#first-script>first script</a>'s
    <a href="#script's-base-url" title="script's base URL">base URL</a>.</p>

    <p>If this fails, then throw a <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception
    and abort these steps.</p>

   <li>

    <p>If the user agent is configured such that this invocation of
    <code title=dom-showModalDialog><a href=#dom-showmodaldialog>showModalDialog()</a></code> is
    somehow disabled, then the method returns the empty string; abort
    these steps.</p>

    <p class=note>User agents are expected to disable this method in
    certain cases to avoid user annoyance (e.g. as part of their popup
    blocker feature). For instance, a user agent could require that a
    site be white-listed before enabling this method, or the user
    agent could be configured to only allow one modal dialog at a
    time.</p>

   </li>

   <li>

    <p>Let <var title="">the list of background browsing
    contexts</var> be a list of all the browsing contexts that:</p>

    <ul><li>are part of the same <a href=#unit-of-related-browsing-contexts>unit of related browsing
     contexts</a> as the browsing context of the
     <code><a href=#window>Window</a></code> object on which the <code title=dom-showModalDialog><a href=#dom-showmodaldialog>showModalDialog()</a></code> method was
     called, and that</li>

     <li>have an <a href=#active-document>active document</a> whose
     <a href=#origin-0>origin</a> is the <a href=#same-origin title="same origin">same</a>
     as the <a href=#origin-0>origin</a> of the <a href=#concept-script title=concept-script>script</a> that called the <code title=dom-showModalDialog><a href=#dom-showmodaldialog>showModalDialog()</a></code> method at
     the time the method was called,</li> <!-- Note that changing
     document.domain to talk to another domain doesn't make you able
     to block that domain -->

    </ul><p>...as well as any browsing contexts that are nested inside any
    of the browsing contexts matching those conditions.</p>

   </li>

   <li>

    <p>Disable the user interface for all the browsing contexts in
    <var title="">the list of background browsing contexts</var>. This
    should prevent the user from navigating those browsing contexts,
    causing events to to be sent to those browsing context, or editing
    any content in those browsing contexts. However, it does not
    prevent those browsing contexts from receiving events from sources
    other than the user, from running scripts, from running
    animations, and so forth.</p>

   </li>

   <li>

    <p>Create a new <a href=#auxiliary-browsing-context>auxiliary browsing context</a>, with the
    <a href=#opener-browsing-context>opener browsing context</a> being the browsing context of
    the <code><a href=#window>Window</a></code> object on which the <code title=dom-showModalDialog><a href=#dom-showmodaldialog>showModalDialog()</a></code> method was
    called. The new auxiliary browsing context has no name.</p>

    <p class=note>This <a href=#browsing-context>browsing context</a>'s
    <code>Document</code>s' <code><a href=#window>Window</a></code> objects all implement
    the <code><a href=#windowmodal>WindowModal</a></code> interface.</p>

   </li>

   <li>

    <p>Let the <a href=#dialog-arguments>dialog arguments</a> of the new browsing
    context be set to the value of <var title="">argument</var>, or
    the 'undefined' value if the argument was omitted.</p>

   </li>

   <li>

    <p>Let the <a href="#dialog-arguments'-origin">dialog arguments' origin</a> be the
    <a href=#origin-0>origin</a> of the <a href=#concept-script title=concept-script>script</a> that called the <code title=dom-showModalDialog><a href=#dom-showmodaldialog>showModalDialog()</a></code> method.</p>

   </li>

   <li>

    <p><a href=#navigate>Navigate</a> the new <a href=#browsing-context>browsing context</a> to
    the <a href=#absolute-url>absolute URL</a> that resulted from <a href=#resolve-a-url title="resolve a url">resolving</a> <var title="">url</var>
    earlier, with <a href=#replacement-enabled>replacement enabled</a>, and with the <a href="#script's-browsing-context" title="script's browsing context">browsing context</a> of the
    <a href=#concept-script title=concept-script>script</a> that invoked the method
    as the <a href=#source-browsing-context>source browsing context</a>.</p>

   </li>

   <li>

    <p>Wait for the browsing context to be closed. (The user agent
    must allow the user to indicate that the browsing context is to be
    closed.)</p>

   </li>

   <li>

    <p>Reenable the user interface for all the browsing contexts in
    <var title="">the list of background browsing contexts</var>.</p>

   </li>

   <li>

    <p>Return the <a href=#auxiliary-browsing-context>auxiliary browsing context</a>'s
    <a href=#return-value>return value</a>.</p>

   </li>

  </ol><p>The <code><a href=#window>Window</a></code> objects of <code>Document</code>s hosted
  by <a href=#browsing-context title="browsing context">browsing contexts</a> created
  by the above algorithm must all implement the
  <code><a href=#windowmodal>WindowModal</a></code> interface:</p>

  <p class=XXX>Really I want the Window object to just gain these
  attributes, as if they were on the Window prototype. That's the XXX
  below.</p>

  <pre class=idl>[NoInterfaceObject, ImplementedOn=<a href=#window>Window</a>, XXX] interface <dfn id=windowmodal>WindowModal</dfn> {
  readonly attribute any <a href=#dom-windowmodal-dialogarguments title=dom-WindowModal-dialogArguments>dialogArguments</a>;
           attribute DOMString <a href=#dom-windowmodal-returnvalue title=dom-WindowModal-returnValue>returnValue</a>;
};</pre>

  <p>Such browsing contexts have associated <dfn id=dialog-arguments>dialog
  arguments</dfn>, which are stored along with the <dfn id="dialog-arguments'-origin">dialog
  arguments' origin</dfn>. These values are set by the <code title=dom-showModalDialog><a href=#dom-showmodaldialog>showModalDialog()</a></code> method in the
  algorithm above, when the browsing context is created, based on the
  arguments provided to the method.</p>

  <p>The <dfn id=dom-windowmodal-dialogarguments title=dom-WindowModal-dialogArguments><code>dialogArguments</code></dfn>
  DOM attribute, on getting, must check whether its browsing context's
  <a href=#active-document>active document</a>'s <a href=#origin-0>origin</a> is the <a href=#same-origin title="same origin">same</a> as the <a href="#dialog-arguments'-origin">dialog arguments'
  origin</a>. If it is, then the browsing context's <a href=#dialog-arguments>dialog
  arguments</a> must be returned unchanged. Otherwise, if the
  <a href=#dialog-arguments>dialog arguments</a> are an object, then the empty string
  must be returned, and if the <a href=#dialog-arguments>dialog arguments</a> are not
  an object, then the stringification of the <a href=#dialog-arguments>dialog
  arguments</a> must be returned.

  <p>These browsing contexts also have an associated <dfn id=return-value>return
  value</dfn>. The <a href=#return-value>return value</a> of a browsing context
  must be initialized to the empty string when the browsing context is
  created.</p>

  <p>The <dfn id=dom-windowmodal-returnvalue title=dom-WindowModal-returnValue><code>returnValue</code></dfn>
  DOM attribute, on getting, must return the <a href=#return-value>return value</a>
  of its browsing context, and on setting, must set the <a href=#return-value>return
  value</a> to the given new value.</p>

  <p class=note>The <code title=dom-window-close><a href=#dom-window-close>window.close()</a></code> method can be used to
  close the browsing context.</p>


<!-- XXX-NOTIFY
  <h4>Notifications</h4>

<!- - v2 feature requests:

   - ability to snooze a notification so it comes again later
      - shouldn't be on all messages, only those for which it makes
        sense
      - possibly just provide a new argument that takes an array of
        (label, callback) tuples so that sites can implement this
        themselves
      - full HTML notifications

  - ->

  <p>Notifications are short, transient messages that bring the user's
  attention to new information, or remind the user of scheduled
  events.</p>

  <p>Since notifications can be annoying if abused, this specification
  defines a mechanism that scopes notifications to a site's existing
  rendering area unless the user explicitly indicates that the site
  can be trusted.</p>

  <p>To this end, each <span>origin</span> can be flagged as being a
  <dfn>trusted notification source</dfn>. By default origins should
  not be flagged as such, but user agents may allow users to whitelist
  origins or groups of origins as being <span title="trusted
  notification source">trusted notification sources</span>. Only
  origins flagged as trusted in this way are allowed to show
  notification UI outside of their tab.</p>

  <p class="example">For example, a user agent could allow a user to
  mark all subdomains and ports of example.org as trusted
  notification sources. Then, mail.example.org and
  calendar.example.org would both be able to show notifications,
  without the user having to flag them individually.</p>

  <p>The <dfn title="dom-showNotification"><code>showNotification(<var
  title="">title</var>, <var title="">subtitle</var>, <var
  title="">description</var>, <var
  title="">onclick</var>)</code></dfn> method, when invoked, must
  cause the user agent to show a notification.</p>

  <p id="sandboxNotifications">If the method was invoked from a <span
  title="concept-script">script</span> whose <span title="script's
  browsing context">browsing context</span> has the <span>sandboxed
  annoyances browsing context flag</span> set, then the notification
  must be shown within that <span>browsing context</span>. The
  notification is said to be a <dfn>sandboxed notification</dfn>.</p>

  <p>Otherwise, if the <span>origin</span> of the <span
  title="script's browsing context">browsing context</span> of the
  <span title="concept-script">script</span> that invoked the method
  is <em>not</em> flagged as being a <span>trusted notification
  source</span>, then the notification should be rendered within the
  <span>top-level browsing context</span> of the <span>script's
  browsing context</span>. The notification is said to be a
  <dfn>normal notification</dfn>. User agents should provide a way to
  set the origin's <span>trusted notification source</span> flag from
  the notification, so that the user can benefit from notifications
  even when the user agent is not the active application.</p>

  <p>Otherwise, the <span>origin</span> is flagged as a <span>trusted
  notification source</span>, and the notification should be shown
  using the platform conventions for system-wide notifications. The
  notification is said to be a <dfn>trusted notification</dfn>. User
  agents may provide a way to unset the origin's <span>trusted
  notification source</span> flag from within the notification, so as
  to allow users to easily disable notifications from sites that abuse
  the privilege.</p>

  <div class="example">

   <p>For example, if a site contains a gadget of a mail application
   in a sandboxed <code>iframe</code> and that frame triggers a
   notification upon the receipt of a new e-mail message, that
   notification would be displayed on top of the gadget only.</p>

   <p>However, if the user then goes to the main site of that mail
   application, the notification would be displayed over the entire
   rendering area of the tab for the site.</p>

   <p>The notification, in this case, would have a button on it to let
   the user indicate that he trusts the site. If the user clicked this
   button, the next notification would use the system-wide
   notification system, appearing even if the tab for the mail
   application was buried deep inside a minimised window.</p>

  </div>

  <div class="example">

   <p>The style of notifications varies from platform to platform. On
   some, it is typically displayed as a "toast" window that slides in
   from the bottom right corner. In others, notifications are shown as
   semi-transparent white-on-grey overlays centered over the
   screen. Other schemes could include simulated ticker tapes, and
   speech-synthesis playback.</p>

  </div>

  <p>When a <span>normal notification</span> (but not a
  <span>sandboxed notification</span>) is shown, the user agent may
  bring the user's attention to the <span>top-level browsing
  context</span> of the <span title="script's browsing
  context">browsing context</span> of the <span
  title="concept-script">script</span> that invoked the method, if
  that would be useful; but user agents should not use system-wide
  notification mechanisms to do so.</p>

  <p>When a <span>trusted notification</span> is shown, the user agent
  should bring the user's attention to the notification and the <span
  title="script's browsing context">browsing context</span> of the
  <span title="concept-script">script</span> that invoked the method,
  as per the platform conventions for attracting the user's attention
  to applications.</p>

  <div class="example">

   <p>In the case of <span title="normal notification">normal
   notifications</span>, typically the only attention-grabbing device
   that would be employed would be something like flashing the tab's
   caption, or making it bold, or some such.</p>

   <p>In addition, in the case of a <span>trusted notification</span>,
   the entire window could flash, or the browser's application icon
   could bounce or flash briefly, or a short sound effect could be
   played.</p>

  </div>

  <p>Notifications should include the following content:</p>

  <ul>

   <li>The <var title="">title</var>, <var title="">subtitle</var>,
   and <var title="">description</var> strings passed to the
   method. They may be truncated or abbreviated if necessary.</li>

   <li>The <span title="meta-application-name">application
   name</span>, if available, or else the <span
   title="dom-document-title">document title</span>, of the
   <span>active document</span> of the <span title="script's browsing
   context">browsing context</span> of the <span
   title="concept-script">script</span> that invoked the method.</li>

   <li>An icon chosen from the <span title="external resource
   link">external resource links</span> of type <code
   title="rel-icon">icon</code>, if any are available.</li>

  </ul>

  <p>If a new notification from one <span>browsing context</span> has
  <var title="">title</var>, <var title="">subtitle</var>, and <var
  title="">description</var> strings that are identical to the <var
  title="">title</var>, <var title="">subtitle</var>, and <var
  title="">description</var> strings of an already-active notification
  from the same <span>browsing context</span> or another <span
  title="browsing context">browsing context</span> with the same
  <span>origin</span>, the user agent should not display the new
  notification, but should instead add an indicator to the
  already-active notification that another identical notification
  would otherwise have been shown.</p>

  <div class="example">

   <p>For instance, if a user has his mail application open in three
   windows, and thus the same "New Mail" notification is fired three
   times each time a mail is received, instead of displaying three
   identical notifications each time, the user agent could just show
   one, with the title "New Mail x3".</p>

  </div>

  <p>Notifications should have a lifetime based on the platform
  conventions for notifications. However, the lifetime of a
  notification should not begin until the user has had the opportunity
  to see it, so if a notification is spawned for a <span>browsing
  context</span> that is hidden, it should be shown for its complete
  lifetime once the user brings that <span>browsing context</span>
  into view.</p>

  <p>User agents should support multiple notifications at once.</p>

  <p>User agents should support user interaction with notifications,
  if and as appropriate given the platform conventions. If a user
  activates a notification, and the <var title="">onclick</var>
  callback argument was present and is not null, then the <span
  title="script's browsing context">browsing context</span> of the
  <span title="concept-script">script</span> of the function given by
  <var title="">onclick</var> should be brought to the user's
  attention, and the <var title="">onclick</var> callback should then
  be invoked.</p>

-->


  <h3 id=system-state-and-capabilities><span class=secno>5.7 </span>System state and capabilities</h3>

  <p>The <dfn id=dom-navigator title=dom-navigator><code>navigator</code></dfn>
  attribute of the <code><a href=#window>Window</a></code> interface must return an
  instance of the <code><a href=#navigator>Navigator</a></code> interface, which represents
  the identity and state of the user agent (the client), and allows
  Web pages to register themselves as potential protocol and content
  handlers:</p>

  <pre class=idl>interface <dfn id=navigator>Navigator</dfn> {
  // objects implementing this interface also implement the interfaces given below
};

[NoInterfaceObject, ImplementedOn=<a href=#navigator>Navigator</a>] interface <dfn id=navigatorid>NavigatorID</dfn> {<!--
  readonly attribute DOMString <span title="dom-navigator-appCodeName">appCodeName</span>;-->
  readonly attribute DOMString <a href=#dom-navigator-appname title=dom-navigator-appName>appName</a>;
  readonly attribute DOMString <a href=#dom-navigator-appversion title=dom-navigator-appVersion>appVersion</a>;
  readonly attribute DOMString <a href=#dom-navigator-platform title=dom-navigator-platform>platform</a>;
  readonly attribute DOMString <a href=#dom-navigator-useragent title=dom-navigator-userAgent>userAgent</a>;
};

[NoInterfaceObject, ImplementedOn=<a href=#navigator>Navigator</a>] interface <dfn id=navigatoronline>NavigatorOnLine</dfn> {
  readonly attribute boolean <a href=#dom-navigator-online title=dom-navigator-onLine>onLine</a>;
};

[NoInterfaceObject, ImplementedOn=<a href=#navigator>Navigator</a>] interface <dfn id=navigatorabilities>NavigatorAbilities</dfn> {
  // content handler registration
  void <a href=#dom-navigator-registerprotocolhandler title=dom-navigator-registerProtocolHandler>registerProtocolHandler</a>(in DOMString protocol, in DOMString url, in DOMString title);
  void <a href=#dom-navigator-registercontenthandler title=dom-navigator-registerContentHandler>registerContentHandler</a>(in DOMString mimeType, in DOMString url, in DOMString title);
<!--  XXX cookieEnabled geolocator javaEnabled mozIsLocallyAvailable preference
  readonly attribute <span>MimeTypeArray</span> <span title="dom-navigator-mimeTypes">mimeTypes</span>;
  readonly attribute <span>PluginArray</span> <span title="dom-navigator-plugins">plugins</span>;
  (the latter is used in a <video> element demo now)
-->};</pre>

  <p>Objects implementing the <code><a href=#navigator>Navigator</a></code> interface must
  also implement the <a href=#navigatorid>NavigatorID</a>,
  <a href=#navigatoronline>NavigatorOnLine</a>, and
  <a href=#navigatorabilities>NavigatorAbilities</a> interfaces. (These
  interfaces are defined separately so that other specifications can
  re-use parts of the <code><a href=#navigator>Navigator</a></code> interface.)</p>

   <!-- XXX also, see window.external.AddSearchProvider() and similar DOM APIs from IE -->

   <!-- XXX also, could expose languages:
   <dt><dfn title="dom-navigator-browserLanguage"><code>browserLanguage</code></dfn></dt> <!- - Opera and IE only - ->
   <dd><p>Must return either null or a language code representing the language the browser uses in its interface.</p></dd>
   <dt><dfn title="dom-navigator-userLanguage"><code>userLanguage</code></dfn></dt> <!- - Opera and IE only - ->
   <dt><dfn title="dom-navigator-language"><code>language</code></dfn></dt> <!- - Opera, Safari, and Mozilla only - ->
   <dd><p>Must return either null or a language code representing the user's preferred language.</p></dd>
   -->


  <h4 id=client-identification><span class=secno>5.7.1 </span>Client identification</h4>

  <p>In certain cases, despite the best efforts of the entire
  industry, Web browsers have bugs and limitations that Web authors
  are forced to work around.</p>

  <p>This section defines a collection of attributes that can be used
  to determine, from script, the kind of user agent in use, in order
  to work around these issues.</p>

  <p>Client detection should always be limited to detecting known
  current versions; future versions and unknown versions should always
  be assumed to be fully compliant.</p>

  <dl><!-- redundant
   <dt><dfn title="dom-navigator-appCodeName"><code>appCodeName</code></dfn></dt>
   <dd><p>Must return the string "<code title="">Mozilla</code>".</p></dd>
   --><!-- appMinorVersion: IE only. In IE8b1, returns " Beta" (with the space) --><dt><dfn id=dom-navigator-appname title=dom-navigator-appName><code>appName</code></dfn></dt>
   <dd><p>Must return either the string "<code title="">Netscape</code>" or the full name of the browser, e.g. "<code title="">Mellblom Browsernator</code>".</dd>

   <dt><dfn id=dom-navigator-appversion title=dom-navigator-appVersion><code>appVersion</code></dfn></dt>
   <dd><p>Must return either the string "<code title="">4.0</code>" or a string representing the version of the browser in detail, e.g. "<code title="">1.0 (VMS; en-US) Mellblomenator/9000</code>".</dd>

   <!-- buildID: Mozilla only -->

   <!-- oscpu: Mozilla only -->

   <dt><dfn id=dom-navigator-platform title=dom-navigator-platform><code>platform</code></dfn></dt>
   <dd><p>Must return either the empty string or a string representing the platform on which the browser is executing, e.g. "<code title="">MacIntel</code>", "<code title="">Win32</code>", "<code title="">FreeBSD i386</code>", "<code title="">WebTV OS</code>".</dd>

   <!-- product: Mozilla and Safari only; always returns "Gecko" -->

   <!-- productSub: Mozilla and Safari only; returns same as buildID in Mozilla, and returns the fixed string "20030107" in Safari -->

   <!-- securityPolicy: Mozilla only; always returns "" -->

   <!-- taintEnabled(): Opera, IE and Mozilla have this function as one that always returns false -->

   <dt><dfn id=dom-navigator-useragent title=dom-navigator-userAgent><code>userAgent</code></dfn></dt>
   <dd><p>Must return the string used for the value of the "<code title="">User-Agent</code>" header in HTTP requests, or the empty string if no such header is ever sent.</dd>

   <!-- vendor: Mozilla and Safari only; always returns "" in Mozilla, and returns the fixed string "Apple Computer, Inc." in Safari -->

   <!-- vendorSub: Mozilla and Safari only; always returns "" -->

  </dl><h4 id=custom-handlers><span class=secno>5.7.2 </span>Custom protocol and content handlers</h4>

  <p>The <dfn id=dom-navigator-registerprotocolhandler title=dom-navigator-registerProtocolHandler><code>registerProtocolHandler()</code></dfn>
  method allows Web sites to register themselves as possible handlers
  for particular protocols. For example, an online fax service could
  register itself as a handler of the <code>fax:</code> protocol (<a href=#refsRFC2806>[RFC2806]</a>), so that if the user clicks on
  such a link, he is given the opportunity to use that Web
  site. Analogously, the <dfn id=dom-navigator-registercontenthandler title=dom-navigator-registerContentHandler><code>registerContentHandler()</code></dfn>
  method allows Web sites to register themselves as possible handlers
  for content in a particular MIME type. For example, the same online
  fax service could register itself as a handler for
  <code>image/g3fax</code> files (<a href=#refsRFC1494>[RFC1494]</a>), so that if the user has no
  native application capable of handling G3 Facsimile byte streams,
  his Web browser can instead suggest he use that site to view the
  image.</p>

  <p>User agents may, within the constraints described in this
  section, do whatever they like when the methods are called. A UA
  could, for instance, prompt the user and offer the user the
  opportunity to add the site to a shortlist of handlers, or make the
  handlers his default, or cancel the request. UAs could provide such
  a UI through modal UI or through a non-modal transient notification
  interface. UAs could also simply silently collect the information,
  providing it only when relevant to the user.</p>

  <p>There is <a href=#sample-handler-impl>an example of how these
  methods could be presented to the user</a> below.</p>

  <p>The arguments to the methods have the following meanings and
  corresponding implementaion requirements:</p>

  <dl><dt><var title="">protocol</var> (<code title=dom-navigator-registerProtocolHandler><a href=#dom-navigator-registerprotocolhandler>registerProtocolHandler()</a></code> only)</dt>

   <dd>

    <p>A scheme, such as <code>ftp</code> or <code>fax</code>. The
    scheme must be compared in an <a href=#ascii-case-insensitive>ASCII case-insensitive</a>
    manner by user agents for the purposes of comparing with the
    scheme part of URLs that they consider against the list of
    registered handlers.</p>

    <p>The <var title="">protocol</var> value, if it contains a colon
    (as in "<code>ftp:</code>"), will never match anything, since
    schemes don't contain colons.</p>

   </dd>

   <dt><var title="">mimeType</var> (<code title=dom-navigator-registerContentHandler><a href=#dom-navigator-registercontenthandler>registerContentHandler()</a></code> only)</dt>

   <dd>

    <p>A MIME type, such as <code>model/vrml</code> or
    <code>text/richtext</code>. The MIME type must be compared in an
    <a href=#ascii-case-insensitive>ASCII case-insensitive</a> manner by user agents for the
    purposes of comparing with MIME types of documents that they
    consider against the list of registered handlers.</p>

    <p>User agents must compare the given values only to the MIME
    type/subtype parts of content types, not to the complete type
    including parameters. Thus, if <var title="">mimeType</var> values
    passed to this method include characters such as commas or
    whitespace, or include MIME parameters, then the handler being
    registered will never be used.</p>

   </dd>


   <dt><var title="">url</var></dt>

   <dd>

    <p>The <a href=#url>URL</a> of the page that will handle the
    requests.</p>

    <p>When the user agent uses this URL, it must replace the first
    occurrence of the exact literal string "<code title="">%s</code>"
    with an escaped version of the <a href=#absolute-url>absolute URL</a> of the
    content in question (as defined below), then <a href=#resolve-a-url title="resolve
    a url">resolve</a> the resulting URL, relative to the <a href="#script's-base-url" title="script's base URL">base URL</a> of the <a href=#first-script>first
    script</a> at the time the <code title=dom-navigator-registerContentHandler><a href=#dom-navigator-registercontenthandler>registerContentHandler()</a></code>
    or <code title=dom-navigator-registerProtocolHandler><a href=#dom-navigator-registerprotocolhandler>registerProtocolHandler()</a></code>
    methods were invoked, and then <a href=#fetch>fetch</a> the resulting
    URL using the GET method (<a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or equivalent</a> for
    non-HTTP URLs).</p>

    <p>To get the escaped version of the <a href=#absolute-url>absolute URL</a> of
    the content in question, the user agent must replace every
    character in that <a href=#absolute-url>absolute URL</a> that doesn't match the
    &lt;query&gt; production defined in RFC 3986 by the
    percent-encoded form of that character. <a href=#refsRFC3986>[RFC3986]</a></p>

    <div class=example>

     <p>If the user had visited a site at <code title="">http://example.com/</code> that made the following
     call:</p>

     <pre>navigator.registerContentHandler('application/x-soup', 'soup?url=%s', 'SoupWeb&trade;')</pre>

     <p>...and then, much later, while visiting <code title="">http://www.example.net/</code>, clicked on a link such
     as:</p>

     <pre>&lt;a href="chickenk&iuml;wi.soup"&gt;Download our Chicken Kiwi soup!&lt;/a&gt;</pre>

     <p>...then, assuming this <code>chickenk&iuml;wi.soup</code> file
     was served with the MIME type <code>application/x-soup</code>,
     the UA might navigate to the following URL:</p>

     <pre>http://example.com/soup?url=http://www.example.net/chickenk%C3%AFwi.soup</pre>

     <p>This site could then fetch the <code>chickenk&iuml;wi.soup</code>
     file and do whatever it is that it does with soup (synthesize it
     and ship it to the user, or whatever).</p>

    </div>

   </dd>

   <dt><var title="">title</var></dt>

   <dd>

    <p>A descriptive title of the handler, which the UA might use to
    remind the user what the site in question is.</p>

   </dd>

  </dl><p>User agents should raise <code><a href=#security_err>SECURITY_ERR</a></code> exceptions if
  the methods are called with <var title="">protocol</var> or <var title="">mimeType</var> values that the UA deems to be
  "privileged". For example, a site attempting to register a handler
  for <code>http</code> URLs or <code>text/html</code> content in a
  Web browser would likely cause an exception to be raised.</p>

  <p>User agents must raise a <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception if the
  <var title="">url</var> argument passed to one of these methods does
  not contain the exact literal string "<code>%s</code>", or if <a href=#resolve-a-url title="resolve a url">resolving</a> the <var title="">url</var>
  argument with the first occurance of the string "<code title="">%s</code>" removed, relative to the <a href=#first-script>first
  script</a>'s <a href="#script's-base-url" title="script's base URL">base URL</a>, is
  not successful.</p>

  <p>User agents must not raise any other exceptions (other than
  binding-specific exceptions, such as for an incorrect number of
  arguments in an ECMAScript implementation).</p>

  <p>This section does not define how the pages registered by these
  methods are used, beyond the requirements on how to process the <var title="">url</var> value (see above). To some extent, the <a href=#navigate title=navigate>processing model for navigating across
  documents</a> defines some cases where these methods are
  relevant, but in general UAs may use this information wherever they
  would otherwise consider handing content to native plugins or helper
  applications.</p>

  <p>UAs must not use registered content handlers to handle content
  that was returned as part of a non-GET transaction (or rather, as
  part of any non-idempotent transaction), as the remote site would
  not be able to fetch the same data.</p>


  <h5 id=security-and-privacy><span class=secno>5.7.2.1 </span>Security and privacy</h5>

  <p>These mechanisms can introduce a number of concerns, in
  particular privacy concerns.</p>

  <p><strong>Hijacking all Web usage.</strong> User agents should not
  allow protocols that are key to its normal operation, such as
  <code>http</code> or <code>https</code>, to be rerouted through
  third-party sites. This would allow a user's activities to be
  trivially tracked, and would allow user information, even in secure
  connections, to be collected.</p>

  <p><strong>Hijacking defaults.</strong> It is strongly recommended
  that user agents do not automatically change any defaults, as this
  could lead the user to send data to remote hosts that the user is
  not expecting. New handlers registering themselves should never
  automatically cause those sites to be used.</p>

  <p><strong>Registration spamming.</strong> User agents should
  consider the possibility that a site will attempt to register a
  large number of handlers, possibly from multiple domains (e.g. by
  redirecting through a series of pages each on a different domain,
  and each registering a handler for <code>video/mpeg</code> &mdash;
  analogous practices abusing other Web browser features have been
  used by pornography Web sites for many years). User agents should
  gracefully handle such hostile attempts, protecting the user.</p>

  <p><strong>Misleading titles.</strong> User agents should not rely
  wholly on the <var title="">title</var> argument to the methods when
  presenting the registered handlers to the user, since sites could
  easily lie. For example, a site <code>hostile.example.net</code>
  could claim that it was registering the "Cuddly Bear Happy Content
  Handler". User agents should therefore use the handler's domain in
  any UI along with any title.</p>

  <p><strong>Hostile handler metadata.</strong> User agents should
  protect against typical attacks against strings embedded in their
  interface, for example ensuring that markup or escape characters in
  such strings are not executed, that null bytes are properly handled,
  that over-long strings do not cause crashes or buffer overruns, and
  so forth.</p>

  <p><strong>Leaking Intranet URLs.</strong> The mechanism described
  in this section can result in secret Intranet URLs being leaked, in
  the following manner:</p>

  <ol><li>The user registers a third-party content handler as the default
   handler for a content type.</li>

   <li>The user then browses his corporate Intranet site and accesses
   a document that uses that content type.</li>

   <li>The user agent contacts the third party and hands the third
   party the URL to the Intranet content.</li>

  </ol><p>No actual confidential file data is leaked in this manner, but
  the URLs themselves could contain confidential information. For
  example, the URL could be
  <code>http://www.corp.example.com/upcoming-aquisitions/the-sample-company.egf</code>,
  which might tell the third party that Example Corporation is
  intending to merge with The Sample Company. Implementors might wish
  to consider allowing administrators to disable this feature for
  certain subdomains, content types, or protocols.</p>

  <p><strong>Leaking secure URLs.</strong> User agents should not send
  HTTPS URLs to third-party sites registered as content handlers, in
  the same way that user agents do not send <code title=http-referer>Referer</code> headers from secure sites to
  third-party sites.</p>

  <p><strong>Leaking credentials.</strong> User agents must never send
  username or password information in the URLs that are escaped and
  included sent to the handler sites. User agents may even avoid
  attempting to pass to Web-based handlers the URLs of resources
  that are known to require authentication to access, as such sites
  would be unable to access the resources in question without
  prompting the user for credentials themselves (a practice that would
  require the user to know whether to trust the third-party handler, a
  decision many users are unable to make or even understand).</p>


  <h5 id=sample-handler-impl><span class=secno>5.7.2.2 </span>Sample user interface</h5>

  <p><em>This section is non-normative.</em></p>

  <p>A simple implementation of this feature for a desktop Web browser
  might work as follows.</p>

  <p>The <code title=dom-navigator-registerProtocolHandler><a href=#dom-navigator-registerprotocolhandler>registerProtocolHandler()</a></code>
  method could display a modal dialog box:</p>

  <pre>||[ Protocol Handler Registration ]|||||||||||||||||||||||||||
|                                                            |
| This Web page:                                             |
|                                                            |
|    Kittens at work                                         |
|    http://kittens.example.org/                             |
|                                                            |
| ...would like permission to handle the protocol "x-meow:"  |
| using the following Web-based application:                 |
|                                                            |
|    Kittens-at-work displayer                               |
|    http://kittens.example.org/?show=%s                     |
|                                                            |
| Do you trust the administrators of the "kittens.example.   |
| org" domain?                                               |
|                                                            |
|              ( Trust kittens.example.org )  (( Cancel ))   |
|____________________________________________________________|</pre>

  <p>...where "Kittens at work" is the title of the page that invoked
  the method, "http://kittens.example.org/" is the URL of that page,
  "x-meow" is the string that was passed to the <code title=dom-navigator-registerProtocolHandler><a href=#dom-navigator-registerprotocolhandler>registerProtocolHandler()</a></code>
  method as its first argument (<var title="">protocol</var>),
  "http://kittens.example.org/?show=%s" was the second argument (<var title="">url</var>), and "Kittens-at-work displayer" was the third
  argument (<var title="">title</var>).</p>

  <p>If the user clicks the Cancel button, then nothing further
  happens. If the user clicks the "Trust" button, then the handler is
  remembered.</p>

  <p>When the user then attempts to fetch a URL that uses the
  "x-meow:" scheme, then it might display a dialog as follows:</p>

  <pre>||[ Unknown Protocol ]||||||||||||||||||||||||||||||||||||||||
|                                                            |
| You have attempted to access:                              |
|                                                            |
|    x-meow:S2l0dGVucyBhcmUgdGhlIGN1dGVzdCE%3D               |
|                                                            |
| How would you like FerretBrowser to handle this resource?  |
|                                                            |
|  (o) Contact the FerretBrowser plugin registry to see if   |
|      there is an official way to handle this resource.     |
|                                                            |
|  ( ) Pass this URL to a local application:                 |
|      [ /no application selected/             ] ( Choose )  |
|                                                            |
|  ( ) Pass this URL to the "Kittens-at-work displayer"      |
|      application at "kittens.example.org".                 |
|                                                            |
|  [ ] Always do this for resources using the "x-meow"       |
|      protocol in future.                                   |
|                                                            |
|                                     ( Ok )  (( Cancel ))   |
|____________________________________________________________|</pre>

  <p>...where the third option is the one that was primed by the site
  registering itself earlier.</p>

  <p>If the user does select that option, then the browser, in
  accordance with the requirements described in the previous two
  sections, will redirect the user to
  "http://kittens.example.org/?show=x-meow%3AS2l0dGVucyBhcmUgdGhlIGN1dGVzdCE%253D".</p>

  <p>The <code title=dom-navigator-registerContentHandler><a href=#dom-navigator-registercontenthandler>registerContentHandler()</a></code>
  method would work equivalently, but for unknown MIME types instead
  of unknown protocols.</p>



  <h3 id=offline><span class=secno>5.8 </span>Offline Web applications</h3>

  <h4 id=introduction-1><span class=secno>5.8.1 </span>Introduction</h4>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>...</p>


  <h4 id=appcache><span class=secno>5.8.2 </span>Application caches</h4>

  <p>An <dfn id=application-cache>application cache</dfn> is a set of cached resources
  consisting of:</p>

  <ul><li>

    <p>One of more resources (including their out-of-band metadata,
    such as HTTP headers, if any), identified by URLs, each falling
    into one (or more) of the following categories:</p>

    <dl><dt><dfn id=concept-appcache-master title=concept-appcache-master>Master entries</dfn>

     <dd>Documents that were added to the cache because a
     <a href=#browsing-context>browsing context</a> was <a href=#navigate title=navigate>navigated</a> to that document and the
     document indicated that this was its cache, using the <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attribute.

 
     <dt><dfn id=concept-appcache-manifest title=concept-appcache-manifest>The manifest</dfn>

     <dd>The resource corresponding to the URL that was given in a
     master entry's <code><a href=#the-html-element>html</a></code> element's <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attribute. The
     manifest is fetched and processed during the <a href=#application-cache-update-process>application
     cache update process</a>. All the <a href=#concept-appcache-master title=concept-appcache-master>master entries</a> have
     the <a href=#same-origin title="same origin">same origin</a> as the manifest.

 
     <dt><dfn id=concept-appcache-explicit title=concept-appcache-explicit>Explicit entries</dfn>

     <dd>Resources that were listed in the cache's <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a>. Explicit
     entries can also be marked as <dfn id=concept-appcache-foreign title=concept-appcache-foreign>foreign</dfn>, which means that they
     have a <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code>
     attribute but that it doesn't point at this cache's <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a>.

 
     <dt><dfn id=concept-appcache-fallback title=concept-appcache-fallback>Fallback entries</dfn>

     <dd>Resources that were listed in the cache's <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a> as fallback
     entries.

 
    </dl><p class=note>A URL in the list can be flagged with multiple
    different types, and thus an entry can end up being categorized as
    multiple entries. For example, an entry can be a manfiest entry
    and an explicit entry at the same time, if the manifest is listed
    within the manifest.</p>

   </li>

   <li>Zero or more <dfn id=concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback
   namespaces</dfn>: URLs, used as <a href=#concept-appcache-matches-fallback title=concept-appcache-matches-fallback>prefix match
   patterns</a>, each of which is mapped to a <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entry</a>. Each
   namespace URL has the <a href=#same-origin>same origin</a> as <a href=#concept-appcache-manifest title=concept-appcache-manifest>the manifest</a>.</li>

   <li>Zero or more URLs that form the <dfn id=concept-appcache-onlinewhitelist title=concept-appcache-onlinewhitelist>online whitelist
   namespaces</dfn>.

  </ul><p>Each <a href=#application-cache>application cache</a> has a <dfn id=concept-appcache-completeness title=concept-appcache-completeness>completeness flag</dfn>, which is
  either <i>complete</i> or <i>incomplete</i>.</p>

  <hr><p>An <dfn id=application-cache-group>application cache group</dfn> is a group of <a href=#application-cache title="application cache">application caches</a>, identified by
  the <a href=#absolute-url>absolute URL</a> of a resource <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a> which is used to
  populate the caches in the group.</p>

  <p>An <a href=#application-cache>application cache</a> is <dfn id=concept-appcache-newer title=concept-appcache-newer>newer</dfn> than another if it was
  created after the other (in other words, <a href=#application-cache title="application
  cache">application caches</a> in an <a href=#application-cache-group>application cache
  group</a> have a chronological order).</p>

  <p>Only the newest <a href=#application-cache>application cache</a> in an
  <a href=#application-cache-group>application cache group</a> can have its <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a> set to
  <i>incomplete</i>, the others are always all <i>complete</i>.</p>

  <p>Each <a href=#application-cache-group>application cache group</a> has an <dfn id=concept-appcache-status title=concept-appcache-status>update status</dfn>, which is one of
  the following: <i>idle</i>, <i>checking</i>, <i>downloading</i>.</p>

  <p>A <dfn id=relevant-application-cache>relevant application cache</dfn> is an <a href=#application-cache>application
  cache</a> that is the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a> in its <a href=#application-cache-group title="application cache group">group</a> to be
  <i>complete</i>.</p>

  <p>Each <a href=#application-cache-group>application cache group</a> has a <dfn id=concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
  entries</dfn>. Each entry in this list consists of a resource and a
  corresponding <code>Document</code> object. It is used during the
  update process to ensure that new master entries are cached.</p>

  <p>An <a href=#application-cache-group>application cache group</a> can be marked as <dfn id=concept-appcache-obsolete title=concept-appcache-obsolete>obsolete</dfn>, meaning that it
  must be ignored when looking at what <a href=#application-cache-group title="application cache
  group">application cache groups</a> exist.</p>

  <hr><p>A <code>Document</code> initially is not associated with an
  <a href=#application-cache>application cache</a>, but steps <a href=#parser-appcache>in the parser</a> and in the <a href=#navigate title=navigate>navigation</a> sections cause <a href=#concept-appcache-init title=concept-appcache-init>cache selection</a> to occur early
  in the page load process.</p>

  <p>Multiple <a href=#application-cache title="application cache">application
  caches</a> in different <a href=#application-cache-group title="application cache
  group">application cache groups</a> can contain the same
  resource, e.g. if the manifests all reference that resource. If the
  user agent is to <dfn id=concept-appcache-selection title=concept-appcache-selection>select an
  application cache</dfn> from a list of <a href=#relevant-application-cache title="relevant
  application cache">relevant application caches</a> that contain a
  resource, that the user agent must use the application cache that
  the user most likely wants to see the resource from, taking into
  account the following:</p>

  <ul><li>which application cache was most recently updated,

   <li>which application cache was being used to display the
   resource from which the user decided to look at the new resource,
   and

   <li>which application cache the user prefers.

  </ul><h4 id=manifests><span class=secno>5.8.3 </span>The cache manifest syntax</h4>


  <h5 id=a-sample-manifest><span class=secno>5.8.3.1 </span>A sample manifest</h5>

  <p><em>This section is non-normative.</em></p>

  <p>This example manifest requires two images and a style sheet to be
  cached and whitelists a CGI script.</p>

  <pre>CACHE MANIFEST
# the above line is required

# this is a comment
# there can be as many of these anywhere in the file
# they are all ignored
  # comments can have spaces before them
  # but must be alone on the line

# blank lines are ignored too

# these are files that need to be cached they can either be listed
# first, or a "CACHE:" header could be put before them, as is done
# lower down.
images/sound-icon.png
images/background.png
# note that each file has to be put on its own line

# here is a file for the online whitelist -- it isn't cached, and 
# references to this file will bypass the cache, always hitting the
# network (or trying to, if the user is offline).
NETWORK:
comm.cgi

# here is another set of files to cache, this time just the CSS file.
CACHE:
style/default.css</pre>


  <h5 id=writing-cache-manifests><span class=secno>5.8.3.2 </span>Writing cache manifests</h5>

  <p>Manifests must be served using the <code title="">text/cache-manifest</code> MIME type. All resources served
  using the <code title="">text/cache-manifest</code> MIME type must
  follow the syntax of application cache manifests, as described in
  this section.</p>

  <p>An application cache manifest is a text file, whose text is
  encoded using UTF-8. Data in application cache manifests is
  line-based. Newlines must be represented by U+000A LINE FEED (LF)
  characters, U+000D CARRIAGE RETURN (CR) characters, or U+000D
  CARRIAGE RETURN (CR) U+000A LINE FEED (LF) pairs.</p>

  <p class=note>This is a willful double violation of RFC2046. <a href=#refsRFC2046>[RFC2046]</a></p>

  <p>The first line of an application cache manifest must consist of
  the string "CACHE", a single U+0020 SPACE character, the string
  "MANIFEST", and either a U+0020 SPACE character, a U+0009 CHARACTER
  TABULATION (tab) character, a U+000A LINE FEED (LF) character, or a
  U+000D CARRIAGE RETURN (CR) character. The first line may optionally
  be preceded by a U+FEFF BYTE ORDER MARK (BOM) character. If any
  other text is found on the first line, it is ignored.</p>

  <p>Subsequent lines, if any, must all be one of the following:</p>

  <dl><dt>A blank line
   <dd>
    <p>Blank lines must consist of zero or more U+0020 SPACE and
    U+0009 CHARACTER TABULATION (tab) characters only.</p>

   <dt>A comment
   <dd>
    <p>Comment lines must consist of zero or more U+0020 SPACE and
    U+0009 CHARACTER TABULATION (tab) characters, followed by a single
    U+0023 NUMBER SIGN (#) character, followed by zero or more
    characters other than U+000A LINE FEED (LF) and U+000D CARRIAGE
    RETURN (CR) characters.</p>

    <p class=note>Comments must be on a line on their own. If they
    were to be included on a line with a URL, the "#" would be
    mistaken for part of a fragment identifier.</p>

   <dt>A section header
   <dd>
    <p>Section headers change the current section. There are three
    possible section headers:

    <dl><dt><code>CACHE:</code>
     <dd>Switches to the explicit section.

     <dt><code>FALLBACK:</code>
     <dd>Switches to the fallback section.

     <dt><code>NETWORK:</code>
     <dd>Switches to the online whitelist section.

    </dl><p>Section header lines must consist of zero or more U+0020 SPACE
    and U+0009 CHARACTER TABULATION (tab) characters, followed by one
    of the names above (including the U+003A COLON (:) character)
    followed by zero or more U+0020 SPACE and U+0009 CHARACTER
    TABULATION (tab) characters.</p>

    <p>Ironically, by default, the current section is the explicit
    section.</p>

   <dt>Data for the current section
   <dd>
    <p>The format that data lines must take depends on the current
    section.</p>

    <p>When the current section is the explicit section or the online
    whitelist section, data lines must consist of zero or more U+0020
    SPACE and U+0009 CHARACTER TABULATION (tab) characters, a
    <a href=#valid-url>valid URL</a> identifying a resource other than the
    manifest itself, and then zero or more U+0020 SPACE and U+0009
    CHARACTER TABULATION (tab) characters.</p>

    <p>When the current section is the fallback section, data lines
    must consist of zero or more U+0020 SPACE and U+0009 CHARACTER
    TABULATION (tab) characters, a <a href=#valid-url>valid URL</a> identifying
    a resource other than the manifest itself, one or more U+0020
    SPACE and U+0009 CHARACTER TABULATION (tab) characters, another
    <a href=#valid-url>valid URL</a> identifying a resource other than the
    manifest itself, and then zero or more U+0020 SPACE and U+0009
    CHARACTER TABULATION (tab) characters.</p>

    <p class=note>The URLs in data lines can't be empty strings,
    since those would be relative URLs to the manifest itself. Such
    lines would be confused with blank or invalid lines, anyway.</p>

  </dl><p>Manifests may contain sections more than once. Sections may be
  empty.</p>

  <p>URLs that are to be fallback pages associated with <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback namespaces</a>, and
  those namespaces themselves, must be given in fallback sections,
  with the namespace being the first URL of the data line, and the
  corresponding fallback page being the second URL. All the other
  pages to be cached must be listed in explicit sections.</p>

  <p><a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>Fallback
  namespaces</a> and <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entries</a> must have
  the <a href=#same-origin>same origin</a> as the manifest itself.</p>

  <p>A <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback
  namespace</a> must not be listed more than once.</p>

  <p>URLs that the user agent is to put into the <a href=#concept-appcache-onlinewhitelist title=concept-appcache-onlinewhitelist>online whitelist</a>
  must all be specified in online whitelist sections. (This is needed
  for any URL that the page is intending to use to communicate back to
  the server.)</p>

  <p>Relative URLs must be given relative to the manifest's own
  URL.</p>

  <p>URLs in manifests must not have fragment identifiers (i.e. the
  U+0023 NUMBER SIGN character isn't allowed in URLs in
  manifests).</p>


  <h5 id=parsing-cache-manifests><span class=secno>5.8.3.3 </span>Parsing cache manifests</h5>

  <p>When a user agent is to <dfn id=parse-a-manifest>parse a manifest</dfn>, it means
  that the user agent must run the following steps:</p>

  <ol><li><p>The user agent must decode the byte stream corresponding with
   the manifest to be parsed, treating it as UTF-8. Bytes or sequences
   of bytes that are not valid UTF-8 sequences must be interpreted as
   a U+FFFD REPLACEMENT CHARACTER. <!--All U+0000 NULL characters must
   be replaced by U+FFFD REPLACEMENT CHARACTERs. (this isn't black-box
   testable since neither U+0000 nor U+FFFD are valid anywhere in the
   syntax and thus both will be treated the same anyway)--></li>

   <li><p>Let <var title="">base URL</var> be the <a href=#absolute-url>absolute
   URL</a> representing the manifest.</li>

   <li><p>Let <var title="">explicit URLs</var> be an initially empty
   list of <a href=#concept-appcache-explicit title=concept-appcache-explicit>explicit
   entries</a>.</li>

   <li><p>Let <var title="">fallback URLs</var> be an initially empty
   mapping of <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback
   namespaces</a> to <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entries</a>.</li>

   <li><p>Let <var title="">online whitelist URLs</var> be an
   initially empty list of URLs for a <a href=#concept-appcache-onlinewhitelist title=concept-appcache-onlinewhitelist>online
   whitelist</a>.</li>

   <li><p>Let <var title="">input</var> be the decoded text of the
   manifest's byte stream.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the first
   character.</li>

   <li><p>If <var title="">position</var> is pointing at a U+FEFF BYTE
   ORDER MARK (BOM) character, then advance <var title="">position</var> to the next character.</li>

   <li><p>If the characters starting from <var title="">position</var>
   are "CACHE", followed by a U+0020 SPACE character, followed by
   "MANIFEST", then advance <var title="">position</var> to the next
   character after those. Otherwise, this isn't a cache manifest;
   abort this algorithm with a failure while checking for the magic
   signature.</li>

   <li><p>If the character at <var title="">position</var> is neither
   a U+0020 SPACE character, a U+0009 CHARACTER TABULATION (tab)
   character, U+000A LINE FEED (LF) character, nor a U+000D CARRIAGE
   RETURN (CR) character, then this isn't a cache manifest; abort this
   algorithm with a failure while checking for the magic
   signature.</li>

   <li><p>This is a cache manifest. The algorithm cannot fail beyond
   this point (though bogus lines can get ignored).</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> that are
   <em>not</em> U+000A LINE FEED (LF) or U+000D CARRIAGE RETURN (CR)
   characters, and ignore those characters. (Extra text on the first
   line, after the signature, is ignored.)</li>

   <li><p>Let <var title="">mode</var> be "explicit".</li>

   <li><p><em>Start of line</em>: If <var title="">position</var> is
   past the end of <var title="">input</var>, then jump to the last
   step. Otherwise, <a href=#collect-a-sequence-of-characters>collect a sequence of characters</a> that
   are U+000A LINE FEED (LF), U+000D CARRIAGE RETURN (CR), U+0020
   SPACE, or U+0009 CHARACTER TABULATION (tab) characters.</li>
   <!-- strips leading spaces, ignores space-only lines, ignores blank lines -->

   <li><p>Now, <a href=#collect-a-sequence-of-characters>collect a sequence of characters</a> that are
   <em>not</em> U+000A LINE FEED (LF) or U+000D CARRIAGE RETURN (CR)
   characters, and let the result be <var title="">line</var>.</li>

   <li><p>Drop any trailing U+0020 SPACE and U+0009 CHARACTER
   TABULATION (tab) characters at the end of <var title="">line</var>.</li>

   <li><p>If <var title="">line</var> is the empty string, then jump
   back to the step labeled "start of line".</li>

   <li><p>If the first character in <var title="">line</var> is a
   U+0023 NUMBER SIGN (#) character, then jump back to the step
   labeled "start of line".</li>

   <li><p>If <var title="">line</var> equals "CACHE:" (the word
   "CACHE" followed by a U+003A COLON (:) character), then set <var title="">mode</var> to "explicit" and jump back to the step
   labeled "start of line".</li>

   <li><p>If <var title="">line</var> equals "FALLBACK:" (the word
   "FALLBACK" followed by a U+003A COLON (:) character), then set <var title="">mode</var> to "fallback" and jump back to the step
   labeled "start of line".</li>

   <li><p>If <var title="">line</var> equals "NETWORK:" (the word
   "NETWORK" followed by a U+003A COLON (:) character), then set <var title="">mode</var> to "online whitelist" and jump back to the step
   labeled "start of line".</li>

   <li><p>If <var title="">line</var> ends with a U+003A COLON (:)
   character, then set <var title="">mode</var> to "unknown" and jump
   back to the step labeled "start of line".</li>

   <li><p>This is either a data line or it is syntactically
   incorrect.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">line</var>, initially pointing at the start of the
   string.</li>

   <li><p>Let <var title="">tokens</var> be a list of strings,
   initially empty.</li>

   <li>

    <p>While <var title="">position</var> doesn't point past the end
    of <var title="">line</var>:</p>

    <ol><li><p>Let <var title="">current token</var> be an empty
     string.</li>

     <li><p>While <var title="">position</var> doesn't point past the
     end of <var title="">line</var> and the character at <var title="">position</var> is neither a U+0020 SPACE nor a U+0009
     CHARACTER TABULATION (tab) character, add the character at <var title="">position</var> to <var title="">current token</var> and
     advance <var title="">position</var> to the next character in
     <var title="">input</var>.</li>

     <li><p>Add <var title="">current token</var> to the <var title="">tokens</var> list.</li>

     <li><p>While <var title="">position</var> doesn't point past the
     end of <var title="">line</var> and the character at <var title="">position</var> is either a U+0020 SPACE or a U+0009
     CHARACTER TABULATION (tab) character, advance <var title="">position</var> to the next character in <var title="">input</var>.</li>

    </ol></li>

   <li>

    <p>Process <var title="">tokens</var> as follows:</p>

    <dl class=switch><dt>If <var title="">mode</var> is "explicit"</dt>

     <dd>

      <p><a href=#resolve-a-url title="resolve a url">Resolve</a> the first item in
      <var title="">tokens</var>, relative to <var title="">base
      URL</var>; ignore the rest.</p>

      <p>If this fails, then jump back to the step labeled "start of
      line".</p>

      <p>If the resulting <a href=#absolute-url>absolute URL</a> has a different
      <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a> component than
      the manifest's URL (compared in an <a href=#ascii-case-insensitive>ASCII
      case-insensitive</a> manner), then jump back to the step
      labeled "start of line".</p>

      <p>Drop the <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a>
      component of the resulting <a href=#absolute-url>absolute URL</a>, if it has
      one.</p>

      <p>Add the resulting <a href=#absolute-url>absolute URL</a> to the <var title="">explicit URLs</var>.</p>

     </dd>

     <dt>If <var title="">mode</var> is "fallback"</dt>

     <dd>

      <p>Let <var title="">part one</var> be the first token in <var title="">tokens</var>, and let <var title="">part two</var> be
      the second token in <var title="">tokens</var>.</p>

      <p><a href=#resolve-a-url title="resolve a url">Resolve</a> <var title="">part
      one</var> and <var title="">part two</var>, relative to <var title="">base URL</var>.</p>

      <p>If either fails, then jump back to the step labeled "start of
      line".</p>

      <p>If the <a href=#absolute-url>absolute URL</a> corresponding to either <var title="">part one</var> or <var title="">part two</var> does not
      have the <a href=#same-origin>same origin</a> as the manifest's URL, then
      jump back to the step labeled "start of line".</p> <!-- SECURITY
      -->

      <p>Drop any the <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a> components of the
      resulting <a href=#absolute-url title="absolute URL">absolute URLs</a>.</p>

      <p>If the <a href=#absolute-url>absolute URL</a> corresponding to <var title="">part one</var> is already in the <var title="">fallback
      URLs</var> mapping as a <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback namespace</a>,
      then jump back to the step labeled "start of line".</p>

      <p>Otherwise, add the <a href=#absolute-url>absolute URL</a> corresponding to
      <var title="">part one</var> to the <var title="">fallback
      URLs</var> mapping as a <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback namespace</a>,
      mapped to the <a href=#absolute-url>absolute URL</a> corresponding to <var title="">part two</var> as the <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entry</a>.</p>

     </dd>

     <dt>If <var title="">mode</var> is "online whitelist"</dt>

     <dd>

      <p><a href=#resolve-a-url title="resolve a url">Resolve</a> the first item in
      <var title="">tokens</var>, relative to <var title="">base
      URL</var>; ignore the rest.</p>

      <p>If this fails, then jump back to the step labeled "start of
      line".</p>

      <p>If the resulting <a href=#absolute-url>absolute URL</a> has a different
      <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a> component than
      the manifest's URL (compared in an <a href=#ascii-case-insensitive>ASCII
      case-insensitive</a> manner), then jump back to the step
      labeled "start of line".</p>

      <p>Drop the <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a>
      component of the resulting <a href=#absolute-url>absolute URL</a>, if it has
      one.</p>

      <p>Add the resulting <a href=#absolute-url>absolute URL</a> to the <var title="">online whitelist URLs</var>.</p>

     </dd>

     <dt>If <var title="">mode</var> is "unknown"</dt>

     <dd>

      <p>Do nothing. The line is ignored.</p>

     </dd>

    </dl></li>

   <li><p>Jump back to the step labeled "start of line". (That step
   jumps to the next, and last, step when the end of the file is
   reached.)</li>

   <li><p>Return the <var title="">explicit URLs</var> list, the <var title="">fallback URLs</var> mapping, and the <var title="">online
   whitelist URLs</var>.</li>

  </ol><p class=note>If a resource is listed in the explicit section and
  matches an entry in the online whitelist, or if a resource matches
  both an entry in the fallback section and the online whitelist, the
  resource will taken from the cache, and the online whitelist entry
  will be ignored.</p>


  <h4 id=updating-an-application-cache><span class=secno>5.8.4 </span>Updating an application cache</h4>

  <p>When the user agent is required (by other parts of this
  specification) to start the <dfn id=application-cache-update-process>application cache update
  process</dfn> for an <a href=#absolute-url>absolute URL</a> purported to identify
  a <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a>, or for an
  <a href=#application-cache-group>application cache group</a>, potentially given a particular
  <a href=#browsing-context>browsing context</a>, and potentially given a new <a href=#concept-appcache-master title=concept-appcache-master>master</a> resource, the user
  agent must run the following steps:</p>

  <ol><li>

    <p>Atomically, so as to avoid race conditions, perform the
    following substeps:</p>

    <ol><li>

      <p>Pick the approprate substeps:</p>

      <dl class=switch><dt>If these steps were invoked with an <a href=#absolute-url>absolute
       URL</a> purported to identify a <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a></dt>

       <dd>

        <p>Let <var title="">manifest URL</var> be that <a href=#absolute-url>absolute
        URL</a>.</p>

        <p>If there is no <a href=#application-cache-group>application cache group</a>
        identified by <var title="">manifest URL</var>, then create a
        new <a href=#application-cache-group>application cache group</a> identified by <var title="">manifest URL</var>. Initially it has no <a href=#application-cache title="application cache">application caches</a>, though
        one will be created later in this algorithm.</p>

       </dd>


       <dt>If these steps were invoked with an <a href=#application-cache-group>application cache
       group</a></dt>

       <dd>

        <p>Let <var title="">manifest URL</var> be the <a href=#absolute-url>absolute
        URL</a> of the <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a> used to
        identify the <a href=#application-cache-group>application cache group</a> to be
        updated.</p>

       </dd>

      </dl></li>

     <li><p>Let <var title="">cache group</var> be the
     <a href=#application-cache-group>application cache group</a> identified by <var title="">manifest URL</var>.</li>

     <li><p>If these steps were invoked with a new <a href=#concept-appcache-master title=concept-appcache-master>master</a> resource, then add
     the resource, along with the resource's <code>Document</code>, to
     <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
     entries</a>.</li>

     <li><p>If these steps were invoked with a <a href=#browsing-context>browsing
     context</a>, and the <a href=#concept-appcache-status title=concept-appcache-status>status</a> of <var title="">cache group</var> is <i>checking</i> or
     <i>downloading</i>, then <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire
     a simple event</a> called <code title=event-checking>checking</code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of that <a href=#browsing-context>browsing
     context</a>.</li>

     <li><p>If these steps were invoked with a <a href=#browsing-context>browsing
     context</a>, and the <a href=#concept-appcache-status title=concept-appcache-status>status</a> of <var title="">cache group</var> is <i>downloading</i>, then also
     <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
     called <code title=event-downloading>downloading</code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of that <a href=#browsing-context>browsing
     context</a>.</li>

     <li><p>If the <a href=#concept-appcache-status title=concept-appcache-status>status</a>
     of the <var title="">cache group</var> is either <i>checking</i>
     or <i>downloading</i>, then abort this instance of the update
     process, as an update is already in progress for them.</li>

     <li><p>Set the <a href=#concept-appcache-status title=concept-appcache-status>status</a> of <var title="">cache group</var> to <i>checking</i>.</p>

     <li><p>For each <a href=#browsing-context>browsing context</a> whose <a href=#active-document>active
     document</a> is associated with an <a href=#application-cache>application
     cache</a> in <var title="">cache group</var>, <a href=#queue-a-task>queue a
     task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-checking>checking</code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
     context</a>. The default action of these events should be the
     display of some sort of user interface indicating to the user
     that the user agent is checking for the availability of
     updates.</li>

    </ol><p>The remainder of the steps run asychronously.</p>

    <p>If <var title="">cache group</var> already has an
    <a href=#application-cache>application cache</a> in it, then this is an <dfn id=concept-appcache-upgrade title=concept-appcache-upgrade>upgrade attempt</dfn>. Otherwise,
    this is a <dfn id=concept-appcache-cache title=concept-appcache-cache>cache
    attempt</dfn>.</p>

   </li>

   <li><p>If this is a <a href=#concept-appcache-cache title=concept-appcache-cache>cache
   attempt</a>, then this algorithm was invoked with a
   <a href=#browsing-context>browsing context</a>; <a href=#queue-a-task>queue a task</a> to
   <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-checking>checking</code> at the
   <code><a href=#applicationcache>ApplicationCache</a></code> singleton of that <a href=#browsing-context>browsing
   context</a>.</li>

   <li>

    <p><i>Fetching the manifest</i>: <a href=#fetch>Fetch</a> the resource
    from <var title="">manifest URL</var>, and let <var title="">manifest</var> be that resource.</p>

    <p>If the resource is labeled with the MIME type <code title="">text/cache-manifest</code>, parse <var title="">manifest</var> according to the <a href=#parse-a-manifest title="parse a
    manifest">rules for parsing manifests</a>, obtaining a list of
    <a href=#concept-appcache-explicit title=concept-appcache-explicit>explicit entries</a>,
    <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entries</a>
    and the <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback
    namespaces</a> that map to them, and entries for the <a href=#concept-appcache-onlinewhitelist title=concept-appcache-onlinewhitelist>online
    whitelist</a>.</p>

   </li>

   <li>

    <p>If <i>fetching the manifest</i> fails due to a 404 or 410
    response <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or
    equivalent</a>, then run these substeps:</p>

    <ol><li><p>Mark <var title="">cache group</var> as <a href=#concept-appcache-obsolete title=concept-appcache-obsolete>obsolete</a>. This <var title="">cache group</var> no longer exists for any purpose other
     than the processing of <code>Document</code> objects already
     associated with an <a href=#application-cache>application cache</a> in the <var title="">cache group</var>.</li>

     <li><p>For each <a href=#browsing-context>browsing context</a> whose <a href=#active-document>active
     document</a> is associated with an <a href=#application-cache>application
     cache</a> in <var title="">cache group</var>, <a href=#queue-a-task>queue a
     task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-obsolete>obsolete</code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
     context</a>. The default action of these events should be the
     display of some sort of user interface indicating to the user
     that the application is no longer available for offline
     use.</li>

     <li><p>For each entry in <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
     entries</a>, <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
     event</a> called <code title=event-error><a href=#event-error>error</a></code> (not
     <code title=event-obsolete>obsolete</code>!) at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
     context</a> whose <a href=#active-document>active document</a> is the
     <code>Document</code> for this entry, if there still is one. The
     default action of this event should be the display of some sort
     of user interface indicating to the user that the user agent
     failed to save the application for offline use.</li>

     <li><p>If <var title="">cache group</var> has an
     <a href=#application-cache>application cache</a> whose <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a> is
     <i>incomplete</i>, then discard that <a href=#application-cache>application
     cache</a>.</p>

     <li><p>If appropriate, remove any user interface indicating that
     an update for this cache is in progress.</li>

     <li><p>Let the <a href=#concept-appcache-status title=concept-appcache-status>status</a> of <var title="">cache group</var> be <i>idle</i>.</li>

     <li><p>Abort the update process.</li>

    </ol></li>

   <li>

    <p>Otherwise, if <i>fetching the manifest</i> fails in some other
    way (e.g. the server returns another 4xx or 5xx response <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a>, or
    there is a DNS error, or the connection times out, or the user
    cancels the download, or the parser for manifests fails when
    checking the magic signature), or if the server returned a
    redirect, or if the resource is labeled with a MIME type other
    than <code title="">text/cache-manifest</code>, then run the
    <a href=#cache-failure-steps>cache failure steps</a>.</p>

   </li>

   <li>

    <p>If this is an <a href=#concept-appcache-upgrade title=concept-appcache-upgrade>upgrade
    attempt</a> and the newly downloaded <var title="">manifest</var> is byte-for-byte identical to the manifest
    found in the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a>
    <a href=#application-cache>application cache</a> in <var title="">cache group</var>,
    or the server reported it as "304 Not Modified" <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a>, then
    run these substeps:</p>

    <ol><li><p>Let <var title="">cache</var> be the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a> <a href=#application-cache>application
     cache</a> in <var title="">cache group</var>.</li>

     <li>

      <p>For each entry in <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
      entries</a>, wait for the resource for this entry to have
      either completely downloaded or failed.</p>

      <p>If the download failed (e.g. the connection times out, or the
      user cancels the download), then <a href=#queue-a-task>queue a task</a> to
      <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-error><a href=#event-error>error</a></code> at the
      <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
      context</a> whose <a href=#active-document>active document</a> is the
      <code>Document</code> for this entry, if there still is one. The
      default action of this event should be the display of some sort
      of user interface indicating to the user that the user agent
      failed to save the application for offline use.</p>

      <p>Otherwise, associate the <code>Document</code> for this entry
      with <var title="">cache</var>; store the resource for this
      entry in <var title="">cache</var>, if it isn't already there,
      and categorize its entry as a <a href=#concept-appcache-master title=concept-appcache-master>master entry</a>.</p>

      <p class=note>HTTP caching rules, such as <code title="">Cache-Control: no-store</code>, are ignored for the
      purposes of the <a href=#application-cache-update-process>application cache update
      process</a>.</p>

     </li>

     <li><p>For each <a href=#browsing-context>browsing context</a> whose <a href=#active-document>active
     document</a> is associated with an <a href=#application-cache>application
     cache</a> in <var title="">cache group</var>, <a href=#queue-a-task>queue a
     task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-noupdate>noupdate</code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
     context</a>. The default action of these events should be the
     display of some sort of user interface indicating to the user
     that the application is up to date.</li>

     <li><p>Empty <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
     entries</a>.</li>

     <li><p>If appropriate, remove any user interface indicating that
     an update for this cache is in progress.</li>

     <li><p>Let the <a href=#concept-appcache-status title=concept-appcache-status>status</a> of <var title="">cache group</var> be <i>idle</i>.</li>

     <li><p>Abort the update process.</li>

    </ol></li>

   <li><p>Let <var title="">new cache</var> be a newly created
   <a href=#application-cache>application cache</a> in <var title="">cache
   group</var>. Set its <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a> to
   <i>incomplete</i>.</li>

   <li><p>For each entry in <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
   entries</a>, associate the <code>Document</code> for this entry
   with <var title="">new cache</var>.</li>

   <li><p>Set the <a href=#concept-appcache-status title=concept-appcache-status>status</a>
   of <var title="">cache group</var> to <i>downloading</i>.</li>

   <li><p>For each <a href=#browsing-context>browsing context</a> whose <a href=#active-document>active
   document</a> is associated with an <a href=#application-cache>application
   cache</a> in <var title="">cache group</var>, <a href=#queue-a-task>queue a
   task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-downloading>downloading</code> at the
   <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
   context</a>. The default action of these events should be the
   display of some sort of user interface indicating to the user that
   a new version is being downloaded.</li>

   <li><p>Let <var title="">file list</var> be an empty list of
   URLs with flags.</li>

   <li><p>Add all the URLs in the list of <a href=#concept-appcache-explicit title=concept-appcache-explicit>explicit entries</a> obtained
   by parsing <var title="">manifest</var> to <var title="">file
   list</var>, each flagged with "explicit entry".</li>

   <li><p>Add all the URLs in the list of <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entries</a> obtained
   by parsing <var title="">manifest</var> to <var title="">file
   list</var>, each flagged with "fallback entry".</li>

   <li><p>If this is an <a href=#concept-appcache-upgrade title=concept-appcache-upgrade>upgrade
   attempt</a>, then add all the URLs of <a href=#concept-appcache-master title=concept-appcache-master>master entries</a> in the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a> <a href=#application-cache>application
   cache</a> in <var title="">cache group</var> whose <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a> is
   <i>complete</i> to <var title="">file list</var>, each flagged with
   "master entry".</li>

   <li><p>If any URL is in <var title="">file list</var> more than
   once, then merge the entries into one entry for that URL, that
   entry having all the flags that the original entries had.</li>

   <li>

    <p>For each URL in <var title="">file list</var>, run the
    following steps. These steps may be run in parallel for two or
    more of the URLs at a time.</p>

    <ol><li>

      <p>If the resource URL being processed was flagged as neither an
      "explicit entry" nor or a "fallback entry", then the user agent
      may skip this URL.</p>

      <p class=note>This is intended to allow user agents to expire
      resources not listed in the manifest (other than those in the
      manifest itself) from the cache. Generally, implementors are
      urged to use an approach that expires lesser-used resources
      first.</p>

     </li>

     <li><p>For each <a href=#browsing-context>browsing context</a> whose <a href=#active-document>active
     document</a> is associated with an <a href=#application-cache>application
     cache</a> in <var title="">cache group</var>, <a href=#queue-a-task>queue a
     task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-progress><a href=#event-progress>progress</a></code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
     context</a>. The default action of these events should be the
     display of some sort of user interface indicating to the user
     that a file is being downloaded in preparation for updating the
     application.</li> <!-- XXX need to include progress
     information -->

     <li>

      <p><a href=#fetch>Fetch</a> the resource. If this is an <a href=#concept-appcache-upgrade title=concept-appcache-upgrade>upgrade attempt</a>, then
      use the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a>
      <a href=#application-cache>application cache</a> in <var title="">cache
      group</var> as an HTTP cache, and honor HTTP caching semantics
      (such as expiration, ETags, and so forth) with respect to that
      cache. User agents may also have other caches in place that are
      also honored.</p>

      <p class=note>If the resource in question is already being
      downloaded for other reasons then the existing download process
      can be used for the purposes of this step, as defined by the
      <a href=#fetch title=fetch>fetching</a> algorithm.</p>

      <p class=example>An example of a resource that might already
      be being downloaded is a large image on a Web page that is being
      seen for the first time. The image would get downloaded to
      satisfy the <code><a href=#the-img-element>img</a></code> element on the page, as well as
      being listed in the cache manifest. According to the rules for
      <a href=#fetch title=fetch>fetching</a> that image only need be
      downloaded once, and it can be used both for the cache and for
      the rendered Web page.</p>

     </li>

     <li>

      <p>If the previous step fails (e.g. the server returns a 4xx or
      5xx response <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or
      equivalent</a>, or there is a DNS error, or the connection
      times out, or the user cancels the download), or if the server
      returned a redirect, then run the first appropriate step from
      the following list:</p>

      <dl class=switch><dt>If the URL being processed was flagged as an "explicit
       entry" or a "fallback entry"</dt>

       <dd>

        <p>Run the <a href=#cache-failure-steps>cache failure steps</a>.</p>

        <p class=note>Redirects are fatal because they are either
        indicative of a network problem (e.g. a captive portal); or
        would allow resources to be added to the cache under URLs that
        differ from any URL that the networking model will allow
        access to, leaving orphan entries; or would allow resources to
        be stored under URLs different than their true URLs. All of
        these situations are bad.</p>

       </dd>

       <dt>If the error was a 404 or 410 HTTP response <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a></dt>

       <dd>

        <p>Skip this resource. It is dropped from the cache.</p>

       </dd>

       <dt>Otherwise</dt>

       <dd>

        <p>Copy the resource and its metadata from the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a> <a href=#application-cache>application
        cache</a> in <var title="">cache group</var> whose <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a>
        is <i>complete</i>, and act as if that was the fetched
        resource, ignoring the resource obtained from the network.</p>

       </dd>

      </dl><p>User agents may warn the user of these errors as an aid to
      development.</p>

      <p class=note>These rules make errors for resources listed in
      the manifest fatal, while making it possible for other resources
      to be removed from caches when they are removed from the server,
      without errors, and making non-manifest resources survive
      server-side errors.</p>

     </li>

     <li><p>Otherwise, the fetching succeeded. Store the resource in
     the <var title="">new cache</var>.</li>

     <li><p>If the URL being processed was flagged as an "explicit
     entry" in <var title="">file list</var>, then categorize the
     entry as an <a href=#concept-appcache-explicit title=concept-appcache-explicit>explicit
     entry</a>.</li>

     <li><p>If the URL being processed was flagged as a "fallback
     entry" in <var title="">file list</var>, then categorize the
     entry as a <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback
     entry</a>.</li>

     <li><p>If the URL being processed was flagged as an "master
     entry" in <var title="">file list</var>, then categorize the
     entry as a <a href=#concept-appcache-master title=concept-appcache-master>master
     entry</a>.</li>

     <li><p>As an optimization, if the resource is an HTML or XML file
     whose root element is an <code><a href=#the-html-element>html</a></code> element with a <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attribute whose value
     doesn't match the manifest URL of the application cache being
     processed, then the user agent should mark the entry as being
     <a href=#concept-appcache-foreign title=concept-appcache-foreign>foreign</a>.</p>

    </ol></li>

   <li><p>Store the list of <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback namespaces</a>,
   and the URLs of the <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entries</a> that they
   map to, in <var title="">new cache</var>.</li>

   <li><p>Store the URLs that form the new <a href=#concept-appcache-onlinewhitelist title=concept-appcache-onlinewhitelist>online whitelist</a> in
   <var title="">new cache</var>.</li>

   <li>

    <p>For each entry in <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
    entries</a>, wait for the resource for this entry to have
    either completely downloaded or failed.</p>

    <p>If the download failed (e.g. the connection times out, or the
    user cancels the download), then run these sebsteps:</p>

    <ol><li><p>Unassociate the <code>Document</code> for this entry from
     <var title="">new cache</var>.</li>

     <li><p><a href=#queue-a-task>Queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
     called <code title=event-error><a href=#event-error>error</a></code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
     context</a> whose <a href=#active-document>active document</a> is the
     <code>Document</code> for this entry, if there still is one. The
     default action of this event should be the display of some sort
     of user interface indicating to the user that the user agent
     failed to save the application for offline use.</p>

     <li>

      <p>If this is a <a href=#concept-appcache-cache title=concept-appcache-cache>cache
      attempt</a> and this entry is the last entry in <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
      entries</a>, then run these further substeps:</p>

      <ol><li><p>Discard <var title="">cache group</var> and its only
       <a href=#application-cache>application cache</a>, <var title="">new
       cache</var>.</p>

       <li><p>If appropriate, remove any user interface indicating
       that an update for this cache is in progress.</li>

       <li><p>Abort the update process.</li>

      </ol></li>

     <li><p>Otherwise, remove this entry from <var title="">cache
     group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list
     of pending master entries</a>.</li>

    </ol><p>Otherwise, store the resource for this entry in <var title="">new cache</var>, if it isn't already there, and
    categorize its entry as a <a href=#concept-appcache-master title=concept-appcache-master>master entry</a>.</p>

   </li>

   <li>

    <p><a href=#fetch>Fetch</a> the resource from <var title="">manifest
    URL</var> again, and let <var title="">second manifest</var> be
    that resource.</p>

   </li>

   <li>

    <p>If the previous step failed for any reason, or if the fetching
    attempt involved a redirect, or if <var title="">second
    manifest</var> and <var title="">manifest</var> are not
    byte-for-byte identical, then schedule a rerun of the entire
    algorithm with the same parameters after a short delay, and run
    the <a href=#cache-failure-steps>cache failure steps</a>.</p>

   </li>

   <li>

    <p>Otherwise, store <var title="">manifest</var> in <var title="">new cache</var>, if it's not there already, and
    categorize its entry as <a href=#concept-appcache-manifest title=concept-appcache-manifest>the manifest</a>.</p>

   </li>

   <li><p>Set the <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a> of
   <var title="">new cache</var> to <i>complete</i>.</li>

   <li>

    <p>If this is a <a href=#concept-appcache-cache title=concept-appcache-cache>cache
    attempt</a>, then for each <a href=#browsing-context>browsing context</a>
    whose <a href=#active-document>active document</a> is associated with an
    <a href=#application-cache>application cache</a> in <var title="">cache
    group</var>, <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire a simple
    event</a> called <code title=event-cached>cached</code> at
    the <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the
    <a href=#browsing-context>browsing context</a>. The default action of these
    events should be the display of some sort of user interface
    indicating to the user that the application has been cached and
    that they can now use it offline.</p>

    <p>Otherwise, it is an <a href=#concept-appcache-upgrade title=concept-appcache-upgrade>upgrade attempt</a>. For
    each <a href=#browsing-context>browsing context</a> whose <a href=#active-document>active
    document</a> is associated with an <a href=#application-cache>application
    cache</a> in <var title="">cache group</var>, <a href=#queue-a-task>queue a
    task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-updateready>updateready</code> at the
    <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
    context</a>. The default action of these events should be the
    display of some sort of user interface indicating to the user
    that a new version is available and that they can activate it by
    reloading the page.</p>

   </li>

   <li><p>If appropriate, remove any user interface indicating that
   an update for this cache is in progress.</li>

   <li><p>Set the <a href=#concept-appcache-status title=concept-appcache-status>update
   status</a> of <var title="">cache group</var> to
   <i>idle</i>.</li>

  </ol><p>The <dfn id=cache-failure-steps>cache failure steps</dfn> are as follows:</p>

  <ol><li>

    <p>For each entry in <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
    entries</a>, run the following further substeps.  These steps
    may be run in parallel for two or more entries at a time.</p>

    <ol><li><p>Wait for the resource for this entry to have either
     completely downloaded or failed.</p>

     <li><p>Unassociate the <code>Document</code> for this entry from
     its <a href=#application-cache>application cache</a>, if it has one.</li>

     <li><p><a href=#queue-a-task>Queue a task</a> to <a href=#fire-a-simple-event>fire a simple
     event</a> called <code title=event-error><a href=#event-error>error</a></code> at the
     <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
     context</a> whose <a href=#active-document>active document</a> is the
     <code>Document</code> for this entry, if there still is one. The
     default action of these events should be the display of some sort
     of user interface indicating to the user that the user agent
     failed to save the application for offline use.</p>

    </ol></li>

   <li><p>For each <a href=#browsing-context>browsing context</a> whose <a href=#active-document>active
   document</a> is still associated with an <a href=#application-cache>application
   cache</a> in <var title="">cache group</var>, <a href=#queue-a-task>queue a
   task</a> to <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-error><a href=#event-error>error</a></code> at the
   <code><a href=#applicationcache>ApplicationCache</a></code> singleton of the <a href=#browsing-context>browsing
   context</a>. The default action of these events should be the
   display of some sort of user interface indicating to the user that
   the user agent failed to save the application for offline
   use.</li>

   <li><p>Empty <var title="">cache group</var>'s <a href=#concept-appcache-pending-masters title=concept-appcache-pending-masters>list of pending master
   entries</a>.</li>

   <li><p>If <var title="">cache group</var> has an <a href=#application-cache>application
   cache</a> whose <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a> is
   <i>incomplete</i>, then discard that <a href=#application-cache>application
   cache</a>.</p>

   <li><p>If appropriate, remove any user interface indicating that an
   update for this cache is in progress.</li>

   <li><p>Let the <a href=#concept-appcache-status title=concept-appcache-status>status</a> of <var title="">cache group</var> be <i>idle</i>.</li>

   <li><p>If this was a <a href=#concept-appcache-cache title=concept-appcache-cache>cache
   attempt</a>, discard <var title="">cache group</var>
   altogether.</p>

   <li><p>Abort the update process.</li>

  </ol><p>Attempts to <a href=#fetch>fetch</a> resources as part of the
  <a href=#application-cache-update-process>application cache update process</a> may be done with
  cache-defeating semantics, to avoid problems with stale or
  inconsistent intermediary caches.</p>

  <hr><p>User agents may invoke the <a href=#application-cache-update-process>application cache update
  process</a>, in the background, for any <a href=#application-cache>application
  cache</a>, at any time (with no <a href=#browsing-context>browsing
  context</a>). This allows user agents to keep caches primed and
  to update caches even before the user visits a site.</p>



  <h4 id=matching-a-fallback-namespace><span class=secno>5.8.5 </span>Matching a fallback namespace</h4>

  <p>A URL <dfn id=concept-appcache-matches-fallback title=concept-appcache-matches-fallback>matches a
  fallback namespace</dfn> if there exists a <a href=#relevant-application-cache>relevant
  application cache</a> whose <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a>'s URL has the
  <a href=#same-origin>same origin</a> as the URL in question, and that has a
  <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback namespace</a>
  that is a <a href=#prefix-match>prefix match</a> for the URL being examined. If
  multiple fallback namespaces match the same URL, the longest one is
  the one that matches. A URL looking for an fallback namespace can
  match more than one application cache at a time, but only matches
  one namespace in each cache.</p>

  <div class=example>

   <p>If a manifest <code title="">http://example.com/app1/manifest</code> declares that
   <code title="">http://example.com/resources/images</code> is a
   fallback namespace, and the user navigates to <code title="">HTTP://EXAMPLE.COM:80/resources/images/cat.png</code>,
   then the user agent will decide that the application cache
   identified by <code title="">http://example.com/app1/manifest</code> contains a
   namespace with a match for that URL.</p>

   <!-- "resolve a url" canonicalises the case for the scheme and host
   and removes the port if it is the default -->

  </div>


  <h4 id=the-application-cache-selection-algorithm><span class=secno>5.8.6 </span>The application cache selection algorithm</h4>

  <p>When the <dfn id=concept-appcache-init title=concept-appcache-init>application cache
  selection algorithm</dfn> algorithm is invoked with a
  <code>Document</code> <var title="">document</var>, a flag <var title="">document-is-markup</var> which can be true or false, and
  optionally a manifest <a href=#url>URL</a> <var title="">manifest
  URL</var>, the user agent must run the first applicable set of steps
  from the following list:</p>

  <dl class=switch><dt>If the flag <var title="">document-is-markup</var> is true, and
   <var title="">document</var> was loaded from an <a href=#application-cache>application
   cache</a>, and there is no <var title="">manifest URL</var></dt>

   <dt>If the flag <var title="">document-is-markup</var> is true, If
   <var title="">document</var> was loaded from an <a href=#application-cache>application
   cache</a>, and the URL of the <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a> of that cache's
   <a href=#application-cache-group>application cache group</a> is <em>not</em> the same as
   <var title="">manifest URL</var></dt>

   <dd>

    <p>Mark the entry for the resource from which <var title="">document</var> was taken in the <a href=#application-cache>application
    cache</a> from which it was loaded as <a href=#concept-appcache-foreign title=concept-appcache-foreign>foreign</a>.</p>

    <p>Restart the current navigation from the top of the <a href=#navigate title=navigate>navigation algorithm</a>, undoing any changes
    that were made as part of the initial load (changes can be avoided
    by ensuring that the step to <a href=#update-the-session-history-with-the-new-page>update the session history with
    the new page</a> is only ever completed <em>after</em> this
    <a href=#concept-appcache-init title=concept-appcache-init>application cache selection
    algorithm</a> is run, though this is not required).</p>

    <p class=note>The navigation will not result in the same
    resource being loaded, because "foreign" entries are never picked
    during navigation.</p>

    <p>User agents may notify the user of the inconsistency between
    the cache manifest and the document's own metadata, to aid in
    application development.</p>

   </dd>


   <dt>If <var title="">document</var> was loaded from an
   <a href=#application-cache>application cache</a><!--[redundant], and the URL of the
   <span title="concept-appcache-manifest">manifest</span> of that
   cache's <span>application cache group</span> is the same as <var
   title="">manifest URL</var>--></dt>

   <dd>

    <p>Associate <var title="">document</var> with the
    <a href=#application-cache>application cache</a> from which it was loaded. Invoke
    the <a href=#application-cache-update-process>application cache update process</a> for that cache
    and with the <a href=#browsing-context>browsing context</a> being navigated.</p>

   </dd>


   <dt>If <var title="">document</var> <!--[redundant] was not loaded
   from an <span>application cache</span>, but it--> was loaded using
   HTTP GET <a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or
   equivalent</a>, and <var title="">manifest URL</var> has the
   <a href=#same-origin>same origin</a> as <var title="">document</var></dt>

   <dd>

    <p>Invoke the <a href=#application-cache-update-process>application cache update process</a> for
    <var title="">manifest URL</var>, with the <a href=#browsing-context>browsing
    context</a> being navigated, and with <var title="">document</var> and the resource from which <var title="">document</var> was loaded as the new <a href=#concept-appcache-master title=concept-appcache-master>master</a> resource.</p>

   </dd>


   <dt>Otherwise</dt> <!-- not from cache and either non GET or wrong-origin manifest -->

   <dd>

    <p>The <code>Document</code> is not associated with any
    <a href=#application-cache>application cache</a>.</p>

    <p>If there was a <var title="">manifest URL</var>, the user agent
    may report to the user that it was ignored, to aid in application
    development.</p>

   </dd>

  </dl><h5 id=changesToNetworkingModel><span class=secno>5.8.6.1 </span>Changes to the networking model</h5>

  <p>When a <a href=#browsing-context>browsing context</a>'s <a href=#active-document>active
  document</a> is associated with an <a href=#application-cache>application cache</a>
  whose <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness
  flag</a> is <i>complete</i>, any and all loads for resources in
  that <a href=#browsing-context>browsing context</a> other than those for <a href=#child-browsing-context title="child browsing context">child browsing contexts</a> must
  go through the following steps instead of immediately invoking the
  mechanisms appropriate to that resource's scheme:</p>

  <ol><li><p>If the resource is not to be fetched using the HTTP GET
   mechanism <a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or
   equivalent</a>, or if it has a <a href=#javascript-protocol title="javascript
   protocol"><code title="">javascript:</code> URL</a>, then
   <a href=#fetch>fetch</a> the resource normally and abort these
   steps.</li>

   <li><p>If the resource's URL is <a href=#concept-appcache-master title=concept-appcache-master>a master entry</a>, <a href=#concept-appcache-manifest title=concept-appcache-manifest>the manifest</a>, <a href=#concept-appcache-explicit title=concept-appcache-explicit>an explicit entry</a>, or
   <a href=#concept-appcache-fallback title=concept-appcache-fallback>a fallback entry</a> in
   the <a href=#application-cache>application cache</a>, then get the resource from the
   cache (instead of fetching it), and abort these steps.</li>

   <li>

    <p>If the resource's URL has the <a href=#same-origin>same origin</a> as the
    manifest's URL, and there is a <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback namespace</a> in
    the <a href=#application-cache>application cache</a> that is a <a href=#prefix-match>prefix
    match</a> for the resource's URL, then:</p>

    <p><a href=#fetch>Fetch</a> the resource normally. If this results in a
    redirect to a resource with another <a href=#origin-0>origin</a>
    (indicative of a captive portal), or a 4xx or 5xx status code
    <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a>,
    or if there were network errors (but not if the user canceled the
    download), then instead get, from the cache, the resource of the
    <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback entry</a>
    corresponding to the matched namespace. Abort these steps.</p>

   </li>

   <li><p>If there is an entry in the <a href=#application-cache>application cache</a>'s
   <a href=#concept-appcache-onlinewhitelist title=concept-appcache-onlinewhitelist>online
   whitelist</a> that has the <a href=#same-origin>same origin</a> as the
   resource's URL and that is a <a href=#prefix-match>prefix match</a> for the
   resource's URL, then <a href=#fetch>fetch</a> the resource normally and
   abort these steps.</li>

   <li><p>Fail the resource load.</li>

  </ol><p class=note>The above algorithm ensures that resources that are
  not present in the <a href=#concept-appcache-manifest title=concept-appcache-manifest>manifest</a> will always fail
  to load (at least, after the <a href=#application-cache>application cache</a> has been
  primed the first time), making the testing of offline applications
  simpler.</p>


  <h4 id=application-cache-api><span class=secno>5.8.7 </span>Application cache API</h4>

  <pre class=idl>interface <dfn id=applicationcache>ApplicationCache</dfn> {

  // <a href=#concept-appcache-status title=concept-appcache-status>update status</a>
  const unsigned short <a href=#dom-appcache-uncached title=dom-appcache-UNCACHED>UNCACHED</a> = 0;
  const unsigned short <a href=#dom-appcache-idle title=dom-appcache-IDLE>IDLE</a> = 1;
  const unsigned short <a href=#dom-appcache-checking title=dom-appcache-CHECKING>CHECKING</a> = 2;
  const unsigned short <a href=#dom-appcache-downloading title=dom-appcache-DOWNLOADING>DOWNLOADING</a> = 3;
  const unsigned short <a href=#dom-appcache-updateready title=dom-appcache-UPDATEREADY>UPDATEREADY</a> = 4;
  const unsigned short <a href=#dom-appcache-obsolete title=dom-appcache-OBSOLETE>OBSOLETE</a> = 5;
  readonly attribute unsigned short <a href=#dom-appcache-status title=dom-appcache-status>status</a>;

  // updates
  void <a href=#dom-appcache-update title=dom-appcache-update>update</a>();
  void <a href=#dom-appcache-swapcache title=dom-appcache-swapCache>swapCache</a>();

  // events
           attribute <a href=#function>Function</a> <a href=#handler-appcache-onchecking title=handler-appcache-onchecking>onchecking</a>;
           attribute <a href=#function>Function</a> <a href=#handler-appcache-onerror title=handler-appcache-onerror>onerror</a>;
           attribute <a href=#function>Function</a> <a href=#handler-appcache-onnoupdate title=handler-appcache-onnoupdate>onnoupdate</a>;
           attribute <a href=#function>Function</a> <a href=#handler-appcache-ondownloading title=handler-appcache-ondownloading>ondownloading</a>;
           attribute <a href=#function>Function</a> <a href=#handler-appcache-onprogress title=handler-appcache-onprogress>onprogress</a>;
           attribute <a href=#function>Function</a> <a href=#handler-appcache-onupdateready title=handler-appcache-onupdateready>onupdateready</a>;
           attribute <a href=#function>Function</a> <a href=#handler-appcache-oncached title=handler-appcache-oncached>oncached</a>;
           attribute <a href=#function>Function</a> <a href=#handler-appcache-onobsolete title=handler-appcache-onobsolete>onobsolete</a>;

};</pre>

  <p>Objects implementing the <code><a href=#applicationcache>ApplicationCache</a></code> interface
  must also implement the <code>EventTarget</code> interface.</p>

  <p>There is a one-to-one mapping from <code><a href=#window>Window</a></code> objects to
  <code><a href=#applicationcache>ApplicationCache</a></code> objects. The <dfn id=dom-applicationcache title=dom-applicationCache><code>applicationCache</code></dfn>
  attribute on <code><a href=#window>Window</a></code> objects must return the
  <code><a href=#applicationcache>ApplicationCache</a></code> object associated with the
  <code><a href=#window>Window</a></code> object.</p>

  <p>An <code><a href=#applicationcache>ApplicationCache</a></code> object might be associated with
  an <a href=#application-cache>application cache</a>. When the <code>Document</code>
  object that the <code><a href=#applicationcache>ApplicationCache</a></code> object maps to is
  associated with an application cache, then that is the application
  cache with which the <code><a href=#applicationcache>ApplicationCache</a></code> object is
  associated.</p>

  <p>The <dfn id=dom-appcache-status title=dom-appcache-status><code>status</code></dfn>
  attribute, on getting, must return the current state of the
  <a href=#application-cache>application cache</a> <code><a href=#applicationcache>ApplicationCache</a></code> object
  is associated with, if any. This must be the appropriate value from
  the following list:</p>

  <dl><dt><dfn id=dom-appcache-uncached title=dom-appcache-UNCACHED><code>UNCACHED</code></dfn>
   (numeric value 0)</dt>

   <dd><p>The <code><a href=#applicationcache>ApplicationCache</a></code> object is not associated
   with an <a href=#application-cache>application cache</a> at this time.</dd>

   <dt><dfn id=dom-appcache-idle title=dom-appcache-IDLE><code>IDLE</code></dfn>
   (numeric value 1)</dt>

   <dd><p>The <code><a href=#applicationcache>ApplicationCache</a></code> object is associated with
   an <a href=#application-cache>application cache</a> whose <a href=#application-cache-group>application cache
   group</a>'s <a href=#concept-appcache-status title=concept-appcache-status>update
   status</a> is <i>idle</i>, and that <a href=#application-cache>application
   cache</a> is the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a> cache in its
   <a href=#application-cache-group>application cache group</a>, and the <a href=#application-cache-group>application
   cache group</a> is not marked as <a href=#concept-appcache-obsolete title=concept-appcache-obsolete>obsolete</a>.</dd>

   <dt><dfn id=dom-appcache-checking title=dom-appcache-CHECKING><code>CHECKING</code></dfn>
   (numeric value 2)</dt>

   <dd><p>The <code><a href=#applicationcache>ApplicationCache</a></code> object is associated with
   an <a href=#application-cache>application cache</a> whose <a href=#application-cache-group>application cache
   group</a>'s <a href=#concept-appcache-status title=concept-appcache-status>update
   status</a> is <i>checking</i>.</dd>

   <dt><dfn id=dom-appcache-downloading title=dom-appcache-DOWNLOADING><code>DOWNLOADING</code></dfn>
   (numeric value 3)</dt>

   <dd><p>The <code><a href=#applicationcache>ApplicationCache</a></code> object is associated with
   an <a href=#application-cache>application cache</a> whose <a href=#application-cache-group>application cache
   group</a>'s <a href=#concept-appcache-status title=concept-appcache-status>update
   status</a> is <i>downloading</i>.</dd>

   <dt><dfn id=dom-appcache-updateready title=dom-appcache-UPDATEREADY><code>UPDATEREADY</code></dfn>
   (numeric value 4)</dt>

   <dd><p>The <code><a href=#applicationcache>ApplicationCache</a></code> object is associated with
   an <a href=#application-cache>application cache</a> whose <a href=#application-cache-group>application cache
   group</a>'s <a href=#concept-appcache-status title=concept-appcache-status>update
   status</a> is <i>idle</i>, and whose <a href=#application-cache-group>application cache
   group</a> is not marked as <a href=#concept-appcache-obsolete title=concept-appcache-obsolete>obsolete</a>, but that
   <a href=#application-cache>application cache</a> is <em>not</em> the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a> cache in its
   group.</dd>

   <dt><dfn id=dom-appcache-obsolete title=dom-appcache-OBSOLETE><code>OBSOLETE</code></dfn>
   (numeric value 5)</dt>

   <dd><p>The <code><a href=#applicationcache>ApplicationCache</a></code> object is associated with
   an <a href=#application-cache>application cache</a> whose <a href=#application-cache-group>application cache
   group</a> is marked as <a href=#concept-appcache-obsolete title=concept-appcache-obsolete>obsolete</a>.</dd>

  </dl><hr><p>If the <dfn id=dom-appcache-update title=dom-appcache-update><code>update()</code></dfn> method is
  invoked, the user agent must invoke the <a href=#application-cache-update-process>application cache
  update process</a>, in the background, for the <a href=#application-cache>application
  cache</a> with which the <code><a href=#applicationcache>ApplicationCache</a></code> object is
  associated, but with no <a href=#browsing-context>browsing context</a>. If there is
  no such application cache, or if it is marked as <a href=#concept-appcache-obsolete title=concept-appcache-obsolete>obsolete</a>, then the method
  must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception instead.</p>

  <p>If the <dfn id=dom-appcache-swapcache title=dom-appcache-swapCache><code>swapCache()</code></dfn> method
  is invoked, the user agent must run the following steps:

  <ol><li><p>Let <var title="">document</var> be the
   <code>Document</code> with which the <code><a href=#applicationcache>ApplicationCache</a></code>
   object is associated.</li>

   <li><p>Check that <var title="">document</var> is associated with
   an <a href=#application-cache>application cache</a>. If it is not, then raise an
   <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception and abort these
   steps.</li>

   <li><p>Let <var title="">cache</var> be the <a href=#application-cache>application
   cache</a> with which the <code><a href=#applicationcache>ApplicationCache</a></code> object is
   associated. (By definition, this is the same as the one that was
   found in the previous step.)</li>

   <li><p>If <var title="">cache</var>'s <a href=#application-cache-group>application cache
   group</a> is marked as <a href=#concept-appcache-obsolete title=concept-appcache-obsolete>obsolete</a>, then raise an
   <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception and abort these
   steps.</li>

   <li><p>Check that there is an application cache in the same
   <a href=#application-cache-group>application cache group</a> as <var title="">cache</var>
   whose <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness
   flag</a> is <i>complete</i> and that is <a href=#concept-appcache-newer title=concept-appcache-newer>newer</a> than <var title="">cache</var>. If there is not, then raise an
   <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception and abort these
   steps.</li>

   <li><p>Let <var title="">new cache</var> be the <a href=#concept-appcache-newer title=concept-appcache-newer>newest</a> <a href=#application-cache>application
   cache</a> in the same <a href=#application-cache-group>application cache group</a> as
   <var title="">cache</var> whose <a href=#concept-appcache-completeness title=concept-appcache-completeness>completeness flag</a> is
   <i>complete</i>.</li>

   <li><p>Unassociate <var title="">document</var> from <var title="">cache</var> and instead associate it with <var title="">new cache</var>.</li>

  </ol><p>The following are the <a href=#event-handler-attributes-0>event handler attributes</a> that
  must be supported, as DOM attributes, by all objects implementing
  the <code><a href=#applicationcache>ApplicationCache</a></code> interface:</p>

  <dl><dt><dfn id=handler-appcache-onchecking title=handler-appcache-onchecking><code>onchecking</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-checking>checking</code> event is targeted at or
   bubbles through the <code><a href=#applicationcache>ApplicationCache</a></code> object.</dd>


   <dt><dfn id=handler-appcache-onerror title=handler-appcache-onerror><code>onerror</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-error><a href=#event-error>error</a></code> event is targeted at or bubbles
   through the <code><a href=#applicationcache>ApplicationCache</a></code> object.</dd>


   <dt><dfn id=handler-appcache-onnoupdate title=handler-appcache-onnoupdate><code>onnoupdate</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-noupdate>noupdate</code> event is targeted at or
   bubbles through the <code><a href=#applicationcache>ApplicationCache</a></code> object.</dd>


   <dt><dfn id=handler-appcache-ondownloading title=handler-appcache-ondownloading><code>ondownloading</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-downloading>downloading</code> event is targeted at
   or bubbles through the <code><a href=#applicationcache>ApplicationCache</a></code>
   object.</dd>


   <dt><dfn id=handler-appcache-onprogress title=handler-appcache-onprogress><code>onprogress</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-progress><a href=#event-progress>progress</a></code> event is targeted at or
   bubbles through the <code><a href=#applicationcache>ApplicationCache</a></code> object.</dd>


   <dt><dfn id=handler-appcache-onupdateready title=handler-appcache-onupdateready><code>onupdateready</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-updateready>updateready</code> event is targeted at
   or bubbles through the <code><a href=#applicationcache>ApplicationCache</a></code>
   object.</dd>


   <dt><dfn id=handler-appcache-oncached title=handler-appcache-oncached><code>oncached</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-cached>cached</code> event is targeted at or bubbles
   through the <code><a href=#applicationcache>ApplicationCache</a></code> object.</dd>


   <dt><dfn id=handler-appcache-onobsolete title=handler-appcache-onobsolete><code>onobsolete</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-obsolete>obsolete</code> event is targeted at or bubbles
   through the <code><a href=#applicationcache>ApplicationCache</a></code> object.</dd>

  </dl><h4 id=browser-state><span class=secno>5.8.8 </span>Browser state</h4>

  <p>The <dfn id=dom-navigator-online title=dom-navigator-onLine><code>navigator.onLine</code></dfn>
  attribute must return false if the user agent will not contact the
  network when the user follows links or when a script requests a
  remote page (or knows that such an attempt would fail), and must
  return true otherwise.</p>

  <p>When the value that would be returned by the <code title=dom-navigator-onLine><a href=#dom-navigator-online>navigator.onLine</a></code> attribute of
  the <code><a href=#window>Window</a></code> changes from true to false, the user agent
  must <a href=#fire-a-simple-event>fire a simple event</a> called <dfn id=event-offline title=event-offline><code>offline</code></dfn> at the
  <code><a href=#window>Window</a></code> object.</p>

  <p>On the other hand, when the value that would be returned by the
  <code title=dom-navigator-onLine><a href=#dom-navigator-online>navigator.onLine</a></code> attribute
  of the <code><a href=#window>Window</a></code> changes from false to true, the user
  agent must <a href=#fire-a-simple-event>fire a simple event</a> called <dfn id=event-online title=event-online><code>online</code></dfn> at the
  <code><a href=#window>Window</a></code> object.</p>

  <p class=note>This attribute is inherently unreliable. A computer
  can be connected to a network without having Internet access.</p>



  <h3 id=history><span class=secno>5.9 </span>Session history and navigation</h3>

  <h4 id=the-session-history-of-browsing-contexts><span class=secno>5.9.1 </span>The session history of browsing contexts</h4>

  <p>The sequence of <code>Document</code>s in a <a href=#browsing-context>browsing
  context</a> is its <dfn id=session-history>session history</dfn>.</p>

  <p><code><a href=#history-1>History</a></code> objects provide a representation of the
  pages in the session history of <a href=#browsing-context title="browsing
  context">browsing contexts</a>. Each <a href=#browsing-context>browsing
  context</a>, including <a href=#nested-browsing-context>nested browsing context</a>, has
  a distinct session history.</p>

  <p>Each <code>Document</code> object in a <a href=#browsing-context>browsing
  context</a>'s <a href=#session-history>session history</a> is associated with a
  unique instance of the <code><a href=#history-1>History</a></code> object, although they
  all must model the same underlying <a href=#session-history>session history</a>.</p>

  <p>The <dfn id=dom-history title=dom-history><code>history</code></dfn> attribute
  of the <code><a href=#window>Window</a></code> interface must return the object
  implementing the <code><a href=#history-1>History</a></code> interface for that
  <code><a href=#window>Window</a></code> object's <code>Document</code>.</p>

  <p><code><a href=#history-1>History</a></code> objects represent their <a href=#browsing-context>browsing
  context</a>'s session history as a flat list of <a href=#session-history-entry title="session history entry">session history entries</a>. Each
  <dfn id=session-history-entry>session history entry</dfn> consists of either a
  <a href=#url>URL</a> or a <a href=#state-object>state object</a>, or both, and may in
  addition have a title, a <code>Document</code> object, form data, a
  scroll position, and other information associated with it.</p>

  <p class=note>This does not imply that the user interface need be
  linear. See the <a href=#history-notes>notes below</a>.</p>

  <p>URLs without associated <a href=#state-object title="state object">state
  objects</a> are added to the session history as the user (or
  script) navigates from page to page.</p>

  <p>A <dfn id=state-object>state object</dfn> is an object representing a user
  interface state.</p>

  <p>Pages can <a href=#dom-history-pushstate title=dom-history-pushState>add</a> <a href=#state-object title="state object">state objects</a> between their entry in the
  session history and the next ("forward") entry. These are then <a href=#event-popstate title=event-popstate>returned to the script</a> when the user
  (or script) goes back in the history, thus enabling authors to use
  the "navigation" metaphor even in one-page applications.</p>

  <p>At any point, one of the entries in the session history is the
  <dfn id=current-entry>current entry</dfn>. This is the entry representing the
  <a href=#active-document>active document</a> of the <a href=#browsing-context>browsing
  context</a>. The <a href=#current-entry>current entry</a> is usually an entry
  for the <a href=#dom-location-href title=dom-location-href>location</a> of the
  <code>Document</code>. However, it can also be one of the entries
  for <a href=#state-object title="state object">state objects</a> added to the
  history by that document.</p>

  <p>Entries that consist of <a href=#state-object title="state object">state
  objects</a> share the same <code>Document</code> as the entry for
  the page that was active when they were added.</p>

  <p>Contiguous entries that differ just by fragment identifier also
  share the same <code>Document</code>.</p>

  <p class=note>All entries that share the same
  <code>Document</code> (and that are therefore merely different
  states of one particular document) are contiguous by definition.</p>

  <p>User agents may <a href=#discard-a-document title="discard a Document">discard</a>
  the <code>Document</code> objects of entries other than the
  <a href=#current-entry>current entry</a> that are not referenced from any script,
  reloading the pages afresh when the user or script navigates back to
  such pages. This specification does not specify when user agents
  should discard <code>Document</code> objects and when they should
  cache them.</p>

  <p>Entries that have had their <code>Document</code> objects
  discarded must, for the purposes of the algorithms given below, act
  as if they had not. When the user or script navigates back or
  forwards to a page which has no in-memory DOM objects, any other
  entries that shared the same <code>Document</code> object with it
  must share the new object as well.</p>

  <p>When state object entries are added, a URL can be provided. This
  URL is used to replace the state object entry if the
  <code>Document</code> is evicted.</p>


  <h4 id=the-history-interface><span class=secno>5.9.2 </span>The <code><a href=#history-1>History</a></code> interface</h4>

  <pre class=idl>interface <dfn id=history-1>History</dfn> {
  readonly attribute long <a href=#dom-history-length title=dom-history-length>length</a>;
  void <a href=#dom-history-go title=dom-history-go>go</a>([Optional] in long delta);
  void <a href=#dom-history-back title=dom-history-back>back</a>();
  void <a href=#dom-history-forward title=dom-history-forward>forward</a>();
  void <a href=#dom-history-pushstate title=dom-history-pushState>pushState</a>(in any data, in DOMString title, [Optional] in DOMString url);
  void <a href=#dom-history-clearstate title=dom-history-clearState>clearState</a>();
};</pre>

  <p>The <dfn id=dom-history-length title=dom-history-length><code>length</code></dfn>
  attribute of the <code><a href=#history-1>History</a></code> interface must return the
  number of entries in this <a href=#session-history>session history</a>.</p>

  <p>The actual entries are not accessible from script.</p>

  <p>The <dfn id=dom-history-go title=dom-history-go><code>go(<var title="">delta</var>)</code></dfn> method causes the UA to move the
  number of steps specified by <var title="">delta</var> in the
  session history.</p>

  <p>If the <var title="">delta</var> is zero, or if the argument is
  omitted, then the user agent must act as if the <code title=dom-location-reload>location.reload()</code> method was
  called instead.</p>

  <p>Otherwise, if the index of the <a href=#current-entry>current entry</a> plus
  <var title="">delta</var> is less than zero or greater than or equal
  to the <a href=#dom-history-length title=dom-history-length>number of items in the
  session history</a>, then the user agent must do nothing.</p>

  <p>Otherwise, the user agent must cause the current <a href=#browsing-context>browsing
  context</a> to <a href=#traverse-the-history>traverse the history</a> to the specified
  entry. The <i>specified entry</i> is the one whose index equals the
  index of the <a href=#current-entry>current entry</a> plus <var title="">delta</var>.</p>

  <p>When the user navigates through a <a href=#browsing-context>browsing context</a>,
  e.g. using a browser's back and forward buttons, the user agent must
  translate this action into the equivalent invocations of the <code title=dom-history-go><a href=#dom-history-go>history.go(<var title="">delta</var>)</a></code>
  method on the various affected <code title=dom-window><a href=#dom-window>window</a></code> objects.</p>

  <p>Some of the other members of the <code><a href=#history-1>History</a></code> interface
  are defined in terms of the <code title=dom-history-go><a href=#dom-history-go>go()</a></code>
  method, as follows:</p>

  <table><tr><th>Member</th>
    <th>Definition</th>
   <tr><td><dfn id=dom-history-back title=dom-history-back><code>back()</code></dfn></td>
    <td>Must do the same as <code title=dom-history-go><a href=#dom-history-go>go(-1)</a></code></td>
   <tr><td><dfn id=dom-history-forward title=dom-history-forward><code>forward()</code></dfn></td>
    <td>Must do the same as <code title=dom-history-go><a href=#dom-history-go>go(1)</a></code></td>
   </table><p>The <dfn id=dom-history-pushstate title=dom-history-pushState><code>pushState(<var title="">data</var>, <var title="">title</var>, <var title="">url</var>)</code></dfn> method adds a state object to the
  history.</p>

  <p>When this method is invoked, the user agent must run the following steps:</p>

  <ol><li><p>Let <var title="">clone data</var> be a <a href=#structured-clone>structured
   clone</a> of the specified <var title="">data</var>. If this
   throws an exception, then rethrow that exception and abort these
   steps.</li>

   <li>

    <p>If a third argument is specified, run these substeps:</p>

    <ol><li><a href=#resolve-a-url title="resolve a url">Resolve</a> the value of the
     third argument, relative to the <a href=#first-script>first script</a>'s <a href="#script's-base-url" title="script's base URL">base URL</a>.</li>

     <li>If that fails, raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception and
     abort the <code title=dom-history-pushState><a href=#dom-history-pushstate>pushState()</a></code>
     steps.</li>

     <li>Compare the resulting <a href=#absolute-url>absolute URL</a> to <a href="#the-document's-address">the
     document's address</a>. If any part of these two <a href=#url title=URL>URLs</a> differ other than the <a href=#url-path title=url-path>&lt;path&gt;</a>, <a href=#url-query title=url-query>&lt;query&gt;</a>, and <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a> components, then
     raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception and abort the <code title=dom-history-pushState><a href=#dom-history-pushstate>pushState()</a></code> steps.</li>

    </ol><p>For the purposes of the comparison in the above substeps, the
    <a href=#url-path title=url-path>&lt;path&gt;</a> and <a href=#url-query title=url-query>&lt;query&gt;</a> components can only be the
    same if the URLs use a hierarchical <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a>.</p>

   </li>

   <li><p>Remove from the <a href=#session-history>session history</a> any entries for
   the <code>Document</code> from the entry after the <a href=#current-entry>current
   entry</a> up to the last entry in the session history that
   references the same <code>Document</code> object, if any. If the
   <a href=#current-entry>current entry</a> is the last entry in the session
   history, or if there are no entries after the <a href=#current-entry>current
   entry</a> that reference the same <code>Document</code> object,
   then no entries are removed.</li>

   <li><p>Add a state object entry to the session history, after the
   <a href=#current-entry>current entry</a>, with <var title="">cloned data</var> as
   the state object, the given <var title="">title</var> as the title,
   and, if the third argument is present, the <a href=#absolute-url>absolute
   URL</a> that was found earlier in this algorithm as the
   <a href=#url>URL</a> of the entry.</li>

   <!-- XXX update the current address as per bug 6437 -->

   <li><p>Update the <a href=#current-entry>current entry</a> to be the this newly
   added entry.</li>

  </ol><p class=note>The <var title="">title</var> is purely
  advisory. User agents might use the title in the user interface.</p>

  <p>User agents may limit the number of state objects added to the
  session history per page. If a page hits the UA-defined limit, user
  agents must remove the entry immediately after the first entry for
  that <code>Document</code> object in the session history after
  having added the new entry. (Thus the state history acts as a FIFO
  buffer for eviction, but as a LIFO buffer for navigation.)</p>

  <p>The <dfn id=dom-history-clearstate title=dom-history-clearState><code>clearState()</code></dfn>
  method removes all the state objects for the <code>Document</code>
  object from the session history.</p>

  <p>When this method is invoked, the user agent must remove from the
  session history all the entries from the first state object entry
  for that <code>Document</code> object up to the last entry that
  references that same <code>Document</code> object, if any.</p>

  <p>Then, if the <a href=#current-entry>current entry</a> was removed in the
  previous step, the <a href=#current-entry>current entry</a> must be set to the
  last entry for that <code>Document</code> object in the session
  history.</p>


  <h4 id=activating-state-object-entries><span class=secno>5.9.3 </span><dfn title="activate the state object">Activating state object entries</dfn></h4>

  <p>When an entry in the session history is activated (which happens
  during <a href=#traverse-the-history title="traverse the history">session traversal</a>,
  as described above), the user agent must run the following
  steps:</p>

  <ol><!-- only called for the first entry of a Document set and for
  state object entries, not for frag id change entries --><li><p>If the entry is a <a href=#state-object>state object</a> entry, let <var title="">state</var> be a <a href=#structured-clone>structured clone</a> of that
   state object. Otherwise, let <var title="">state</var> be
   null.</li>

   <li>

    <p>Run the appropriate according to the conditions described:</p>

    <dl class=switch><dt>If the <a href=#current-document-readiness>current document readiness</a> is set to the
     string "complete"</dt>

     <dd><p><a href=#queue-a-task>Queue a task</a> to fire a <dfn id=event-popstate title=event-popstate><code>popstate</code></dfn> event in no
     namespace on the <code><a href=#window>Window</a></code> object of the
     <code>Document</code>, using the <code><a href=#popstateevent>PopStateEvent</a></code>
     interface, with the <code title=dom-PopStateEvent-state><a href=#dom-popstateevent-state>state</a></code> attribute set to the
     value of <var title="">state</var>. This event must bubble but
     not be cancelable and has no default action. The <a href=#task-source>task
     source</a> for this task is the <a href=#dom-manipulation-task-source>DOM manipulation task
     source</a>.</dd>

     <dt>Otherwise</dt>

     <dd><p>Let the <code>Document</code>'s <dfn id=pending-state-object>pending state
     object</dfn> be <var title="">state</var>. (If there was already
     a <a href=#pending-state-object>pending state object</a>, the previous one is
     discarded.)</p>

     <p class=note>The event will then be fired just after the <code title=event-load><a href=#event-load>load</a></code> event.</dd>

    </dl></li>

  </ol><p>The <a href=#pending-state-object>pending state object</a> must be initially null.</p>

  <hr><pre class=idl>interface <dfn id=popstateevent>PopStateEvent</dfn> : Event {
  readonly attribute any <a href=#dom-popstateevent-state title=dom-PopStateEvent-state>state</a>;
  void <a href=#dom-popstateevent-initpopstateevent title=dom-PopStateEvent-initPopStateEvent>initPopStateEvent</a>(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any stateArg);
  void <a href=#dom-popstateevent-initpopstateeventns title=dom-PopStateEvent-initPopStateEventNS>initPopStateEventNS</a>(in DOMString namespaceURIArg, in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any stateArg);
};</pre>

  <p>The <dfn id=dom-popstateevent-initpopstateevent title=dom-PopStateEvent-initPopStateEvent><code>initPopStateEvent()</code></dfn>
  and <dfn id=dom-popstateevent-initpopstateeventns title=dom-PopStateEvent-initPopStateEventNS><code>initPopStateEventNS()</code></dfn>
  methods must initialize the event in a manner analogous to the
  similarly-named methods in the DOM3 Events interfaces. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p>The <dfn id=dom-popstateevent-state title=dom-PopStateEvent-state><code>state</code></dfn>
  attribute represents the context information for the event, or null,
  if the state represented is the initial state of the
  <code>Document</code>.</p>



  <h4 id=the-location-interface><span class=secno>5.9.4 </span>The <code><a href=#location>Location</a></code> interface</h4>

  <p>Each <code>Document</code> object in a <a href=#browsing-context>browsing
  context</a>'s session history is associated with a unique
  instance of a <code><a href=#location>Location</a></code> object.</p>

  <p>The <dfn id=dom-document-location title=dom-document-location><code>location</code></dfn> attribute
  of the <code><a href=#htmldocument>HTMLDocument</a></code> interface must return the
  <code><a href=#location>Location</a></code> object for that <code>Document</code> object,
  if it is in a <a href=#browsing-context>browsing context</a>, and null otherwise.</p>

  <p>The <dfn id=dom-location title=dom-location><code>location</code></dfn>
  attribute of the <code><a href=#window>Window</a></code> interface must return the
  <code><a href=#location>Location</a></code> object for that <code><a href=#window>Window</a></code> object's
  <code>Document</code>.</p>

  <p><code><a href=#location>Location</a></code> objects provide a representation of <a href="#the-document's-address" title="the document's address">their document's address</a>, and
  allow the <a href=#current-entry>current entry</a> of the <a href=#browsing-context>browsing
  context</a>'s session history to be changed, by adding or
  replacing entries in the <code title=dom-history><a href=#dom-history>history</a></code>
  object.</p>

  <pre class=idl>interface <dfn id=location>Location</dfn> {
  readonly attribute DOMString <a href=#dom-location-href title=dom-location-href>href</a>;
  void <a href=#dom-location-assign title=dom-location-assign>assign</a>(in DOMString url);
  void <a href=#dom-location-replace title=dom-location-replace>replace</a>(in DOMString url);
  void <span title=dom-location-reload>reload</span>();

  // <a href=#url-decomposition-attributes>URL decomposition attributes</a> <!-- blame brendan for these "innovative" names -->
           attribute DOMString <a href=#dom-location-protocol title=dom-location-protocol>protocol</a>;
           attribute DOMString <a href=#dom-location-host title=dom-location-host>host</a>;
           attribute DOMString <a href=#dom-location-hostname title=dom-location-hostname>hostname</a>;
           attribute DOMString <a href=#dom-location-port title=dom-location-port>port</a>;
           attribute DOMString <a href=#dom-location-pathname title=dom-location-pathname>pathname</a>;
           attribute DOMString <a href=#dom-location-search title=dom-location-search>search</a>;
           attribute DOMString <a href=#dom-location-hash title=dom-location-hash>hash</a>;

  // resolving relative URLs
  DOMString <a href=#dom-location-resolveurl title=dom-location-resolveURL>resolveURL</a>(in DOMString url);
};</pre>

  <p>The <dfn id=dom-location-href title=dom-location-href><code>href</code></dfn>
  attribute must return <a href="#the-document's-address" title="the document's address">the
  address</a> of the associated <code>Document</code> object, as an
  <a href=#absolute-url>absolute URL</a>.</p>

  <p>On setting, <!--XXX Mozilla does this, but IE doesn't. What
  should we do?: the behavior depends on the context in which the
  script that set the attribute is running. If the script ran as the
  direct result of the execution of a <code>script</code> element in
  the document represented by the <code>Location</code> object's
  associated <code>Document</code> object, then the user agent must
  act as if the <code title="dom-location-replace">replace()</code>
  method had been called with the new value as its
  argument. Otherwise,--> the user agent must act as if the <code title=dom-location-assign><a href=#dom-location-assign>assign()</a></code> method had been called
  with the new value as its argument.</p><!-- XXX may wish to allow
  replace instead as a UI improvement --> <!-- XXX if we decide to
  make .href setters just be the same as calling assign(), then change
  the magic location setter above simply refer straight to assign() as
  well, so we don't have two levels of indirection -->

  <p>When the <dfn id=dom-location-assign title=dom-location-assign><code>assign(<var title="">url</var>)</code></dfn> method is invoked, the UA must
  <a href=#resolve-a-url title="resolve a url">resolve</a> the argument, relative to
  the <a href=#first-script>first script</a>'s <a href="#script's-base-url" title="script's base URL">base
  URL</a>, and if that is successful, must <a href=#navigate>navigate</a>
  the <a href=#browsing-context>browsing context</a> to the specified <var title="">url</var>.</p> <!-- XXX browsers seem to treat this as
  having <span>replacement enabled</span> if the browsing context has
  only one entry and that entry is about:blank.  IE and Firefox only
  seem to treat it that way if the DOM is still a virgin DOM; Safari
  doesn't check that. -->

  <p>When the <dfn id=dom-location-replace title=dom-location-replace><code>replace(<var title="">url</var>)</code></dfn> method is invoked, the UA must
  <a href=#resolve-a-url title="resolve a url">resolve</a> the argument, relative to
  the <a href=#first-script>first script</a>'s <a href="#script's-base-url" title="script's base URL">base
  URL</a>, and if that is successful, <a href=#navigate>navigate</a> the
  <a href=#browsing-context>browsing context</a> to the specified <var title="">url</var> with <a href=#replacement-enabled>replacement enabled</a>.</p>

  <p>Navigation for the <code title=dom-location-assign><a href=#dom-location-assign>assign()</a></code> and <code title=dom-location-replace><a href=#dom-location-replace>replace()</a></code> methods must be done
  with the <a href="#script's-browsing-context" title="script's browsing context">browsing
  context</a> of the script that invoked the method as the
  <a href=#source-browsing-context>source browsing context</a>.</p>

  <p>If the <a href=#resolve-a-url title="resolve a url">resolving</a> step of the
  the <code title=dom-location-assign><a href=#dom-location-assign>assign()</a></code> and <code title=dom-location-replace><a href=#dom-location-replace>replace()</a></code> methods is not
  successful, then the user agent must instead throw a
  <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception.</p>

<!--XXX
  <dfn title="dom-location-reload"><code>reload()</code></dfn>
  reload during resize event:
  redisplay the current page (without reloading it). This
  theoretically would have no effect but in practice can be useful to
  work around rendering bugs.

reload on shared Document updates all of them

user reload must be equivalent to .reload()
-->

  <p>The <code><a href=#location>Location</a></code> interface also has the complement of
  <a href=#url-decomposition-attributes>URL decomposition attributes</a>, <dfn id=dom-location-protocol title=dom-location-protocol><code>protocol</code></dfn>, <dfn id=dom-location-host title=dom-location-host><code>host</code></dfn>, <dfn id=dom-location-port title=dom-location-port><code>port</code></dfn>, <dfn id=dom-location-hostname title=dom-location-hostname><code>hostname</code></dfn>, <dfn id=dom-location-pathname title=dom-location-pathname><code>pathname</code></dfn>, <dfn id=dom-location-search title=dom-location-search><code>search</code></dfn>, and <dfn id=dom-location-hash title=dom-location-hash><code>hash</code></dfn>. These must follow
  the rules given for URL decomposition attributes, with the <a href=#concept-uda-input title=concept-uda-input>input</a> being <a href="#the-document's-address" title="the
  document's address">the address</a> of the associated
  <code>Document</code> object, as an <a href=#absolute-url>absolute URL</a> (same
  as the <code title=dom-location-href><a href=#dom-location-href>href</a></code> attribute), and
  the <a href=#concept-uda-setter title=concept-uda-setter>common setter action</a>
  being the same as setting the <code title=dom-location-href><a href=#dom-location-href>href</a></code> attribute to the new output
  value.</p>

  <hr><p>The <dfn id=dom-location-resolveurl title=dom-location-resolveURL><code>resolveURL(<var title="">url</var>)</code></dfn> method must <a href=#resolve-a-url title="resolve a
  url">resolve</a> its <var title="">url</var> argument, relative
  to the <a href=#first-script>first script</a>'s <a href="#script's-base-url" title="script's base
  URL">base URL</a>, and if that succeeds, return the resulting
  <a href=#absolute-url>absolute URL</a>. If it fails, it must throw a
  <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception instead.</p>


  <h5 id=security-3><span class=secno>5.9.4.1 </span>Security</h5>

  <p>User agents must raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception whenever
  any of the members of a <code><a href=#location>Location</a></code> object are accessed by
  scripts whose <a href=#effective-script-origin>effective script origin</a> is not the <a href=#same-origin title="same origin">same</a> as the <code><a href=#location>Location</a></code>
  object's associated <code>Document</code>'s <a href=#effective-script-origin>effective script
  origin</a>, with the following exceptions:</p>

  <ul><li>The <code title=dom-location-href><a href=#dom-location-href>href</a></code> setter, if the
   script is running in a <a href=#browsing-context>browsing context</a> that is
   <a href=#allowed-to-navigate>allowed to navigate</a> the browsing context with which
   the <code><a href=#location>Location</a></code> object is associated

  </ul><p>User agents must not allow scripts to override the <code title=dom-location-href><a href=#dom-location-href>href</a></code> attribute's setter.</p>


  <h4 id=history-notes><span class=secno>5.9.5 </span>Implementation notes for session history</h4>

  <p><em>This section is non-normative.</em></p>

  <p>The <code><a href=#history-1>History</a></code> interface is not meant to place
  restrictions on how implementations represent the session history to
  the user.</p>

  <p>For example, session history could be implemented in a tree-like
  manner, with each page having multiple "forward" pages. This
  specification doesn't define how the linear list of pages in the
  <code title=dom-history><a href=#dom-history>history</a></code> object are derived from the
  actual session history as seen from the user's perspective.</p>

  <p>Similarly, a page containing two <code><a href=#the-iframe-element>iframe</a></code>s has a <code title=dom-history><a href=#dom-history>history</a></code> object distinct from the
  <code><a href=#the-iframe-element>iframe</a></code>s' <code title=dom-history><a href=#dom-history>history</a></code>
  objects, despite the fact that typical Web browsers present the user
  with just one "Back" button, with a session history that interleaves
  the navigation of the two inner frames and the outer page.</p>

  <p><strong>Security:</strong> It is suggested that to avoid letting
  a page "hijack" the history navigation facilities of a UA by abusing
  <code title=dom-history-pushState><a href=#dom-history-pushstate>pushState()</a></code>, the UA
  provide the user with a way to jump back to the previous page
  (rather than just going back to the previous state). For example,
  the back button could have a drop down showing just the pages in the
  session history, and not showing any of the states. Similarly, an
  aural browser could have two "back" commands, one that goes back to
  the previous state, and one that jumps straight back to the previous
  page.</p>

  <p>In addition, a user agent could ignore calls to <code title=dom-history-pushState><a href=#dom-history-pushstate>pushState()</a></code> that are invoked on
  a timer, or from event handlers that do not represent a clear user
  action, or that are invoked in rapid succession.</p>




  <h3 id=browsing-the-web><span class=secno>5.10 </span>Browsing the Web</h3>

  <h4 id=navigating-across-documents><span class=secno>5.10.1 </span>Navigating across documents</h4>

  <p>Certain actions cause the <a href=#browsing-context>browsing context</a> to
  <i><a href=#navigate>navigate</a></i> to a new resource. Navigation always involves
  <dfn id=source-browsing-context>source browsing context</dfn>, which is the browsing context
  which was responsible for starting the navigation.</p>

  <p class=example>For example, <a href=#following-hyperlinks title="following
  hyperlinks">following a hyperlink</a>, <a href=#concept-form-submit title=concept-form-submit>form submission</a>, and the <code title=dom-open><a href=#dom-open>window.open()</a></code> and <code title=dom-location-assign><a href=#dom-location-assign>location.assign()</a></code> methods can all
  cause a browsing context to navigate.</p>

  <p>A user agent may provide various ways for the user to explicitly
  cause a browsing context to navigate, in addition to those defined
  in this specification.</p>

  <p>When a browsing context is <dfn id=navigate title=navigate>navigated</dfn>
  to a new resource, the user agent must run the following steps:</p>

  <ol><li id=sandboxLinks><p>If the <a href=#source-browsing-context>source browsing
   context</a> is not the same as the <a href=#browsing-context>browsing context</a>
   being navigated, and the <a href=#source-browsing-context>source browsing context</a> is
   not one of the <a href=#ancestor-browsing-context title="ancestor browsing context">ancestor
   browsing contexts</a> of the <a href=#browsing-context>browsing context</a> being
   navigated, and the <a href=#source-browsing-context>source browsing context</a> has its
   <a href=#sandboxed-navigation-browsing-context-flag>sandboxed navigation browsing context flag</a> set, then
   abort these steps. The user agent may offer to open the new
   resource in a new <a href=#top-level-browsing-context>top-level browsing context</a> or in the
   <a href=#top-level-browsing-context>top-level browsing context</a> of the <a href=#source-browsing-context>source
   browsing context</a>, at the user's option, in which case the
   user agent must <a href=#navigate>navigate</a> that designated
   <a href=#top-level-browsing-context>top-level browsing context</a> to the new resource as if
   the user had requested it independently.</li>

   <li id=seamlessLinks><p>If the <a href=#source-browsing-context>source browsing
   context</a> is the same as the <a href=#browsing-context>browsing context</a>
   being navigated, and this browsing context has its <a href=#seamless-browsing-context-flag>seamless
   browsing context flag</a> set, then find the nearest
   <a href=#ancestor-browsing-context>ancestor browsing context</a> that does not have its
   <a href=#seamless-browsing-context-flag>seamless browsing context flag</a> set, and continue these
   steps as if <em>that</em> <a href=#browsing-context>browsing context</a> was the one
   that was going to be <a href=#navigate title=navigate>navigated</a>
   instead.</li>

   <li><p>Cancel any preexisting attempt to navigate the
   <a href=#browsing-context>browsing context</a>.</li>

   <li id=navigate-fragid-step><p><i>Fragment identifiers</i>: If
   the <a href=#absolute-url>absolute URL</a> of the new resource is the same as
   the <a href="#the-document's-address" title="the document's address">address</a> of the
   <a href=#active-document>active document</a> of the <a href=#browsing-context>browsing context</a>
   being navigated, ignoring any <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a> components of those
   <a href=#url title=URL>URLs</a>, and the new resource is to be
   fetched using HTTP GET <a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or
   equivalent</a>, then <a href=#scroll-to-fragid title=navigate-fragid>navigate to
   that fragment identifier</a> and abort these steps.</li>

   <li><p>If the new resource is to be handled by displaying some sort
   of inline content, e.g. an error message because the specified
   scheme is not one of the supported protocols, or an inline prompt
   to allow the user to select <a href=#dom-navigator-registerprotocolhandler title=dom-navigator-registerProtocolHandler>a registered
   handler</a> for the given scheme, then <a href=#read-ua-inline title=navigate-ua-inline>display the inline content</a> and
   abort these steps.</li>

   <li><p>If the new resource is to be handled using a mechanism that
   does not affect the browsing context, e.g. ignoring the navigation
   request altogether because the specified scheme is not one of the
   supported protocols, then abort these steps and proceed with that
   mechanism instead.</li>

   <li>

    <p>If the new resource is to be fetched using HTTP GET <a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or equivalent</a>, then
    check if there are any <a href=#relevant-application-cache title="relevant application
    cache">relevant application caches</a> that are identified by a
    URL with the <a href=#same-origin>same origin</a> as the URL in question, and
    that have this URL as one of their entries, excluding entries
    marked as <a href=#concept-appcache-foreign title=concept-appcache-foreign>foreign</a>. If so, then the
    user agent must then get the resource from the <a href=#concept-appcache-selection title=concept-appcache-selection>most appropriate application
    cache</a> of those that match.</p>

    <p class=example>For example, imagine an HTML page with an
    associated application cache displaying an image and a form, where
    the image is also used by several other application caches. If the
    user right-clicks on the image and chooses "View Image", then the
    user agent could decide to show the image from any of those
    caches, but it is likely that the most useful cache for the user
    would be the one that was used for the aforementioned HTML
    page. On the other hand, if the user submits the form, and the
    form does a POST submission, then the user agent will not use an
    application cache at all; the submission will be made to the
    network.</p>

    <p>Otherwise, <a href=#fetch>fetch</a> the new resource, if it has not
    already been obtained<!-- it's obtained by <object>, for instance
    -->. If the resource is being fetched using HTTP, and the method
    is not GET<!-- or HEAD (but that can't happen) -->, then the user
    agent must include an <code title=http-origin>XXX-Origin</code>
    header whose value is determined as follows:</p>

    <dl class=switch><dt>If the <a href=#navigate title=navigate>navigation</a> algorithm has
     so far contacted more than one <a href=#origin-0>origin</a></dt>
     <dt>If there is no <a href=#source-browsing-context>source browsing context</a></dt>

     <dd>The value must be the string "<code title="">null</code>".</dd>

     <dt>Otherwise</dt>

     <dd>The value must be the <a href=#ascii-serialization-of-an-origin title="ASCII serialization of an
     origin">ASCII serialization</a> of the <a href=#origin-0>origin</a> of
     the <a href=#active-document>active document</a> of the <a href=#source-browsing-context>source browsing
     context</a> at the time the navigation was started.</dd>

    </dl></li>

   <li>

    <p>If fetching the resource is synchronous (i.e. for <a href=#javascript-protocol title="javascript protocol"><code title="">javascript:</code>
    URLs</a> and <code><a href=#about:blank>about:blank</a></code>), then this must be
    synchronous, but if fetching the resource depends on external
    resources, as it usually does for URLs that use HTTP or other
    networking protocols, then at this point the user agents must
    yield to whatever <a href=#concept-script title=concept-script>script</a> invoked the navigation steps, if they
    were invoked by script.</p>

   </li>

   <li>

    <p>If fetching the resource results in a redirect, return to <a href=#navigate-fragid-step>the step labeled "fragment
    identifiers"</a> with the new resource.</p>

    <p class=note>Cross-origin redirects cause the <code title=http-origin>XXX-Origin</code> header to become "<code title="">null</code>" on subsequent requests in the chain.</p>

   </li>

   <li><p>Wait for one or more bytes to be available or for the user
   agent to establish that the resource in question is empty. During
   this time, the user agent may allow the user to cancel this
   navigation attempt or start other navigation attempts.</li>

   <li>

    <p>If the resource was not fetched from an <a href=#application-cache>application
    cache</a>, and was to be fetched using HTTP GET <a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or equivalent</a>, and its
    URL <a href=#concept-appcache-matches-fallback title=concept-appcache-matches-fallback>matches the
    fallback namespace</a> of one or more <a href=#relevant-application-cache title="relevant
    application cache">relevant application caches</a>, and the
    user didn't cancel the navigation attempt during the previous
    step, and the navigation attempt failed (e.g. the server returned
    a 4xx or 5xx status code <a href=#concept-http-equivalent-codes title=concept-http-equivalent-codes>or equivalent</a>, or
    there was a DNS error), then:</p> <!-- note that a redirect can
    never reach this point as it is handled earlier, meaning that a
    captive portal captures URLs in fallback namespaces and you can't
    ever get to the fallback file of a resource if you have a captive
    portal -->

    <p>Let <var title="">candidate</var> be the <a href=#concept-appcache-fallback title=concept-appcache-fallback>fallback resource</a>
    specified for the <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback namespace</a> in
    question. If multiple application caches match, the user agent
    must use the fallback of the <a href=#concept-appcache-selection title=concept-appcache-selection>most appropriate application
    cache</a> of those that match.</p>

    <p>If <var title="">candidate</var> is not marked as <a href=#concept-appcache-foreign title=concept-appcache-foreign>foreign</a>, then the user
    agent must discard the failed load and instead continue along
    these steps using <var title="">candidate</var> as the
    resource. <a href="#the-document's-address">The document's address</a>, if appropriate,
    will still be the originally requested URL, not the fallback URL,
    but the user agent may indicate to the user that the original page
    load failed, that the page used was a fallback resource, and what
    the URL of the fallback resource actually is.</p>

   </li>

   <li><p>If the document's out-of-band metadata (e.g. HTTP headers),
   not counting any <a href=#content-type-0 title=Content-Type>type information</a>
   (such as the Content-Type HTTP header), requires some sort of
   processing that will not affect the browsing context, then perform
   that processing and abort these steps.</p>

   <div class=note>
    <p>Such processing might be triggered by, amongst other things, the
    following:</p>
    <ul class=brief><li>HTTP status codes (e.g. 204 No Content or 205 Reset Content)</li>
     <li>HTTP Content-Disposition headers</li>
     <li>Network errors</li>
    </ul></div>
   
    <!-- XXX should we define 205 processing here? e.g. reset all forms? -->

    <p>HTTP 401 responses that do not include a challenge recognised
    by the user agent must be processed as if they had no challenge,
    e.g. rendering the entity body as if the response had been 200
    OK.</p>

    <p>User agents may show the entity body of an HTTP 401 response
    even when the response do include a recognised challenge, with the
    option to login being included in a non-modal fashion, to enable
    the information provided by the server to be used by the user
    before authenticating. Similarly, user agents should allow the
    user to authenticate (in a non-modal fashion) against
    authentication challenges included in other responses such as HTTP
    200 OK responses, effectively allowing resources to present HTTP
    login forms without requiring their use.</p>

   </li>

   <li><p>Let <var title="">type</var> be <a href=#content-type-sniffing-0 title="Content-Type
   sniffing">the sniffed type of the resource</a>.</li>

   <li><p>If the user agent has been configured to process resources
   of the given <var title="">type</var> using some mechanism other
   than rendering the content in a <a href=#browsing-context>browsing context</a>, then
   skip this step. Otherwise, if the <var title="">type</var> is one
   of the following types, jump to the appropriate entry in the
   following list, and process the resource as described there:</p>

    <dl class=switch><dt>"text/html"</dt>
     <dd>Follow the steps given in the <a href=#read-html title=navigate-html>HTML document</a> section, and abort
     these steps.</dd>

     <dt>Any type ending in "+xml"</dt>
     <dt>"application/xml"</dt>
     <dt>"text/xml"</dt>
     <dd>Follow the steps given in the <a href=#read-xml title=navigate-xml>XML
     document</a> section. If that section determines that the
     content is <em>not</em> to be displayed as a generic XML
     document, then proceed to the next step in this overall set of
     steps. Otherwise, abort these steps.</dd>

     <dt>"text/plain"</dt>
     <dd>Follow the steps given in the <a href=#read-text title=navigate-text>plain text file</a> section, and abort
     these steps.</dd>

     <dt>A supported image type</dt>
     <dd>Follow the steps given in the <a href=#read-image title=navigate-image>image</a> section, and abort these
     steps.</dd>

     <dt>A type that will use an external application to render the
     content in the <a href=#browsing-context>browsing context</a></dt>
     <dd>Follow the steps given in the <a href=#read-plugin title=navigate-plugin>plugin</a> section, and abort these
     steps.</dd>

    </dl><p><dfn id="set-the-document's-address" title="set the document's address">Setting the document's
    address</dfn>: If there is no <dfn id=override-url>override URL</dfn>, then any
    <code>Document</code> created by these steps must have its <a href="#the-document's-address" title="the document's address">address</a> set to the
    <a href=#url>URL</a> that was originally to be <a href=#fetch title=fetch>fetched</a>, ignoring any other data that was
    used to obtain the resource (e.g. the entity body in the case of a
    POST submission is not part of <a href="#the-document's-address">the document's
    address</a>, nor is the URL of the fallback resource in the
    case of the original load having failed and that URL having been
    found to match a <a href=#concept-appcache-fallback-ns title=concept-appcache-fallback-ns>fallback
    namespace</a>). However, if there <em>is</em> an <a href=#override-url>override
    URL</a>, then any <code>Document</code> created by these steps
    must have its <a href="#the-document's-address" title="the document's address">address</a>
    set to that <a href=#url>URL</a> instead.</p>

    <p class=note>An <a href=#override-url title="override URL">override URL</a>
    is set when <a href=#concept-js-deref title=concept-js-deref>dereferencing a
    <code>javascript:</code> URL</a>.</p>

   </li>

   <li id=navigate-non-Document><p><i>Non-document content</i>: If,
   given <var title="">type</var>, the new resource is to be handled
   by displaying some sort of inline content, e.g. a native rendering
   of the content, an error message because the specified type is not
   supported, or an inline prompt to allow the user to select <a href=#dom-navigator-registercontenthandler title=dom-navigator-registerContentHandler>a registered
   handler</a> for the given type, then <a href=#read-ua-inline title=navigate-ua-inline>display the inline content</a> and
   abort these steps.</li>

   <li><p>Otherwise, the document's <var title="">type</var> is such
   that the resource will not affect the browsing context,
   e.g. because the resource is to be handed to an external
   application. Process the resource appropriately.</p>

  </ol><p>Some of the sections below, to which the above algorithm defers
  in certain cases, require the user agent to <dfn id=update-the-session-history-with-the-new-page>update the session
  history with the new page</dfn>. When a user agent is required to do
  this, it must follows the set of steps given below that is
  appropriate for the situation at hand. From the point of view of any
  script, these steps must occur atomically.</p>

  <ol><li><p class=XXX>pause for scripts -- but don't use the
   "pause" definition since that involves not running script!</li>

   <li><p><a href=#unload-a-document title="unload a document">Unload</a> the
   <code>Document</code> object of the <a href=#current-entry>current entry</a>,
   with the <var title="">recycle</var> parameter set to
   false.</li>

   <li>

    <dl><dt>If the navigation was initiated for <dfn id=entry-update>entry update</dfn> of
     an entry</dt>

     <dd>

      <ol><li><p>Replace the entry being updated with a new entry
       representing the new resource and its <code>Document</code>
       object and related state. The user agent may propagate state from
       the old entry to the new entry (e.g. scroll position).</li>

       <li><p><a href=#traverse-the-history>Traverse the history</a> to the new
       entry.</li>

      </ol></dd>


     <dt>Otherwise</dt>

     <dd>

      <ol><li><p>Remove all the entries after the <a href=#current-entry>current
       entry</a> in the <a href=#browsing-context>browsing context</a>'s
       <code>Document</code> object's <code><a href=#history-1>History</a></code> object.</p>
       <p class=note>This <a href=#history-notes>doesn't necessarily
       have to affect</a><!--XXX change to auto-xref?--> the user
       agent's user interface.</p> </li>

       <li><p>Append a new entry at the end of the <code><a href=#history-1>History</a></code>
       object representing the new resource and its
       <code>Document</code> object and related state.</li>

       <li><p><a href=#traverse-the-history>Traverse the history</a> to the new entry.</li>

       <li><p>If the navigation was initiated with <dfn id=replacement-enabled>replacement
       enabled</dfn>, remove the entry immediately before the new
       <a href=#current-entry>current entry</a> in the session history.</li>

      </ol></dd>

    </dl></li>

  </ol><h4 id=read-html><span class=secno>5.10.2 </span><dfn title=navigate-html>Page load processing model for HTML files</dfn></h4>

  <p>When an HTML document is to be loaded in a <a href=#browsing-context>browsing
  context</a>, the user agent must create a <code>Document</code>
  object, mark it as being an <a href=#html-documents title="HTML documents">HTML
  document</a>, create an <a href=#html-parser>HTML parser</a>, associate it
  with the document, and begin to use the bytes provided for the
  document as the <a href=#the-input-stream>input stream</a> for that parser.</p>

  <p class=note>The <a href=#the-input-stream>input stream</a> converts bytes into
  characters for use in the <span>tokeniser</span><!-- XXX xref
  -->. This process relies, in part, on character encoding information
  found in the real <a href=#content-type-0 title=Content-Type>Content-Type
  metadata</a> of the resource; the "sniffed type" is not used for
  this purpose.</p>

  <!-- next two paragraphs are nearly identical to the navigate-text
  section, keep them in sync -->

  <p>When no more bytes are available, an EOF character is implied,
  which eventually causes a <code title=event-load><a href=#event-load>load</a></code> event
  to be fired.</p>

  <p>After creating the <code>Document</code> object, but potentially
  before the page has finished parsing, the user agent must
  <a href=#update-the-session-history-with-the-new-page>update the session history with the new page</a>.</p>

  <p class=note><a href=#concept-appcache-init title=concept-appcache-init>Application
  cache selection</a> happens <a href=#parser-appcache>in the
  HTML parser</a>.</p>




  <h4 id=read-xml><span class=secno>5.10.3 </span><dfn title=navigate-xml>Page load processing model for XML files</dfn></h4>

  <p>When faced with displaying an XML file inline, user agents must
  first create a <code>Document</code> object, following the
  requirements of the XML and Namespaces in XML recommendations, RFC
  3023, DOM3 Core, and other relevant specifications. <a href=#refsXML>[XML]</a> <a href=#refsXMLNS>[XMLNS]</a> <a href=#refsRFC3023>[RFC3023]</a> <a href=#refsDOM3CORE>[DOM3CORE]</a></p>

  <p>The actual HTTP headers and other metadata, not the headers as
  mutated or implied by the algorithms given in this specification,
  are the ones that must be used when determining the character
  encoding according to the rules given in the above
  specifications. Once the character encoding is established, the
  <a href="#document's-character-encoding">document's character encoding</a> must be set to that
  character encoding.</p>

  <p>If the root element, as parsed according to the XML
  specifications cited above, is found to be an <code><a href=#the-html-element>html</a></code>
  element with an attribute <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code>, then, as soon as the
  element is <a href=#insert-an-element-into-a-document title="insert an element into a document">inserted
  into the document</a>, the user agent must <a href=#resolve-a-url title="resolve a
  url">resolve</a> the value of that attribute relative to that
  element, and if that is successful, must run the <a href=#concept-appcache-init title=concept-appcache-init>application cache selection
  algorithm</a> with the <var title="">document-is-markup</var>
  flag set to true, the resulting <a href=#absolute-url>absolute URL</a> as the
  manifest URL, and passing in the newly-created
  <code>Document</code>. Otherwise, if the attribute is absent or
  resolving it fails, then as soon as the root element is <a href=#insert-an-element-into-a-document title="insert an element into a document">inserted into the
  document</a>, the user agent must run the <a href=#concept-appcache-init title=concept-appcache-init>application cache selection
  algorithm</a> with the <var title="">document-is-markup</var>
  flag set to true, no manifest, and passing in the
  <code>Document</code>.</p>

  <p class=note>Because the processing of the <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attribute happens
  only once the root element is parsed, any URLs referenced by
  processing instructions before the root element (such as <code title="">&lt;?xml-styleesheet?&gt;</code> and <code title="">&lt;?xbl?&gt;</code> PIs) will be fetched from the network and
  cannot be cached.</p> <!-- XXX any ideas for avoiding this, that
  aren't a PI themselves? We can't delay the processing, since the
  whole point of the <?xbl?> PI is to have the XBL sheet loaded before
  the root element... -->

  <p>User agents may examine the namespace of the root
  <code>Element</code> node of this <code>Document</code> object to
  perform namespace-based dispatch to alternative processing tools,
  e.g. determining that the content is actually a syndication feed and
  passing it to a feed handler. If such processing is to take place,
  abort the steps in this section, and jump to <a href=#navigate-non-Document>the next step</a> (labeled
  "non-document content") in the <a href=#navigate>navigate</a> steps
  above.</p>

  <p>Otherwise, then, with the newly created <code>Document</code>,
  the user agents must <a href=#update-the-session-history-with-the-new-page>update the session history with the new
  page</a>. User agents may do this before the complete document
  has been parsed (thus achieving <i>incremental rendering</i>).</p>

  <p>Error messages from the parse process (e.g. XML namespace
  well-formedness errors) may be reported inline by mutating the
  <code>Document</code>.</p>


  <h4 id=read-text><span class=secno>5.10.4 </span><dfn title=navigate-text>Page load processing model for text files</dfn></h4>

  <p>When a plain text document is to be loaded in a <a href=#browsing-context>browsing
  context</a>, the user agent should create a <code>Document</code>
  object, mark it as being an <a href=#html-documents title="HTML documents">HTML
  document</a>, create an <a href=#html-parser>HTML parser</a>, associate it
  with the document, act as if the tokeniser had emitted a start tag
  token with the tag name "pre", set the <a href=#tokenization>tokenization</a>
  stage's <a href=#content-model-flag>content model flag</a> to <i>PLAINTEXT</i>, and
  begin to pass the stream of characters in the plain text document to
  that tokeniser.</p>

  <p>The rules for how to convert the bytes of the plain text document
  into actual characters are defined in RFC 2046, RFC 2646, and
  subsequent versions thereof. <a href=#refsRFC2046>[RFC2046]</a> <a href=#refsRFC2646>[RFC2646]</a></p>

  <p>The <a href="#document's-character-encoding">document's character encoding</a> must be set to the
  character encoding used to decode the document.</p>

  <p>Upon creation of the <code>Document</code> object, the user agent
  must run the <a href=#concept-appcache-init title=concept-appcache-init>application cache
  selection algorithm</a> with the <var title="">document-is-markup</var> flag set to false, no manifest,
  and passing in the newly-created <code>Document</code>.</p>

  <!-- next two paragraphs are nearly identical to the navigate-html
  section and similar to the "navigate-ua-inline" section, and the
  next three are similar to the navigate-image and navigate-plugin
  sections; keep them all in sync -->

  <p>When no more character are available, an EOF character is
  implied, which eventually causes a <code title=event-load><a href=#event-load>load</a></code> event to be fired.</p>

  <p>After creating the <code>Document</code> object, but potentially
  before the page has finished parsing, the user agent must
  <a href=#update-the-session-history-with-the-new-page>update the session history with the new page</a>.</p>

  <p>User agents may add content to the <code><a href=#the-head-element>head</a></code> element of
  the <code>Document</code>, e.g. linking to stylesheet or an XBL
  binding, providing script, giving the document a <code><a href=#the-title-element>title</a></code>,
  etc.</p>


  <h4 id=read-image><span class=secno>5.10.5 </span><dfn title=navigate-image>Page load processing model for images</dfn></h4>

  <p>When an image resource is to be loaded in a <a href=#browsing-context>browsing
  context</a>, the user agent should create a <code>Document</code>
  object, mark it as being an <a href=#html-documents title="HTML documents">HTML
  document</a>, append an <code><a href=#the-html-element>html</a></code> element to the
  <code>Document</code>, append a <code><a href=#the-head-element>head</a></code> element and a
  <code><a href=#the-body-element>body</a></code> element to the <code><a href=#the-html-element>html</a></code> element, append
  an <code><a href=#the-img-element>img</a></code> to the <code><a href=#the-body-element>body</a></code> element, and set the
  <code title=attr-img-src><a href=#attr-img-src>src</a></code> attribute of the
  <code><a href=#the-img-element>img</a></code> element to the address of the image.</p>

  <!-- next three paragraphs are similar to the navigate-text section,
  keep them in sync -->

  <p>Then, the user agent must act as if it had <a href=#stop-parsing title="stop
  parsing">stopped parsing</a>.</p>

  <p>Upon creation of the <code>Document</code> object, the user agent
  must run the <a href=#concept-appcache-init title=concept-appcache-init>application cache
  selection algorithm</a> with the <var title="">document-is-markup</var> flag set to false, no manifest,
  and passing in the newly-created <code>Document</code>.</p>

  <p>After creating the <code>Document</code> object, but potentially
  before the page has finished fully loading, the user agent must
  <a href=#update-the-session-history-with-the-new-page>update the session history with the new page</a>.</p>

  <p>User agents may add content to the <code><a href=#the-head-element>head</a></code> element of
  the <code>Document</code>, or attributes to the <code><a href=#the-img-element>img</a></code>
  element, e.g. to link to stylesheet or an XBL binding, to provide a
  script, to give the document a <code><a href=#the-title-element>title</a></code>, etc.</p>


  <h4 id=read-plugin><span class=secno>5.10.6 </span><dfn title=navigate-plugin>Page load processing model for content that uses plugins</dfn></h4>

  <p>When a resource that requires an external resource to be rendered
  is to be loaded in a <a href=#browsing-context>browsing context</a>, the user agent
  should create a <code>Document</code> object, mark it as being an
  <a href=#html-documents title="HTML documents">HTML document</a>, append an
  <code><a href=#the-html-element>html</a></code> element to the <code>Document</code>, append a
  <code><a href=#the-head-element>head</a></code> element and a <code><a href=#the-body-element>body</a></code> element to the
  <code><a href=#the-html-element>html</a></code> element, append an <code><a href=#the-embed-element>embed</a></code> to the
  <code><a href=#the-body-element>body</a></code> element, and set the <code title=attr-embed-src><a href=#attr-embed-src>src</a></code> attribute of the
  <code><a href=#the-embed-element>embed</a></code> element to the address of the resource.</p>

  <!-- next three paragraphs are similar to the navigate-text section,
  keep them in sync -->

  <p>Then, the user agent must act as if it had <a href=#stop-parsing title="stop
  parsing">stopped parsing</a>.</p>

  <p>Upon creation of the <code>Document</code> object, the user agent
  must run the <a href=#concept-appcache-init title=concept-appcache-init>application cache
  selection algorithm</a> with the <var title="">document-is-markup</var> flag set to false, no manifest,
  and passing in the newly-created <code>Document</code>.</p>

  <p>After creating the <code>Document</code> object, but potentially
  before the page has finished fully loading, the user agent must
  <a href=#update-the-session-history-with-the-new-page>update the session history with the new page</a>.</p>

  <p>User agents may add content to the <code><a href=#the-head-element>head</a></code> element of
  the <code>Document</code>, or attributes to the <code><a href=#the-embed-element>embed</a></code>
  element, e.g. to link to stylesheet or an XBL binding, or to give
  the document a <code><a href=#the-title-element>title</a></code>.</p>

  <p class=note id=sandboxPluginNavigate>If the <a href=#sandboxed-plugins-browsing-context-flag>sandboxed
  plugins browsing context flag</a> is set on the <a href=#browsing-context>browsing
  context</a>, the synthesized <code><a href=#the-embed-element>embed</a></code> element will <a href=#sandboxPluginEmbed>fail to render the content</a>.</p>


  <h4 id=read-ua-inline><span class=secno>5.10.7 </span><dfn title=navigate-ua-inline>Page load processing model for inline content that doesn't have a DOM</dfn></h4>

  <p>When the user agent is to display a user agent page inline in a
  <a href=#browsing-context>browsing context</a>, the user agent should create a
  <code>Document</code> object, mark it as being an <a href=#html-documents title="HTML
  documents">HTML document</a>, and then either associate that
  <code>Document</code> with a custom rendering that is not rendered
  using the normal <code>Document</code> rendering rules, or mutate
  that <code>Document</code> until it represents the content the user
  agent wants to render.</p>

  <!-- next two paragraphs are similar to the navigate-text section,
  keep them in sync -->

  <p>Once the page has been set up, the user agent must act as if it
  had <a href=#stop-parsing title="stop parsing">stopped parsing</a>.</p>

  <p>Upon creation of the <code>Document</code> object, the user agent
  must run the <a href=#concept-appcache-init title=concept-appcache-init>application cache
  selection algorithm</a> with the <var title="">document-is-markup</var> flag set to false, no manifest,
  passing in the newly-created <code>Document</code>.</p>

  <p>After creating the <code>Document</code> object, but potentially
  before the page has been completely set up, the user agent must
  <a href=#update-the-session-history-with-the-new-page>update the session history with the new page</a>.</p>



  <h4 id=scroll-to-fragid><span class=secno>5.10.8 </span><dfn title=navigate-fragid>Navigating to a fragment identifier</dfn></h4>

  <p>When a user agent is supposed to navigate to a fragment
  identifier, then the user agent must <a href=#update-the-session-history-with-the-new-page>update the session
  history with the new page</a>, where "the new page" has the same
  <code>Document</code> as before but with the URL having the newly
  specified fragment identifier.</p>

  <p>Part of that algorithm involves the user agent having to
  <a href=#scroll-to-the-fragment-identifier>scroll to the fragment identifier</a>, which is the
  important part for this step.</p>

  <p>When the user agent is required to <dfn id=scroll-to-the-fragment-identifier>scroll to the fragment
  identifier</dfn>, it must change the scrolling position of the
  document, or perform some other action, such that <a href=#the-indicated-part-of-the-document>the
  indicated part of the document</a> is brought to the user's
  attention. If there is no indicated part, then the user agent must
  not scroll anywhere.</p>

  <p><dfn id=the-indicated-part-of-the-document>The indicated part of the document</dfn> is the one that
  the fragment identifier, if any, identifies. The semantics of the
  fragment identifier in terms of mapping it to a specific DOM Node is
  defined by the MIME type specification of the document's MIME Type
  (for example, the processing of fragment identifiers for XML MIME
  types is the responsibility of RFC3023).</p>

  <p>For HTML documents (and the <code>text/html</code> MIME type),
  the following processing model must be followed to determine what
  <a href=#the-indicated-part-of-the-document>the indicated part of the document</a> is.</p>

  <ol><li><p><a href=#parse-a-url title="parse a url">Parse</a> the <a href=#url>URL</a>,
   and let <i>fragid</i> be the <a href=#url-fragment title=url-fragment>&lt;fragment&gt;</a> component of the
   URL.</li><!-- parsing can't fail, since we checked earlier on
   when navigating -->

   <li><p>If <i>fragid</i> is the empty string, then the indicated
   part of the document is the top of the document.</li>

   <li><p>If there is an element in the DOM that has an ID exactly
   equal to <i>fragid</i>, then the first such element in tree order
   is <a href=#the-indicated-part-of-the-document>the indicated part of the document</a>; stop the
   algorithm here.</li>

   <li><p>If there is an <code><a href=#the-a-element>a</a></code> element in the DOM that has a
   <code title=attr-a-name><a href=#attr-a-name>name</a></code> attribute whose value is
   exactly equal to <i>fragid</i>, then the first such element in tree
   order is <a href=#the-indicated-part-of-the-document>the indicated part of the document</a>; stop the
   algorithm here.</li>

   <li><p>Otherwise, there is no indicated part of the
   document.</li>

  </ol><p>For the purposes of the interaction of HTML with Selectors' <code title=selector-target>:target</code> pseudo-class, the
  <dfn id=target-element><i>target element</i></dfn> is <a href=#the-indicated-part-of-the-document>the indicated part of the
  document</a>, if that is an element; otherwise there is no
  <i><a href=#target-element>target element</a></i>. <a href=#refsSELECTORS>[SELECTORS]</a></p>


  <h4 id=history-traversal><span class=secno>5.10.9 </span>History traversal</h4>

  <p>When a user agent is required to <dfn id=traverse-the-history>traverse the history</dfn>
  to a <i>specified entry</i>, the user agent must act as
  follows:</p>

  <ol><li><p>If there is no longer a <code>Document</code> object for the
   entry in question, the user agent must <a href=#navigate>navigate</a> the
   browsing context to the location for that entry to perform an
   <a href=#entry-update>entry update</a> of that entry, and abort these steps. The
   "<a href=#navigate>navigate</a>" algorithm reinvokes this "traverse"
   algorithm to complete the traversal, at which point there
   <em>is</em> a <code>Document</code> object and so this step gets
   skipped. The navigation must be done using the same <a href=#source-browsing-context>source
   browsing context</a> as was used the first time this entry was
   created.</li>

   <li><p>If appropriate, update the <a href=#current-entry>current entry</a> in the
   <a href=#browsing-context>browsing context</a>'s <code>Document</code> object's
   <code><a href=#history-1>History</a></code> object to reflect any state that the user
   agent wishes to persist.</p>
   <p class=example>For example, some user agents might want to
   persist the scroll position, or the values of form controls.</p>
   </li>

   <li><p>If the <i>specified entry</i> has a different
   <code>Document</code> object than the <a href=#current-entry>current entry</a>
   then the user agent must run the following substeps:</p>

    <ol><li>If the browsing context is a <a href=#top-level-browsing-context>top-level browsing
     context</a> (and not an <a href=#auxiliary-browsing-context>auxiliary browsing
     context</a>), and the <a href=#origin-0>origin</a> of the
     <code>Document</code> of the <i>specified entry</i> is not the
     <a href=#same-origin title="same origin">same</a> as the <a href=#origin-0>origin</a>
     of the <code>Document</code> of the <a href=#current-entry>current entry</a>,
     then the following sub-sub-steps must be run:

      <ol><li>The current <a href=#browsing-context-name>browsing context name</a> must be
       stored with all the entries in the history that are associated
       with <code>Document</code> objects with the <a href=#same-origin>same
       origin</a> as the <a href=#active-document>active document</a> <em>and</em>
       that are contiguous with the <a href=#current-entry>current entry</a>.</li>

       <li id=resetBCName>The browsing context's <a href=#browsing-context-name>browsing
       context name</a> must be unset.</li>

      </ol></li>

     <li id=appcache-history-2>The user agent must make the
     <i>specified entry</i>'s <code>Document</code> object the
     <a href=#active-document>active document</a> of the <a href=#browsing-context>browsing
     context</a>.</li>

     <li>If the <i>specified entry</i> has a <a href=#browsing-context-name>browsing
     context name</a> stored with it, then the following
     sub-sub-steps must be run:

      <ol><li>The browsing context's <a href=#browsing-context-name>browsing context name</a>
       must be set to the name stored with the specified entry.</li>

       <li>Any <a href=#browsing-context-name>browsing context name</a> stored with the
       entries in the history that are associated with
       <code>Document</code> objects with the <a href=#same-origin>same origin</a>
       as the new <a href=#active-document>active document</a>, and that are
       contiguous with the specified entry, must be cleared.</li>

      </ol></li>

    </ol></li>

   <li><p>If the <i>specified entry</i> is a state object or the
   first entry for a <code>Document</code>, the user agent must <a href=#activating-state-object-entries title="activate the state object">activate that
   entry</a>.</li>

   <li><p>If the <i>specified entry</i> has a URL that differs from
   the <a href=#current-entry>current entry</a>'s only by its fragment identifier,
   and the two share the same <code>Document</code> object, then
   first, if the <code>Document</code>'s <a href=#current-document-readiness>current document
   readiness</a> is the string "complete", then <a href=#fire-a-simple-event>fire a simple
   event</a> with the name <code title=event-hashchange>hashchange</code> at the <a href=#browsing-context>browsing
   context</a>'s <code><a href=#window>Window</a></code> object; and second, if the new
   URL has a fragment identifier, <a href=#scroll-to-the-fragment-identifier>scroll to the fragment
   identifier</a>.</li>

   <li><p>User agents may also update other aspects of the document
   view when the location changes in this way, for instance the scroll
   position, values of form fields, etc.</li>

   <li><p>The <a href=#current-entry>current entry</a> is now the <i>specified
   entry</i>.</li>

  </ol><p class=XXX>how does the changing of the global attributes
  affect .watch() when seen from other Windows?</p>



  <h4 id=unloading-documents><span class=secno>5.10.10 </span>Unloading documents</h4>

  <p>When a user agent is to <dfn id=unload-a-document>unload a document</dfn>, it must run
  the following steps. These steps are passed an argument, <var title="">recycle</var>, which is either true or false, indicating
  whether the <code>Document</code> object is going to be
  re-used. (This is set by the <code title=dom-document-open><a href=#dom-document-open>document.open()</a></code> method.)</p>

  <ol><li><p>Set <var title="">salvageable</var> to true.</li>

   <li><p>Let <var title="">event</var> be a new
   <code><a href=#beforeunloadevent>BeforeUnloadEvent</a></code> event object with the name <code title=event-beforeunload>beforeunload</code>, with no namespace,
   which does not bubble but is cancelable.</li>

   <li><p>Dispatch <var title="">event</var> at the
   <code>Document</code>'s <code><a href=#window>Window</a></code> object.</li>

   <li><p>If any event listeners were triggered by the previous step,
   then set <var title="">salvageable</var> to false.</li>

   <li>

    <p>If the <code title=dom-BeforeUnloadEvent-returnValue><a href=#dom-beforeunloadevent-returnvalue>returnValue</a></code>
    attribute of the <var title="">event</var> object is not the empty
    string, or if the event was canceled, then the user agent should
    ask the user to confirm that they wish to unload the document.</p>

    <p>The prompt shown by the user agent may include the string of
    the <code title=dom-BeforeUnloadEvent-returnValue><a href=#dom-beforeunloadevent-returnvalue>returnValue</a></code>
    attribute, or some leading subset thereof. (A user agent may want
    to truncate the string to 1024 characters for display, for
    instance.)</p>

    <p>The user agent must <a href=#pause>pause</a> while waiting for the
    user's response.</p>

    <p>If the user <dfn id=refused-to-allow-the-document-to-be-unloaded>refused to allow the document to be
    unloaded</dfn> then these steps must be aborted.</p>

   </li>

   <li><p><a href=#fire-a-simple-event>Fire a simple event</a> called <code title=event-unload>unload</code> at the <code>Document</code>'s
   <code><a href=#window>Window</a></code> object.</li>

   <li><p>If any event listeners were triggered by the previous step,
   then set <var title="">salvageable</var> to false.</li>

   <li><p>If there are any outstanding transactions that have
   callbacks that involve <a href=#concept-script title=concept-script>scripts</a>
   whose <a href="#script's-global-object" title="script's global object">global object</a> is
   the <code>Document</code>'s <code><a href=#window>Window</a></code> object, roll them
   back (without invoking any of the callbacks) and set <var title="">salvageable</var> to false.</p>

   <li><p>If <var title="">salvageable</var> and <var title="">recycle</var> are both false, <a href=#discard-a-document title="discard a
   document">discard the <code>Document</code></a>.</li>

  </ol><h5 id=event-definition><span class=secno>5.10.10.1 </span>Event definition</h5>

  <pre class=idl>interface <dfn id=beforeunloadevent>BeforeUnloadEvent</dfn> : Event {
           attribute DOMString <a href=#dom-beforeunloadevent-returnvalue title=dom-BeforeUnloadEvent-returnValue>returnValue</a>;
};</pre>

  <p class=note>There are no <code><a href=#beforeunloadevent>BeforeUnloadEvent</a></code>-specific
  initialization methods.</p>

  <p>The <dfn id=dom-beforeunloadevent-returnvalue title=dom-BeforeUnloadEvent-returnValue><code>returnValue</code></dfn>
  attribute represents the message to show the user. When the event is
  created, the attribute must be set to the empty string. On getting,
  it must return the last value it was set to. On setting, the
  attribute must be set to the new value.</p>




  <h3 id=structured-client-side-storage><span class=secno>5.11 </span>Structured client-side storage</h3>

  <h4 id=storage><span class=secno>5.11.1 </span>Storing name/value pairs</h4>

  <h5 id=introduction-2><span class=secno>5.11.1.1 </span>Introduction</h5>

  <p><em>This section is non-normative.</em></p>

  <p>This specification introduces two related mechanisms, similar to
  HTTP session cookies, for storing structured data on the client
  side. <a href=#refsRFC2109>[RFC2109]</a> <a href=#refsRFC2965>[RFC2965]</a></p>

  <p>The first is designed for scenarios where the user is carrying
  out a single transaction, but could be carrying out multiple
  transactions in different windows at the same time.</p>

  <p>Cookies don't really handle this case well. For example, a user
  could be buying plane tickets in two different windows, using the
  same site. If the site used cookies to keep track of which ticket
  the user was buying, then as the user clicked from page to page in
  both windows, the ticket currently being purchased would "leak" from
  one window to the other, potentially causing the user to buy two
  tickets for the same flight without really noticing.</p>

  <p>To address this, this specification introduces the <code title=dom-sessionStorage><a href=#dom-sessionstorage>sessionStorage</a></code> DOM attribute.
  Sites can add data to the session storage, and it will be accessible
  to any page from the same site opened in that window.</p> <!-- we're
  not using xrefs here because this is just an intro -->

  <div class=example>

   <p>For example, a page could have a checkbox that the user ticks to
   indicate that he wants insurance:</p>

   <pre>&lt;label&gt;
 &lt;input type="checkbox" onchange="sessionStorage.insurance = checked"&gt;
 I want insurance on this trip.
&lt;/label&gt;</pre>

   <p>A later page could then check, from script, whether the user had
   checked the checkbox or not:</p>

   <pre>if (sessionStorage.insurance) { ... }</pre>

   <p>If the user had multiple windows opened on the site, each one
   would have its own individual copy of the session storage object.</p>

  </div>

  <!--

   sessionStorage.flightDeparture = 'OSL';
   sessionStorage.flightArrival = 'NYC';

   for (var i in forms[0].elements)
      sessionStorage["data_" + i.name] = i.value;

   if (!sessionStorage[documents])
     sessionStorage[documents] = {};
   sessionStorage[documents][filename] = <document/>;

  -->

  <p>The second storage mechanism is designed for storage that spans
  multiple windows, and lasts beyond the current session. In
  particular, Web applications may wish to store megabytes of user
  data, such as entire user-authored documents or a user's mailbox, on
  the client side for performance reasons.</p>

  <p>Again, cookies do not handle this case well, because they are
  transmitted with every request.</p>

  <p>The <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code> DOM
  attribute is used to access a page's local storage area.</p>

  <div class=example>

   <p>The site at example.com can display a count of how many times
   the user has loaded its page by putting the following at the bottom
   of its page:</p>

   <pre>&lt;p&gt;
  You have viewed this page
  &lt;span id="count"&gt;an untold number of&lt;/span&gt;
  time(s).
&lt;/p&gt;
&lt;script&gt;
  if (!localStorage.pageLoadCount)
    localStorage.pageLoadCount = 0;
  localStorage.pageLoadCount = parseInt(localStorage.pageLoadCount, 10) + 1;
  document.getElementById('count').textContent = localStorage.pageLoadCount;
&lt;/script&gt;</pre>

   <p>The use of <code title="">parseInt()</code> is needed when
   dealing with numbers (integers in this case) because the storage
   APIs are all string-based.</p>

  </div>

  <p>Each site has its own separate storage area.</p>

  <p>Storage areas (both session storage and local storage) store
  strings. To store structured data in a storage area, you must first
  convert it to a string.</p>


  <h5 id=the-storage-interface><span class=secno>5.11.1.2 </span>The <code><a href=#storage-0>Storage</a></code> interface</h5>

  <pre class=idl>interface <dfn id=storage-0>Storage</dfn> {
  readonly attribute unsigned long <a href=#dom-storage-length title=dom-Storage-length>length</a>;
  [IndexGetter] DOMString <a href=#dom-storage-key title=dom-Storage-key>key</a>(in unsigned long index);
  [NameGetter] DOMString <a href=#dom-storage-getitem title=dom-Storage-getItem>getItem</a>(in DOMString key);
  [NameSetter] void <a href=#dom-storage-setitem title=dom-Storage-setItem>setItem</a>(in DOMString key, in DOMString data);
  [NameDeleter] void <a href=#dom-storage-removeitem title=dom-Storage-removeItem>removeItem</a>(in DOMString key);
  void <a href=#dom-storage-clear title=dom-Storage-clear>clear</a>();
};</pre>

  <!-- XXXv2 ideas:
    a getInfo() method that returns an object that tells you:
       - when the key was added
       - when the key was last modified
       - which page was the last to modify the key
    [-Mihai Sucan]

  -->  

  <p>Each <code><a href=#storage-0>Storage</a></code> object provides access to a list of
  key/value pairs, which are sometimes called items. Keys and values
  are strings. Any string (including the empty string) is a valid
  key.</p>

  <p class=note>To store more structured data, authors may consider
  using the <a href=#sql>SQL interfaces</a> instead.</p>

  <p>Each <code><a href=#storage-0>Storage</a></code> object is associated with a list of
  key/value pairs when it is created, as defined in the sections on
  the <code title=dom-sessionStorage><a href=#dom-sessionstorage>sessionStorage</a></code> and <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code> attributes. Multiple
  separate objects implementing the <code><a href=#storage-0>Storage</a></code> interface can
  all be associated with the same list of key/value pairs
  simultaneously.</p>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to one less than
  the number of key/value pairs currently present in the list
  associated with the object. If the list is empty, then there are no
  <span>supported indexed properties</span>.</p>

  <p>The <dfn id=dom-storage-length title=dom-Storage-length><code>length</code></dfn>
  attribute must return the number of key/value pairs currently
  present in the list associated with the object.</p>

  <p>The <dfn id=dom-storage-key title=dom-Storage-key><code>key(<var title="">n</var>)</code></dfn> method must return the name of the
  <var title="">n</var>th key in the list. The order of keys is
  user-agent defined, but must be consistent within an object between
  changes to the number of keys. (Thus, <a href=#dom-storage-setitem title=dom-Storage-setItem>adding</a> or <a href=#dom-storage-removeitem title=dom-Storage-removeItem>removing</a> a key may change the
  order of the keys, but merely changing the value of an existing key
  must not.) <!--The order of keys may differ between instances of the
  <code>Storage</code> interface accessing the same list. [removed for
  now for clarity, but if people ask, put it back. this is part of the
  spec.]--> If <var title="">n</var> is <!--less than zero or [can't,
  unsigned]--> greater than or equal to the number of key/value pairs
  in the object, then this method must raise an
  <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception.</p>

  <p>The <span>names of the supported named properties</span> on a
  <code><a href=#storage-0>Storage</a></code> object are the keys of each key/value pair
  currently present in the list associated with the object.</p>

  <p>The <dfn id=dom-storage-getitem title=dom-Storage-getItem><code>getItem(<var title="">key</var>)</code></dfn> method must return the current
  value associated with the given <var title="">key</var>. If the
  given <var title="">key</var> does not exist in the list associated
  with the object then this method must return null.</p>

  <p>The <dfn id=dom-storage-setitem title=dom-Storage-setItem><code>setItem(<var title="">key</var>, <var title="">value</var>)</code></dfn> method
  must first check if a key/value pair with the given <var title="">key</var> already exists in the list associated with the
  object.</p>

  <p>If it does not, then a new key/value pair must be added to the
  list, with the given <var title="">key</var> and <var title="">value</var>.</p>

  <p>If the given <var title="">key</var> <em>does</em> exist in the
  list, then it must have its value updated to the value given in the
  <var title="">value</var> argument.</p>

  <p>If it couldn't set the new value, the method must raise an
  <code><a href=#quota_exceeded_err>QUOTA_EXCEEDED_ERR</a></code> exception. (Setting could fail if,
  e.g., the user has disabled storage for the domain, or if the quota
  has been exceeded.)</p>

  <p>The <dfn id=dom-storage-removeitem title=dom-Storage-removeItem><code>removeItem(<var title="">key</var>)</code></dfn> method must cause the key/value
  pair with the given <var title="">key</var> to be removed from the
  list associated with the object, if it exists. If no item with that
  key exists, the method must do nothing.</p>

  <p>The <code title=dom-Storage-setItem><a href=#dom-storage-setitem>setItem()</a></code> and <code title=dom-Storage-removeItem><a href=#dom-storage-removeitem>removeItem()</a></code> methods must be
  atomic with respect to failure. In the case of failure, the method
  does nothing. That is, changes to the data storage area must either
  be successful, or the data storage area must not be changed at
  all.</p>

  <p>The <dfn id=dom-storage-clear title=dom-Storage-clear><code>clear()</code></dfn>
  method must atomically cause the list associated with the object to
  be emptied of all key/value pairs, if there are any. If there are
  none, then the method must do nothing.</p>

  <p class=note>When the <code title=dom-Storage-setItem><a href=#dom-storage-setitem>setItem()</a></code>, <code title=dom-Storage-removeItem><a href=#dom-storage-removeitem>removeItem()</a></code>, and <code title=dom-Storage-clear><a href=#dom-storage-clear>clear()</a></code> methods are invoked, events
  are fired on other <code><a href=#htmldocument>HTMLDocument</a></code> objects that can access
  the newly stored or removed data, as defined in the sections on the
  <code title=dom-sessionStorage><a href=#dom-sessionstorage>sessionStorage</a></code> and <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code> attributes.</p> <!--
  not normative, see the sections below for the normative statement
  -->

  <p class=note>This specification does not require that the above
  methods wait until the data has been physically written to
  disk. Only consistency in what different scripts accessing the same
  underlying list of key/value pairs see is required.</p>



  <h5 id=the-sessionstorage-attribute><span class=secno>5.11.1.3 </span>The <code title=dom-sessionStorage><a href=#dom-sessionstorage>sessionStorage</a></code> attribute</h5>

  <p>The <dfn id=dom-sessionstorage title=dom-sessionStorage><code>sessionStorage</code></dfn>
  attribute represents the set of storage areas specific to the
  current <a href=#top-level-browsing-context>top-level browsing context</a>.</p>

  <p>Each <a href=#top-level-browsing-context>top-level browsing context</a> has a unique set of
  session storage areas, one for each <a href=#origin-0>origin</a>.</p>

  <p>User agents should not expire data from a browsing context's
  session storage areas, but may do so when the user requests that
  such data be deleted, or when the UA detects that it has limited
  storage space, or for security reasons. User agents should always
  avoid deleting data while a script that could access that data is
  running. When a top-level browsing context is destroyed (and
  therefore permanently inaccessible to the user) the data stored in
  its session storage areas can be discarded with it, as the API
  described in this specification provides no way for that data to
  ever be subsequently retrieved.</p>

  <p class=note>The lifetime of a browsing context can be unrelated
  to the lifetime of the actual user agent process itself, as the user
  agent may support resuming sessions after a restart.</p>

  <p>When a new <code><a href=#htmldocument>HTMLDocument</a></code> is created, the user agent
  must check to see if the document's <a href=#top-level-browsing-context>top-level browsing
  context</a> has allocated a session storage area for that
  document's <a href=#origin-0>origin</a>. If it has not, a new storage area
  for that document's <a href=#origin-0>origin</a> must be created.</p>

  <p>The <code title=dom-sessionStorage><a href=#dom-sessionstorage>sessionStorage</a></code>
  attribute must return the <code><a href=#storage-0>Storage</a></code> object associated
  with that session storage area. Each <code>Document</code> object
  must have a separate object for its <code><a href=#window>Window</a></code>'s <code title=dom-sessionStorage><a href=#dom-sessionstorage>sessionStorage</a></code> attribute.</p>

  <p>When a new <a href=#top-level-browsing-context>top-level browsing context</a> is created by
  cloning an existing <a href=#browsing-context>browsing context</a>, the new browsing
  context must start with the same session storage areas as the
  original, but the two sets must from that point on be considered
  separate, not affecting each other in any way.</p>

  <p>When a new <a href=#top-level-browsing-context>top-level browsing context</a> is created by
  a <a href=#concept-script title=concept-script>script</a> in an existing
  <a href=#browsing-context>browsing context</a>, or by the user following a link in an
  existing browsing context, or in some other way related to a
  specific <code><a href=#htmldocument>HTMLDocument</a></code>, then the session storage area of
  the <a href=#origin-0>origin</a> of that <code><a href=#htmldocument>HTMLDocument</a></code> must be
  copied into the new browsing context when it is created.  From that
  point on, however, the two session storage areas must be considered
  separate, not affecting each other in any way.</p>

  <p id=sessionStorageEvent>When the <code title=dom-Storage-setItem><a href=#dom-storage-setitem>setItem()</a></code>, <code title=dom-Storage-removeItem><a href=#dom-storage-removeitem>removeItem()</a></code>, and <code title=dom-Storage-clear><a href=#dom-storage-clear>clear()</a></code> methods are called on a
  <code><a href=#storage-0>Storage</a></code> object <var title="">x</var> that is associated
  with a session storage area, if the methods did something, then in
  every <code><a href=#htmldocument>HTMLDocument</a></code> object whose <code><a href=#window>Window</a></code>
  object's <code title=dom-sessionStorage><a href=#dom-sessionstorage>sessionStorage</a></code>
  attribute's <code><a href=#storage-0>Storage</a></code> object is associated with the same
  storage area, other than <var title="">x</var>, a <code title=event-storage><a href=#event-storage>storage</a></code> event must be fired, as <a href=#event-storage title=event-storage>described below</a>.</p>


  <h5 id=the-localstorage-attribute><span class=secno>5.11.1.4 </span>The <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code> attribute</h5>

  <p>The <dfn id=dom-localstorage title=dom-localStorage><code>localStorage</code></dfn>
  object provides a <code><a href=#storage-0>Storage</a></code> object for an
  <a href=#origin-0>origin</a>.</p>

  <p>User agents must have a set of local storage areas, one for each
  <a href=#origin-0>origin</a>.</p>

  <p>User agents should expire data from the local storage areas only
  for security reasons or when requested to do so by the user. User
  agents should always avoid deleting data while a script that could
  access that data is running. Data stored in local storage areas
  should be considered potentially user-critical. It is expected that
  Web applications will use the local storage areas for storing
  user-written documents.</p>

  <p>When the <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code>
  attribute is accessed, the user agent must check to see if it has
  allocated a local storage area for the <a href=#origin-0>origin</a> of the
  <code>Document</code> of the <code><a href=#window>Window</a></code> object on which the
  method was invoked. If it has not, a new storage area for that
  <a href=#origin-0>origin</a> must be created.</p>

  <p>The user agent must then return the <code><a href=#storage-0>Storage</a></code> object
  associated with that origin's local storage area. Each
  <code>Document</code> object must have a separate object for its
  <code><a href=#window>Window</a></code>'s <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code> attribute.</p>

  <p id=localStorageEvent>When the <code title=dom-Storage-setItem><a href=#dom-storage-setitem>setItem()</a></code>, <code title=dom-Storage-removeItem><a href=#dom-storage-removeitem>removeItem()</a></code>, and <code title=dom-Storage-clear><a href=#dom-storage-clear>clear()</a></code> methods are called on a
  <code><a href=#storage-0>Storage</a></code> object <var title="">x</var> that is associated
  with a local storage area, if the methods did something, then in
  every <code><a href=#htmldocument>HTMLDocument</a></code> object whose <code><a href=#window>Window</a></code>
  object's <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code>
  attribute's <code><a href=#storage-0>Storage</a></code> object is associated with the same
  storage area, other than <var title="">x</var>, a <code title=event-storage><a href=#event-storage>storage</a></code> event must be fired, as <a href=#event-storage title=event-storage>described below</a>.</p>


  <h5 id=the-storage-event><span class=secno>5.11.1.5 </span>The <code title=event-storage><a href=#event-storage>storage</a></code> event</h5>

  <!-- XXX fix up for workers: target is wrong, source and storageArea
  definitions are wrong -->

  <p>The <dfn id=event-storage title=event-storage><code>storage</code></dfn> event
  is fired when a storage area changes, as described in the previous
  two sections (<a href=#sessionStorageEvent>for session
  storage</a>, <a href=#localStorageEvent>for local
  storage</a>).</p>

  <p>When this happens, the user agent must dispatch an event with the
  name <code><a href=#storage-0>storage</a></code>, with no namespace, which does not bubble
  but is cancelable, and which uses the <code><a href=#storageevent>StorageEvent</a></code>
  interface, at each <code><a href=#window>Window</a></code> object whose
  <code>Document</code> object both has a <code><a href=#storage-0>Storage</a></code> object
  that is affected, and is <a href=#fully-active>fully active</a>.</p>

  <p>If the event is being fired due to an invocation of the
  <code title=dom-Storage-setItem><a href=#dom-storage-setitem>setItem()</a></code> or <code title=dom-Storage-removeItem><a href=#dom-storage-removeitem>removeItem()</a></code> methods, the
  event must have its <code title=dom-StorageEvent-key><a href=#dom-storageevent-key>key</a></code>
  attribute set to the name of the key in question, its <code title=dom-StorageEvent-oldValue><a href=#dom-storageevent-oldvalue>oldValue</a></code> attribute set to
  the old value of the key in question, or null if the key is newly
  added, and its <code title=dom-StorageEvent-newValue><a href=#dom-storageevent-newvalue>newValue</a></code>
  attribute set to the new value of the key in question, or null if
  the key was removed.</p>

  <p>Otherwise, if the event is being fired due to an invocation of
  the <code title=dom-Storage-clear><a href=#dom-storage-clear>clear()</a></code> method, the event
  must have its <code title=dom-StorageEvent-key><a href=#dom-storageevent-key>key</a></code>, <code title=dom-StorageEvent-oldValue><a href=#dom-storageevent-oldvalue>oldValue</a></code>, and <code title=dom-StorageEvent-newValue><a href=#dom-storageevent-newvalue>newValue</a></code> attributes set to
  null.</p>

  <p>In addition, the event must have its <code title=dom-StorageEvent-url><a href=#dom-storageevent-url>url</a></code> attribute set to <a href="#the-document's-address" title="the document's address">the address of the document</a>
  whose <code><a href=#storage-0>Storage</a></code> object was affected; its <code title=dom-StorageEvent-source><a href=#dom-storageevent-source>source</a></code> attribute set to the
  that document's <a href=#browsing-context>browsing context</a>'s
  <code><a href=#windowproxy>WindowProxy</a></code> object, if the two documents are in the
  same <a href=#unit-of-related-browsing-contexts>unit of related browsing contexts</a>, or null
  otherwise; and its <code title=dom-StorageEvent-storageArea><a href=#dom-storageevent-storagearea>storageArea</a></code> attribute
  set to the <code><a href=#storage-0>Storage</a></code> object from the <code><a href=#window>Window</a></code>
  object of the target <code>Document</code> that represents the same
  kind of <code><a href=#storage-0>Storage</a></code> area as was affected (i.e. session or
  local).</p>


  <h6 id=event-definition-0><span class=secno>5.11.1.5.1 </span>Event definition</h6>

  <pre class=idl>interface <dfn id=storageevent>StorageEvent</dfn> : Event {
  readonly attribute DOMString <a href=#dom-storageevent-key title=dom-StorageEvent-key>key</a>;
  readonly attribute DOMString <a href=#dom-storageevent-oldvalue title=dom-StorageEvent-oldValue>oldValue</a>;
  readonly attribute DOMString <a href=#dom-storageevent-newvalue title=dom-StorageEvent-newValue>newValue</a>;
  readonly attribute DOMString <a href=#dom-storageevent-url title=dom-StorageEvent-url>url</a>;
  readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-storageevent-source title=dom-StorageEvent-source>source</a>;
  readonly attribute <a href=#storage-0>Storage</a> <a href=#dom-storageevent-storagearea title=dom-StorageEvent-storageArea>storageArea</a>;
  void <a href=#dom-storageevent-initstorageevent title=dom-StorageEvent-initStorageEvent>initStorageEvent</a>(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in DOMString keyArg, in DOMString oldValueArg, in DOMString newValueArg, in DOMString urlArg, in <a href=#windowproxy>WindowProxy</a> sourceArg, in <a href=#storage-0>Storage</a> storageAreaArg);
  void <a href=#dom-storageevent-initstorageeventns title=dom-StorageEvent-initStorageEventNS>initStorageEventNS</a>(in DOMString namespaceURI, in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in DOMString keyArg, in DOMString oldValueArg, in DOMString newValueArg, in DOMString urlArg, in <a href=#windowproxy>WindowProxy</a> sourceArg, in <a href=#storage-0>Storage</a> storageAreaArg);
};</pre>

  <p>The <dfn id=dom-storageevent-initstorageevent title=dom-StorageEvent-initStorageEvent><code>initStorageEvent()</code></dfn>
  and <dfn id=dom-storageevent-initstorageeventns title=dom-StorageEvent-initStorageEventNS><code>initStorageEventNS()</code></dfn>
  methods must initialize the event in a manner analogous to the
  similarly-named methods in the DOM3 Events interfaces. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p>The <dfn id=dom-storageevent-key title=dom-StorageEvent-key><code>key</code></dfn>
  attribute represents the key being changed.</p>

  <p>The <dfn id=dom-storageevent-oldvalue title=dom-StorageEvent-oldValue><code>oldValue</code></dfn>
  attribute represents the old value of the key being changed.</p>

  <p>The <dfn id=dom-storageevent-newvalue title=dom-StorageEvent-newValue><code>newValue</code></dfn>
  attribute represents the new value of the key being changed.</p>

  <p>The <dfn id=dom-storageevent-url title=dom-StorageEvent-url><code>url</code></dfn>
  attribute represents the address of the document whose key
  changed.</p>

  <p>The <dfn id=dom-storageevent-source title=dom-StorageEvent-source><code>source</code></dfn> attribute
  represents the <code><a href=#windowproxy>WindowProxy</a></code> object of the <a href=#browsing-context>browsing
  context</a> of the document whose key changed.</p>

  <p>The <dfn id=dom-storageevent-storagearea title=dom-StorageEvent-storageArea><code>storageArea</code></dfn>
  attribute represents the <code><a href=#storage-0>Storage</a></code> object that was
  affected.</p>



  <h5 id=threads><span class=secno>5.11.1.6 </span>Threads</h5>

  <p>Multiple browsing contexts must be able to access the local
  storage areas simultaneously in such a manner that scripts cannot
  detect any concurrent script execution.</p>

  <p>This is required to guarantee that the <code title=dom-Storage-length><a href=#dom-storage-length>length</a></code> attribute of a
  <code><a href=#storage-0>Storage</a></code> object never changes while a script is
  executing, other than in a way that is predictable by the script
  itself.</p>

  <p class=note>There are various ways of implementing this
  requirement. One is to just have one <a href=#event-loop>event loop</a> for all
  <a href=#browsing-context title="browsing context">browsing contexts</a>. Another is
  that if a script running in one browsing context accesses a storage
  area, the user agent blocks scripts in other browsing contexts when
  they try to access the same storage area until the <a href=#event-loop>event
  loop</a> running the first script has completed running the task
  that started that script. Another (potentially more efficient but
  certainly more complex) implementation strategy is to use optimistic
  transactional script execution. This specification does not require
  any particular implementation strategy, so long as the requirement
  above is met.</p>




  <h4 id=sql><span class=secno>5.11.2 </span>Database storage</h4>

  <!-- Feature requests for future versions (v2):
        * deleting databases
        * determining how much storage room is left
        * handling the database getting corrupted
  -->

  <h5 id=introduction-3><span class=secno>5.11.2.1 </span>Introduction</h5>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>...</p>

<!-- include an example that does something like the following to show
you should never embed strings straight into the statement, even when you
have a variable and unknowable number of literals coming:
   var q = "";
   for each (var i in array)
     q += (q == "" ? "" : ", ") + "?";
   executeSql('SELECT rowid FROM t WHERE c IN (' + q + ')', array, ...);
-->

  <h5 id=databases><span class=secno>5.11.2.2 </span>Databases</h5>

  <p>Each <i><a href=#origin-0>origin</a></i> has an associated set of databases. Each
  database has a name and a current version. There is no way to
  enumerate or delete the databases available for a domain from this
  API.</p>

  <p class=note>Each database has one version at a time; a database
  can't exist in multiple versions at once. Versions are intended to
  allow authors to manage schema changes incrementally and
  non-destructively, and without running the risk of old code (e.g. in
  another browser window) trying to write to a database with incorrect
  assumptions.</p>

  <p>The <dfn id=dom-opendatabase title=dom-opendatabase><code>openDatabase()</code></dfn> method
  returns a <code><a href=#database>Database</a></code> object. The method takes four
  arguments: a database name, a database version, a display name, and
  an estimated size, in bytes, of the data that will be stored in the
  database.</p>

  <p>The <code title=dom-opendatabase><a href=#dom-opendatabase>openDatabase()</a></code> method
  must use and create databases from the <a href=#origin-0>origin</a> of the
  <code>Document</code> of the <code><a href=#window>Window</a></code> object on which the
  method was invoked.</p>

  <p>If the database version provided is not the empty string, and the
  database already exists but has a different version, or no version,
  then the method must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code>
  exception.</p>

  <p>Otherwise, if the database version provided is the empty string,
  or if the database doesn't yet exist, or if the database exists and
  the version provided to the <code title=dom-opendatabase><a href=#dom-opendatabase>openDatabase()</a></code> method is the same as
  the current version associated with the database, then the method
  must return a <code><a href=#database>Database</a></code> object representing the database
  that has the name that was given. If no such database exists, it
  must be created first.</p>

  <p>All strings including the empty string are valid database
  names. Database names must be compared in a
  <a href=#case-sensitive>case-sensitive</a> manner.</p>

  <p>The user agent may raise a <code><a href=#security_err>SECURITY_ERR</a></code> exception
  instead of returning a <code><a href=#database>Database</a></code> object if the request
  violates a policy decision (e.g. if the user agent is configured to
  not allow the page to open databases).</p>

  <p class=note>Implementations can support this even in
  environments that only support a subset of all strings as database
  names by mapping database names (e.g. using a hashing algorithm) to
  the supported set of names.</p>

  <p>User agents are expected to use the display name and the
  estimated database size to optimize the user experience. For
  example, a user agent could use the estimated size to suggest an
  initial quota to the user. This allows a site that is aware that it
  will try to use hundreds of megabytes to declare this upfront,
  instead of the user agent prompting the user for permission to
  increase the quota every five megabytes.</p>

  <pre class=idl>interface <dfn id=database>Database</dfn> {
  void <a href=#dom-database-transaction title=dom-database-transaction>transaction</a>(in <a href=#sqltransactioncallback>SQLTransactionCallback</a> callback, [Optional] in <a href=#sqltransactionerrorcallback>SQLTransactionErrorCallback</a> errorCallback, [Optional] in <a href=#sqlvoidcallback>SQLVoidCallback</a> successCallback);
  void <a href=#dom-database-readtransaction title=dom-database-readTransaction>readTransaction</a>(in <a href=#sqltransactioncallback>SQLTransactionCallback</a> callback, [Optional] in <a href=#sqltransactionerrorcallback>SQLTransactionErrorCallback</a> errorCallback, [Optional] in <a href=#sqlvoidcallback>SQLVoidCallback</a> successCallback);

  readonly attribute DOMString <a href=#dom-database-version title=dom-database-version>version</a>;
  void <a href=#dom-database-changeversion title=dom-database-changeVersion>changeVersion</a>(in DOMString oldVersion, in DOMString newVersion, in <a href=#sqltransactioncallback>SQLTransactionCallback</a> callback, in <a href=#sqltransactionerrorcallback>SQLTransactionErrorCallback</a> errorCallback, in <a href=#sqlvoidcallback>SQLVoidCallback</a> successCallback);
};

[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=sqlvoidcallback>SQLVoidCallback</dfn> {
  void <span title=dom-sqlvoidcallback-handleEvent>handleEvent</span>();
};

[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=sqltransactioncallback>SQLTransactionCallback</dfn> {
  void <span title=dom-sqltransactioncallback-handleEvent>handleEvent</span>(in <a href=#sqltransaction>SQLTransaction</a> transaction);
};

[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=sqltransactionerrorcallback>SQLTransactionErrorCallback</dfn> {
  void <span title=dom-sqltransactionerrorcallback-handleEvent>handleEvent</span>(in <a href=#sqlerror>SQLError</a> error);
};</pre>

  <p>The <dfn id=dom-database-transaction title=dom-database-transaction><code>transaction()</code></dfn>
  and <dfn id=dom-database-readtransaction title=dom-database-readTransaction><code>readTransaction()</code></dfn>
  methods takes one to three arguments. When called, these method must
  immediately return and then asynchronously run the <a href=#transaction-steps>transaction
  steps</a> with the <i>transaction callback</i> being the first
  argument, the <i>error callback</i> being the second argument, if
  any, the <i>success callback</i> being the third argument, if any,
  and with no <i>preflight operation</i> or <i>postflight
  operation</i>.</p>

  <p>For the <code title=dom-database-transaction><a href=#dom-database-transaction>transaction()</a></code> method, the
  <i>mode</i> must be read/write. For the <code title=dom-database-readTransaction><a href=#dom-database-readtransaction>readTransaction()</a></code>
  method, the <i>mode</i> must be read-only.</p>

  <p>The version that the database was opened with is the <dfn id=concept-database-expected-version title=concept-database-expected-version>expected version</dfn> of
  this <code><a href=#database>Database</a></code> object. It can be the empty string, in
  which case there is no expected version &mdash; any version is
  fine.</p>

  <p>On getting, the <dfn id=dom-database-version title=dom-database-version><code>version</code></dfn> attribute
  must return the current version of the database (as opposed to the
  <a href=#concept-database-expected-version title=concept-database-expected-version>expected
  version</a> of the <code><a href=#database>Database</a></code> object).</p>

  <p>The <dfn id=dom-database-changeversion title=dom-database-changeVersion><code>changeVersion()</code></dfn>
  method allows scripts to atomically verify the version number and
  change it at the same time as doing a schema update. When the method
  is invoked, it must immediately return, and then asynchronously run
  the <a href=#transaction-steps>transaction steps</a> with the <i>transaction
  callback</i> being the third argument, the <i>error callback</i>
  being the fourth argument, the <i>success callback</i> being the
  fifth argument, the <i>preflight operation</i> being the
  following:</p>

  <ol><li><p>Check that the value of the first argument to the <code title=dom-database-changeVersion><a href=#dom-database-changeversion>changeVersion()</a></code> method
   exactly matches the database's actual version. If it does not, then
   the <i>preflight operation</i> fails.</li>

  </ol><p>...the <i>postflight operation</i> being the following:</p>

  <ol><li>Change the database's actual version to the value of the second
   argument to the <code title=dom-database-changeVersion><a href=#dom-database-changeversion>changeVersion()</a></code>
   method.</li>

   <li>Change the <code><a href=#database>Database</a></code> object's expected version to
   the value of the second argument to the <code title=dom-database-changeVersion><a href=#dom-database-changeversion>changeVersion()</a></code>
   method.</li>

  </ol><p>...and the <i>mode</i> being read/write.</p>


  <h5 id=executing-sql-statements><span class=secno>5.11.2.3 </span>Executing SQL statements</h5>

  <p>The <code title=dom-database-transaction><a href=#dom-database-transaction>transaction()</a></code>
  and <code title=dom-database-changeVersion><a href=#dom-database-changeversion>changeVersion()</a></code>
  methods invoke callbacks with <code><a href=#sqltransaction>SQLTransaction</a></code>
  objects.</p>

  <pre class=idl>typedef sequence&lt;any&gt; <dfn id=objectarray>ObjectArray</dfn>;

interface <dfn id=sqltransaction>SQLTransaction</dfn> {
  void <a href=#dom-sqltransaction-executesql title=dom-sqltransaction-executeSql>executeSql</a>(in DOMString sqlStatement, [Optional] in <a href=#objectarray>ObjectArray</a> arguments, [Optional] in <a href=#sqlstatementcallback>SQLStatementCallback</a> callback, [Optional] in <a href=#sqlstatementerrorcallback>SQLStatementErrorCallback</a> errorCallback);
};

[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=sqlstatementcallback>SQLStatementCallback</dfn> {
  void <span title=dom-sqlstatementcallback-handleEvent>handleEvent</span>(in <a href=#sqltransaction>SQLTransaction</a> transaction, in <a href=#sqlresultset>SQLResultSet</a> resultSet);
};

[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=sqlstatementerrorcallback>SQLStatementErrorCallback</dfn> {
  boolean <span title=dom-sqlstatementerrorcallback-handleEvent>handleEvent</span>(in <a href=#sqltransaction>SQLTransaction</a> transaction, in <a href=#sqlerror>SQLError</a> error);
};</pre>

  <p>When the <dfn id=dom-sqltransaction-executesql title=dom-sqltransaction-executeSql><code>executeSql(<var title="">sqlStatement</var>, <var title="">arguments</var>, <var title="">callback</var>, <var title="">errorCallback</var>)</code></dfn> method is invoked, the
  user agent must run the following algorithm. (This algorithm is
  relatively simple in that it doesn't actually execute any SQL
  &mdash; the bulk of the work is actually done as part of the
  <a href=#transaction-steps>transaction steps</a>.)</p>

  <ol><li><p>If the method was not invoked during the execution of a
   <code><a href=#sqltransactioncallback>SQLTransactionCallback</a></code>,
   <code><a href=#sqlstatementcallback>SQLStatementCallback</a></code>, or
   <code><a href=#sqlstatementerrorcallback>SQLStatementErrorCallback</a></code> then raise an
   <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception. (Calls from inside a
   <code><a href=#sqltransactionerrorcallback>SQLTransactionErrorCallback</a></code> thus raise an
   exception. The <code><a href=#sqltransactionerrorcallback>SQLTransactionErrorCallback</a></code> handler is
   only called once a transaction has failed, and no SQL statements
   can be added to a failed transaction.)</li>

   <li><p>Parse the first argument to the method (<var title="">sqlStatement</var>) as a SQL statement, with the exception
   that U+003F QUESTION MARK (?) characters can be used in place of
   SQL literals in the statement. <a href=#refsSQL>[SQL]</a></li>

   <li>

    <p>Replace each <code title="">?</code> placeholder with the value
    of the argument in the <var title="">arguments</var> array with
    the same position. (So the first <code title="">?</code>
    placeholder gets replaced by the first value in the <var title="">arguments</var> array, and generally the <var title="">n</var>th <code title="">?</code> placeholder gets
    replaced by the <var title="">n</var>th value in the <var title="">arguments</var> array.)</p>

    <p class=note>Substitutions for <code title="">?</code>
    placeholders are done at the literal level, not as string
    concatenations, so this provides a way to dynamically insert
    parameters into a statement without risk of a SQL injection
    attack.</p>

    <p>If the second argument is omitted or null, then treat the <var title="">arguments</var> array as empty.</p>

    <p>The result is <i>the statement</i>.</p>

    <p class=XXX>Implementation feedback is requested on what
    to do with arguments that are of types that are not supported by
    the underlying SQL backend. For example, SQLite doesn't support
    booleans, so what should the UA do if passed a boolean? The Gears
    team suggests failing, not silently converting types.</p>

   </li>

   <li><p>If the syntax of <var title="">sqlStatement</var> is not
   valid (except for the use of <code title="">?</code> characters in
   the place of literals), or the statement uses features that are not
   supported (e.g. due to security reasons), or the number of items in
   the <var title="">arguments</var> array is not equal to the number
   of <code title="">?</code> placeholders in the statement, or the
   statement cannot be parsed for some other reason, then mark <i>the
   statement</i> as bogus.</li>

   <li><p>If the <code><a href=#database>Database</a></code> object that the
   <code><a href=#sqltransaction>SQLTransaction</a></code> object was created from has an <a href=#concept-database-expected-version title=concept-database-expected-version>expected version</a>
   that is neither the empty string nor the actual version of the
   database, then mark <i>the statement</i> as bogus. (<a href=#dom-sqlerror-code-2 title=dom-sqlerror-code-2>Error code 2</a>.)</li>

   <li><p>Queue up <i>the statement</i> in the transaction, along with
   the third argument (if any) as the statement's result set callback
   and the fourth argument (if any) as the error callback.</li>

  </ol><p>The user agent must act as if the database was hosted in an
  otherwise completely empty environment with no resources. For
  example, attempts to read from or write to the file system will
  fail.</p>


  <p>SQL inherently supports multiple concurrent connections. Authors
  should make appropriate use of the transaction features to handle
  the case of multiple scripts interacting with the same database
  simultaneously (as could happen if the same page was opened in two
  different <a href=#browsing-context title="browsing context">browsing
  contexts</a>).</p>

  <p>User agents must consider statements that use the <code title="">BEGIN</code>, <code title="">COMMIT</code>, and <code title="">ROLLBACK</code> SQL features as being unsupported (and thus
  will mark them as bogus), so as to not let these statements
  interfere with the explicit transactions managed by the database API
  itself.</p>

  <p class=note>A future version of this specification will probably
  define the exact SQL subset required in more detail.</p>


  <h5 id=database-query-results><span class=secno>5.11.2.4 </span>Database query results</h5>

  <p>The <code title=dom-transaction-executeSql>executeSql()</code>
  method invokes its callback with a <code><a href=#sqlresultset>SQLResultSet</a></code> object
  as an argument.</p>

  <pre class=idl>interface <dfn id=sqlresultset>SQLResultSet</dfn> {
  readonly attribute long <a href=#dom-sqlresultset-insertid title=dom-SQLResultSet-insertId>insertId</a>;
  readonly attribute long <a href=#dom-sqlresultset-rowsaffected title=dom-SQLResultSet-rowsAffected>rowsAffected</a>;
  readonly attribute <a href=#sqlresultsetrowlist>SQLResultSetRowList</a> <a href=#dom-sqlresultset-rows title=dom-SQLResultSet-rows>rows</a>;
};</pre>

  <p>The <dfn id=dom-sqlresultset-insertid title=dom-SQLResultSet-insertId><code>insertId</code></dfn>
  attribute must return the row ID of the row that the
  <code><a href=#sqlresultset>SQLResultSet</a></code> object's SQL statement inserted into the
  database, if the statement inserted a row. If the statement inserted
  multiple rows, the ID of the last row must be the one returned. If
  the statement did not insert a row, then the attribute must instead
  raise an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception.</p>

  <p>The <dfn id=dom-sqlresultset-rowsaffected title=dom-SQLResultSet-rowsAffected><code>rowsAffected</code></dfn>
  attribute must return the number of rows that were affected by the
  SQL statement. If the statement did not affected any rows, then the
  attribute must return zero. For "SELECT" statements, this returns
  zero (querying the database doesn't affect any rows).</p>

  <p>The <dfn id=dom-sqlresultset-rows title=dom-SQLResultSet-rows><code>rows</code></dfn>
  attribute must return a <code><a href=#sqlresultsetrowlist>SQLResultSetRowList</a></code>
  representing the rows returned, in the order returned by the
  database. If no rows were returned, then the object will be empty
  (its <code title=dom-SQLResultSetRowList-length><a href=#dom-sqlresultsetrowlist-length>length</a></code> will
  be zero).</p>

  <pre class=idl>interface <dfn id=sqlresultsetrowlist>SQLResultSetRowList</dfn> {
  readonly attribute unsigned long <a href=#dom-sqlresultsetrowlist-length title=dom-SQLResultSetRowList-length>length</a>;
  [IndexGetter] <span>any</span> <a href=#dom-sqlresultsetrowlist-item title=dom-SQLResultSetRowList-item>item</a>(in unsigned long index);
};</pre>

  <p><code><a href=#sqlresultsetrowlist>SQLResultSetRowList</a></code> objects have a <dfn id=dom-sqlresultsetrowlist-length title=dom-SQLResultSetRowList-length><code>length</code></dfn>
  attribute that must return the number of rows it represents (the
  number of rows returned by the database). This is the <var title=dom-SQLResultSetRowList-length><a href=#dom-sqlresultsetrowlist-length>length</a></var>.</p>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to <span><var title=dom-SQLResultSetRowList-length><a href=#dom-sqlresultsetrowlist-length>length</a></var>-1</span>, unless
  the <var title=dom-SQLResultSetRowList-length><a href=#dom-sqlresultsetrowlist-length>length</a></var> is
  zero, in which case there are no <span>supported indexed
  properties</span>.</p>

  <p>The <dfn id=dom-sqlresultsetrowlist-item title=dom-SQLResultSetRowList-item><code>item(<var title="">index</var>)</code></dfn> attribute must return the row
  with the given index <var title="">index</var>. If there is no such
  row, then the method must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code>
  exception.</p>

  <p>Each row must be represented by a native ordered dictionary data
  type. In the ECMAScript binding, this must be <code><a href=#the-object-element>Object</a></code>.
  Each row object must have one property (or dictionary entry) per
  column, with those properties enumerating in the order that these
  columns were returned by the database. Each property must have the
  name of the column and the value of the cell, as they were returned
  by the database.</p>


  <h5 id=errors><span class=secno>5.11.2.5 </span>Errors</h5>

  <p>Errors in the database API are reported using callbacks that have
  a <code><a href=#sqlerror>SQLError</a></code> object as one of their arguments.</p>

  <pre class=idl>interface <dfn id=sqlerror>SQLError</dfn> {
  readonly attribute unsigned long <a href=#dom-sqlerror-code title=dom-SQLError-code>code</a>;
  readonly attribute DOMString <a href=#dom-sqlerror-message title=dom-SQLError-message>message</a>;
};</pre>

  <p>The <dfn id=dom-sqlerror-code title=dom-SQLError-code><code>code</code></dfn> DOM
  attribute must return the most appropriate code from the following
  table:</p>

  <table><thead><tr><th>Code
     <th>Situation
   <tbody><tr><td><dfn id=dom-sqlerror-code-0 title=dom-sqlerror-code-0>0</dfn>
     <td>The transaction failed for reasons unrelated to the database
     itself and not covered by any other error code.

    <tr><td><dfn id=dom-sqlerror-code-1 title=dom-sqlerror-code-1>1</dfn>
     <td>The statement failed for database reasons not covered by any
     other error code.

    <tr><td><dfn id=dom-sqlerror-code-2 title=dom-sqlerror-code-2>2</dfn>
     <td>The statement failed because the <a href=#concept-database-expected-version title=concept-database-expected-version>expected version</a>
     of the database didn't match the actual database version.

    <tr><td><dfn id=dom-sqlerror-code-3 title=dom-sqlerror-code-3>3</dfn>
     <td>The statement failed because the data returned from the
     database was too large. The SQL "LIMIT" modifier might be useful
     to reduce the size of the result set.

    <tr><td><dfn id=dom-sqlerror-code-4 title=dom-sqlerror-code-4>4</dfn>
     <td>The statement failed because there was not enough remaining
     storage space, or the storage quota was reached and the user
     declined to give more space to the database.

    <tr><td><dfn id=dom-sqlerror-code-5 title=dom-sqlerror-code-5>5</dfn>
     <td>The statement failed because the transaction's first
     statement was a read-only statement, and a subsequent statement
     in the same transaction tried to modify the database, but the
     transaction failed to obtain a write lock before another
     transaction obtained a write lock and changed a part of the
     database that the former transaction was depending upon.

    <tr><td><dfn id=dom-sqlerror-code-6 title=dom-sqlerror-code-6>6</dfn>
     <td>An <code title="">INSERT</code>, <code title="">UPDATE</code>, or <code title="">REPLACE</code>
     statement failed due to a constraint failure. For example,
     because a row was being inserted and the value given for the
     primary key column duplicated the value of an existing row.

  </table><p class=XXX>We should define a more thorough list of
  codes. Implementation feedback is requested to determine what codes
  are needed.</p>

  <p>The <dfn id=dom-sqlerror-message title=dom-SQLError-message><code>message</code></dfn>
  DOM attribute must return an error message describing the error
  encountered. The message should be localized to the user's
  language.</p>



  <h5 id=processing-model-2><span class=secno>5.11.2.6 </span>Processing model</h5>

  <p>The <dfn id=transaction-steps>transaction steps</dfn> are as follows. These steps must
  be run asynchronously. These steps are invoked with a <i>transaction
  callback</i>, optionally an <i>error callback</i>, optionally a
  <i>success callback</i>, optionally a <i>preflight operation</i>,
  optionally a <i>postflight operation</i>, and with a <i>mode</i>
  that is either read/write or read-only.</p>

  <ol><li><p>Open a new SQL transaction to the database, and create a
   <code><a href=#sqltransaction>SQLTransaction</a></code> object that represents that
   transaction. If the <i>mode</i> is read/write, the transaction must
   have an exclusive write lock over the entire database. If the
   <i>mode</i> is read-only, the transaction must have a shared read
   lock over the entire database. The user agent should wait for an
   appropriate lock to be available.</li>

   <li><p>If an error occurred in the opening of the transaction
   (e.g. if the user agent failed to obtain an appropriate lock after
   an appropriate delay), jump to the last step.</li>

   <li><p>If a <i>preflight operation</i> was defined for this
   instance of the transaction steps, run that. If it fails, then jump
   to the last step. (This is basically a hook for the <code title=dom-database-changeVersion><a href=#dom-database-changeversion>changeVersion()</a></code>
   method.)</li>

   <li><p><a href=#queue-a-task>Queue a task</a> to invoke the <i>transaction
   callback</i> with the aforementioned <code><a href=#sqltransaction>SQLTransaction</a></code>
   object as its only argument, and wait for that task to be
   run.</li>

   <li><p>If the callback couldn't be called (e.g. it was null), or if
   the callback was invoked and raised an exception, jump to the last
   step.</li>
<!--
   <li><p>If the callback could be called and returned false, let
   <i>callback-canceled</i> be true. Otherwise, let it be
   false.</p></li>
-->
   <li><p>While there are any statements queued up in the transaction,
   perform the following steps for each queued up statement in the
   transaction, oldest first. Each statement has a statement,
   optionally a result set callback, and optionally an error
   callback.</p>

    <ol><li><p>If the statement is marked as bogus, jump to the "in case
     of error" steps below.</li>

     <li id=modifications-fail-if-read-only>

      <p>If the <i>mode</i> is read-only but the statement's main verb
      can modify the database, jump to the "in case of error" steps
      below.</p>

      <p class=note>Only the statement's main verb (e.g. <code title="">UPDATE</code>, <code title="">SELECT</code>, <code title="">DROP</code>) is considered here. Thus, a statement like
      "<code title="">UPDATE test SET id=0 WHERE 0=1</code>" would be
      treated as potentially modifying the database for the purposes
      of this step, even though it could never in fact have any
      side-effects.</p>

     </li>

     <li><p>Execute the statement in the context of the transaction.
     <a href=#refsSQL>[SQL]</a></p>

     <li><p>If the statement failed, jump to the "in case of error"
     steps below.</li>

     <li><p>Create a <code><a href=#sqlresultset>SQLResultSet</a></code> object that represents
     the result of the statement.</li>

     <li><p>If the statement has a result set callback, <a href=#queue-a-task>queue a
     task</a> to invoke it with the <code><a href=#sqltransaction>SQLTransaction</a></code>
     object as its first argument and the new
     <code><a href=#sqlresultset>SQLResultSet</a></code> object as its second argument, and wait
     for that task to be run.</li>

     <li><p>If the callback was invoked and raised an exception, jump
     to the last step in the overall steps.</li>

     <li><p>Move on to the next statement, if any, or onto the next
     overall step otherwise.</li>

    </ol><p>In case of error (or more specifically, if the above substeps
    say to jump to the "in case of error" steps), run the following
    substeps:</p>

    <ol><li><p>If the statement had an associated error callback, then
     <a href=#queue-a-task>queue a task</a> to invoke that error callback with the
     <code><a href=#sqltransaction>SQLTransaction</a></code> object and a newly constructed
     <code><a href=#sqlerror>SQLError</a></code> object that represents the error that
     caused these substeps to be run as the two arguments,
     respectively, and wait for the task to be run.</li>

     <li><p>If the error callback returns false, then move on to the
     next statement, if any, or onto the next overall step
     otherwise.</li>

     <li><p>Otherwise, the error callback did not return false, or
     there was no error callback. Jump to the last step in the overall
     steps.</li>

    </ol></li>

   <li><p>If a <i>postflight operation</i> was defined for this
   instance of the transaction steps, run that. If it fails, then jump
   to the last step. <!--The operation, if any, might depend
   <i>callback-canceled</i>.--> (This is basically a hook for the
   <code title=dom-database-changeVersion><a href=#dom-database-changeversion>changeVersion()</a></code>
   method.)</li>

   <li><p>Commit the transaction.</li>

   <li><p>If an error occurred in the committing of the transaction,
   jump to the last step.</li>

   <li><p><a href=#queue-a-task>Queue a task</a> to invoke the <i>success
   callback</i>.</li>

   <li><p>End these steps. The next step is only used when something
   goes wrong.</li>

   <li><p><a href=#queue-a-task>Queue a task</a> to invoke the <i>error
   callback</i> with a newly constructed <code><a href=#sqlerror>SQLError</a></code> object
   that represents the last error to have occurred in this
   transaction. Rollback the transaction. Any still-pending statements
   in the transaction are discarded.</li>

  </ol><h4 id=disk-space><span class=secno>5.11.3 </span>Disk space</h4>

  <p>User agents should limit the total amount of space allowed for
  storage areas and databases.</p>

  <p>User agents should guard against sites storing data in the
  storage areas or databases of subdomains, e.g. storing up to the
  limit in a1.example.com, a2.example.com, a3.example.com, etc,
  circumventing the main example.com storage limit.</p>

  <p>User agents may prompt the user when quotas are reached, allowing
  the user to grant a site more space. This enables sites to store
  many user-created documents on the user's computer, for
  instance.</p>

  <p>User agents should allow users to see how much space each domain
  is using.</p>

  <!--<p>If the storage area space limit is reached during a <code
  title="dom-Storage-setItem">setItem()</code> call, the method will
  raise an exception.</p>-->

  <p>A mostly arbitrary limit of five megabytes per domain is
  recommended. Implementation feedback is welcome and will be used to
  update this suggestion in future.</p>


  <h4 id=privacy><span class=secno>5.11.4 </span>Privacy</h4>

  <h5 id=user-tracking><span class=secno>5.11.4.1 </span>User tracking</h5>

  <p>A third-party advertiser (or any entity capable of getting
  content distributed to multiple sites) could use a unique identifier
  stored in its local storage area or in its client-side database to
  track a user across multiple sessions, building a profile of the
  user's interests to allow for highly targeted advertising. In
  conjunction with a site that is aware of the user's real identity
  (for example an e-commerce site that requires authenticated
  credentials), this could allow oppressive groups to target
  individuals with greater accuracy than in a world with purely
  anonymous Web usage.</p>

  <p>There are a number of techniques that can be used to mitigate the
  risk of user tracking:</p>

  <ul><li>

    <p>Blocking third-party storage: user agents may restrict access
    to the <code title=dom-localStorage><a href=#dom-localstorage>localStorage</a></code> and
    database objects to scripts originating at the domain of the
    top-level document of the <a href=#browsing-context>browsing context</a>, for
    instance denying access to the API for pages from other domains
    running in <code><a href=#the-iframe-element>iframe</a></code>s.</p>

   </li>
 
   <li>

    <p>Expiring stored data: user agents may automatically delete
    stored data after a period of time.</p>

    <p>For example, a user agent could treat third-party local
    storage areas as session-only storage, deleting the data once the
    user had closed all the <span>browsing contexts</span> that could
    access it.</p>

    <p>This can restrict the ability of a site to track a user, as the
    site would then only be able to track the user across multiple
    sessions when he authenticates with the site itself (e.g. by
    making a purchase or logging in to a service).</p>

    <p>However, this also puts the user's data at risk.</p>

    <!-- XXX should there be an explicit way for sites to state when
    data should expire? as in
    localStorage.expireData(365); ? -->

   </li>

   <li>

    <p>Treating persistent storage as cookies: user agents should
    present the persistent storage and database features to the user
    in a way that does not distinguish them from HTTP session
    cookies. <a href=#refsRFC2109>[RFC2109]</a> <a href=#refsRFC2965>[RFC2965]</a></p>

    <p>This might encourage users to view persistent storage with
    healthy suspicion.</p>

   </li>

   <li>

    <p>Site-specific white-listing of access to local storage areas
    and databases: user agents may allow sites to access session
    storage areas in an unrestricted manner, but require the user to
    authorize access to local storage areas and databases.</p>

   </li>

   <li>

    <p><a href=#origin-0>Origin</a>-tracking of persistent storage data: user
    agents may record the origins of sites that contained content from
    third-party origins that caused data to be stored.</p>

    <p>If this information is then used to present the view of data
    currently in persistent storage, it would allow the user to make
    informed decisions about which parts of the persistent storage to
    prune. Combined with a blacklist ("delete this data and prevent
    this domain from ever storing data again"), the user can restrict
    the use of persistent storage to sites that he trusts.</p>

   </li>

   <li>

    <p>Shared blacklists: user agents may allow users to share their
    persistent storage domain blacklists.</p>

    <p>This would allow communities to act together to protect their
    privacy.</p>

   </li>

  </ul><p>While these suggestions prevent trivial use of these APIs for
  user tracking, they do not block it altogether. Within a single
  domain, a site can continue to track the user during a session, and
  can then pass all this information to the third party along with any
  identifying information (names, credit card numbers, addresses)
  obtained by the site. If a third party cooperates with multiple
  sites to obtain such information, a profile can still be
  created.</p>

  <p>However, user tracking is to some extent possible even with no
  cooperation from the user agent whatsoever, for instance by using
  session identifiers in URLs, a technique already commonly used for
  innocuous purposes but easily repurposed for user tracking (even
  retroactively). This information can then be shared with other
  sites, using using visitors' IP addresses and other user-specific
  data (e.g. user-agent headers and configuration settings) to combine
  separate sessions into coherent user profiles.</p>


  <h5 id=cookie-resurrection><span class=secno>5.11.4.2 </span>Cookie resurrection</h5>

  <p>If the user interface for persistent storage presents data in the
  persistent storage features separately from data in HTTP session
  cookies, then users are likely to delete data in one and not the
  other. This would allow sites to use the two features as redundant
  backup for each other, defeating a user's attempts to protect his
  privacy.</p>


  <h4 id=security-4><span class=secno>5.11.5 </span>Security</h4>

  <h5 id=dns-spoofing-attacks><span class=secno>5.11.5.1 </span>DNS spoofing attacks</h5>

  <p>Because of the potential for DNS spoofing attacks, one cannot
  guarantee that a host claiming to be in a certain domain really is
  from that domain. To mitigate this, pages can use SSL. Pages using
  SSL can be sure that only pages using SSL that have certificates
  identifying them as being from the same domain can access their
  local storage areas and databases.</p>


  <h5 id=cross-directory-attacks><span class=secno>5.11.5.2 </span>Cross-directory attacks</h5>

  <p>Different authors sharing one host name, for example users
  hosting content on <code>geocities.com</code>, all share one
  persistent storage object and one set of databases. There is no
  feature to restrict the access by pathname. Authors on shared hosts
  are therefore recommended to avoid using the persistent storage
  features, as it would be trivial for other authors to read from and
  write to the same storage area or database.</p>

  <p class=note>Even if a path-restriction feature was made
  available, the usual DOM scripting security model would make it
  trivial to bypass this protection and access the data from any
  path.</p>


  <h5 id=implementation-risks><span class=secno>5.11.5.3 </span>Implementation risks</h5>

  <p>The two primary risks when implementing these persistent storage
  features are letting hostile sites read information from other
  domains, and letting hostile sites write information that is then
  read from other domains.</p>

  <p>Letting third-party sites read data that is not supposed to be
  read from their domain causes <em>information leakage</em>, For
  example, a user's shopping wishlist on one domain could be used by
  another domain for targeted advertising; or a user's
  work-in-progress confidential documents stored by a word-processing
  site could be examined by the site of a competing company.</p>

  <p>Letting third-party sites write data to the storage areas of
  other domains can result in <em>information spoofing</em>, which is
  equally dangerous. For example, a hostile site could add items to a
  user's wishlist; or a hostile site could set a user's session
  identifier to a known ID that the hostile site can then use to track
  the user's actions on the victim site.</p>

  <p>Thus, strictly following the <a href=#origin-0>origin</a> model described
  in this specification is important for user security.</p>


  <h5 id=sql-and-user-agents><span class=secno>5.11.5.4 </span>SQL and user agents</h5>

  <p>User agent implementors are strongly encouraged to audit all
  their supported SQL statements for security implications. For
  example, <code title="">LOAD DATA INFILE</code> is likely to pose
  security risks and there is little reason to support it.</p>

  <p>In general, it is recommended that user agents not support
  features that control how databases are stored on disk. For example,
  there is little reason to allow Web authors to control the character
  encoding used in the disk representation of the data, as all data in
  ECMAScript is implicitly UTF-16.</p>


  <h5 id=sql-injection><span class=secno>5.11.5.5 </span>SQL injection</h5>

  <p>Authors are strongly recommended to make use of the <code title="">?</code> placeholder feature of the <code title=dom-sqltransaction-executeSql><a href=#dom-sqltransaction-executesql>executeSql()</a></code> method,
  and to never construct SQL statements on the fly.</p>





  <h3 id=links><span class=secno>5.12 </span>Links</h3>


  <h4 id=hyperlink-elements><span class=secno>5.12.1 </span>Hyperlink elements</h4>

  <p>The <code><a href=#the-a-element>a</a></code>, <code><a href=#the-area-element>area</a></code>, and <code><a href=#the-link-element>link</a></code>
  elements can, in certain situations described in the definitions of
  those elements, represent <dfn id=hyperlink title=hyperlink>hyperlinks</dfn>.</p>

  <p>The <dfn id=attr-hyperlink-href title=attr-hyperlink-href><code>href</code></dfn>
  attribute on a hyperlink element must have a value that is a
  <a href=#valid-url>valid URL</a>. This URL is the <em>destination
  resource</em> of the hyperlink.</p>

  <div class=note>

   <p>The <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute on
   <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements is not required; when
   those elements do not have <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attributes they do not
   represent hyperlinks.</p>

   <p>The <code title=attr-link-href><a href=#attr-link-href>href</a></code> attribute on the
   <code><a href=#the-link-element>link</a></code> element <em>is</em> required, but whether a
   <code><a href=#the-link-element>link</a></code> element represents a hyperlink or not depends on
   the value of the <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code> attribute
   of that element.</p>

  </div>

  <p>The <dfn id=attr-hyperlink-target title=attr-hyperlink-target><code>target</code></dfn>
  attribute, if present, must be a <a href=#valid-browsing-context-name-or-keyword>valid browsing context name
  or keyword</a>. User agents use this name when <a href=#following-hyperlinks>following
  hyperlinks</a>.</p>

  <p>The <dfn id=ping title=attr-hyperlink-ping><code>ping</code></dfn> attribute, if
  present, gives the URLs of the resources that are interested in
  being notified if the user follows the hyperlink. The value must be
  a space separated list of one or more <span>valid URLs</span>. The
  value is used by the user agent for <a href=#hyperlink-auditing>hyperlink
  auditing</a>.</p>

  <p>For <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements that represent
  hyperlinks, the relationship between the document containing the
  hyperlink and the destination resource indicated by the hyperlink is
  given by the value of the element's <dfn id=attr-hyperlink-rel title=attr-hyperlink-rel><code>rel</code></dfn> attribute, which
  must be a <a href=#set-of-space-separated-tokens>set of space-separated tokens</a>. The <a href=#linkTypes>allowed values and their meanings</a> are defined
  below. The <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code> attribute has
  no default value. If the attribute is omitted or if none of the
  values in the attribute are recognized by the UA, then the document
  has no particular relationship with the destination resource other
  than there being a hyperlink between the two.</p>

  <p>The <dfn id=attr-hyperlink-media title=attr-hyperlink-media><code>media</code></dfn>
  attribute describes for which media the target document was
  designed. It is purely advisory. The value must be a valid <a href=#mq>media query</a>. <a href=#refsMQ>[MQ]</a> The default,
  if the <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code> attribute is
  omitted, is <code>all</code>.</p>

  <p>The <dfn id=attr-hyperlink-hreflang title=attr-hyperlink-hreflang><code>hreflang</code></dfn>
  attribute on hyperlink elements, if present, gives the language of
  the linked resource. It is purely advisory. The value must be a
  valid RFC 3066 language code. <a href=#refsRFC3066>[RFC3066]</a>
  User agents must not consider this attribute authoritative &mdash;
  upon fetching the resource, user agents must use only language
  information associated with the resource to determine its language,
  not metadata included in the link to the resource.</p>

  <p>The <dfn id=attr-hyperlink-type title=attr-hyperlink-type><code>type</code></dfn>
  attribute, if present, gives the MIME type of the linked
  resource. It is purely advisory. The value must be a valid MIME
  type, optionally with parameters. <a href=#refsRFC2046>[RFC2046]</a> User agents must not consider the
  <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code> attribute
  authoritative &mdash; upon fetching the resource, user agents must
  not use metadata included in the link to the resource to determine
  its type.</p>



  <h4 id=following-hyperlinks><span class=secno>5.12.2 </span><dfn>Following hyperlinks</dfn></h4>

  <p>When a user <em>follows a hyperlink</em>, the user agent must
  <a href=#resolve-a-url title="resolve a url">resolve</a> the <a href=#url>URL</a>
  given by the <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> attribute
  of that hyperlink, relative to the hyperlink element, and if that is
  successful, must <a href=#navigate>navigate</a> a <a href=#browsing-context>browsing
  context</a> to the resulting <a href=#absolute-url>absolute URL</a>. In the
  case of server-side image maps, the URL of the hyperlink must
  further have its <var><a href=#hyperlink-suffix>hyperlink suffix</a></var> appended to it.</p>

  <p>If <a href=#resolve-a-url title="resolve a url">resolving</a> the
  <a href=#url>URL</a> fails, the user agent may report the error to the
  user in a user-agent-specific manner, may navigate to an error page
  to report the error, or may ignore the error and do nothing.</p>

  <p>If the user indicated a specific <a href=#browsing-context>browsing context</a>
  when following the hyperlink, or if the user agent is configured to
  follow hyperlinks by navigating a particular browsing context, then
  that must be the <a href=#browsing-context>browsing context</a> that is
  navigated.</p>

  <p>Otherwise, if the hyperlink element is an <code><a href=#the-a-element>a</a></code> or
  <code><a href=#the-area-element>area</a></code> element that has a <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code> attribute, then the
  <a href=#browsing-context>browsing context</a> that is navigated must be chosen by
  applying <a href=#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name>the rules for choosing a browsing context given a
  browsing context name</a>, using the value of the <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code> attribute as the
  browsing context name. If these rules result in the creation of a
  new <a href=#browsing-context>browsing context</a>, it must be navigated with
  <a href=#replacement-enabled>replacement enabled</a>.</p>

  <p>Otherwise, if the hyperlink element is a <a href=#rel-sidebar-hyperlink title=rel-sidebar-hyperlink>sidebar hyperlink</a> and the user
  agent implements a feature that can be considered a secondary
  browsing context, such a secondary browsing context may be selected
  as the browsing context to be navigated.</p>

  <p>Otherwise, if the hyperlink element is an <code><a href=#the-a-element>a</a></code> or
  <code><a href=#the-area-element>area</a></code> element with no <code title=attr-hyperlink-target><a href=#attr-hyperlink-target>target</a></code> attribute, but one of
  the child nodes of <a href=#the-head-element-0>the <code>head</code> element</a> is a
  <code><a href=#the-base-element>base</a></code> element with a <code title=attr-base-target><a href=#attr-base-target>target</a></code> attribute, then the browsing
  context that is navigated must be chosen by applying <a href=#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name>the rules
  for choosing a browsing context given a browsing context name</a>,
  using the value of the <code title=attr-base-target><a href=#attr-base-target>target</a></code>
  attribute of the first such <code><a href=#the-base-element>base</a></code> element as the
  browsing context name. If these rules result in the creation of a
  new <a href=#browsing-context>browsing context</a>, it must be navigated with
  <a href=#replacement-enabled>replacement enabled</a>.</p>

  <p>Otherwise, the browsing context that must be navigated is the
  same browsing context as the one which the hyperlink element itself
  is in.</p>

  <p>The navigation must be done with the <a href=#browsing-context>browsing
  context</a> that contains the <code>Document</code> object with
  which the hyperlink's element in question is associated as the
  <a href=#source-browsing-context>source browsing context</a>.</p>


  <h5 id=hyperlink-auditing><span class=secno>5.12.2.1 </span><dfn>Hyperlink auditing</dfn></h5>

  <p>If an <code><a href=#the-a-element>a</a></code> or <code><a href=#the-area-element>area</a></code> hyperlink element has a
  <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute, and the
  user follows the hyperlink, and the hyperlink's <a href=#url>URL</a> can
  be <a href=#resolve-a-url title="resolve a url">resolved</a>, relative to the
  hyperlink element, without failure, then the user agent must take
  the <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute's value,
  <a href=#split-a-string-on-spaces title="split a string on spaces">split that string on
  spaces</a>, <a href=#resolve-a-url title="resolve a url">resolve</a> each
  resulting token relative to the hyperlink element, and then should
  send a request (as described below) to each of the resulting <a href=#absolute-url title="absolute URL">absolute URLs</a>. (Tokens that fail to
  resolve are ignored.) This may be done in parallel with the primary
  request, and is independent of the result of that request.</p>

  <p>User agents should allow the user to adjust this behavior, for
  example in conjunction with a setting that disables the sending of
  HTTP <code title=http-referer>Referer</code> headers. Based on the
  user's preferences, UAs may either <a href=#ignore>ignore</a> the <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute altogether, or
  selectively ignore URLs in the list (e.g. ignoring any third-party
  URLs).</p>

  <p>For URLs that are HTTP URLs, the requests must be performed by
  <a href=#fetch title=fetch>fetching</a> the specified URLs using the
  POST method, with an entity body with the MIME type <code title="">text/ping</code> consisting of the four-character string
  "<code title="">PING</code>". All relevant cookie and HTTP
  authentication headers must be included in the request. Which other
  headers are required depends on the URLs involved.</p>

  <dl class=switch><dt>If both the <a href="#the-document's-address" title="the document's address">address</a>
   of the <code>Document</code> object containing the hyperlink being
   audited and the ping URL have the <a href=#same-origin>same origin</a></dt>

   <dd>The request must include a <code title=http-ping-from>Ping-From</code> HTTP header with, as its
   value, the <a href="#the-document's-address" title="the document's address">address</a> of
   the document containing the hyperlink, and a <code title=http-ping-to>Ping-To</code> HTTP header with, as its value,
   the address of the <a href=#absolute-url>absolute URL</a> of the target of the
   hyperlink. The request must not include a <code title=http-referer>Referer</code> HTTP header. <!-- because
   otherwise it would look like a trustable same-origin POST --></dd>

   <dt>Otherwise, if the origins are different, but the document
   containing the hyperlink being audited was not retrieved over an
   encrypted connection</dt>

   <dd>The request must include a <code title="">Referer</code> HTTP
   header [sic] with, as its value, the <a href="#the-document's-address" title="the document's
   address">address</a> of the document containing the hyperlink, a
   <code title=http-ping-from>Ping-From</code> HTTP header with the
   same value, and a <code title=http-ping-to>Ping-To</code> HTTP
   header with, as its value, the address of the target of the
   hyperlink.</dd>

   <dt>Otherwise, the origins are different and the document
   containing the hyperlink being audited was retrieved over an
   encrypted connection</dt>

   <dd>The request must include a <code title=http-ping-to>Ping-To</code> HTTP header with, as its value,
   the address of the target of the hyperlink. The request must
   neither include a <code title="">Referer</code> HTTP header nor
   include a <code title=http-ping-from>Ping-From</code> HTTP
   header.</dd>

  </dl><p>In addition, an <code title=http-origin>XXX-Origin</code> header
  must always be included, whose value is the <a href=#ascii-serialization-of-an-origin title="ASCII
  serialization of an origin">ASCII serialization</a> of the
  <a href=#origin-0>origin</a> of the the <code>Document</code> containing the
  <a href=#hyperlink>hyperlink</a>. The value of the <code title=http-origin>XXX-Origin</code> header must be set to "<code title="">null</code>" when following redirects if the <a href=#origin-0 title=origin>origins</a> of all the <a href=#url title=URL>URLs</a> involved are not the <a href=#same-origin title="same
  origin">same</a>.</p>

  <p class=note>To save bandwidth, implementors might also wish to
  consider omitting optional headers such as <code>Accept</code> from
  these requests.</p>

  <p>User agents must, unless otherwise specified by the user, honor
  the HTTP headers (including, in particular, redirects and HTTP
  cookie headers), but must ignore any entity bodies returned in the
  responses. User agents may close the connection prematurely once
  they start receiving an entity body. <a href=#refsRFC2109>[RFC2109]</a> <a href=#refsRFC2965>[RFC2965]</a></p>

  <p>For URLs that are not HTTP URLs, the requests must be performed
  by <a href=#fetch title=fetch>fetching</a> the specified URL normally,
  and discarding the results.</p>

  <p>When the <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute is
  present, user agents should clearly indicate to the user that
  following the hyperlink will also cause secondary requests to be
  sent in the background, possibly including listing the actual target
  URLs.</p>

  <p class=example>For example, a visual user agent could include
  the hostnames of the target ping URLs along with the hyperlink's
  actual URL in a status bar or tooltip.</p>

  <div class=note>

   <p>The <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute is redundant
   with pre-existing technologies like HTTP redirects and JavaScript
   in allowing Web pages to track which off-site links are most
   popular or allowing advertisers to track click-through rates.</p>

   <p>However, the <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute
   provides these advantages to the user over those alternatives:</p>

   <ul><li>It allows the user to see the final target URL
    unobscured.</li>

    <li>It allows the UA to inform the user about the out-of-band
    notifications.</li>

    <li>It allows the paranoid user to disable the notifications
    without losing the underlying link functionality.</li>

    <li>It allows the UA to optimize the use of available network
    bandwidth so that the target page loads faster.</li>

   </ul><p>Thus, while it is possible to track users without this feature,
   authors are encouraged to use the <code title=attr-hyperlink-ping><a href=#ping>ping</a></code> attribute so that the user agent
   can improve <!-- XXX optimize? --> the user experience.</p> <!--
   XXX need a better way to end that sentence. It's what I mean, but
   it sounds kooky. -->

  </div>

  <!-- resolving ping urls happens at audit time, so base URL changes
  affect the values of ping attributes -->



  <h4 id=linkTypes><span class=secno>5.12.3 </span>Link types</h4>

  <p>The following table summarizes the link types that are defined by
  this specification. This table is non-normative; the actual
  definitions for the link types are given in the next few
  sections.</p>

  <p>In this section, the term <i>referenced document</i> refers to
  the resource identified by the element representing the link, and
  the term <i>current document</i> refers to the resource within
  which the element representing the link finds itself.</p>

  <p>To determine which link types apply to a <code><a href=#the-link-element>link</a></code>,
  <code><a href=#the-a-element>a</a></code>, or <code><a href=#the-area-element>area</a></code> element, the element's <code title="">rel</code> attribute must be <a href=#split-a-string-on-spaces title="split a string on
  spaces">split on spaces</a>. The resulting tokens are the link
  types that apply to that element.</p>

  <p>Unless otherwise specified, a keyword must not be specified more
  than once per <code title=attr-rel-hyperlink>rel</code>
  attribute.</p>

  <p>The link types are <a href=#ascii-case-insensitive>ASCII case-insensitive</a> values,
  and must be compared as such.</p>

  <p class=example>Thus, <code title="">rel="next"</code> is the
  same as <code title="">rel="NEXT"</code>.</p>

  <table><thead><tr><th rowspan=2>Link type</th>
     <th colspan=2>Effect on...</th>
     <th rowspan=2>Brief description</th>
    <tr><th><code><a href=#the-link-element>link</a></code></th>
     <th><code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code></th>
    <tbody><tr><td><code title=rel-alternate><a href=#link-type-alternate>alternate</a></code></td> <!-- second most used <link rel> value -->
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Gives alternate representations of the current document.</td>
    <tr><td><code title=rel-archives><a href=#link-type-archives>archives</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Provides a link to a collection of records, documents, or other materials of historical interest.</td>
    <tr><td><code title=rel-author><a href=#link-type-author>author</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Gives a link to the current document's author.</td>
    <tr><td><code title=rel-bookmark><a href=#link-type-bookmark>bookmark</a></code></td> <!-- fourth most used <a rel> value -->
     <td><em>not allowed</em></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Gives the permalink for the nearest ancestor section.</td>
    </tr><!-- (commented out on the assumption that rel=contact is really XFN)
    <tr>
     <td><code title="rel-contact">contact</code></td> <!- 8th most used <a rel> value ->
     <td><span title="hyperlink link">Hyperlink</span></td>
     <td><span>Hyperlink</span></td>
     <td>Gives a link to contact information for the current document.</td>
    </tr>
--><tr><td><code title=rel-external><a href=#link-type-external>external</a></code></td> <!-- fifth and sixth most used <a rel> value (sixth is "external nofollow") -->
     <td><em>not allowed</em></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Indicates that the referenced document is not part of the same site as the current document.</td>
    <tr><td><code title=rel-feed><a href=#link-type-feed>feed</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Gives the address of a syndication feed for the current document.</td>
    <tr><td><code title=rel-first><a href=#link-type-first>first</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Indicates that the current document is a part of a series, and that the first document in the series is the referenced document.</td>
    <tr><td><code title=rel-help><a href=#link-type-help>help</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Provides a link to context-sensitive help.</td>
    <tr><td><code title=rel-icon><a href=#rel-icon>icon</a></code></td> <!-- link rel="shortcut icon" and its ilk are the fourth, sixth, and ninth most used values -->
     <td><a href=#external-resource-link title="external resource link">External Resource</a></td>
     <td><em>not allowed</em></td>
     <td>Imports an icon to represent the current document.</td>
    <tr><td><code title=rel-index><a href=#link-type-index>index</a></code></td> <!-- used more than "top" and "contents" on <link> (though on <a>, "contents" wins) -->
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Gives a link to the document that provides a table of contents or index listing the current document.</td>
    <tr><td><code title=rel-last><a href=#link-type-last>last</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Indicates that the current document is a part of a series, and that the last document in the series is the referenced document.</td>
    <tr><td><code title=rel-license><a href=#link-type-license>license</a></code></td> <!-- seventh most used <a rel> value -->
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Indicates that the current document is covered by the copyright license described by the referenced document.</td>
    <tr><td><code title=rel-next><a href=#link-type-next>next</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Indicates that the current document is a part of a series, and that the next document in the series is the referenced document.</td>
    <tr><td><code title=rel-nofollow><a href=#link-type-nofollow>nofollow</a></code></td> <!-- most used <a rel> value (and sixth most used is "external nofollow") -->
     <td><em>not allowed</em></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Indicates that the current document's original author or publisher does not endorse the referenced document.</td>
    <tr><td><code title=rel-noreferrer><a href=#link-type-noreferrer>noreferrer</a></code></td>
     <td><em>not allowed</em></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Requires that the user agent not send an HTTP <code title="">Referer</code> header if the user follows the hyperlink.</td>
    <tr><td><code title=rel-pingback><a href=#link-type-pingback>pingback</a></code></td>
     <td><a href=#external-resource-link title="external resource link">External Resource</a></td>
     <td><em>not allowed</em></td>
     <td>Gives the address of the pingback server that handles pingbacks to the current document.</td>
    <tr><td><code title=rel-prefetch><a href=#link-type-prefetch>prefetch</a></code></td>
     <td><a href=#external-resource-link title="external resource link">External Resource</a></td>
     <td><em>not allowed</em></td>
     <td>Specifies that the target resource should be preemptively cached.</td>
    <tr><td><code title=rel-prev><a href=#link-type-prev>prev</a></code></td> <!-- prev is used more than previous -->
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Indicates that the current document is a part of a series, and that the previous document in the series is the referenced document.</td>
    <tr><td><code title=rel-search><a href=#link-type-search>search</a></code></td> <!-- used quite a bit -->
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Gives a link to a resource that can be used to search through the current document and its related pages.</td>
    <tr><td><code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code></td> <!-- most commonly used <link rel> value, variants came in 7th, 8th, 12th, 17th... -->
     <td><a href=#external-resource-link title="external resource link">External Resource</a></td>
     <td><em>not allowed</em></td>
     <td>Imports a stylesheet.</td>
    <tr><td><code title=rel-sidebar><a href=#link-type-sidebar>sidebar</a></code></td> <!-- used quite a bit -->
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Specifies that the referenced document, if retrieved, is intended to be shown in the browser's sidebar (if it has one).</td>
    <tr><td><code title=rel-tag><a href=#link-type-tag>tag</a></code></td> <!-- second and third most used <a rel> value (third is technically "category tag"). -->
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Gives a tag (identified by the given address) that applies to the current document.</td>
    <tr><td><code title=rel-up><a href=#link-type-up>up</a></code></td>
     <td><a href=#hyperlink-link title="hyperlink link">Hyperlink</a></td>
     <td><a href=#hyperlink>Hyperlink</a></td>
     <td>Provides a link to a document giving the context for the current document.</td>
    </table><p>Some of the types described below list synonyms for these
  values. These are to be handled as specified by user agents, but
  must not be used in documents.</p>


  <!--XXX

  issues for rel="", etc:
   rel="alternate stylesheet"
   rel="script"
   rel="related" // see also
   which relationship combinations are allowed
   what multiple values might mean (multiple <a rel="top"> in the same document)
   http://www.euronet.nl/~tekelenb/WWW/LINK/
   http://shift.freezope.org/konq_rellinks/development_html
   http://hixie.ch/specs/html/link/001
   http://hixie.ch/specs/html/link/002
   http://www.hixie.ch/specs/html/metadata
   what UAs are supposed to do with this
   do something about http://microformats.org/wiki/rel-enclosure

mpt says:
> "As with <a> elements, when <link> elements that use these relationships    
> are present, UAs should render them. As with <a> elements, when <link>
> elements that use these relationships do not exist, UAs should not
> render them. UAs should not make <link> rendering any easier to hide
> than <a> rendering."
  
for microformats (e.g. to refer to an hcard from an hcalendar):         
rel=xref
<a> and <area> only
The href attribute's value must start with a '#' character.
Indicates an in-page cross-reference. For the purposes of data mining tools, the subtree rooted
at the first element with the given ID must be treated as if it was cloned and replaced the <a> element.

    -->


  <h5 id=link-type-alternate><span class=secno>5.12.3.1 </span>Link type "<dfn title=rel-alternate><code>alternate</code></dfn>"</h5>

  <p>The <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword may be
  used with <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, if the <code title=attr-link-rel><a href=#attr-link-rel>rel</a></code> attribute does not also contain the
  keyword <code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code>, it creates a
  <a href=#hyperlink-link title="hyperlink link">hyperlink</a>; but if it
  <em>does</em> also contain the keyword <code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code>, the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword instead modifies the
  meaning of the <code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code>
  keyword in the way described for that keyword, and the rest of this
  subsection doesn't apply.</p>

  <p>The <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword
  indicates that the referenced document is an alternate
  representation of the current document.</p>

  <p>The nature of the referenced document is given by the <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code>, <code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code>, and <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code> attributes.</p>

  <p>If the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword is
  used with the <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code>
  attribute, it indicates that the referenced document is intended for use
  with the media specified.</p>

  <p>If the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword is
  used with the <code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code>
  attribute, and that attribute's value differs from the <a href=#root-element>root
  element</a>'s <a href=#language>language</a>, it indicates that the
  referenced document is a translation.</p>

  <p>If the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword is
  used with the <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code>
  attribute, it indicates that the referenced document is a
  reformulation of the current document in the specified format.</p>

  <p>The <code title=attr-hyperlink-media><a href=#attr-hyperlink-media>media</a></code>, <code title=attr-hyperlink-hreflang><a href=#attr-hyperlink-hreflang>hreflang</a></code>, and <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code> attributes can be combined
  when specified with the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code>
  keyword.</p>

  <div class=example>

   <p>For example, the following link is a French translation that
   uses the PDF format:</p>

   <pre>&lt;link rel=alternate type=application/pdf hreflang=fr href=manual-fr&gt;</pre>

  </div>

  <p>If the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword is
  used with the <code title=attr-hyperlink-type><a href=#attr-hyperlink-type>type</a></code>
  attribute set to the value <code title="">application/rss+xml</code>
  or the value <code title="">application/atom+xml</code>, then the
  user agent must treat the link as it would if it had the <code title=rel-feed><a href=#link-type-feed>feed</a></code> keyword specified as well.</p>

  <p>The <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> link
  relationship is transitive &mdash; that is, if a document links to
  two other documents with the link type "<code title=rel-alternate><a href=#link-type-alternate>alternate</a></code>", then, in addition to
  implying that those documents are alternative representations of the
  first document, it is also implying that those two documents are
  alternative representations of each other.</p>


  <h5 id=link-type-archives><span class=secno>5.12.3.2 </span>Link type "<dfn title=rel-archives><code>archives</code></dfn>"</h5>

  <p>The <code title=rel-archives><a href=#link-type-archives>archives</a></code> keyword may be
  used with <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-archives><a href=#link-type-archives>archives</a></code> keyword indicates
  that the referenced document describes a collection of records,
  documents, or other materials of historical interest.</p>

  <p class=example>A blog's index page could link to an index of the
  blog's past posts with <code title="">rel="archives"</code>.</p>

  <p><strong>Synonyms</strong>: For historical reasons, user agents
  must also treat the keyword "<code title="">archive</code>" like the
  <code title=rel-archives><a href=#link-type-archives>archives</a></code> keyword.</p>


  <h5 id=link-type-author><span class=secno>5.12.3.3 </span>Link type "<dfn title=rel-author><code>author</code></dfn>"</h5>

  <p>The <code title=rel-author><a href=#link-type-author>author</a></code> keyword may be
  used with <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>For <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements, the <code title=rel-author><a href=#link-type-author>author</a></code> keyword indicates that the
  referenced document provides further information about the author of
  the section that the element defining the hyperlink <a href=#applyToSection>applies</a> to.</p>

  <p>For <code><a href=#the-link-element>link</a></code> elements, the <code title=rel-author><a href=#link-type-author>author</a></code> keyword indicates that the
  referenced document provides further information about the author
  for the page as a whole.</p>

  <p class=note>The "referenced document" can be, and often is, a
  <code title="">mailto:</code> URL giving the e-mail address of the
  author. <a href=#refsMAILTO>[MAILTO]</a></p>

  <p><strong>Synonyms</strong>: For historical reasons, user agents
  must also treat <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and
  <code><a href=#the-area-element>area</a></code> elements that have a <code title="">rev</code>
  attribute with the value "<code>made</code>" as having the <code title=rel-author><a href=#link-type-author>author</a></code> keyword specified as a link
  relationship.</p>


  <h5 id=link-type-bookmark><span class=secno>5.12.3.4 </span>Link type "<dfn title=rel-bookmark><code>bookmark</code></dfn>"</h5>

  <p>The <code title=rel-bookmark><a href=#link-type-bookmark>bookmark</a></code> keyword may be
  used with <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements.</p>

  <p>The <code title=rel-bookmark><a href=#link-type-bookmark>bookmark</a></code> keyword gives a
  permalink for the nearest ancestor <code><a href=#the-article-element>article</a></code> element of
  the linking element in question, or of <a href=#associatedSection>the section the linking element is most
  closely associated with</a>, if there are no ancestor
  <code><a href=#the-article-element>article</a></code> elements.</p>

  <div class=example>
   <p>The following snippet has three permalinks. A user agent could
   determine which permalink applies to which part of the spec by
   looking at where the permalinks are given.</p>
   <pre> ...
 &lt;body&gt;
  &lt;h1&gt;Example of permalinks&lt;/h1&gt;
  &lt;div id="a"&gt;
   &lt;h2&gt;First example&lt;/h2&gt;
   &lt;p&gt;&lt;a href="a.html" rel="bookmark"&gt;This&lt;/a&gt; permalink applies to
   only the content from the first H2 to the second H2. The DIV isn't
   exactly that section, but it roughly corresponds to it.&lt;/p&gt;
  &lt;/div&gt;
  &lt;h2&gt;Second example&lt;/h2&gt;
  &lt;article id="b"&gt;
   &lt;p&gt;&lt;a href="b.html" rel="bookmark"&gt;This&lt;/a&gt; permalink applies to
   the outer ARTICLE element (which could be, e.g., a blog post).&lt;/p&gt;
   &lt;article id="c"&gt;
    &lt;p&gt;&lt;a href="c.html" rel="bookmark"&gt;This&lt;/a&gt; permalink applies to
    the inner ARTICLE element (which could be, e.g., a blog comment).&lt;/p&gt;
   &lt;/article&gt;
  &lt;/article&gt;
 &lt;/body&gt;
 ...</pre>
  </div>

<!-- (commented out on the assumption that rel=contact is really XFN)
  <h5>Link type "<dfn title="rel-contact"><code>contact</code></dfn>"</h5>

  <p>The <code title="rel-contact">contact</code> keyword may be used
  with <code>link</code>, <code>a</code>, and <code>area</code>
  elements. For <code>link</code> elements, it creates a <span
  title="hyperlink link">hyperlink</span>.</p>

  <p>For <code>a</code> and <code>area</code> elements, the <code
  title="rel-contact">contact</code> keyword indicates that the
  referenced document provides further contact information for the
  section that the element defining the hyperlink <a
  href="#applyToSection">applies</a> to.</p>

  <p>User agents must treat any hyperlink in an <code>address</code>
  element as having the <code title="rel-contact">contact</code> link
  type specified.</p>

  <p>For <code>link</code> elements, the <code
  title="rel-contact">contact</code> keyword indicates that the
  referenced document provides further contact information for the
  page as a whole.</p>
-->

  <h5 id=link-type-external><span class=secno>5.12.3.5 </span>Link type "<dfn title=rel-external><code>external</code></dfn>"</h5>

  <p>The <code title=rel-external><a href=#link-type-external>external</a></code> keyword may be
  used with <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements.</p>

  <p>The <code title=rel-external><a href=#link-type-external>external</a></code> keyword indicates
  that the link is leading to a document that is not part of the site
  that the current document forms a part of.</p>


  <h5 id=link-type-feed><span class=secno>5.12.3.6 </span>Link type "<dfn title=rel-feed><code>feed</code></dfn>"</h5>

  <p>The <code title=rel-feed><a href=#link-type-feed>feed</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-feed><a href=#link-type-feed>feed</a></code> keyword indicates that the
  referenced document is a syndication feed. If the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> link type is also specified,
  then the feed is specifically the feed for the current document;
  otherwise, the feed is just a syndication feed, not necessarily
  associated with a particular Web page.</p>

  <p>The first <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, or <code><a href=#the-area-element>area</a></code>
  element in the document (in tree order) that creates a hyperlink
  with the link type <code title=rel-feed><a href=#link-type-feed>feed</a></code> must be
  treated as the default syndication feed for the purposes of feed
  autodiscovery.</p>

  <p class=note>The <code title=rel-feed><a href=#link-type-feed>feed</a></code> keyword is
  implied by the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> link
  type in certain cases (q.v.).</p>

  <div class=example>
   <p>The following two <code><a href=#the-link-element>link</a></code> elements are equivalent:
   both give the syndication feed for the current page:</p>
   <pre>&lt;link rel="alternate" type="application/atom+xml" href="data.xml"&gt;</pre>
   <pre>&lt;link rel="feed alternate" href="data.xml"&gt;</pre>
   <p>The following extract offers various different syndication
   feeds:</p>
   <pre> &lt;p&gt;You can access the planets database using Atom feeds:&lt;/p&gt;
 &lt;ul&gt;
  &lt;li&gt;&lt;a href="recently-visited-planets.xml" rel="feed"&gt;Recently Visited Planets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="known-bad-planets.xml" rel="feed"&gt;Known Bad Planets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="unexplored-planets.xml" rel="feed"&gt;Unexplored Planets&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;</pre>
  </div>


  <h5 id=link-type-help><span class=secno>5.12.3.7 </span>Link type "<dfn title=rel-help><code>help</code></dfn>"</h5>

  <p>The <code title=rel-help><a href=#link-type-help>help</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>For <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements, the <code title=rel-help><a href=#link-type-help>help</a></code> keyword indicates that the referenced
  document provides further help information for the parent of the
  element defining the hyperlink, and its children.</p>

  <div class=example>

   <p>In the following example, the form control has associated
   context-sensitive help. The user agent could use this information,
   for example, displaying the referenced document if the user presses
   the "Help" or "F1" key.</p>

   <pre> &lt;p&gt;&lt;label&gt; Topic: &lt;input name=topic&gt; &lt;a href="help/topic.html" rel="help"&gt;(Help)&lt;/a&gt;&lt;/label&gt;&lt;/p&gt;</pre>

  </div>

  <p>For <code><a href=#the-link-element>link</a></code> elements, the <code title=rel-help><a href=#link-type-help>help</a></code> keyword indicates that the referenced
  document provides help for the page as a whole.</p>


  <h5 id=rel-icon><span class=secno>5.12.3.8 </span>Link type "<dfn title=rel-icon><code>icon</code></dfn>"</h5>

  <p>The <code title=rel-icon><a href=#rel-icon>icon</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code> elements, for which it creates an <a href=#external-resource-link title="external resource link">external resource link</a>.</p>

  <p>The specified resource is an icon representing the page or site,
  and should be used by the user agent when representing the page in
  the user interface.</p>

  <p>Icons could be auditory icons, visual icons, or other kinds of
  icons. If multiple icons are provided, the user agent must select
  the most appropriate icon according to the <code title=attr-link-type><a href=#attr-link-type>type</a></code>, <code title=attr-link-media><a href=#attr-link-media>media</a></code>, and <code title=attr-link-sizes><a href=#attr-link-sizes>sizes</a></code> attributes. If there are
  multiple equally appropriate icons, user agents must use the last
  one declared in <a href=#tree-order>tree order</a>. If the user agent tries to
  use an icon but that icon is determined, upon closer examination, to
  in fact be inappropriate (e.g. because it uses an unsupported
  format), then the user agent must try the next-most-appropriate icon
  as determined by the attributes.</p>

  <p>There is no default type for resources given by the <code title=rel-icon><a href=#rel-icon>icon</a></code> keyword. However, for the purposes of
  <a href=#concept-link-type-sniffing>determining the type of the
  resource</a>, user agents must expect the resource to be an image.</p>

  <p>The <dfn id=attr-link-sizes title=attr-link-sizes><code>sizes</code></dfn>
  attribute gives the sizes of icons for visual media.</p>

  <p>If specified, the attribute must have a value that is an
  <a href=#unordered-set-of-unique-space-separated-tokens>unordered set of unique space-separated tokens</a>. The
  values must all be either <code title=attr-link-sizes-any><a href=#attr-link-sizes-any>any</a></code> or a value that consists of
  two <a href=#valid-non-negative-integer title="valid non-negative integer">valid non-negative
  integers</a> that do not have a leading U+0030 DIGIT ZERO (0)
  character and that are separated by a single U+0078 LATIN SMALL
  LETTER X character.</p>

  <p>The keywords represent icon sizes.</p>

  <p>To parse and process the attribute's value, the user agent must
  first <a href=#split-a-string-on-spaces title="split a string on spaces">split the attribute's
  value on spaces</a>, and must then parse each resulting keyword
  to determine what it represents.</p>

  <p>The <dfn id=attr-link-sizes-any title=attr-link-sizes-any><code>any</code></dfn> keyword
  represents that the resource contains a scalable icon, e.g. as
  provided by an SVG image.</p>

  <p>Other keywords must be further parsed as follows to determine
  what they represent:</p>

  <ul><li><p>If the keyword doesn't contain exactly one U+0078 LATIN
   SMALL LETTER X character, then this keyword doesn't represent
   anything. Abort these steps for that keyword.</li>

   <li><p>Let <var title="">width string</var> be the string before
   the "<code title="">x</code>".</li>

   <li><p>Let <var title="">height string</var> be the string after the
   "<code title="">x</code>".</li>

   <li><p>If either <var title="">width string</var> or <var title="">height string</var> start with a U+0030 DIGIT ZERO (0)
   character or contain any characters other than characters in the
   range U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), then this
   keyword doesn't represent anything. Abort these steps for that
   keyword.</li>

   <li><p>Apply the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
   integers</a> to <var title="">width string</var> to obtain <var title="">width</var>.</li>

   <li><p>Apply the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
   integers</a> to <var title="">height string</var> to obtain <var title="">height</var>.</li>

   <li><p>The keyword represents that the resource contains a bitmap
   icon with a width of <var title="">width</var> device pixels and a
   height of <var title="">height</var> device pixels.</li>

  </ul><p>The keywords specified on the <code title=attr-link-sizes><a href=#attr-link-sizes>sizes</a></code> attribute must not represent
  icon sizes that are not actually available in the linked
  resource.</p>

  <p>If the attribute is not specified, then the user agent must
  assume that the given icon is appropriate, but less appropriate than
  an icon of a known and appropriate size.</p>

  <div class=example>

   <p>The following snippet shows the top part of an application with
   several icons.</p>

   <pre>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;lsForums &mdash; Inbox&lt;/title&gt;
  &lt;link rel=icon href=favicon.png sizes="16x16"&gt;
  &lt;link rel=icon href=windows.ico sizes="32x32 48x48"&gt;
  &lt;link rel=icon href=mac.icns sizes="128x128 512x512 8192x8192 32768x32768"&gt;
  &lt;link rel=icon href=iphone.png sizes="59x60"&gt;
  &lt;link rel=icon href=gnome.svg sizes="any"&gt;
  &lt;link rel=stylesheet href=lsforums.css&gt;
  &lt;script src=lsforums.js&gt;&lt;/script&gt;
  &lt;meta name=application-name content="lsForums"&gt;
 &lt;/head&gt;
 &lt;body&gt;
  ...</pre>

  </div>


  <h5 id=link-type-license><span class=secno>5.12.3.9 </span>Link type "<dfn title=rel-license><code>license</code></dfn>"</h5>

  <p>The <code title=rel-license><a href=#link-type-license>license</a></code> keyword may be used
  with <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-license><a href=#link-type-license>license</a></code> keyword indicates
  that the referenced document provides the copyright license terms
  under which the current document is provided.</p>

  <p><strong>Synonyms</strong>: For historical reasons, user agents
  must also treat the keyword "<code title="">copyright</code>" like
  the <code title=rel-license><a href=#link-type-license>license</a></code> keyword.</p>


  <h5 id=link-type-nofollow><span class=secno>5.12.3.10 </span>Link type "<dfn title=rel-nofollow><code>nofollow</code></dfn>"</h5>

  <p>The <code title=rel-nofollow><a href=#link-type-nofollow>nofollow</a></code> keyword may be
  used with <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements.</p>

  <p>The <code title=rel-nofollow><a href=#link-type-nofollow>nofollow</a></code> keyword indicates
  that the link is not endorsed by the original author or publisher of
  the page, or that the link to the referenced document was included
  primarily because of a commercial relationship between people
  affiliated with the two pages.</p>


  <h5 id=link-type-noreferrer><span class=secno>5.12.3.11 </span>Link type "<dfn title=rel-noreferrer><code>noreferrer</code></dfn>"</h5>

  <p>The <code title=rel-noreferrer><a href=#link-type-noreferrer>noreferrer</a></code> keyword may be
  used with <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code> elements.</p>

  <p>If a user agent follows a link defined by an <code><a href=#the-a-element>a</a></code> or
  <code><a href=#the-area-element>area</a></code> element that has the <code title=rel-noreferrer><a href=#link-type-noreferrer>noreferrer</a></code> keyword, the user agent
  must not include a <code title="">Referer</code> HTTP header (<a href=#concept-http-equivalent-headers title=concept-http-equivalent-headers>or equivalent</a> for
  other protocols) in the request.</p>

  <p>This keyword also <a href=#noopener>causes the <code title=dom-opener>opener</code> attribute to remain null</a> if the
  hyperlink creates a new <a href=#browsing-context>browsing context</a>.</p>


  <h5 id=link-type-pingback><span class=secno>5.12.3.12 </span>Link type "<dfn title=rel-pingback><code>pingback</code></dfn>"</h5>

  <p>The <code title=rel-pingback><a href=#link-type-pingback>pingback</a></code> keyword may be
  used with <code><a href=#the-link-element>link</a></code> elements, for which it creates an <a href=#external-resource-link title="external resource link">external resource link</a>.</p>

  <p>For the semantics of the <code title=rel-pingback><a href=#link-type-pingback>pingback</a></code> keyword, see the Pingback 1.0
  specification. <a href=#refsPINGBACK>[PINGBACK]</a></p>


  <h5 id=link-type-prefetch><span class=secno>5.12.3.13 </span>Link type "<dfn title=rel-prefetch><code>prefetch</code></dfn>"</h5>

  <p>The <code title=rel-prefetch><a href=#link-type-prefetch>prefetch</a></code> keyword may be
  used with <code><a href=#the-link-element>link</a></code> elements, for which it creates an <a href=#external-resource-link title="external resource link">external resource link</a>.</p>

  <p>The <code title=rel-prefetch><a href=#link-type-prefetch>prefetch</a></code> keyword indicates
  that preemptively fetching and caching the specified resource is
  likely to be beneficial, as it is highly likely that the user will
  require this resource.</p>

  <p>There is no default type for resources given by the <code title=rel-prefetch><a href=#link-type-prefetch>prefetch</a></code> keyword.</p>


  <h5 id=link-type-search><span class=secno>5.12.3.14 </span>Link type "<dfn title=rel-search><code>search</code></dfn>"</h5>

  <p>The <code title=rel-search><a href=#link-type-search>search</a></code> keyword may be used
  with <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-search><a href=#link-type-search>search</a></code> keyword indicates that
  the referenced document provides an interface specifically for
  searching the document and its related resources.</p>

  <p class=note>OpenSearch description documents can be used with
  <code><a href=#the-link-element>link</a></code> elements and the <code title=rel-search><a href=#link-type-search>search</a></code> link type to enable user agents to
  autodiscover search interfaces. <a href=#refsOPENSEARCH>[OPENSEARCH]</a></p> <!-- XXX
  http://www.opensearch.org/Specifications/OpenSearch/1.1#Autodiscovery_in_HTML.2FXHTML
  -->


  <h5 id=link-type-stylesheet><span class=secno>5.12.3.15 </span>Link type "<dfn title=rel-stylesheet><code>stylesheet</code></dfn>"</h5>

  <p>The <code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code> keyword may be
  used with <code><a href=#the-link-element>link</a></code> elements, for which it creates an <a href=#external-resource-link title="external resource link">external resource link</a> that
  contributes to the <a href=#styling>styling processing model</a>.</p>

  <p>The specified resource is a resource that describes how to
  present the document. Exactly how the resource is to be processed
  depends on the actual type of the resource.</p>

  <p>If the <code title=rel-alternate><a href=#link-type-alternate>alternate</a></code> keyword is
  also specified on the <code><a href=#the-link-element>link</a></code> element, then the link is an
  alternative stylesheet; in this case, the <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute must be specified on the
  <code><a href=#the-link-element>link</a></code> element, with a non-empty value.</p>

  <p>The default type for resources given by the <code title=rel-stylesheet><a href=#link-type-stylesheet>stylesheet</a></code> keyword is <code title="">text/css</code>.</p>

  <p><strong>Quirk:</strong> If the document has been set to
  <a href=#quirks-mode>quirks mode</a> and the <a href=#content-type-0 title=Content-Type>Content-Type metadata</a> of the external
  resource is not a supported style sheet type, the user agent must
  instead assume it to be <code title="">text/css</code>.</p>


  <h5 id=link-type-sidebar><span class=secno>5.12.3.16 </span>Link type "<dfn title=rel-sidebar><code>sidebar</code></dfn>"</h5>

  <p>The <code title=rel-sidebar><a href=#link-type-sidebar>sidebar</a></code> keyword may be used
  with <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-sidebar><a href=#link-type-sidebar>sidebar</a></code> keyword indicates
  that the referenced document, if retrieved, is intended to be shown
  in a <a href=#secondary-browsing-context>secondary browsing context</a> (if possible), instead
  of in the current <a href=#browsing-context>browsing context</a>.</p>

  <p>A <a href=#hyperlink title=hyperlink>hyperlink element</a> with with the
  <code title=rel-sidebar><a href=#link-type-sidebar>sidebar</a></code> keyword specified is a <dfn id=rel-sidebar-hyperlink title=rel-sidebar-hyperlink>sidebar hyperlink</dfn>.</p>


  <h5 id=link-type-tag><span class=secno>5.12.3.17 </span>Link type "<dfn title=rel-tag><code>tag</code></dfn>"</h5>

  <p>The <code title=rel-tag><a href=#link-type-tag>tag</a></code> keyword may be used
  with <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-tag><a href=#link-type-tag>tag</a></code> keyword indicates that the
  <em>tag</em> that the referenced document represents applies to the
  current document.</p>

  <p class=note>Since it indicates that the tag <em>applies to the
  current document</em>, it would be inappropriate to use this keyword
  in the markup of a <a href=#tag-cloud>tag cloud</a>, which lists
  the popular tag across a set of pages.</p>


  <h5 id=hierarchical-link-types><span class=secno>5.12.3.18 </span>Hierarchical link types</h5>

  <p>Some documents form part of a hierarchical structure of
  documents.</p>

  <p>A hierarchical structure of documents is one where each document
  can have various subdocuments. The document of which a document is a
  subdocument is said to be the document's <em>parent</em>. A document
  with no parent forms the top of the hierarchy.</p>

  <p>A document may be part of multiple hierarchies.</p>


  <h6 id=link-type-index><span class=secno>5.12.3.18.1 </span>Link type "<dfn title=rel-index><code>index</code></dfn>"</h6>

  <p>The <code title=rel-index><a href=#link-type-index>index</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-index><a href=#link-type-index>index</a></code> keyword indicates that
  the document is part of a hierarchical structure, and that the link
  is leading to the document that is the top of the hierarchy. It
  conveys more information when used with the <code title=rel-up><a href=#link-type-up>up</a></code> keyword (q.v.).</p>

  <p><strong>Synonyms</strong>: For historical reasons, user agents
  must also treat the keywords "<code title="">top</code>", "<code title="">contents</code>", and "<code title="">toc</code>" like the
  <code title=rel-index><a href=#link-type-index>index</a></code> keyword.</p>


  <h6 id=link-type-up><span class=secno>5.12.3.18.2 </span>Link type "<dfn title=rel-up><code>up</code></dfn>"</h6>

  <p>The <code title=rel-up><a href=#link-type-up>up</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-up><a href=#link-type-up>up</a></code> keyword indicates that the
  document is part of a hierarchical structure, and that the link is
  leading to the document that is the parent of the current
  document.</p>

  <p>The <code title=rel-up><a href=#link-type-up>up</a></code> keyword may be repeated within
  a <code title=attr-hyperlink-rel><a href=#attr-hyperlink-rel>rel</a></code> attribute to indicate
  the hierarchical distance from the current document to the
  referenced document. Each occurrence of the keyword represents one
  further level. If the <code title=rel-index><a href=#link-type-index>index</a></code> keyword
  is also present, then the number of <code title=rel-up><a href=#link-type-up>up</a></code>
  keywords is the depth of the current page relative to the top of the
  hierarchy. Only one link is created for the set of one or more <code title=rel-up><a href=#link-type-up>up</a></code> keywords and, if present, the <code title=rel-index><a href=#link-type-index>index</a></code> keyword.</p>

  <p>If the page is part of multiple hierarchies, then they should be
  described in different <a href=#paragraph title=paragraph>paragraphs</a>. User agents must scope any
  interpretation of the <code title=rel-up><a href=#link-type-up>up</a></code> and <code title=rel-index><a href=#link-type-index>index</a></code> keywords together indicating the
  depth of the hierarchy to the <a href=#paragraph>paragraph</a> in which the
  link finds itself, if any, or to the document otherwise.</p>

  <p>When two links have both the <code title=rel-up><a href=#link-type-up>up</a></code> and
  <code title=rel-index><a href=#link-type-index>index</a></code> keywords specified together in
  the same scope and contradict each other by having a different
  number of <code title=rel-up><a href=#link-type-up>up</a></code> keywords, the link with the
  greater number of <code title=rel-up><a href=#link-type-up>up</a></code> keywords must be
  taken as giving the depth of the document.</p>

  <div class=example>

   <p>This can be used to mark up a navigation style sometimes known
   as bread crumbs. In the following example, the current page can be
   reached via two paths.</p>

   <pre>&lt;nav&gt;
 &lt;p&gt;
  &lt;a href="/" rel="index up up up"&gt;Main&lt;/a&gt; &gt;
  &lt;a href="/products/" rel="up up"&gt;Products&lt;/a&gt; &gt;
  &lt;a href="/products/dishwashers/" rel="up"&gt;Dishwashers&lt;/a&gt; &gt;
  &lt;a&gt;Second hand&lt;/a&gt;
 &lt;/p&gt;
 &lt;p&gt;
  &lt;a href="/" rel="index up up"&gt;Main&lt;/a&gt; &gt;
  &lt;a href="/second-hand/" rel="up"&gt;Second hand&lt;/a&gt; &gt;
  &lt;a&gt;Dishwashers&lt;/a&gt;
 &lt;/p&gt;
&lt;/nav&gt;</pre>

  </div>

  <p class=note>The <code title=dom-a-relList><a href=#dom-a-rellist>relList</a></code> DOM
  attribute (e.g. on the <code><a href=#the-a-element>a</a></code> element) does not currently
  represent multiple <code title=rel-up><a href=#link-type-up>up</a></code> keywords (the
  interface hides duplicates).</p>


  <h5 id=sequential-link-types><span class=secno>5.12.3.19 </span>Sequential link types</h5>

  <p>Some documents form part of a sequence of documents.</p>

  <p>A sequence of documents is one where each document can have a
  <em>previous sibling</em> and a <em>next sibling</em>. A document
  with no previous sibling is the start of its sequence, a document
  with no next sibling is the end of its sequence.</p>

  <p>A document may be part of multiple sequences.</p>


  <h6 id=link-type-first><span class=secno>5.12.3.19.1 </span>Link type "<dfn title=rel-first><code>first</code></dfn>"</h6>

  <p>The <code title=rel-first><a href=#link-type-first>first</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-first><a href=#link-type-first>first</a></code> keyword indicates that
  the document is part of a sequence, and that the link is leading to
  the document that is the first logical document in the sequence.</p>

  <p><strong>Synonyms</strong>: For historical reasons, user agents
  must also treat the keywords "<code title="">begin</code>" and
  "<code title="">start</code>" like the <code title=rel-first><a href=#link-type-first>first</a></code> keyword.</p>


  <h6 id=link-type-last><span class=secno>5.12.3.19.2 </span>Link type "<dfn title=rel-last><code>last</code></dfn>"</h6>

  <p>The <code title=rel-last><a href=#link-type-last>last</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-last><a href=#link-type-last>last</a></code> keyword indicates that the
  document is part of a sequence, and that the link is leading to the
  document that is the last logical document in the sequence.</p>

  <p><strong>Synonyms</strong>: For historical reasons, user agents
  must also treat the keyword "<code title="">end</code>" like the
  <code title=rel-last><a href=#link-type-last>last</a></code> keyword.</p>


  <h6 id=link-type-next><span class=secno>5.12.3.19.3 </span>Link type "<dfn title=rel-next><code>next</code></dfn>"</h6>

  <p>The <code title=rel-next><a href=#link-type-next>next</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-next><a href=#link-type-next>next</a></code> keyword indicates that the
  document is part of a sequence, and that the link is leading to the
  document that is the next logical document in the sequence.</p>


  <h6 id=link-type-prev><span class=secno>5.12.3.19.4 </span>Link type "<dfn title=rel-prev><code>prev</code></dfn>"</h6>

  <p>The <code title=rel-prev><a href=#link-type-prev>prev</a></code> keyword may be used with
  <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>, and <code><a href=#the-area-element>area</a></code>
  elements. For <code><a href=#the-link-element>link</a></code> elements, it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink</a>.</p>

  <p>The <code title=rel-prev><a href=#link-type-prev>prev</a></code> keyword indicates that the
  document is part of a sequence, and that the link is leading to the
  document that is the previous logical document in the sequence.</p>

  <p><strong>Synonyms</strong>: For historical reasons, user agents
  must also treat the keyword "<code title="">previous</code>" like
  the <code title=rel-prev><a href=#link-type-prev>prev</a></code> keyword.</p>


  <h5 id=other-link-types><span class=secno>5.12.3.20 </span>Other link types</h5>

  <p>Other than the types defined above, only types defined as
  extensions in the <a href=http://wiki.whatwg.org/wiki/RelExtensions>WHATWG Wiki
  RelExtensions page</a> may be used with the <code title="">rel</code> attribute on <code><a href=#the-link-element>link</a></code>, <code><a href=#the-a-element>a</a></code>,
  and <code><a href=#the-area-element>area</a></code> elements. <a href=#refsWHATWGWIKI>[WHATWGWIKI]</a></p>

  <p>Anyone is free to edit the WHATWG Wiki RelExtensions page at any
  time to add a type. Extension types must be specified with the
  following information:</p>

  <dl><dt>Keyword</dt>

   <dd><p>The actual value being defined. The value should not be
   confusingly similar to any other defined value (e.g. differing only
   in case).</dd>


   <dt>Effect on... <code><a href=#the-link-element>link</a></code></dt>

   <dd>

    <p>One of the following:</p>

    <dl><dt>not allowed</dt>

     <dd>The keyword is not allowed to be specified on
     <code><a href=#the-link-element>link</a></code> elements.</dd>

     <dt>Hyperlink</dt>

     <dd>The keyword may be specified on a <code><a href=#the-link-element>link</a></code> element;
     it creates a <a href=#hyperlink-link title="hyperlink link">hyperlink
     link</a>.</dd>

     <dt>External Resource</dt>

     <dd>The keyword may be specified on a <code><a href=#the-link-element>link</a></code> element;
     it creates a <a href=#external-resource-link title="external resource link">external
     resource link</a>.</dd>

    </dl></dd>


   <dt>Effect on... <code><a href=#the-a-element>a</a></code> and <code><a href=#the-area-element>area</a></code></dt>

   <dd>

    <p>One of the following:</p>

    <dl><dt>not allowed</dt>

     <dd>The keyword is not allowed to be specified on <code><a href=#the-a-element>a</a></code>
     and <code><a href=#the-area-element>area</a></code> elements.</dd>

     <dt>Hyperlink</dt>

     <dd>The keyword may be specified on <code><a href=#the-a-element>a</a></code> and
     <code><a href=#the-area-element>area</a></code> elements.</dd>

    </dl></dd>


   <dt>Brief description</dt>

   <dd><p>A short description of what the keyword's meaning is.</dd>


   <dt>Link to more details</dt>

   <dd><p>A link to a more detailed description of the keyword's
   semantics and requirements. It could be another page on the Wiki,
   or a link to an external page.</dd>


   <dt>Synonyms</dt>

   <dd><p>A list of other keyword values that have exactly the same
   processing requirements. Authors must not use the values defined to
   be synonyms, they are only intended to allow user agents to support
   legacy content.</dd>


   <dt>Status</dt>

   <dd>

    <p>One of the following:</p>

    <dl><dt>Proposal</dt>

     <dd>The keyword has not received wide peer review and
     approval. It is included for completeness because pages use the
     keyword. Pages should not use the keyword.</dd>

     <dt>Accepted</dt>

     <dd>The keyword has received wide peer review and approval. It
     has a specification that unambiguously defines how to handle
     pages that use the keyword, including when they use them in
     incorrect ways. Pages may use the keyword.</dd>

     <dt>Rejected</dt>

     <dd>The keyword has received wide peer review and it has been
     found to have significant problems. Pages must not use the
     keyword. When a keyword has this status, the "Effect
     on... <code><a href=#the-link-element>link</a></code>" and "Effect on... <code><a href=#the-a-element>a</a></code> and
     <code><a href=#the-area-element>area</a></code>" information should be set to "not
     allowed".</dd>

    </dl><p>If a keyword is added with the "proposal" status and found to
    be redundant with existing values, it should be removed and listed
    as a synonym for the existing value. If a keyword is added with
    the "proposal" status and found to be harmful, then it should be
    changed to "rejected" status, and its "Effect on..." information
    should be changed accordingly.</p>

   </dd>

  </dl><p>Conformance checkers must use the information given on the WHATWG
  Wiki RelExtensions page to establish if a value not explicitly
  defined in this specification is allowed or not. When an author uses
  a new type not defined by either this specification or the Wiki
  page, conformance checkers should offer to add the value to the
  Wiki, with the details described above, with the "proposal"
  status.</p>

  <p>This specification does not define how new values will get
  approved. It is expected that the Wiki will have a community that
  addresses this.</p>




  <h2 id=editing><span class=secno>6 </span><dfn>User Interaction</dfn></h2>

  <p>This section describes various features that allow authors to
  enable users to edit documents and parts of documents
  interactively.</p>

  <h3 id=editing-intro><span class=secno>6.1 </span>Introduction</h3>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>Would be nice to explain how these features
  work together.</p>



  <h3 id=the-hidden-attribute><span class=secno>6.2 </span>The <dfn title=attr-hidden><code>hidden</code></dfn> attribute</h3>

  <p>All elements may have the <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code>
  content attribute set. The <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code>
  attribute is a <a href=#boolean-attribute>boolean attribute</a>. When specified on an
  element, it indicates that the element is not yet, or is no longer,
  relevant. User agents should not render elements that have the <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute specified.</p>

  <div class=example>

   <p>In the following skeletal example, the attribute is used to hide
   the Web game's main screen until the user logs in:</p>

   <pre>  &lt;h1&gt;The Example Game&lt;/h1&gt;
  &lt;section id="login"&gt;
   &lt;h2&gt;Login&lt;/h2&gt;
   &lt;form&gt;
    ...
    &lt;!-- calls login() once the user's credentials have been checked --&gt;
   &lt;/form&gt;
   &lt;script&gt;
    function login() {
      // switch screens
      document.getElementById('login').hidden = true;
      document.getElementById('game').hidden = false;
    }
   &lt;/script&gt;
  &lt;/section&gt;
  &lt;section id="game" hidden&gt;
   ...
  &lt;/section&gt;</pre>

  </div>

  <p>The <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute must not be
  used to hide content that could legitimately be shown in another
  presentation. For example, it is incorrect to use <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> to hide panels in a tabbed dialog,
  because the tabbed interface is merely a kind of overflow
  presentation &mdash; showing all the form controls in one big page
  with a scrollbar would be equivalent, and no less correct.</p>

  <p>Elements in a section hidden by the <code title=attr-hidden><a href=#the-hidden-attribute>hidden</a></code> attribute are still active,
  e.g. scripts and form controls in such sections still render execute
  and submit respectively. Only their presentation to the user
  changes.</p>

  <!-- XXX might be worth disabling user interaction event submission
  in hidden areas? e.g. make onmousemove and onclick and form controls
  not respond to input? -->

  <p>The <dfn id=dom-hidden title=dom-hidden><code>hidden</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the content attribute of the
  same name.</p>



  <h3 id=activation><span class=secno>6.3 </span>Activation</h3>

  <p>Each element has a <var title="">click in progress</var> flag,
  initially set to false.</p>

  <p>The <dfn id=dom-click title=dom-click>click()</dfn> method must run these
  steps:</p>

  <ol><li><p>If the element's <var title="">click in progress</var> flag
   is set to true, then abort these steps.</li>

   <li><p>Set the <var title="">click in progress</var> flag on the
   element to true.</li>

   <li><p>If the element has a defined <a href=#activation-behavior>activation behavior</a>,
   <a href=#run-synthetic-click-activation-steps>run synthetic click activation steps</a> on the
   element. Otherwise, <a href=#fire-a-click-event>fire a <code>click</code> event</a> at
   the element.</li>

   <li><p>Set the <var title="">click in progress</var> flag on the
   element to false.</li>

  </ol><h3 id=scrolling-elements-into-view><span class=secno>6.4 </span>Scrolling elements into view</h3>

  <p>The <dfn id=dom-scrollintoview title=dom-scrollIntoView><code>scrollIntoView([<var title="">top</var>])</code></dfn> method, when called, must cause
  the element on which the method was called to have the attention of
  the user called to it.</p>

  <p class=note>In a speech browser, this could happen by having the
  current playback position move to the start of the given
  element.</p>

  <p>In visual user agents, if the argument is present and has the
  value false, the user agent should scroll the element into view such
  that both the bottom and the top of the element are in the viewport,
  with the bottom of the element aligned with the bottom of the
  viewport. If it isn't possible to show the entire element in that
  way, or if the argument is omitted or is true, then the user agent
  should instead align the top of the element with the top of the
  viewport. If the entire scrollable part of the content is visible
  all at once (e.g. if a page is shorter than the viewport), then the
  user agent should not scroll anything. Visual user agents should
  further scroll horizontally as necessary to bring the element to the
  attention of the user.</p>

  <p>Non-visual user agents may ignore the argument, or may treat it
  in some media-specific manner most useful to the user.</p>

  <!-- XXX maybe this should move to CSSOM -->


  <h3 id=focus><span class=secno>6.5 </span>Focus</h3>

  <!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%20%0A...%3Cform%3E%3Cinput%20name%3Da%20onfocus%3D%22value%2B%3D1%3Bd.name%3D%27a%27%3Bname%3D%27d%27%3Bb.focus()%22%3E%0A%3Cinput%20name%3Db%20onfocus%3D%22value%2B%3D1%3Bc.focus()%22%3E%0A%3Cinput%20name%3Dc%20onfocus%3D%22value%2B%3D1%3Bd.focus()%22%3E%0A%3Cinput%20name%3Dd%20onfocus%3D%22value%2B%3D1%3Ba.focus()%22%3E -->

  <!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A...%3Cform%3E%0A%3Ctextarea%20name%3Dt%20cols%3D100%20rows%3D3%3E%3C%2Ftextarea%3E%3Cp%3E%0A%3Cinput%20name%3Da%20onfocus%3D%22t.value%2B%3D%27af1%20%27%3Bb.focus()%3Balert(document.activeElement.name)%3Bt.value%2B%3D%27af2%20%27%3B%22%20onblur%3D%22t.value%2B%3D%27ab%20%27%3B%22%3E%0A%3Cinput%20name%3Db%20onfocus%3D%22t.value%2B%3D%27bf1%20%27%3Bc.focus()%3Bt.value%2B%3D%27bf2%20%27%3B%22%20onblur%3D%22t.value%2B%3D%27bb%20%27%3B%22%3E%0A%3Cinput%20name%3Dc%20onfocus%3D%22t.value%2B%3D%27cf1%20%27%3Bc.focus()%3Bt.value%2B%3D%27cf2%20%27%3B%22%20onblur%3D%22t.value%2B%3D%27cb%20%27%3B%22%3E%0A -->

  <!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cbody%20onload%3D%22document.forms%5B0%5D.a.focus()%22%3E%0A...%3Cform%3E%0A%3Ctextarea%20name%3Dt%20cols%3D100%20rows%3D3%3E%3C%2Ftextarea%3E%3Cp%3E%0A%3Cinput%20name%3Da%20onblur%3D%22t.value%2B%3D'ab%20'%3B%20b.focus()%3B%22%3E%0A%3Cinput%20name%3Db%20onfocus%3D%22t.value%2B%3D'bf1%20'%3Ba.focus()%3Bt.value%2B%3D'bf2%20'%3B%22%20onblur%3D%22t.value%2B%3D'bb%20'%3B%22%3E -->

  <!-- http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cbody%3E...%3Cform%3E%0A%3Ctextarea%20name%3Dt%20cols%3D100%20rows%3D3%3E%3C%2Ftextarea%3E%3Cp%3E%0A%3Cinput%20name%3Da%20onfocus%3D%22t.value%2B%3D%27af%20%27%3B%22%20onblur%3D%22t.value%2B%3D%27ab1%20%27%3Bb.focus()%3Bt.value%2B%3D%27ab2%20%27%3B%22%3E%0A%3Cinput%20name%3Db%20onfocus%3D%22t.value%2B%3D%27bf1%20%27%3Ba.focus()%3Bt.value%2B%3D%27bf2%20%27%3B%22%20onblur%3D%22t.value%2B%3D%27bb%20%27%3B%22%3E -->

  <!-- XXX
   - define onfocus/onblur behaviour for Window
   - Other things to look at are IE's focus APIs (HTMLElement.setActive(),
     onBeforeActivate, onActivate, onBeforeDeactivate, onDeactivate):
       https://bugzilla.mozilla.org/show_bug.cgi?id=296471
       https://bugzilla.mozilla.org/show_bug.cgi?id=296469
       http://msdn.microsoft.com/workshop/author/dhtml/reference/methods/setactive.asp
       http://msdn.microsoft.com/workshop/author/dhtml/reference/events/onbeforeactivate.asp
  -->

  <p>When an element is <i>focused</i>, key events received by the
  document must be targeted at that element. There may be no element
  focused; when no element is focused, key events received by the
  document must be targetted at <a href=#the-body-element-0>the body element</a>.</p>

  <p>User agents may track focus for each <a href=#browsing-context>browsing
  context</a> or <code>Document</code> individually, or may support
  only one focused elment per <a href=#top-level-browsing-context>top-level browsing context</a>
  &mdash; user agents should follow platform conventions in this
  regard.</p>

  <p>Which elements within a <a href=#top-level-browsing-context>top-level browsing context</a>
  currently have focus must be independent of whether or not the
  <a href=#top-level-browsing-context>top-level browsing context</a> itself has the <i>system
  focus</i>.</p>

  <p class=note>When an element is focused, the element matches the
  CSS <code>:focus</code> pseudo-class.</p>


  <h4 id=sequential-focus-navigation><span class=secno>6.5.1 </span>Sequential focus navigation</h4>

  <p>The <dfn id=attr-tabindex title=attr-tabindex><code>tabindex</code></dfn>
  content attribute specifies whether the element is focusable,
  whether it can be reached using sequential focus navigation, and the
  relative order of the element for the purposes of sequential focus
  navigation. The name "tab index" comes from the common use of the
  "tab" key to navigate through the focusable elements. The term
  "tabbing" refers to moving forward through the focusable elements
  that can be reached using sequential focus navigation.</p>

  <p>The <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute, if
  specified, must have a value that is a <a href=#valid-integer>valid
  integer</a>.</p>

  <p>If the attribute is specified, it must be parsed using the
  <a href=#rules-for-parsing-integers>rules for parsing integers</a>. The attribute's values have
  the following meanings:</p>

  <dl><dt>If the attribute is omitted or parsing the value returns an
   error</dt>

   <dd>

    <p>The user agent should follow platform conventions to determine if
    the element is to be focusable and, if so, whether the element can
    be reached using sequential focus navigation, and if so, what its
    relative order should be.</p>

   </dd>

   <dt id=negative-tabindex>If the value is a negative integer</dt>

   <dd>

    <p>The user agent must allow the element to be focused, but should
    not allow the element to be reached using sequential focus
    navigation.</p>

   </dd>

   <dt>If the value is a zero</dt>

   <dd>

    <p>The user agent must allow the element to be focused, should
    allow the element to be reached using sequential focus navigation,
    and should follow platform conventions to determine the element's
    relative order.</p>

   </dd>

   <dt>If the value is greater than zero</dt>

   <dd>

    <p>The user agent must allow the element to be focused, should
    allow the element to be reached using sequential focus navigation,
    and should place the element in the sequential focus navigation
    order so that it is:</p>

    <ul><li>before any focusable element whose <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute has been
     omitted or whose value, when parsed, returns an error,</li>

     <li>before any focusable element whose <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute has a value equal
     to or less than zero,</li>

     <li>after any element whose <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute has a value
     greater than zero but less than the value of the <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute on the
     element,</li>

     <li>after any element whose <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute has a value equal
     to the value of the <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code>
     attribute on the element but that is earlier in the document in
     <a href=#tree-order>tree order</a> than the element,</li>

     <li>before any element whose <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute has a value equal
     to the value of the <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code>
     attribute on the element but that is later in the document in
     <a href=#tree-order>tree order</a> than the element, and</li>

     <li>before any element whose <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute has a value
     greater than the value of the <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute on the
     element.</li>

    </ul></dd>

  </dl><p>An element is <dfn id=focusable>focusable</dfn> if the <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute's definition above
  defines the element to be focusable <em>and</em> the element is
  <span>being rendered</span><!-- XXX xref, define display:none as not
  being rendered, off-screen as being rendered? -->.</p>

  <p>An element that is <a href=#focusable>focusable</a> but does not otherwise
  have an <a href=#activation-behavior>activation behavior</a> defined has an
  <a href=#activation-behavior>activation behavior</a> that does nothing.</p>

  <p class=note>This means that an element that is only focusable
  because of its <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> attribute
  will fire a <code title=event-click>click</code> event in response
  to a non-mouse activation (e.g. hitting the "enter" key while the
  element is focused).</p>

  <p>The <dfn id=dom-tabindex title=dom-tabIndex><code>tabIndex</code></dfn> DOM
  attribute must <a href=#reflect>reflect</a> the value of the <code title=attr-tabindex><a href=#attr-tabindex>tabindex</a></code> content attribute. If the
  attribute is not present, or parsing its value returns an error,
  then the DOM attribute must return 0 for elements that are focusable
  and &minus;1 for elements that are not focusable.</p>


  <h4 id=focus-management><span class=secno>6.5.2 </span>Focus management</h4>

  <p>The <dfn id=focusing-steps>focusing steps</dfn> are as follows:</p>

  <ol><li><p>If focusing the element will remove the focus from another
   element, then run the <a href=#unfocusing-steps>unfocusing steps</a> for that
   element.</li>

   <li>

    <p>Make the element the currently focused element in its
    <a href=#top-level-browsing-context>top-level browsing context</a>.</p>

    <p>Some elements, most notably <code><a href=#the-area-element>area</a></code>, can correspond
    to more than one distinct focusable area. If a particular area was
    indicated when the element was focused, then that is the area that
    must get focus; otherwise, e.g. when using the <code title=dom-focus><a href=#dom-focus>focus()</a></code> method, the first such region in
    tree order is the one that must be focused.</p>

   </li>

   <li><p><a href=#fire-a-simple-event>Fire a simple event</a> that doesn't bubble called
   <code title=event-focus>focus</code> at the element.</li>

  </ol><p>User agents must run the <a href=#focusing-steps>focusing steps</a> for an
  element whenever the user moves the focus to a
  <a href=#focusable>focusable</a> element.</p>

  <p>The <dfn id=unfocusing-steps>unfocusing steps</dfn> are as follows:</p>

  <ol><li><p>If the element is an <code><a href=#the-input-element>input</a></code> element, and the
   <code title=event-input-change><a href=#event-input-change>change</a></code> event applies to the
   element, and the element does not have a defined <a href=#activation-behavior>activation
   behavior</a>, and the user has changed the element's <a href=#concept-fe-value title=concept-fe-value>value</a> or its list of <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>selected files</a>
   while the control was focused without committing that change, then
   <a href=#fire-a-simple-event>fire a simple event</a> called <code title=event-change>change</code> at the element, then
   <a href=#broadcast-formchange-events>broadcast <code title=event-formchange>formchange</code>
   events</a> at the element's <a href=#form-owner>form owner</a>.</p>

   <li><p>Unfocus the element.</li>

   <li><p><a href=#fire-a-simple-event>Fire a simple event</a> that doesn't bubble called
   <code title=event-blur>blur</code> at the element.</li>

  </ol><p>User agents should run the <a href=#unfocusing-steps>unfocusing steps</a> for an
  element whenever the user moves the focus away from any
  <a href=#focusable>focusable</a> element.</p>


  <h4 id=document-level-focus-apis><span class=secno>6.5.3 </span>Document-level focus APIs</h4>

  <p>The <dfn id=dom-document-activeelement title=dom-document-activeElement><code>activeElement</code></dfn>
  attribute on <code>DocumentHTML</code> objects must return the
  element in the document that is focused. If no element in the
  <code>Document</code> is focused, this must return <a href=#the-body-element-0>the body
  element</a>.</p>

  <p>The <dfn id=dom-document-hasfocus title=dom-document-hasFocus><code>hasFocus()</code></dfn> method
  on <code>DocumentHTML</code> objects must return true if the
  document's <a href=#browsing-context>browsing context</a> is focused, and all its
  <a href=#ancestor-browsing-context title="ancestor browsing context">ancestor browsing
  contexts</a> are also focused, and the <a href=#top-level-browsing-context>top-level browsing
  context</a> has the <i>system focus</i>.</p>

  <p>The <dfn id=dom-window-focus title=dom-window-focus><code>focus()</code></dfn>
  method on the <code><a href=#window>Window</a></code> object, when invoked, provides a
  hint to the user agent that the script believes the user might be
  interested in the contents of the <a href=#browsing-context>browsing context</a> of
  the <code><a href=#window>Window</a></code> object on which the method was invoked.</p>

  <p>User agents are encouraged to have this <code title=dom-window-blur><a href=#dom-window-blur>focus()</a></code> method trigger some kind of
  notification.</p>

  <p>The <dfn id=dom-window-blur title=dom-window-blur><code>blur()</code></dfn> method
  on the <code><a href=#window>Window</a></code> object, when invoked, provides a hint to
  the user agent that the script believes the user probably is not
  currently interested in the contents of the <a href=#browsing-context>browsing
  context</a> of the <code><a href=#window>Window</a></code> object on which the method
  was invoked, but that the contents might become interesting again in
  the future.</p>

  <p>User agents are encouraged to ignore calls to this <code title=dom-window-blur><a href=#dom-window-blur>blur()</a></code> method entirely.</p>

  <p class=note>Historically the <code title=dom-window-blur><a href=#dom-window-blur>focus()</a></code> and <code title=dom-window-blur><a href=#dom-window-blur>blur()</a></code> methods actually affected the
  system focus, but hostile sites widely abuse this behavior to the
  user's detriment.</p>


  <h4 id=element-level-focus-apis><span class=secno>6.5.4 </span>Element-level focus APIs</h4>

  <p>The <dfn id=dom-focus title=dom-focus><code>focus()</code></dfn> method,
  when invoked, must run the following algorithm:</p>

  <ol><li><p>If the element is marked as <i><a href=#locked-for-focus>locked for focus</a></i>, then abort
   these steps.</li>

   <li><p>If the element is not <a href=#focusable>focusable</a>, then abort these
   steps.</li>

   <li><p>Mark the element as <dfn id=locked-for-focus>locked for focus</dfn>.</li>

   <li><p>If the element is not already focused, run the <a href=#focusing-steps>focusing
   steps</a> for the element.</li>

   <li><p>Unmark the element as <i><a href=#locked-for-focus>locked for focus</a></i>.</li>

  </ol><p>The <dfn id=dom-blur title=dom-blur><code>blur()</code></dfn> method, when
  invoked, should run the <a href=#unfocusing-steps>unfocusing steps</a> for the
  element. User agents may selectively or uniformly ignore calls to
  this method for usability reasons.</p>



  <h3 id=selection><span class=secno>6.6 </span>The text selection APIs</h3>

  <p>Every <a href=#browsing-context>browsing context</a> has <dfn id=the-selection-0 title="the
  selection">a selection</dfn>. The selection can be empty, and the
  selection can have more than one range (a disjointed selection). The
  user agent should allow the user to change the selection. User
  agents are not required to let the user select more than one range,
  and may collapse multiple ranges in the selection to a single range
  when the user interacts with the selection. (But, of course, the
  user agent may let the user create selections with multiple
  ranges.)</p>

  <p>This one selection must be shared by all the content of the
  browsing context (though not by nested <a href=#browsing-context title="browsing
  context">browsing contexts</a>), including any editing hosts in
  the document. (Editing hosts that are not inside a document cannot
  have a selection.)</p>

  <p>If the selection is empty (collapsed, so that it has only one
  segment and that segment's start and end points are the same) then
  the selection's position should equal the caret position. When the
  selection is not empty, this specification does not define the caret
  position; user agents should follow platform conventions in deciding
  whether the caret is at the start of the selection, the end of the
  selection, or somewhere else.</p>

  <p>On some platforms (such as those using Wordstar editing
  conventions), the caret position is totally independent of the start
  and end of the selection, even when the selection is empty. On such
  platforms, user agents may ignore the requirement that the cursor
  position be linked to the position of the selection altogether.</p>

  <p>Mostly for historical reasons, in addition to the <a href=#browsing-context>browsing
  context</a>'s <a href=#the-selection-0 title="the selection">selection</a>, each
  <code><a href=#the-textarea-element>textarea</a></code> and <code><a href=#the-input-element>input</a></code> element has an
  independent selection. These are the <dfn id=text-field-selection title="text field
  selection">text field selections</dfn>.</p>

  <p>User agents may selectively ignore attempts to use the API to
  adjust the selection made after the user has modified the
  selection. For example, if the user has just selected part of a
  word, the user agent could ignore attempts to use the API call to
  immediately unselect the selection altogether, but could allow
  attempts to change the selection to select the entire word.</p>

  <p>User agents may also allow the user to create selections that are
  not exposed to the API.</p>

  <p>The <code><a href=#datagrid>datagrid</a></code> and <code><a href=#the-select-element>select</a></code> elements also
  have selections, indicating which items have been picked by the
  user. These are not discussed in this section.</p>

  <p class=note>This specification does not specify how selections
  are presented to the user. The Selectors specification, in
  conjunction with CSS, can be used to style text selections using the
  <code title=selector-selection>::selection</code>
  pseudo-element. <a href=#refsSELECTORS>[SELECTORS]</a> <a href=#refsCSS21>[CSS21]</a></p>



  <h4 id=documentSelection><span class=secno>6.6.1 </span>APIs for the browsing context selection</h4>

  <p>The <dfn id=dom-getselection title=dom-getSelection><code>getSelection()</code></dfn> method on
  the <code><a href=#window>Window</a></code> interface must return the
  <code><a href=#selection-0>Selection</a></code> object representing <a href=#the-selection-0>the
  selection</a> of that <code><a href=#window>Window</a></code> object's
  <a href=#browsing-context>browsing context</a>.

  <p>For historical reasons, the <dfn id=dom-document-getselection title=dom-document-getSelection><code>getSelection()</code></dfn>
  method on the <code><a href=#htmldocument>HTMLDocument</a></code> interface must return the
  same <code><a href=#selection-0>Selection</a></code> object.</p>
                                   
  <pre class=idl>[<a href=#dom-selection-tostring title=dom-selection-toString>Stringifies</a>] interface <dfn id=selection-0>Selection</dfn> {
  readonly attribute Node <a href=#dom-selection-anchornode title=dom-selection-anchorNode>anchorNode</a>;
  readonly attribute long <a href=#dom-selection-anchoroffset title=dom-selection-anchorOffset>anchorOffset</a>;
  readonly attribute Node <a href=#dom-selection-focusnode title=dom-selection-focusNode>focusNode</a>;
  readonly attribute long <a href=#dom-selection-focusoffset title=dom-selection-focusOffset>focusOffset</a>;
  readonly attribute boolean <a href=#dom-selection-iscollapsed title=dom-selection-isCollapsed>isCollapsed</a>;
  void <a href=#dom-selection-collapse title=dom-selection-collapse>collapse</a>(in Node parentNode, in long offset);
  void <a href=#dom-selection-collapsetostart title=dom-selection-collapseToStart>collapseToStart</a>();
  void <a href=#dom-selection-collapsetoend title=dom-selection-collapseToEnd>collapseToEnd</a>();
  void <a href=#dom-selection-selectallchildren title=dom-selection-selectAllChildren>selectAllChildren</a>(in Node parentNode);
  void <a href=#dom-selection-deletefromdocument title=dom-selection-deleteFromDocument>deleteFromDocument</a>();
  readonly attribute long <a href=#dom-selection-rangecount title=dom-selection-rangeCount>rangeCount</a>;
  Range <a href=#dom-selection-getrangeat title=dom-selection-getRangeAt>getRangeAt</a>(in long index);
  void <a href=#dom-selection-addrange title=dom-selection-addRange>addRange</a>(in Range range);
  void <a href=#dom-selection-removerange title=dom-selection-removeRange>removeRange</a>(in Range range);
  void <a href=#dom-selection-removeallranges title=dom-selection-removeAllRanges>removeAllRanges</a>();
};</pre>
<!--
  See also:
    http://lxr.mozilla.org/mozilla/source/content/base/public/nsISelection.idl
  This spec doesn't have everything from there yet, in particular
  selectionLanguageChange() and containsNode() are missing. They are missing
  because I couldn't work out how to define them in terms of Ranges.

  I also haven't included extend():

    void <span title="dom-selection-extend">extend</span>(in Node parentNode, in long offset);
    // raise if no range
    // raise WRONG_DOCUMENT_ERR if parentNode not in document
    // do something

  ...mostly because I can't work out how to describe what it does quickly.
-->

  <p>The <code><a href=#selection-0>Selection</a></code> interface is represents a list of
  <code>Range</code> objects. The first item in the list has index 0,
  and the last item has index <var title="">count</var>-1, where
  <var title="">count</var> is the number of ranges in the list. <a href=#refsDOM2RANGE>[DOM2RANGE]</a></p>

  <p>All of the members of the <code><a href=#selection-0>Selection</a></code> interface are
  defined in terms of operations on the <code>Range</code> objects
  represented by this object. These operations can raise exceptions,
  as defined for the <code>Range</code> interface; this can therefore
  result in the members of the <code><a href=#selection-0>Selection</a></code> interface
  raising exceptions as well, in addition to any explicitly called out
  below.</p> <!-- XXX example -->

  <p>The <dfn id=dom-selection-anchornode title=dom-selection-anchorNode><code>anchorNode</code></dfn>
  attribute must return the value returned by the <code title="">startContainer</code> attribute of the last
  <code>Range</code> object in the list, or null if the list is
  empty.</p>

  <p>The <dfn id=dom-selection-anchoroffset title=dom-selection-anchorOffset><code>anchorOffset</code></dfn>
  attribute must return the value returned by the <code title="">startOffset</code> attribute of the last <code>Range</code>
  object in the list, or 0 if the list is empty.</p>

  <p>The <dfn id=dom-selection-focusnode title=dom-selection-focusNode><code>focusNode</code></dfn>
  attribute must return the value returned by the <code title="">endContainer</code> attribute of the last
  <code>Range</code> object in the list, or null if the list is
  empty.</p>

  <p>The <dfn id=dom-selection-focusoffset title=dom-selection-focusOffset><code>focusOffset</code></dfn>
  attribute must return the value returned by the <code title="">endOffset</code> attribute of the last <code>Range</code>
  object in the list, or 0 if the list is empty.</p>

  <p>The <dfn id=dom-selection-iscollapsed title=dom-selection-isCollapsed><code>isCollapsed</code></dfn>
  attribute must return true if there are zero ranges, or if there is
  exactly one range and its <code title="">collapsed</code> attribute
  is itself true. Otherwise it must return false.</p>

  <p>The <dfn id=dom-selection-collapse title=dom-selection-collapse><code>collapse(<var title="">parentNode</var>, <var title="">offset</var>)</code></dfn>
  method must raise a <code><a href=#wrong_document_err>WRONG_DOCUMENT_ERR</a></code> DOM exception if
  <var title="">parentNode</var>'s <code>Document</code> is not the
  <code><a href=#htmldocument>HTMLDocument</a></code> object with which the
  <code><a href=#selection-0>Selection</a></code> object is associated. Otherwise it is, and
  the method must remove all the ranges in the <code><a href=#selection-0>Selection</a></code>
  list, then create a new <code>Range</code> object, add it to the
  list, and invoke its <code title="">setStart()</code> and <code title="">setEnd()</code> methods with the <var title="">parentNode</var> and <var title="">offset</var> values as
  their arguments.</p>

  <p>The <dfn id=dom-selection-collapsetostart title=dom-selection-collapseToStart><code>collapseToStart()</code></dfn>
  method must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> DOM exception if
  there are no ranges in the list. Otherwise, it must invoke the <code title=dom-selection-collapse><a href=#dom-selection-collapse>collapse()</a></code> method with the
  <code title="">startContainer</code> and <code title="">startOffset</code> values of the first <code>Range</code>
  object in the list as the arguments.</p>

  <p>The <dfn id=dom-selection-collapsetoend title=dom-selection-collapseToEnd><code>collapseToEnd()</code></dfn>
  method must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> DOM exception if
  there are no ranges in the list. Otherwise, it must invoke the <code title=dom-selection-collapse><a href=#dom-selection-collapse>collapse()</a></code> method with the
  <code title="">endContainer</code> and <code title="">endOffset</code> values of the last <code>Range</code>
  object in the list as the arguments.</p>

  <p>The <dfn id=dom-selection-selectallchildren title=dom-selection-selectAllChildren><code>selectAllChildren(<var title="">parentNode</var>)</code></dfn>
  method must invoke the <code title=dom-selection-collapse><a href=#dom-selection-collapse>collapse()</a></code> method with the
  <var title="">parentNode</var> value as the first argument and 0 as the
  second argument, and must then invoke the <code title="">selectNodeContents()</code> method on the first (and only)
  range in the list with the <var title="">parentNode</var> value as the
  argument.</p>

  <p>The <dfn id=dom-selection-deletefromdocument title=dom-selection-deleteFromDocument><code>deleteFromDocument()</code></dfn>
  method must invoke the <code title="">deleteContents()</code> method
  on each range in the list, if any, from first to last.</p>

  <p>The <dfn id=dom-selection-rangecount title=dom-selection-rangeCount><code>rangeCount</code></dfn>
  attribute must return the number of ranges in the list.</p>

  <p>The <dfn id=dom-selection-getrangeat title=dom-selection-getRangeAt><code>getRangeAt(<var title="">index</var>)</code></dfn>
  method must return the <var title="">index</var>th range in the list. If
  <var title="">index</var> is less than zero or greater or equal to the value
  returned by the <code title=dom-selection-rangeCount><a href=#dom-selection-rangecount>rangeCount</a></code> attribute, then
  the method must raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> DOM
  exception.</p>

  <p>The <dfn id=dom-selection-addrange title=dom-selection-addRange><code>addRange(<var title="">range</var>)</code></dfn>
  method must add the given <var title="">range</var> Range object to the list
  of selections, at the end (so the newly added range is the new last
  range). Duplicates are not prevented; a range may be added more than
  once in which case it appears in the list more than once, which (for
  example) will cause <a href=#dom-selection-tostring title=dom-selection-toString>stringification</a> to return the
  range's text twice.</p> <!-- XXX how does this interact with
  deleteFromDocument() which acts on all ranges? -->

  <p>The <dfn id=dom-selection-removerange title=dom-selection-removeRange><code>removeRange(<var title="">range</var>)</code></dfn>
  method must remove the first occurrence of <var title="">range</var> in the
  list of ranges, if it appears at all.</p>

  <p>The <dfn id=dom-selection-removeallranges title=dom-selection-removeAllRanges><code>removeAllRanges()</code></dfn>
  method must remove all the ranges from the list of ranges, such that
  the <code title=dom-selection-rangeCount><a href=#dom-selection-rangecount>rangeCount</a></code>
  attribute returns 0 after the <code title=dom-selection-removeAllRanges><a href=#dom-selection-removeallranges>removeAllRanges()</a></code>
  method is invoked (and until a new range is added to the list,
  either through this interface or via user interaction).</p>

  <p>Objects implementing this interface must <dfn id=dom-selection-tostring title=dom-selection-toString>stringify</dfn> to a concatenation
  of the results of invoking the <code title="">toString()</code>
  method of the <code>Range</code> object on each of the ranges of the
  selection, in the order they appear in the list (first to last).</p>

  <div class=example>
   <p>In the following document fragment, the emphasised parts
   indicate the selection.</p>
   <pre>&lt;p&gt;The cute girl likes <em>the </em>&lt;cite&gt;<em>Oxford English</em> Dictionary&lt;/cite&gt;.&lt;/p&gt;</pre>
   <p>If a script invoked <code title="">window.getSelection().toString()</code>, the return value
   would be "<code>the Oxford English</code>".</p>
  </div>

  <p class=note>The <code><a href=#selection-0>Selection</a></code> interface has no relation
  to the <code><a href=#datagridselection>DataGridSelection</a></code> interface.</p>


  <h4 id=textFieldSelection><span class=secno>6.6.2 </span>APIs for the text field selections</h4>

  <p class=XXX>When we define HTMLTextAreaElement and
  HTMLInputElement we will have to add the IDL given below to both of
  their IDLs.</p>

  <p>The <code><a href=#the-input-element>input</a></code> and <code><a href=#the-textarea-element>textarea</a></code> elements define
  four members in their DOM interfaces for handling their text
  selection:</p>

  <pre class=idl>  void <a href=#dom-textarea/input-select title=dom-textarea/input-select>select</a>();
           attribute unsigned long <a href=#dom-textarea/input-selectionstart title=dom-textarea/input-selectionStart>selectionStart</a>;
           attribute unsigned long <a href=#dom-textarea/input-selectionend title=dom-textarea/input-selectionEnd>selectionEnd</a>;
  void <a href=#dom-textarea/input-setselectionrange title=dom-textarea/input-setSelectionRange>setSelectionRange</a>(in unsigned long start, in unsigned long end);</pre>
<!-- XXX also add textLength? it seems to be widely used -->

  <p>These methods and attributes expose and control the selection of
  <code><a href=#the-input-element>input</a></code> and <code><a href=#the-textarea-element>textarea</a></code> text fields.</p>

  <p>The <dfn id=dom-textarea/input-select title=dom-textarea/input-select><code>select()</code></dfn> method
  must cause the contents of the text field to be fully selected.</p>

  <p>The <dfn id=dom-textarea/input-selectionstart title=dom-textarea/input-selectionStart><code>selectionStart</code></dfn>
  attribute must, on getting, return the offset (in logical order) to
  the character that immediately follows the start of the
  selection. If there is no selection, then it must return the offset
  (in logical order) to the character that immediately follows the
  text entry cursor.</p>

  <p>On setting, it must act as if the <code title=dom-textarea/input-setSelectionRange><a href=#dom-textarea/input-setselectionrange>setSelectionRange()</a></code>
  method had been called, with the new value as the first argument,
  and the current value of the <code title=dom-textarea/input-selectionEnd><a href=#dom-textarea/input-selectionend>selectionEnd</a></code>
  attribute as the second argument, unless the current value of the
  <code title=dom-textarea/input-selectionEnd><a href=#dom-textarea/input-selectionend>selectionEnd</a></code> is
  less than the new value, in which case the second argument must also
  be the new value.</p>

  <p>The <dfn id=dom-textarea/input-selectionend title=dom-textarea/input-selectionEnd><code>selectionEnd</code></dfn>
  attribute must, on getting, return the offset (in logical order) to
  the character that immediately follows the end of the selection. If
  there is no selection, then it must return the offset (in logical
  order) to the character that immediately follows the text entry
  cursor.</p>

  <p>On setting, it must act as if the <code title=dom-textarea/input-setSelectionRange><a href=#dom-textarea/input-setselectionrange>setSelectionRange()</a></code>
  method had been called, with the current value of the <code title=dom-textarea/input-selectionStart><a href=#dom-textarea/input-selectionstart>selectionStart</a></code>
  attribute as the first argument, and new value as the second
  argument.</p>

  <p>The <dfn id=dom-textarea/input-setselectionrange title=dom-textarea/input-setSelectionRange><code>setSelectionRange(<var title="">start</var>, <var title="">end</var>)</code></dfn> method
  must set the selection of the text field to the sequence of
  characters starting with the character at the <var title="">start</var>th position (in logical order) and ending with
  the character at the <span>(<var title="">end</var>-1)</span>th
  position. Arguments greater than the length of the value in the text
  field must be treated as pointing at the end of the text field. If
  <var title="">end</var> is less than or equal to <var title="">start</var> then the start of the selection and the end of
  the selection must both be placed immediately before the character
  with offset <var title="">end</var>. In UAs where there is no
  concept of an empty selection, this must set the cursor to be just
  before the character with offset <var title="">end</var>.</p>

  <div class=example>

   <p>To obtain the currently selected text, the following JavaScript
   suffices:</p>

   <pre>var selectionText = control.value.substring(control.selectionStart, control.selectionEnd);</pre>

   <p>...where <var title="">control</var> is the <code><a href=#the-input-element>input</a></code>
   or <code><a href=#the-textarea-element>textarea</a></code> element.</p>

  </div>

  <p>Characters with no visible rendering, such as U+200D ZERO WIDTH
  JOINER, still count as characters. Thus, for instance, the selection
  can include just an invisible character, and the text insertion
  cursor can be placed to one side or another of such a character.</p>

  <p>When these methods and attributes are used with
  <code><a href=#the-input-element>input</a></code> elements that are not displaying simple text
  fields, they must raise an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code>
  exception.</p>




  <h3 id=contenteditable><span class=secno>6.7 </span>The <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute</h3>

  <p>The <dfn id=attr-contenteditable title=attr-contenteditable><code>contenteditable</code></dfn>
  attribute is an <a href=#enumerated-attribute>enumerated attribute</a> whose keywords are
  the empty string, <code title="">true</code>, and <code title="">false</code>. The empty string and the <code title="">true</code> keyword map to the <i>true</i> state. The <code title="">false</code> keyword maps to the <i>false</i> state. In
  addition, there is a third state, the <i>inherit</i> state, which is
  the <i>missing value default</i> (and the <i>invalid value
  default</i>).</p>

  <p>If an <a href=#html-elements title="HTML elements">HTML element</a> has a <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute set to
  the true state, or it has its <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute set to
  the inherit state and if its nearest ancestor <a href=#html-elements title="HTML
  elements">HTML element</a> with the <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute set to
  a state other than the inherit state has its attribute set to the
  true state, or if it and its ancestors all have their <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute set to
  the inherit state but the <code>Document</code> has <code title=dom-document-designMode><a href=#designMode>designMode</a></code> enabled, then the
  UA must treat the element as <dfn id=editable>editable</dfn> (as described
  below).</p>

  <p>Otherwise, either the <a href=#html-elements title="HTML elements">HTML
  element</a> has a <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute set to
  the false state, or its <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute is set
  to the inherit state and its nearest ancestor <a href=#html-elements title="HTML
  elements">HTML element</a> with the <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute set to
  a state other than the inherit state has its attribute set to the
  false state, or all its ancestors have their <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code> attribute set to
  the inherit state and the <code>Document</code> itself has <code title=dom-document-designMode><a href=#designMode>designMode</a></code> disabled; either
  way, the element is not editable.</p>

  <p>The <dfn id=dom-contenteditable title=dom-contentEditable><code>contentEditable</code></dfn> DOM
  attribute, on getting, must return the string "<code title="">true</code>" if the content attribute is set to the true
  state, <code title="">false</code>" if the content attribute is set
  to the false state, and "<code title="">inherit</code>"
  otherwise. On setting, if the new value is an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> match for the string "<code title="">inherit</code>" then the content attribute must be removed,
  if the new value is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for
  the string "<code title="">true</code>" then the content attribute
  must be set to the string "<code title="">true</code>", if the new
  value is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string
  "<code title="">false</code>" then the content attribute must be set
  to the string "<code title="">false</code>", and otherwise the
  attribute setter must raise a <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception.</p>

  <p>The <dfn id=dom-iscontenteditable title=dom-isContentEditable><code>isContentEditable</code></dfn>
  DOM attribute, on getting, must return true if the element is
  <a href=#editable>editable</a>, and false otherwise.</p>

  <p>If an element is <a href=#editable>editable</a> and its parent element is
  not, or if an element is <a href=#editable>editable</a> and it has no parent
  element, then the element is an <dfn id=editing-host>editing host</dfn>. Editable
  elements can be nested. User agents must make editing hosts
  focusable (which typically means they enter the <a href=#attr-tabindex title=attr-tabindex>tab order</a>). An editing host can contain
  non-editable sections, these are handled as described below. An
  editing host can contain non-editable sections that contain further
  editing hosts.</p>

  <p>When an editing host has focus, it must have a <dfn id=caret-position>caret
  position</dfn> that specifies where the current editing position
  is. It may also have a <a href=#the-selection-0 title="the
  selection">selection</a>.</p> <!-- XXX xref to later section -->

  <p class=note>How the caret and selection are represented depends
  entirely on the UA.</p>

  <!-- XXX rendering requirement: The current caret should affect the
  line-height (i.e. it acts at least like an empty inline element) -->

  <!-- XXX would be useful to have a way to mark an element as
  unremovable. -->


  <h4 id=user-editing-actions><span class=secno>6.7.1 </span>User editing actions</h4>

  <p>There are several actions that the user agent should allow the
  user to perform while the user is interacting with an editing
  host. How exactly each action is triggered is not defined for every
  action, but when it is not defined, suggested key bindings are
  provided to guide implementors.</p>

  <dl><dt>Move the caret</dt>

   <dd><p>User agents must allow users to move the caret to any
   position within an editing host, even into nested editable
   elements. This could be triggered as the default action of <code title=event-keydown>keydown</code> events with various key
   identifiers and as the default action of <code title=event-mousedown>mousedown</code> events.</dd>


   <dt>Change the selection</dt>

   <dd><p>User agents must allow users to change <a href=#the-selection-0>the
   selection</a> within an editing host, even into nested editable
   elements. User agents may prevent selections from being made in
   ways that cross from editable elements into non-editable elements
   (e.g. by making each non-editable descendant atomically selectable,
   but not allowing text selection within them). This could be
   triggered as the default action of <code title=event-keydown>keydown</code> events with various key
   identifiers and as the default action of <code title=event-mousedown>mousedown</code> events.</dd>


   <dt id=contenteditable-insertText>Insert text</dt>

   <dd><p>This action must be triggered as the default action of a
   <code title=event-textInput>textInput</code> event, and may be
   triggered by other commands as well. It must cause the user agent
   to insert the specified text (given by the event object's <code title="">data</code> attribute in the case of the <code title=event-textInput>textInput</code> event) at the caret.</p>

   <p>If the caret is positioned somewhere where <a href=#phrasing-content-0>phrasing
   content</a> is not allowed (e.g. inside an empty <code><a href=#the-ol-element>ol</a></code>
   element), then the user agent must not insert the text directly at
   the caret position. In such cases the behavior is UA-dependent,
   but user agents must not, in response to a request to insert text,
   generate a DOM that is less conformant than the DOM prior to the
   request.</p>

   <p>User agents should allow users to insert new paragraphs into
   elements that contains only content other than paragraphs.</p>

   <div class=example>
    <p>For example, given the markup:</p>
    <pre>&lt;section&gt;
 &lt;dl&gt;
  &lt;dt&gt; Ben &lt;/dt&gt;
  &lt;dd&gt; Goat &lt;/dd&gt;
 &lt;/dl&gt;
&lt;/section&gt;</pre>
    <p>...the user agent should allow the user to insert
    <code><a href=#the-p-element>p</a></code> elements before and after the <code><a href=#the-dl-element>dl</a></code>
    element, as children of the <code><a href=#the-section-element>section</a></code> element.</p>
   </div>

   </dd>


   <dt id=contenteditable-breakBlock>Break block</dt>

   <dd><p>UAs should offer a way for the user to request that the
   current paragraph be broken at the caret, e.g. as the default
   action of a <code title=event-keydown>keydown</code> event whose
   identifier is the "Enter" key and that has no modifiers set.</p>

   <p>The exact behavior is UA-dependent, but user agents must not,
   in response to a request to break a paragraph, generate a DOM that
   is less conformant than the DOM prior to the request.</dd>


   <dt id=contenteditable-br>Insert a line separator</dt>

   <dd><p>UAs should offer a way for the user to request an explicit
   line break at the caret position without breaking the paragraph,
   e.g. as the default action of a <code title=event-keydown>keydown</code> event whose identifier is the
   "Enter" key and that has a shift modifier set. Line separators are
   typically found within a poem verse or an address. To insert a line
   break, the user agent must insert a <code><a href=#the-br-element>br</a></code> element.</p>

   <p>If the caret is positioned somewhere where <a href=#phrasing-content-0>phrasing
   content</a> is not allowed (e.g. in an empty <code><a href=#the-ol-element>ol</a></code>
   element), then the user agent must not insert the <code><a href=#the-br-element>br</a></code>
   element directly at the caret position. In such cases the behavior
   is UA-dependent, but user agents must not, in response to a request
   to insert a line separator, generate a DOM that is less conformant
   than the DOM prior to the request.</dd>


   <dt id=contenteditable-delete>Delete</dt>

   <dd><p>UAs should offer a way for the user to delete text and
   elements, including non-editable descendants, e.g. as the default
   action of <code title=event-keydown>keydown</code> events whose
   identifiers are "U+0008" or "U+007F".</p>

   <p>Five edge cases in particular need to be considered carefully
   when implementing this feature: backspacing at the start of an
   element, backspacing when the caret is immediately after an
   element, forward-deleting at the end of an element,
   forward-deleting when the caret is immediately before an element,
   and deleting a <a href=#the-selection-0 title="the selection">selection</a> whose
   start and end points do not share a common parent node.</p>

   <p>In any case, the exact behavior is UA-dependent, but user
   agents must not, in response to a request to delete text or an
   element, generate a DOM that is less conformant than the DOM prior
   to the request.</dd>


   <dt id=contenteditable-wrapSemantic>Insert, and wrap text in,
   semantic elements</dt>

   <dd><p>UAs should offer the user the ability to mark text and
   paragraphs with semantics that HTML can express.</p>

   <p>UAs should similarly offer a way for the user to insert empty
   semantic elements to subsequently fill by entering text
   manually.</p>

   <p>UAs should also offer a way to remove those semantics from
   marked up text, and to remove empty semantic element that have been
   inserted.</p>

   <p>In response to a request from a user to mark text up in italics,
   user agents should use the <code><a href=#the-i-element>i</a></code> element to represent the
   semantic. The <code><a href=#the-em-element>em</a></code> element should be used only if the
   user agent is sure that the user means to indicate stress
   emphasis.</p>

   <p>In response to a request from a user to mark text up in bold,
   user agents should use the <code><a href=#the-b-element>b</a></code> element to represent the
   semantic. The <code><a href=#the-strong-element>strong</a></code> element should be used only if
   the user agent is sure that the user means to indicate
   importance.</p>

   <p>The exact behavior is UA-dependent, but user agents must not,
   in response to a request to wrap semantics around some text or to
   insert or remove a semantic element, generate a DOM that is less
   conformant than the DOM prior to the request.</dd>


   <dt>Select and move non-editable elements nested inside editing hosts</dt>

   <dd><p>UAs should offer a way for the user to move images and other
   non-editable parts around the content within an editing host. This
   may be done using the <a href=#dnd>drag and drop</a> mechanism. User
   agents must not, in response to a request to move non-editable
   elements nested inside editing hosts, generate a DOM that is less
   conformant than the DOM prior to the request.</dd>


   <dt>Edit form controls nested inside editing hosts</dt>

   <dd><p>When an <a href=#editable>editable</a> form control is edited, the
   changes must be reflected in both its current value <em>and</em>
   its default value. For <code><a href=#the-input-element>input</a></code> elements this means
   updating the <code title=dom-input-defaultValue><a href=#dom-input-defaultvalue>defaultValue</a></code> DOM attribute as
   well as the <code title=dom-input-value><a href=#dom-input-value>value</a></code> DOM
   attribute; for <code><a href=#the-select-element>select</a></code> elements it means updating the
   <code><a href=#the-option-element>option</a></code> elements' <code title=dom-option-defaultSelected><a href=#dom-option-defaultselected>defaultSelected</a></code> DOM
   attribute as well as the <code title=dom-option-selected><a href=#dom-option-selected>selected</a></code> DOM attribute; for
   <code><a href=#the-textarea-element>textarea</a></code> elements this means updating the <code title=dom-textarea-defaultValue><a href=#dom-textarea-defaultvalue>defaultValue</a></code> DOM attribute
   as well as the <code title=dom-textarea-value><a href=#dom-textarea-value>value</a></code> DOM
   attribute. (Updating the <code title="">default*</code> DOM
   attributes causes content attributes to be updated as well.)</dd>

   <!-- XXX something about not supporting resizing? -->

  </dl><!-- XXX each action performed should be added to the undo history --><p>User agents may perform several commands per user request; for
  example if the user selects a block of text and hits
  <kbd><kbd>Enter</kbd></kbd>, the UA might interpret that as a
  request to delete the content of <a href=#the-selection-0>the selection</a> followed
  by a request to break the paragraph at that position.</p>


  <h4 id=making-entire-documents-editable><span class=secno>6.7.2 </span>Making entire documents editable</h4>

  <p>Documents have a <dfn id=designMode title=dom-document-designMode><code>designMode</code></dfn>, which
  can be either enabled or disabled.</p>

  <p>The <code title=dom-document-designMode><a href=#designMode>designMode</a></code> DOM
  attribute on the <code>Document</code> object takes two values,
  "<code title="">on</code>" and "<code title="">off</code>". When it
  is set, the new value must be compared in an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> manner to these two values. If it matches
  the "<code title="">on</code>" value, then <code title=dom-document-designMode><a href=#designMode>designMode</a></code> must be enabled,
  and if it matches the "<code title="">off</code>" value, then <code title=dom-document-designMode><a href=#designMode>designMode</a></code> must be
  disabled. Other values must be ignored.</p>

  <p>When <code title=dom-document-designMode><a href=#designMode>designMode</a></code> is
  enabled, the DOM attribute must return the value "<code title="">on</code>", and when it is disabled, it must return the
  value "<code title="">off</code>".</p>

  <p>The last state set must persist until the document is destroyed
  or the state is changed. Initially, documents must have their <code title=dom-document-designMode><a href=#designMode>designMode</a></code> disabled.</p>

  <p>Enabling <code title=dom-document-designMode><a href=#designMode>designMode</a></code>
  <a href=#designModeScriptBlocked>causes scripts in general to be
  disabled</a> and the document to become editable.</p>



  <h3 id=dnd><span class=secno>6.8 </span><dfn>Drag and drop</dfn></h3>

<!--XXX

http://msdn.microsoft.com/workshop/author/datatransfer/overview.asp
http://msdn.microsoft.com/workshop/author/dhtml/reference/objects/clipboarddata.asp

> To implement this with simple interface I've proposed, events should be
> handled either by existing elements (like list items that compare their size
> and position of dragged element to decide whether element should be dropped
> before or after) or handled by container that would probably need to calculate
> positions of it's children and create new element to show drop target. Smooth
> Mac-like drag'n'drop can be implemented by animating drop target's
> padding/margin. So that's quite a bit of code that's going to be reinvented
> each time someone implements reordering.

<hyatt> :droptarget
<hyatt> or something
<hyatt> we don't support a pseudo-class for the drop target but that's a great idea
<Hixie_> yeah, thinking about that too
<Hixie_> :drop-target, :drop-target(above), :drop-target(below) and having ondragover be able to say "not on me, but next to me maybe"

http://msdn.microsoft.com/workshop/author/dhtml/reference/events/ondragstart.asp
http://msdn.microsoft.com/workshop/author/dhtml/reference/events/ondrag.asp
http://msdn.microsoft.com/workshop/author/dhtml/reference/events/ondragend.asp
http://msdn.microsoft.com/workshop/author/dhtml/reference/objects/obj_datatransfer.asp
http://developer.apple.com/documentation/AppleApplications/Conceptual/SafariJSProgTopics/Tasks/DragAndDrop.html
-->

  <p>This section defines an event-based drag-and-drop mechanism.</p>

  <p>This specification does not define exactly what a
  <em>drag-and-drop operation</em> actually is.</p>

  <p>On a visual medium with a pointing device, a drag operation could
  be the default action of a <code title=event-mousedown>mousedown</code> event that is followed by a
  series of <code title=event-mousemove>mousemove</code> events, and
  the drop could be triggered by the mouse being released.</p>

  <p>On media without a pointing device, the user would probably have
  to explicitly indicate his intention to perform a drag-and-drop
  operation, stating what he wishes to drag and what he wishes to
  drop, respectively.</p>

  <p>However it is implemented, drag-and-drop operations must have a
  starting point (e.g. where the mouse was clicked, or the start of
  <a href=#the-selection-0>the selection</a> or element that was selected for the
  drag), may have any number of intermediate steps (elements that the
  mouse moves over during a drag, or elements that the user picks as
  possible drop points as he cycles through possibilities), and must
  either have an end point (the element above which the mouse button
  was released, or the element that was finally selected), or be
  canceled. The end point must be the last element selected as a
  possible drop point before the drop occurs (so if the operation is
  not canceled, there must be at least one element in the middle
  step).</p>


  <h4 id=introduction-4><span class=secno>6.8.1 </span>Introduction</h4>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>It's also currently non-existent.</p>


  <h4 id=the-dragevent-and-datatransfer-interfaces><span class=secno>6.8.2 </span>The <code><a href=#dragevent>DragEvent</a></code> and <code><a href=#datatransfer>DataTransfer</a></code> interfaces</h4>

  <p>The drag-and-drop processing model involves several events. They
  all use the <code><a href=#dragevent>DragEvent</a></code> interface.</p>

  <pre class=idl>interface <dfn id=dragevent>DragEvent</dfn> : MouseEvent {
  readonly attribute <a href=#datatransfer>DataTransfer</a> <a href=#dom-dragevent-datatransfer title=dom-DragEvent-dataTransfer>dataTransfer</a>;

  void <a href=#dom-dragevent-initdragevent title=dom-DragEvent-initDragEvent>initDragEvent</a>(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in AbstractView viewArg, in long detailArg, in long screenXArg, in long screenYArg, in long clientXArg, in long clientYArg, in boolean ctrlKeyArg, in boolean altKeyArg, in boolean shiftKeyArg, in boolean metaKeyArg, in unsigned short buttonArg, in EventTarget relatedTargetArg, in <a href=#datatransfer>DataTransfer</a> dataTransferArg);
  void <a href=#dom-dragevent-initdrageventns title=dom-DragEvent-initDragEventNS>initDragEventNS</a>(in DOMString namespaceURIArg, in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in AbstractView viewArg, in long detailArg, in long screenXArg, in long screenYArg, in long clientXArg, in long clientYArg, in unsigned short buttonArg, in EventTarget relatedTargetArg, in DOMString modifiersListArg, in <a href=#datatransfer>DataTransfer</a> dataTransferArg);
};</pre>

  <p>The <dfn id=dom-dragevent-initdragevent title=dom-DragEvent-initDragEvent><code>initDragEvent()</code></dfn>
  and <dfn id=dom-dragevent-initdrageventns title=dom-DragEvent-initDragEventNS><code>initDragEventNS()</code></dfn>
  methods must initialize the event in a manner analogous to the
  similarly-named methods in the DOM3 Events interfaces. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p class=note>The <code title=dom-DragEvent-initDragEvent><a href=#dom-dragevent-initdragevent>initDragEvent()</a></code> and <code title=dom-DragEvent-initDragEventNS><a href=#dom-dragevent-initdrageventns>initDragEventNS()</a></code>
  methods handle modifier keys differently, much like the equivalent
  methods on the <code>MouseEvent</code> interface.</p>

  <p>The <dfn id=dom-dragevent-datatransfer title=dom-DragEvent-dataTransfer><code>dataTransfer</code></dfn>
  attribute of the <code><a href=#dragevent>DragEvent</a></code> interface represents the
  context information for the event.</p>

  <pre class=idl>interface <dfn id=datatransfer>DataTransfer</dfn> {
           attribute DOMString <a href=#dom-datatransfer-dropeffect title=dom-DataTransfer-dropEffect>dropEffect</a>;
           attribute DOMString <a href=#dom-datatransfer-effectallowed title=dom-DataTransfer-effectAllowed>effectAllowed</a>;
  readonly attribute DOMStringList <a href=#dom-datatransfer-types title=dom-DataTransfer-types>types</a>;
  void <a href=#dom-datatransfer-cleardata title=dom-DataTransfer-clearData>clearData</a>([Optional] in DOMString format);
  void <a href=#dom-datatransfer-setdata title=dom-DataTransfer-setData>setData</a>(in DOMString format, in DOMString data);
  DOMString <a href=#dom-datatransfer-getdata title=dom-DataTransfer-getData>getData</a>(in DOMString format);
  void <a href=#dom-datatransfer-setdragimage title=dom-DataTransfer-setDragImage>setDragImage</a>(in Element image, in long x, in long y);
  void <a href=#dom-datatransfer-addelement title=dom-DataTransfer-addElement>addElement</a>(in Element element);
};
</pre>

  <p><code><a href=#datatransfer>DataTransfer</a></code> objects can conceptually contain
  various kinds of data.</p>

  <p>When a <code><a href=#datatransfer>DataTransfer</a></code> object is created, it must be
  initialized as follows:</p>

  <ul><li>The <code><a href=#datatransfer>DataTransfer</a></code> object must initially contain no
   data, no elements, and have no associated image.</li>

   <li>The <code><a href=#datatransfer>DataTransfer</a></code> object's <code title=dom-DataTransfer-effectAllowed><a href=#dom-datatransfer-effectallowed>effectAllowed</a></code>
   attribute must be set to "<code title="">uninitialized</code>".</li>

   <li>The <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code>
   attribute must be set to "<code title="">none</code>".</li>

  </ul><p>The <dfn id=dom-datatransfer-dropeffect title=dom-DataTransfer-dropEffect><code>dropEffect</code></dfn>
  attribute controls the drag-and-drop feedback that the user is given
  during a drag-and-drop operation.</p>

  <p>The attribute must ignore any attempts to set it to a value other
  than <code title="">none</code>, <code title="">copy</code>, <code title="">link</code>, and <code title="">move</code>. On getting,
  the attribute must return the last of those four values that it was
  set to.</p>

  <p>The <dfn id=dom-datatransfer-effectallowed title=dom-DataTransfer-effectAllowed><code>effectAllowed</code></dfn>
  attribute is used in the drag-and-drop processing model to
  initialize the <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code> attribute
  during the <code title=event-dragenter><a href=#event-dragenter>dragenter</a></code> and <code title=event-dragover><a href=#event-dragover>dragover</a></code> events.</p>

  <p>The attribute must ignore any attempts to set it to a value other
  than <code title="">none</code>, <code title="">copy</code>, <code title="">copyLink</code>, <code title="">copyMove</code>, <code title="">link</code>, <code title="">linkMove</code>, <code title="">move</code>, <code title="">all</code>, and <code title="">uninitialized</code>. On getting, the attribute must return
  the last of those values that it was set to.</p>

  <p><code><a href=#datatransfer>DataTransfer</a></code> objects can hold pieces of data, each
  associated with a unique format. Formats are generally given by MIME
  types, with some values special-cased for legacy reasons. For the
  purposes of this API, however, the format strings are opaque,
  <a href=#case-sensitive>case-sensitive</a>, strings, and the empty string is a
  valid format string.</p>

  <p>The <dfn id=dom-datatransfer-cleardata title=dom-DataTransfer-clearData><code>clearData()</code></dfn>
  method, when called with no arguments, must clear the
  <code><a href=#datatransfer>DataTransfer</a></code> object of al data (for all formats).</p>

  <p>When called with an argument, the <code title=dom-DataTransfer-clearData><a href=#dom-datatransfer-cleardata>clearData(<var title="">format</var>)</a></code> method must clear the
  <code><a href=#datatransfer>DataTransfer</a></code> object of any data associated with the
  given <var title="">format</var>. If <var title="">format</var> is
  the value "<code title="">Text</code>", then it must be treated as
  "<code title="">text/plain</code>". If the <var title="">format</var> is "<code title="">URL</code>", then it must
  be treated as "<code title="">text/uri-list</code>".</p>

  <p>The <dfn id=dom-datatransfer-setdata title=dom-DataTransfer-setData><code>setData(<var title="">format</var>, <var title="">data</var>)</code></dfn> method
  must add <var title="">data</var> to the data stored in the
  <code><a href=#datatransfer>DataTransfer</a></code> object, labeled as being of the type <var title="">format</var>. This must replace any previous data that had
  been set for that format. If <var title="">format</var> is the value
  "<code title="">Text</code>", then it must be treated as "<code title="">text/plain</code>". If the <var title="">format</var> is
  "<code title="">URL</code>", then it must be treated as "<code title="">text/uri-list</code>".</p>

  <p>The <dfn id=dom-datatransfer-getdata title=dom-DataTransfer-getData><code>getData(<var title="">format</var>)</code></dfn> method must return the data that
  is associated with the type <var title="">format</var>, if any, and
  must return the empty string otherwise. If <var title="">format</var> is the value "<code title="">Text</code>",
  then it must be treated as "<code title="">text/plain</code>". If
  the <var title="">format</var> is "<code title="">URL</code>", then
  the data associated with the "<code title="">text/uri-list</code>"
  format must be parsed as appropriate for <code title="">text/uri-list</code> data, and the first URL from the list
  must be returned. If there is no data with that format, or if there
  is but it has no URLs, then the method must return the empty
  string. <a href=#refsRFC2483>[RFC2483]</a></p>

  <p>The <dfn id=dom-datatransfer-types title=dom-DataTransfer-types><code>types</code></dfn>
  attribute must return a live <code>DOMStringList</code> that
  contains the list of formats that are stored in the
  <code><a href=#datatransfer>DataTransfer</a></code> object.</p>

  <p>The <dfn id=dom-datatransfer-setdragimage title=dom-DataTransfer-setDragImage><code>setDragImage(<var title="">element</var>, <var title="">x</var>, <var title="">y</var>)</code></dfn> method sets which element to use <a href=#base-dnd-feedback>to generate the drag feedback</a>. The
  <var title="">element</var> argument can be any
  <code>Element</code>; if it is an <code><a href=#the-img-element>img</a></code> element, then the
  user agent should use the element's image (at its intrinsic size) to
  generate the feedback, otherwise the user agent should base the
  feedback on the given element (but the exact mechanism for doing so
  is not specified).</p>

  <p>The <dfn id=dom-datatransfer-addelement title=dom-DataTransfer-addElement><code>addElement(<var title="">element</var>)</code></dfn> method is an alternative way of
  specifying how the user agent is to <a href=#base-dnd-feedback>render the drag feedback</a>. It adds an
  element to the <code><a href=#datatransfer>DataTransfer</a></code> object.</p>

  <p class=note>The difference between <code title=dom-DataTransfer-setDragImage><a href=#dom-datatransfer-setdragimage>setDragImage()</a></code> and
  <code title=dom-DataTransfer-addElement><a href=#dom-datatransfer-addelement>addElement()</a></code> is
  that the latter automatically generates the image based on the
  current rendering of the elements added, whereas the former uses the
  exact specified image.</p>


  <h4 id=events-fired-during-a-drag-and-drop-action><span class=secno>6.8.3 </span>Events fired during a drag-and-drop action</h4>

  <p>The following events are involved in the drag-and-drop
  model. Whenever the processing model described below causes one of
  these events to be fired, the event fired must use the
  <code><a href=#dragevent>DragEvent</a></code> interface defined above, must have the
  bubbling and cancelable behaviors given in the table below, and must
  have the context information set up as described after the table,
  with the <code title=dom-UIEvent-view>view</code> attribute set to
  the view with which the user interacted to trigger the drag-and-drop
  event, the <code title=dom-UIEvent-detail>detail</code> attribute
  set to zero, the mouse and key attributes set according to the state
  of the input devices as they would be for user interaction events,
  and the <code title="">relatedTarget</code> attribute set to
  null.</p>

  <table><thead><tr><th> Event Name </th>
     <th> Target </th>
     <th> Bubbles? </th>
     <th> Cancelable? </th>
     <th> <code title=dom-DataTransfer-addElement><a href=#dom-datatransfer-addelement>dataTransfer</a></code> </th>
     <th> <code title=dom-DataTransfer-effectAllowed><a href=#dom-datatransfer-effectallowed>effectAllowed</a></code> </th>
     <th> <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code> </th>
     <th> Default Action </th>
    <tbody><tr><td><dfn id=event-dragstart title=event-dragstart><code>dragstart</code></dfn></td>
     <td><a href=#source-node>Source node</a></td>
     <td>&#10003; Bubbles</td>
     <td>&#10003; Cancelable</td>
     <td>Contains <a href=#source-node>source node</a> unless a selection is being dragged, in which case it is empty</td>
     <td><code title="">uninitialized</code></td>
     <td><code title="">none</code></td>
     <td>Initiate the drag-and-drop operation</td>
    <tr><td><dfn id=event-drag title=event-drag><code>drag</code></dfn></td>
     <td><a href=#source-node>Source node</a></td>
     <td>&#10003; Bubbles</td>
     <td>&#10003; Cancelable</td>
     <td>Empty</td>
     <td><a href=#effectAllowed-initialization>Same as last event</a></td>
     <td><code title="">none</code></td>
     <td>Continue the drag-and-drop operation</td>
    <tr><td><dfn id=event-dragenter title=event-dragenter><code>dragenter</code></dfn></td>
     <td><a href=#immediate-user-selection>Immediate user selection</a> or <a href=#the-body-element-0>the body element</a></td>
     <td>&#10003; Bubbles</td>
     <td>&#10003; Cancelable</td>
     <td>Empty</td>
     <td><a href=#effectAllowed-initialization>Same as last event</a></td>
     <td><a href=#dropEffect-initialization>Based on <code>effectAllowed</code> value</a></td>
     <td>Reject <a href=#immediate-user-selection>immediate user selection</a> as potential <a href=#current-target-element title="current target element">target element</a></td>
    <tr><td><dfn id=event-dragleave title=event-dragleave><code>dragleave</code></dfn></td>
     <td><a href=#current-target-element title="current target element">Previous target element</a></td>
     <td>&#10003; Bubbles</td>
     <td>&mdash;</td>
     <td>Empty</td>
     <td><a href=#effectAllowed-initialization>Same as last event</a></td>
     <td><code title="">none</code></td>
     <td>None</td>
    <tr><td><dfn id=event-dragover title=event-dragover><code>dragover</code></dfn></td>
     <td><a href=#current-target-element>Current target element</a></td>
     <td>&#10003; Bubbles</td>
     <td>&#10003; Cancelable</td>
     <td>Empty</td>
     <td><a href=#effectAllowed-initialization>Same as last event</a></td>
     <td><a href=#dropEffect-initialization>Based on <code>effectAllowed</code> value</a></td>
     <td>Reset the <a href=#current-drag-operation>current drag operation</a> to "none"</td>
    <tr><td><dfn id=event-drop title=event-drop><code>drop</code></dfn></td>
     <td><a href=#current-target-element>Current target element</a></td>
     <td>&#10003; Bubbles</td>
     <td>&#10003; Cancelable</td>
     <td><code>getData()</code> returns data set in <code title=dom-dragstart>dragstart</code> event</td>
     <td><a href=#effectAllowed-initialization>Same as last event</a></td>
     <td><a href=#current-drag-operation>Current drag operation</a></td>
     <td>Varies</td>
    <tr><td><dfn id=event-dragend title=event-dragend><code>dragend</code></dfn></td>
     <td><a href=#source-node>Source node</a></td>
     <td>&#10003; Bubbles</td>
     <td>&mdash;</td>
     <td>Empty</td>
     <td><a href=#effectAllowed-initialization>Same as last event</a></td>
     <td><a href=#current-drag-operation>Current drag operation</a></td>
     <td>Varies</td>
    </table><p>The <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code>
  object's contents are empty except for <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> events and <code title=event-drop><a href=#event-drop>drop</a></code> events, for which the contents are
  set as described in the processing model, below.</p>

  <p id=effectAllowed-initialization>The <code title=dom-DataTransfer-effectAllowed><a href=#dom-datatransfer-effectallowed>effectAllowed</a></code>
  attribute must be set to "<code title="">uninitialized</code>" for
  <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> events, and to
  whatever value the field had after the last drag-and-drop event was
  fired for all other events (only counting events fired by the user
  agent for the purposes of the drag-and-drop model described
  below).</p>

  <p id=dropEffect-initialization>The <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code> attribute must
  be set to "<code title="">none</code>" for <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code>, <code title=event-drag><a href=#event-drag>drag</a></code>, and <code title=event-dragleave><a href=#event-dragleave>dragleave</a></code> events (except when stated
  otherwise in the algorithms given in the sections below), to the
  value corresponding to the <a href=#current-drag-operation>current drag operation</a> for
  <code title=event-drop><a href=#event-drop>drop</a></code> and <code title=event-dragend><a href=#event-dragend>dragend</a></code> events, and to a value based on
  the <code title=dom-DataTransfer-effectAllowed><a href=#dom-datatransfer-effectallowed>effectAllowed</a></code>
  attribute's value and to the drag-and-drop source, as given by the
  following table, for the remaining events (<code title=event-dragenter><a href=#event-dragenter>dragenter</a></code> and <code title=event-dragover><a href=#event-dragover>dragover</a></code>):</p>

  <table><thead><tr><th><code title=dom-DataTransfer-effectAllowed><a href=#dom-datatransfer-effectallowed>effectAllowed</a></code></th>
     <th><code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code></th>
    </thead><tr><td><code title="">none</code></td>
    <td><code title="">none</code></td>
   <tr><td><code title="">copy</code>, <code title="">copyLink</code>, <code title="">copyMove</code>, <code title="">all</code></td>
    <td><code title="">copy</code></td>
   <tr><td><code title="">link</code>, <code title="">linkMove</code></td>
    <td><code title="">link</code></td>
   <tr><td><code title="">move</code></td>
    <td><code title="">move</code></td>
   <tr><td><code title="">uninitialized</code> when what is being dragged is a selection from a text field</td>
    <td><code title="">move</code></td>
   <tr><td><code title="">uninitialized</code> when what is being dragged is a selection</td>
    <td><code title="">copy</code></td>
   <tr><td><code title="">uninitialized</code> when what is being dragged is an <code><a href=#the-a-element>a</a></code> element with an <code>href</code> attribute</td>
    <td><code title="">link</code></td>
   <tr><td>Any other case</td>
    <td><code title="">copy</code></td>
   </table><h4 id=drag-and-drop-processing-model><span class=secno>6.8.4 </span>Drag-and-drop processing model</h4>

  <p>When the user attempts to begin a drag operation, the user agent
  must first determine what is being dragged. If the drag operation
  was invoked on a selection, then it is the selection that is being
  dragged. Otherwise, it is the first element, going up the ancestor
  chain, starting at the node that the user tried to drag, that has
  the DOM attribute <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> set
  to true. If there is no such element, then nothing is being dragged,
  the drag-and-drop operation is never started, and the user agent
  must not continue with this algorithm.</p>

  <p class=note><code><a href=#the-img-element>img</a></code> elements and <code><a href=#the-a-element>a</a></code>
  elements with an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code>
  attribute have their <code title=dom-draggable><a href=#dom-draggable>draggable</a></code>
  attribute set to true by default.</p>

  <p>If the user agent determines that something can be dragged, a
  <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> event must then be
  fired.</p>

  <p>If it is a selection that is being dragged, then this event must
  be fired on the node that the user started the drag on (typically
  the text node that the user originally clicked). If the user did not
  specify a particular node, for example if the user just told the
  user agent to begin a drag of "the selection", then the event must
  be fired on the deepest node that is a common ancestor of all parts
  of the selection.</p>

  <p class=XXX>We should look into how browsers do other types
  (e.g. Firefox apparently also adds text/html for internal drag and
  drop of a selection).</p>

  <p>If it is not a selection that is being dragged, then the event
  must be fired on the element that is being dragged.</p>

  <p>The node on which the event is fired is the <dfn id=source-node>source
  node</dfn>. Multiple events are fired on this node during the course
  of the drag-and-drop operation.</p>

  <p>If it is a selection that is being dragged, the <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code> member of the event
  must be created with no nodes. Otherwise, it must be created
  containing just the <a href=#source-node>source node</a>. Script can use the
  <code title=dom-DataTransfer-addElement><a href=#dom-datatransfer-addelement>addElement()</a></code> method
  to add further elements to the list of what is being dragged.</p>

  <p>If it is a selection that is being dragged, the <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code> member of the
  event must have the text of the selection added to it as the data
  associated with the <code title="">text/plain</code>
  format. Otherwise, if it is an <code><a href=#the-img-element>img</a></code> element being
  dragged, then the value of the element's <code title=dom-img-src><a href=#dom-img-src>src</a></code> DOM attribute must be added,
  associated with the <code title="">text/uri-list</code>
  format. Otherwise, if it is an <code><a href=#the-a-element>a</a></code> element being dragged,
  then the value of the element's <code title=dom-a-href><a href=#dom-a-href>href</a></code>
  DOM attribute must be added, associated with the <code title="">text/uri-list</code> format. Otherwise, no data is added to
  the object by the user agent.</p>

  <p>If the event is canceled, then the drag-and-drop operation must
  not occur; the user agent must not continue with this algorithm.</p>

  <p>If it is not canceled, then the drag-and-drop operation must be
  initiated.</p>

  <p class=note>Since events with no event handlers registered are,
  almost by definition, never canceled, drag-and-drop is always
  available to the user if the author does not specifically prevent
  it.</p>

  <p id=base-dnd-feedback>The drag-and-drop feedback must be
  generated from the first of the following sources that is
  available:</p>

  <ol><li>The element specified in the last call to the <code title=dom-DataTransfer-setDragImage><a href=#dom-datatransfer-setdragimage>setDragImage()</a></code> method
   of the <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code>
   object of the <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> event,
   if the method was called. In visual media, if this is used, the
   <var title="">x</var> and <var title="">y</var> arguments that were
   passed to that method should be used as hints for where to put the
   cursor relative to the resulting image. The values are expressed as
   distances in CSS pixels from the left side and from the top side of
   the image respectively. <a href=#refsCSS21>[CSS21]</a></li> <!--
   CSS3 UNITS would be better -->

   <li>The elements that were added to the <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code> object, both
   before the event was fired, and during the handling of the event
   using the <code title=dom-DataTransfer-addElement><a href=#dom-datatransfer-addelement>addElement()</a></code>
   method, if any such elements were indeed added.</li>

   <li>The selection that the user is dragging.</li>

  </ol><!-- XXX xref also link to the section that explains how to
  render drag-and-drop, :drag, :drop, etc. Safari has a pseudo-class
  that it uses to render an element off-screen to use as the drag
  feedback. --><p>The user agent must take a note of <a href=#dom-datatransfer-setdata title=dom-DataTransfer-setData>the data that was placed</a> in
  the <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code>
  object. This data will be made available again when the <code title=event-drop><a href=#event-drop>drop</a></code> event is fired.</p>

  <p>From this point until the end of the drag-and-drop operation,
  device input events (e.g. mouse and keyboard events) must be
  suppressed. In addition, the user agent must track all DOM changes
  made during the drag-and-drop operation, and add them to its <a href=#undo>undo history</a> as one atomic operation once the
  drag-and-drop operation has ended.</p>

  <p>During the drag operation, the element directly indicated by the
  user as the drop target is called the <dfn id=immediate-user-selection>immediate user
  selection</dfn>. (Only elements can be selected by the user; other
  nodes must not be made available as drop targets.)

  However, the <a href=#immediate-user-selection>immediate user selection</a> is not
  necessarily the <dfn id=current-target-element>current target element</dfn>, which is the
  element currently selected for the drop part of the drag-and-drop
  operation.

  The <a href=#immediate-user-selection>immediate user selection</a> changes as the user
  selects different elements (either by pointing at them with a
  pointing device, or by selecting them in some other way). The
  <a href=#current-target-element>current target element</a> changes when the <a href=#immediate-user-selection>immediate
  user selection</a> changes, based on the results of event
  handlers in the document, as described below.</p>

  <p>Both the <a href=#current-target-element>current target element</a> and the
  <a href=#immediate-user-selection>immediate user selection</a> can be null, which means no
  target element is selected. They can also both be elements in other
  (DOM-based) documents, or other (non-Web) programs altogether. (For
  example, a user could drag text to a word-processor.) The
  <a href=#current-target-element>current target element</a> is initially null.</p>

  <p>In addition, there is also a <dfn id=current-drag-operation>current drag operation</dfn>,
  which can take on the values "none", "copy", "link", and "move".
  Initially it has the value "none". It is updated by the user agent
  as described in the steps below.</p>

  <p>User agents must, every 350ms (&plusmn;200ms), perform the
  following steps in sequence. (If the user agent is still performing
  the previous iteration of the sequence when the next iteration
  becomes due, the user agent must not execute the overdue iteration,
  effectively "skipping missed frames" of the drag-and-drop
  operation.)</p>

  <ol><li>

    <p>First, the user agent must fire a <code title=event-drag><a href=#event-drag>drag</a></code> event at the <a href=#source-node>source
    node</a>. If this event is canceled, the user agent must set
    the <a href=#current-drag-operation>current drag operation</a> to none (no drag
    operation).</p>

   </li>

   <li>

    <p>Next, if the <code title=event-drag><a href=#event-drag>drag</a></code> event was not
    canceled and the user has not ended the drag-and-drop operation,
    the user agent must check the state of the drag-and-drop
    operation, as follows:</p>

    <ol><li>

      <p>First, if the user is indicating a different <a href=#immediate-user-selection>immediate
      user selection</a> than during the last iteration (or if this
      is the first iteration), and if this <a href=#immediate-user-selection>immediate user
      selection</a> is not the same as the <a href=#current-target-element>current target
      element</a>, then the <a href=#current-target-element>current target element</a> must
      be updated, as follows:</p>

      <ol><li>

        <p>If the new <a href=#immediate-user-selection>immediate user selection</a> is null, or
        is in a non-DOM document or application, then set the
        <a href=#current-target-element>current target element</a> to the same value.</p>

       <li>

        <p>Otherwise, the user agent must fire a <code title=event-dragenter><a href=#event-dragenter>dragenter</a></code> event at the
        <a href=#immediate-user-selection>immediate user selection</a>.</p>

       </li>

       <li>

        <p>If the event is canceled, then the <a href=#current-target-element>current target
        element</a> must be set to the <a href=#immediate-user-selection>immediate user
        selection</a>.</p>

       </li>

       <li>

        <p>Otherwise, if the <a href=#current-target-element>current target element</a> is
        not <a href=#the-body-element-0>the body element</a>, the user agent must fire a
        <code title=event-dragenter><a href=#event-dragenter>dragenter</a></code> event at
        <a href=#the-body-element-0>the body element</a>, and the <a href=#current-target-element>current target
        element</a> must be set to <a href=#the-body-element-0>the body element</a>,
        regardless of whether that event was canceled or not. (If
        <a href=#the-body-element-0>the body element</a> is null, then the <a href=#current-target-element>current
        target element</a> would be set to null too in this case,
        it wouldn't be set to the <code>Document</code> object.)</p>

       </li>

      </ol></li>

     <li>

      <p>If the previous step caused the <a href=#current-target-element>current target
      element</a> to change, and if the previous target element was
      not null or a part of a non-DOM document, the user agent must fire
      a <code title=event-dragleave><a href=#event-dragleave>dragleave</a></code> event at the
      previous target element.</p>

     </li>

     <li>

      <p>If the <a href=#current-target-element>current target element</a> is a DOM element,
      the user agent must fire a <code title=event-dragover><a href=#event-dragover>dragover</a></code> event at this <a href=#current-target-element>current
      target element</a>.</p>

      <p>If the <code title=event-dragover><a href=#event-dragover>dragover</a></code> event is
      not canceled, the <a href=#current-drag-operation>current drag operation</a> must be
      reset to "none".</p>

      <p>Otherwise, the <a href=#current-drag-operation>current drag operation</a> must be
      set based on the values the <code title=dom-DataTransfer-effectAllowed><a href=#dom-datatransfer-effectallowed>effectAllowed</a></code> and
      <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code>
      attributes of the <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code> object
      had after the event was handled, as per the following table:</p>

      <table><thead><tr><th><code title=dom-DataTransfer-effectAllowed><a href=#dom-datatransfer-effectallowed>effectAllowed</a></code></th>
         <th><code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code></th>
         <th>Drag operation</th>
        </thead><tr><td><code title="">uninitialized</code>, <code title="">copy</code>, <code title="">copyLink</code>, <code title="">copyMove</code>, or <code title="">all</code></td>
        <td><code title="">copy</code></td>
        <td>"copy"</td>
       <tr><td><code title="">uninitialized</code>, <code title="">link</code>, <code title="">copyLink</code>, <code title="">linkMove</code>, or <code title="">all</code></td>
        <td><code title="">link</code></td>
        <td>"link"</td>
       <tr><td><code title="">uninitialized</code>, <code title="">move</code>, <code title="">copyMove</code>, <code title="">linkMove</code>, or <code title="">all</code></td>
        <td><code title="">move</code></td>
        <td>"move"</td>
       <tr><td colspan=2>Any other case</td>
        <td>"none"</td>
       </table><p>Then, regardless of whether the <code title=event-dragover><a href=#event-dragover>dragover</a></code> event was canceled or
      not, the drag feedback (e.g. the mouse cursor) must be updated
      to match the <a href=#current-drag-operation>current drag operation</a>, as
      follows:</p>

      <table><thead><tr><th>Drag operation</th>
         <th>Feedback</th>
        </thead><tr><td>"copy"</td>
        <td>Data will be copied if dropped here.</td>
       <tr><td>"link"</td>
        <td>Data will be linked if dropped here.</td>
       <tr><td>"move"</td>
        <td>Data will be moved if dropped here.</td>
       <tr><td>"none"</td>
        <td>No operation allowed, dropping here will cancel the drag-and-drop operation.</td>
       </table></li>

     <li>

      <p>Otherwise, if the <a href=#current-target-element>current target element</a> is not a
      DOM element, the user agent must use platform-specific mechanisms
      to determine what drag operation is being performed (none, copy,
      link, or move). This sets the <em>current drag operation</em>.</p>

     </li>

    </ol></li>

   <li>

    <p>Otherwise, if the user ended the drag-and-drop operation (e.g.
    by releasing the mouse button in a mouse-driven drag-and-drop
    interface), or if the <code title=event-drag><a href=#event-drag>drag</a></code> event
    was canceled, then this will be the last iteration. The user agent
    must execute the following steps, then stop looping.</p>

    <ol><li>

      <p>If the <a href=#current-drag-operation>current drag operation</a> is none (no drag
      operation), or, if the user ended the drag-and-drop operation by
      canceling it (e.g. by hitting the <kbd>Escape</kbd> key), or if
      the <a href=#current-target-element>current target element</a> is null, then the drag
      operation failed. If the <a href=#current-target-element>current target element</a> is
      a DOM element, the user agent must fire a <code title=event-dragleave><a href=#event-dragleave>dragleave</a></code> event at it; otherwise,
      if it is not null, it must use platform-specific conventions for
      drag cancellation.</p>

     </li>

     <li>

      <p>Otherwise, the drag operation was as success. If the
      <a href=#current-target-element>current target element</a> is a DOM element, the user
      agent must fire a <code title=event-drop><a href=#event-drop>drop</a></code> event at
      it; otherwise, it must use platform-specific conventions for
      indicating a drop.</p>

      <p>When the target is a DOM element, the <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code> attribute
      of the event's <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code> object
      must be given the value representing the <a href=#current-drag-operation>current drag
      operation</a> (<code title="">copy</code>, <code title="">link</code>, or <code title="">move</code>), and the
      object must be set up so that the <code title=dom-DataTransfer-getData><a href=#dom-datatransfer-getdata>getData()</a></code> method will
      return the data that was added during the <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> event.</p>

      <p>If the event is canceled, the <a href=#current-drag-operation>current drag
      operation</a> must be set to the value of the <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code> attribute
      of the event's <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code> object as
      it stood after the event was handled.</p>

      <p>Otherwise, the event is not canceled, and the user agent must
      perform the event's default action, which depends on the exact
      target as follows:</p>

      <dl class=switch><dt>If the <a href=#current-target-element>current target element</a> is a text field
       (e.g. <code><a href=#the-textarea-element>textarea</a></code>, or an <code><a href=#the-input-element>input</a></code> element
       whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in
       the <a href=#text-state-and-search-state title=attr-input-type-text>Text</a> state)</dt>

       <dd>The user agent must insert the data associated with the
       <code>text/plain</code> format, if any, into the text field in
       a manner consistent with platform-specific conventions
       (e.g. inserting it at the current mouse cursor position, or
       inserting it at the end of the field).</dd>

       <dt>Otherwise</dt>

       <dd>Reset the <a href=#current-drag-operation>current drag operation</a> to
       "none".</dd>

      </dl></li>

     <li>

      <p>Finally, the user agent must fire a <code title=event-dragend><a href=#event-dragend>dragend</a></code> event at the <a href=#source-node>source
      node</a>, with the <code title=dom-DataTransfer-dropEffect><a href=#dom-datatransfer-dropeffect>dropEffect</a></code> attribute
      of the event's <code title=dom-DragEvent-dataTransfer><a href=#dom-dragevent-datatransfer>dataTransfer</a></code> object
      being set to the value corresponding to the <a href=#current-drag-operation>current drag
      operation</a>.</p>

      <p class=note>The <a href=#current-drag-operation>current drag operation</a> can
      change during the processing of the <code title=event-drop><a href=#event-drop>drop</a></code> event, if one was fired.</p>

      <p>The event is not cancelable. After the event has been
      handled, the user agent must act as follows:</p>

      <dl class=switch><dt>If the <a href=#current-target-element>current target element</a> is a text field
       (e.g. <code><a href=#the-textarea-element>textarea</a></code>, or an <code><a href=#the-input-element>input</a></code> element
       whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in
       the <a href=#text-state-and-search-state title=attr-input-type-text>Text</a> state), and
       a <code title=event-drop><a href=#event-drop>drop</a></code> event was fired in the
       previous step, and the <a href=#current-drag-operation>current drag operation</a> is
       "move", and the source of the drag-and-drop operation is a
       selection in the DOM</dt>

       <dd>The user agent should delete the range representing the
       dragged selection from the DOM.</dd>

       <dt>If the <a href=#current-target-element>current target element</a> is a text field
       (e.g. <code><a href=#the-textarea-element>textarea</a></code>, or an <code><a href=#the-input-element>input</a></code> element
       whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in
       the <a href=#text-state-and-search-state title=attr-input-type-text>Text</a> state), and
       a <code title=event-drop><a href=#event-drop>drop</a></code> event was fired in the
       previous step, and the <a href=#current-drag-operation>current drag operation</a> is
       "move", and the source of the drag-and-drop operation is a
       selection in a text field</dt>

       <dd>The user agent should delete the dragged selection from the
       relevant text field.</dd>

       <dt>Otherwise</dt>

       <dd>The event has no default action.</dd>

      </dl></li>

    </ol></li>

  </ol><h5 id=when-the-drag-and-drop-operation-starts-or-ends-in-another-document><span class=secno>6.8.4.1 </span>When the drag-and-drop operation starts or ends in another
  document</h5>

  <p>The model described above is independent of which
  <code>Document</code> object the nodes involved are from; the events
  must be fired as described above and the rest of the processing
  model must be followed as described above, irrespective of how many
  documents are involved in the operation.</p>

  <!-- should we mention that you shouldn't include the view from the
  source in the events to the target, or is that obvious enough from
  the requirements in the event section above? -->


  <h5 id=when-the-drag-and-drop-operation-starts-or-ends-in-another-application><span class=secno>6.8.4.2 </span>When the drag-and-drop operation starts or ends in another
  application</h5>

  <p>If the drag is initiated in another application, the <a href=#source-node>source
  node</a> is not a DOM node, and the user agent must use
  platform-specific conventions instead when the requirements above
  involve the source node. User agents in this situation must act as
  if the dragged data had been added to the <code><a href=#datatransfer>DataTransfer</a></code>
  object when the drag started, even though no <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> event was actually fired;
  user agents must similarly use platform-specific conventions when
  deciding on what drag feedback to use.</p>

  <p>If a drag is started in a document but ends in another
  application, then the user agent must instead replace the parts of
  the processing model relating to handling the <em>target</em>
  according to platform-specific conventions.</p>

  <p>In any case, scripts running in the context of the document must
  not be able to distinguish the case of a drag-and-drop operation
  being started or ended in another application from the case of a
  drag-and-drop operation being started or ended in another document
  from another domain.</p>



  <h4 id=the-draggable-attribute><span class=secno>6.8.5 </span>The <dfn title=attr-draggable><code>draggable</code></dfn> attribute</h4>

  <p>All elements may have the <code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code> content attribute set. The
  <code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code> attribute is an
  <a href=#enumerated-attribute>enumerated attribute</a>. It has three states. The first
  state is <i>true</i> and it has the keyword <code title="">true</code>. The second state is <i>false</i> and it has
  the keyword <code title="">false</code>. The third state is
  <i>auto</i>; it has no keywords but it is the <i>missing value
  default</i>.</p>

  <p>The <dfn id=dom-draggable title=dom-draggable><code>draggable</code></dfn> DOM
  attribute, whose value depends on the content attribute's in the way
  described below, controls whether or not the element is
  draggable. Generally, only text selections are draggable, but
  elements whose <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> DOM
  attribute is true become draggable as well.</p>

  <p>If an element's <code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code>
  content attribute has the state <i>true</i>, the <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> DOM attribute must return
  true.</p>

  <p>Otherwise, if the element's <code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code> content attribute has the
  state <i>false</i>, the <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> DOM attribute must return
  false.</p>

  <p>Otherwise, the element's <code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code> content attribute has the
  state <i>auto</i>. If the element is an <code><a href=#the-img-element>img</a></code> element,
  or, if the element is an <code><a href=#the-a-element>a</a></code> element with an <code title=attr-hyperlink-href><a href=#attr-hyperlink-href>href</a></code> content attribute, the <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> DOM attribute must return
  true.</p>

  <p>Otherwise, the <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> DOM
  must return false.</p>

  <p>If the <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> DOM attribute
  is set to the value false, the <code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code> content attribute must be
  set to the literal value <code title="">false</code>. If the <code title=dom-draggable><a href=#dom-draggable>draggable</a></code> DOM attribute is set to the
  value true, the <code title=attr-draggable><a href=#the-draggable-attribute>draggable</a></code>
  content attribute must be set to the literal value <code title="">true</code>.</p>



  <h4 id=copy-and-paste><span class=secno>6.8.6 </span>Copy and paste</h4>

  <p>Copy-and-paste is a form of drag-and-drop: the "copy" part is
  equivalent to dragging content to another application (the
  "clipboard"), and the "paste" part is equivalent to dragging content
  <em>from</em> another application.</p>

  <p>Select-and-paste (a model used by mouse operations in the X
  Window System) is equivalent to a drag-and-drop operation where the
  source is the selection.</p>


  <h5 id=copy-to-clipboard><span class=secno>6.8.6.1 </span>Copy to clipboard</h5>

  <p>When the user invokes a copy operation, the user agent must act
  as if the user had invoked a drag on the current selection. If the
  drag-and-drop operation initiates, then the user agent must act as
  if the user had indicated (as the <a href=#immediate-user-selection>immediate user
  selection</a>) a hypothetical application representing the
  clipboard. Then, the user agent must act as if the user had ended
  the drag-and-drop operation without canceling it. If the
  drag-and-drop operation didn't get canceled, the user agent should
  then follow the relevant platform-specific conventions for copy
  operations (e.g. updating the clipboard).</p>


  <h5 id=cut-to-clipboard><span class=secno>6.8.6.2 </span>Cut to clipboard</h5>

  <p>When the user invokes a cut operation, the user agent must act as
  if the user had invoked a copy operation (see the previous section),
  followed, if the copy was completed successfully, by <a href=#contenteditable-delete>a selection delete operation</a>.</p>


  <h5 id=paste-from-clipboard><span class=secno>6.8.6.3 </span>Paste from clipboard</h5>

  <p>When the user invokes a clipboard paste operation, the user agent
  must act as if the user had invoked a drag on a hypothetical
  application representing the clipboard, setting the data associated
  with the drag as the content on the clipboard (in whatever formats
  are available).</p>

  <p>Then, the user agent must act as if the user had indicated (as
  the <a href=#immediate-user-selection>immediate user selection</a>) the element with the
  keyboard focus, and then ended the drag-and-drop operation without
  canceling it.</p>


  <h5 id=paste-from-selection><span class=secno>6.8.6.4 </span>Paste from selection</h5>

  <p>When the user invokes a selection paste operation, the user agent
  must act as if the user had invoked a drag on the current selection,
  then indicated (as the <a href=#immediate-user-selection>immediate user selection</a>) the
  element with the keyboard focus, and then ended the drag-and-drop
  operation without canceling it.</p>



  <h4 id=security-risks-in-the-drag-and-drop-model><span class=secno>6.8.7 </span>Security risks in the drag-and-drop model</h4>

  <p>User agents must not make the data added to the
  <code><a href=#datatransfer>DataTransfer</a></code> object during the <code title=event-dragstart><a href=#event-dragstart>dragstart</a></code> event available to scripts
  until the <code title=event-drop><a href=#event-drop>drop</a></code> event, because
  otherwise, if a user were to drag sensitive information from one
  document to a second document, crossing a hostile third document in
  the process, the hostile document could intercept the data.</p>

  <p>For the same reason, user agents must consider a drop to be
  successful only if the user specifically ended the drag operation
  &mdash; if any scripts end the drag operation, it must be considered
  unsuccessful (canceled) and the <code title=event-drop><a href=#event-drop>drop</a></code>
  event must not be fired.</p>

  <p>User agents should take care to not start drag-and-drop
  operations in response to script actions. For example, in a
  mouse-and-window environment, if a script moves a window while the
  user has his mouse button depressed, the UA would not consider that
  to start a drag. This is important because otherwise UAs could cause
  data to be dragged from sensitive sources and dropped into hostile
  documents without the user's consent.</p>





  <h3 id=undo><span class=secno>6.9 </span><dfn>Undo history</dfn></h3>

  <p class=XXX>There has got to be a better way of doing this, surely.</p>

  <p>The user agent must associate an <dfn id=undo-transaction-history>undo transaction
  history</dfn> with each <code><a href=#htmldocument>HTMLDocument</a></code> object.</p>

  <p>The <a href=#undo-transaction-history>undo transaction history</a> is a list of
  entries. The entries are of two type: <a href=#dom-changes>DOM changes</a> and
  <a href=#undo-object title="undo object">undo objects</a>.</p>

  <p>Each <dfn id=dom-changes>DOM changes</dfn> entry in the <a href=#undo-transaction-history>undo transaction
  history</a> consists of batches of one or more of the
  following:</p>

  <ul><li>Changes to the <a href=#content-attributes>content attributes</a> of an
   <code>Element</code> node.</li>

   <li>Changes to the <a href=#dom-attributes>DOM attributes</a> of a
   <code>Node</code>.</li> <!-- XXX uh, these change on their own, so
   clearly this isn't going to fly. Which DOM attributes, exactly? -->

   <li>Changes to the DOM hierarchy of nodes that are descendants of
   the <code><a href=#htmldocument>HTMLDocument</a></code> object (<code>parentNode</code>,
   <code>childNodes</code>).</li>

  </ul><p><dfn id=undo-object>Undo object</dfn> entries consist of objects representing
  state that scripts running in the document are managing. For
  example, a Web mail application could use an <a href=#undo-object>undo
  object</a> to keep track of the fact that a user has moved an
  e-mail to a particular folder, so that the user can undo the
  action and have the e-mail return to its former location.</p>

  <p>Broadly speaking, <a href=#dom-changes>DOM changes</a> entries are handled by
  the UA in response to user edits of form controls and <span>editing
  hosts</span> on the page, and <a href=#undo-object>undo object</a> entries are
  handled by script in response to higher-level user actions (such as
  interactions with server-side state, or in the implementation of a
  drawing tool).</p>


  <h4 id=the-undomanager-interface><span class=secno>6.9.1 </span>The <code><a href=#undomanager>UndoManager</a></code> interface</h4>

  <div class=XXX>

   <p>This API sucks. Seriously. It's a terrible API. Really bad. I
   hate it. Here are the requirements:</p>

   <ul><li>Has to cope with cases where the server has undo state already
    when the page is loaded, that can be stuffed into the undo buffer
    onload.</li>

    <li>Has to support undo/redo.</li>

    <li>Has to cope with the "undo" action being "contact the server
    and tell it to undo", rather than it being the opposite of the
    "redo" action.</li>

    <li>Has to cope with some undo states expiring from the undo
    history (e.g. server can only remember one undelete action) but
    other states not expiring (e.g. client can undo arbitrary amounts
    of local edits).</li>

   </ul></div>

  <p>To manage <a href=#undo-object>undo object</a> entries in the <a href=#undo-transaction-history>undo
  transaction history</a>, the <code><a href=#undomanager>UndoManager</a></code>
  interface can be used:</p>

  <pre class=idl>interface <dfn id=undomanager>UndoManager</dfn> {
  readonly attribute unsigned long <a href=#dom-undomanager-length title=dom-UndoManager-length>length</a>;
  [IndexGetter] any <a href=#dom-undomanager-item title=dom-UndoManager-item>item</a>(in unsigned long index);
  readonly attribute unsigned long <a href=#dom-undomanager-position title=dom-UndoManager-position>position</a>;
  unsigned long <a href=#dom-undomanager-add title=dom-UndoManager-add>add</a>(in any data, in DOMString title);
  void <a href=#dom-undomanager-remove title=dom-UndoManager-remove>remove</a>(in unsigned long index);
  void <a href=#dom-undomanager-clearundo title=dom-UndoManager-clearUndo>clearUndo</a>();
  void <a href=#dom-undomanager-clearredo title=dom-UndoManager-clearRedo>clearRedo</a>();
};</pre>

  <p>The <dfn id=dom-undomanager title=dom-undoManager><code>undoManager</code></dfn>
  attribute of the <code><a href=#window>Window</a></code> interface must return the
  object implementing the <code><a href=#undomanager>UndoManager</a></code> interface for that
  <code><a href=#window>Window</a></code> object's associated
  <code><a href=#htmldocument>HTMLDocument</a></code> object.</p>

  <p><code><a href=#undomanager>UndoManager</a></code> objects represent their document's
  <a href=#undo-transaction-history>undo transaction history</a>. Only <a href=#undo-object>undo object</a>
  entries are visible with this API, but this does not mean that
  <a href=#dom-changes>DOM changes</a> entries are absent from the <a href=#undo-transaction-history>undo
  transaction history</a>.</p>

  <p>The <dfn id=dom-undomanager-length title=dom-UndoManager-length><code>length</code></dfn>
  attribute must return the number of <a href=#undo-object>undo object</a> entries
  in the <a href=#undo-transaction-history>undo transaction history</a>. This is the <var title=dom-UndoManager-length><a href=#dom-undomanager-length>length</a></var>.</p>

  <p>The object's <span>indices of the supported indexed
  properties</span> are the numbers in the range zero to <span><var title=dom-UndoManager-length><a href=#dom-undomanager-length>length</a></var>-1</span>, unless the
  <var title=dom-UndoManager-length><a href=#dom-undomanager-length>length</a></var> is zero, in which
  case there are no <span>supported indexed properties</span>.</p>

  <p>The <dfn id=dom-undomanager-item title=dom-UndoManager-item><code>item(<var title="">n</var>)</code></dfn> method must return the <var title="">n</var>th <a href=#undo-object>undo object</a> entry in the <a href=#undo-transaction-history>undo
  transaction history</a>.</p>

  <p>The <a href=#undo-transaction-history>undo transaction history</a> has a <dfn id=undo-position title="undo
  position">current position</dfn>. This is the position between two
  entries in the <a href=#undo-transaction-history>undo transaction history</a>'s list where
  the previous entry represents what needs to happen if the user
  invokes the "undo" command (the "undo" side, lower numbers), and the
  next entry represents what needs to happen if the user invokes the
  "redo" command (the "redo" side, higher numbers).</p>

  <p>The <dfn id=dom-undomanager-position title=dom-UndoManager-position><code>position</code></dfn>
  attribute must return the index of the <a href=#undo-object>undo object</a>
  entry nearest to the <a href=#undo-position>undo position</a>, on the "redo"
  side. If there are no <a href=#undo-object>undo object</a> entries on the "redo"
  side, then the attribute must return the same as the <code title=dom-UndoManager-length><a href=#dom-undomanager-length>length</a></code> attribute. If there are
  no <a href=#undo-object>undo object</a> entries on the "undo" side of the
  <a href=#undo-position>undo position</a>, the <code title=dom-UndoManager-position><a href=#dom-undomanager-position>position</a></code> attribute returns
  zero.</p>

  <p class=note>Since the <a href=#undo-transaction-history>undo transaction history</a>
  contains both <a href=#undo-object>undo object</a> entries and <a href=#dom-changes>DOM
  changes</a> entries, but the <code title=dom-UndoManager-position><a href=#dom-undomanager-position>position</a></code> attribute only
  returns indices relative to <a href=#undo-object>undo object</a> entries, it is
  possible for several "undo" or "redo" actions to be performed
  without the value of the <code title=dom-UndoManager-position><a href=#dom-undomanager-position>position</a></code> attribute
  changing.</p>

  <p>The <dfn id=dom-undomanager-add title=dom-UndoManager-add><code>add(<var title="">data</var>,
  <var title="">title</var>)</code></dfn> method's behavior depends on the
  current state. Normally, it must insert the <var title="">data</var> object
  passed as an argument into the <a href=#undo-transaction-history>undo transaction history</a>
  immediately before the <a href=#undo-position>undo position</a>, optionally
  remembering the given <var title="">title</var> to use in the UI. If the
  method is called <a href=#undo:-moving-back-in-the-undo-transaction-history title=do-undo>during an undo
  operation</a>, however, the object must instead be added
  immediately <em>after</em> the <a href=#undo-position>undo position</a>.</p>

  <p>If the method is called and there is neither <a href=#undo:-moving-back-in-the-undo-transaction-history title=do-undo>an undo operation in progress</a> nor <a href=#redo:-moving-forward-in-the-undo-transaction-history title=do-redo>a redo operation in progress</a> then any entries
  in the <a href=#undo-transaction-history>undo transaction history</a> after the <a href=#undo-position>undo
  position</a> must be removed (as if <code title=dom-UndoManager-clearRedo><a href=#dom-undomanager-clearredo>clearRedo()</a></code> had been
  called).</p>

  <p class=XXX>We could fire events when someone adds
  something to the undo history -- one event per undo object entry
  before the position (or after, during redo addition), allowing the
  script to decide if that entry should remain or not. Or
  something. Would make it potentially easier to expire server-held
  state when the server limitations come into play.</p>

  <!-- XXX note on expiring undo in case server can only do one level undo -->

  <p>The <dfn id=dom-undomanager-remove title=dom-UndoManager-remove><code>remove(<var title="">index</var>)</code></dfn> method must remove the <a href=#undo-object>undo
  object</a> entry with the specified <var title="">index</var>. If
  the index is less than zero or greater than or equal to <code title=dom-UndoManager-length><a href=#dom-undomanager-length>length</a></code> then the method must
  raise an <code><a href=#index_size_err>INDEX_SIZE_ERR</a></code> exception. <a href=#dom-changes>DOM
  changes</a> entries are unaffected by this method.</p>

  <p>The <dfn id=dom-undomanager-clearundo title=dom-UndoManager-clearUndo><code>clearUndo()</code></dfn>
  method must remove all entries in the <a href=#undo-transaction-history>undo transaction
  history</a> before the <a href=#undo-position>undo position</a>, be they
  <a href=#dom-changes>DOM changes</a> entries or <a href=#undo-object>undo object</a>
  entries.</p>

  <p>The <dfn id=dom-undomanager-clearredo title=dom-UndoManager-clearRedo><code>clearRedo()</code></dfn>
  method must remove all entries in the <a href=#undo-transaction-history>undo transaction
  history</a> after the <a href=#undo-position>undo position</a>, be they
  <a href=#dom-changes>DOM changes</a> entries or <a href=#undo-object>undo object</a>
  entries.</p>

  <p class=XXX>Another idea is to have a way for scripts to
  say "startBatchingDOMChangesForUndo()" and after that the changes to
  the DOM go in as if the user had done them.</p>


  <h4 id=undo:-moving-back-in-the-undo-transaction-history><span class=secno>6.9.2 </span><dfn title=do-undo>Undo: moving back in the undo transaction history</dfn></h4>

  <p>When the user invokes an undo operation, or when the <code title=dom-document-execCommand><a href=#execCommand>execCommand()</a></code> method is
  called with the <code title=command-undo><a href=#command-undo>undo</a></code> command, the
  user agent must perform an undo operation.</p>

  <p>If the <a href=#undo-position>undo position</a> is at the start of the
  <a href=#undo-transaction-history>undo transaction history</a>, then the user agent must do
  nothing.</p>

  <p>If the entry immediately before the <a href=#undo-position>undo position</a> is
  a <a href=#dom-changes>DOM changes</a> entry, then the user agent must remove
  that <a href=#dom-changes>DOM changes</a> entry, reverse the DOM changes that
  were listed in that entry, and, if the changes were reversed with no
  problems, add a new <a href=#dom-changes>DOM changes</a> entry (consisting of
  the opposite of those DOM changes) to the <a href=#undo-transaction-history>undo transaction
  history</a> on the other side of the <a href=#undo-position>undo
  position</a>.</p>

  <p>If the DOM changes cannot be undone (e.g. because the DOM state
  is no longer consistent with the changes represented in the entry),
  then the user agent must simply remove the <a href=#dom-changes>DOM changes</a>
  entry, without doing anything else.</p>

  <p>If the entry immediately before the <a href=#undo-position>undo position</a> is
  an <a href=#undo-object>undo object</a> entry, then the user agent must first
  remove that <a href=#undo-object>undo object</a> entry from the <a href=#undo-transaction-history>undo
  transaction history</a>, and then must fire an <code title=event-undo><a href=#event-undo>undo</a></code> event on the <code>Document</code>
  object, using the <a href=#undo-object>undo object</a> entry's associated undo
  object as the event's data.</p>

  <p>Any calls to <code title=dom-undoManager-add><a href=#dom-undomanager-add>add()</a></code> while
  the event is being handled will be used to populate the redo
  history, and will then be used if the user invokes the "redo"
  command to undo his undo.</p>


  <h4 id=redo:-moving-forward-in-the-undo-transaction-history><span class=secno>6.9.3 </span><dfn title=do-redo>Redo: moving forward in the undo transaction history</dfn></h4>

  <p>When the user invokes a redo operation, or when the <code title=dom-document-execCommand><a href=#execCommand>execCommand()</a></code> method is
  called with the <code title=command-redo><a href=#command-redo>redo</a></code> command, the
  user agent must perform a redo operation.</p>

  <p>This is mostly the opposite of an <a href=#undo:-moving-back-in-the-undo-transaction-history title=do-undo>undo
  operation</a>, but the full definition is included here for
  completeness.</p>

  <p>If the <a href=#undo-position>undo position</a> is at the end of the <a href=#undo-transaction-history>undo
  transaction history</a>, then the user agent must do nothing.</p>

  <p>If the entry immediately after the <a href=#undo-position>undo position</a> is
  a <a href=#dom-changes>DOM changes</a> entry, then the user agent must remove
  that <a href=#dom-changes>DOM changes</a> entry, reverse the DOM changes that
  were listed in that entry, and, if the changes were reversed with no
  problems, add a new <a href=#dom-changes>DOM changes</a> entry (consisting of
  the opposite of those DOM changes) to the <a href=#undo-transaction-history>undo transaction
  history</a> on the other side of the <a href=#undo-position>undo
  position</a>.</p>

  <p>If the DOM changes cannot be redone (e.g. because the DOM state
  is no longer consistent with the changes represented in the entry),
  then the user agent must simply remove the <a href=#dom-changes>DOM changes</a>
  entry, without doing anything else.</p>

  <p>If the entry immediately after the <a href=#undo-position>undo position</a> is
  an <a href=#undo-object>undo object</a> entry, then the user agent must first
  remove that <a href=#undo-object>undo object</a> entry from the <a href=#undo-transaction-history>undo
  transaction history</a>, and then must fire a <code title=event-undo><a href=#event-undo>redo</a></code> event on the <code>Document</code>
  object, using the <a href=#undo-object>undo object</a> entry's associated undo
  object as the event's data.</p>

  <h4 id=the-undomanagerevent-interface-and-the-undo-and-redo-events><span class=secno>6.9.4 </span>The <code><a href=#undomanagerevent>UndoManagerEvent</a></code> interface and the <code title=event-undo><a href=#event-undo>undo</a></code> and <code title=event-redo><a href=#event-redo>redo</a></code> events</h4>

  <pre class=idl>interface <dfn id=undomanagerevent>UndoManagerEvent</dfn> : Event {
  readonly attribute any <a href=#dom-undomanagerevent-data title=dom-UndoManagerEvent-data>data</a>;
  void <a href=#dom-undomanagerevent-initundomanagerevent title=dom-UndoManagerEvent-initUndoManagerEvent>initUndoManagerEvent</a>(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any dataArg);
  void <span title=dom-UndoManagerEvent-initUndoManagerEventNS>initUndoManagerEventNS</span>(in DOMString namespaceURIArg, in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any dataArg);
};</pre>

  <p>The <dfn id=dom-undomanagerevent-initundomanagerevent title=dom-UndoManagerEvent-initUndoManagerEvent><code>initUndoManagerEvent()</code></dfn>
  and <dfn id=initundomanagereventns()><code title=dom-UndoManagerEvent-initUndoManagerEventNS>initUndoManagerEventNS()</code></dfn>
  methods must initialize the event in a manner analogous to the
  similarly-named methods in the DOM3 Events interfaces. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p>The <dfn id=dom-undomanagerevent-data title=dom-UndoManagerEvent-data><code>data</code></dfn>
  attribute represents the <a href=#undo-object>undo object</a> for the event.</p>

  <p>The <dfn id=event-undo title=event-undo><code>undo</code></dfn> and <dfn id=event-redo title=event-redo><code>redo</code></dfn> events do not bubble,
  cannot be canceled, and have no default action. When the user agent
  fires one of these events it must use the
  <code><a href=#undomanagerevent>UndoManagerEvent</a></code> interface, with the <code title=dom-UndoManagerEvent-data><a href=#dom-undomanagerevent-data>data</a></code> field containing the
  relevant <a href=#undo-object>undo object</a>.</p>


  <h4 id=implementation-notes><span class=secno>6.9.5 </span>Implementation notes</h4>

  <p>How user agents present the above conceptual model to the user is
  not defined. The undo interface could be a filtered view of the
  <a href=#undo-transaction-history>undo transaction history</a>, it could manipulate the
  <a href=#undo-transaction-history>undo transaction history</a> in ways not described above,
  and so forth. For example, it is possible to design a UA that
  appears to have separate <a href=#undo-transaction-history title="undo transaction history">undo
  transaction histories</a> for each form control; similarly, it is
  possible to design systems where the user has access to more undo
  information than is present in the official (as described above)
  <a href=#undo-transaction-history>undo transaction history</a> (such as providing a
  tree-based approach to document state). Such UI models should be
  based upon the single <a href=#undo-transaction-history>undo transaction history</a>
  described in this section, however, such that to a script there is
  no detectable difference.</p>





  <h3 id=command-apis><span class=secno>6.10 </span>Command APIs</h3>

  <p>The <dfn id=execCommand title=dom-document-execCommand><code>execCommand(<var title="">commandId</var>, <var title="">showUI</var>, <var title="">value</var>)</code></dfn> method on the
  <code><a href=#htmldocument>HTMLDocument</a></code> interface allows scripts to perform
  actions on the <a href=#the-selection-0 title="the selection">current selection</a>
  or at the current caret position. Generally, these commands would be
  used to implement editor UI, for example having a "delete" button on
  a toolbar.</p>

  <p>There are three variants to this method, with one, two, and three
  arguments respectively.  The <var title="">showUI</var> and <var title="">value</var> parameters, even if specified, are ignored
  unless otherwise stated.</p>

  <p>When <code title=dom-document-execCommand><a href=#execCommand>execCommand()</a></code>
  is invoked, the user agent must follow the following steps:</p>

  <ol><li>If the given <var title="">commandId</var> maps to an entry in
   the list below whose "Enabled When" entry has a condition that is
   currently false, do nothing; abort these steps.</li>

   <li>Otherwise, execute the "Action" listed below for the given <var title="">commandId</var>.</li>

  </ol><p>A document is <dfn id=ready-for-editing-host-commands>ready for editing host commands</dfn> if it
  has a selection that is entirely within an <a href=#editing-host>editing
  host</a>, or if it has no selection but its caret is inside an
  <a href=#editing-host>editing host</a>.</p>

  <p>The <dfn id=dom-document-querycommandenabled title=dom-document-queryCommandEnabled><code>queryCommandEnabled(<var title="">commandId</var>)</code></dfn> method, when invoked, must
  return true if the condition listed below under "Enabled When" for
  the given <var title="">commandId</var> is true, and false
  otherwise.</p>

  <p>The <dfn id=dom-document-querycommandindeterm title=dom-document-queryCommandIndeterm><code>queryCommandIndeterm(<var title="">commandId</var>)</code></dfn> method, when invoked, must
  return true if the condition listed below under "Indeterminate When"
  for the given <var title="">commandId</var> is true, and false
  otherwise.</p>

  <p>The <dfn id=dom-document-querycommandstate title=dom-document-queryCommandState><code>queryCommandState(<var title="">commandId</var>)</code></dfn> method, when invoked, must
  return the value expressed below under "State" for the given <var title="">commandId</var>.</p>

  <p>The <dfn id=dom-document-querycommandsupported title=dom-document-queryCommandSupported><code>queryCommandSupported(<var title="">commandId</var>)</code></dfn> method, when invoked, must
  return true if the given <var title="">commandId</var> is in the
  list below, and false otherwise.</p>

  <p>The <dfn id=dom-document-querycommandvalue title=dom-document-queryCommandValue><code>queryCommandValue(<var title="">commandId</var>)</code></dfn> method, when invoked, must
  return the value expressed below under "Value" for the given <var title="">commandId</var>.</p>

  <p>The possible values for <var title="">commandId</var>, and their
  corresponding meanings, are as follows. These values must be
  compared to the argument in an <a href=#ascii-case-insensitive>ASCII case-insensitive</a>
  manner.</p>

  <dl><dt><dfn id=command-bold title=command-bold><code>bold</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <em><code><a href=#the-b-element>b</a></code></em> element (or, again,
   unwrapped, or have that semantic inserted or removed, as defined by
   the UA).</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> True if the selection, or the caret, if
   there is no selection, is, or is contained within, a
   <code><a href=#the-b-element>b</a></code> element. False otherwise.</dd>
   <dd><strong>Value:</strong> The string "<code title="">true</code>"
   if the expression given for the "State" above is true, the string
   "<code title="">false</code>" otherwise.</dd>

   <dt><dfn id=command-createlink title=command-createLink><code>createLink</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <em><code><a href=#the-a-element>a</a></code></em> element (or, again,
   unwrapped, or have that semantic inserted or removed, as defined by
   the UA). If the user agent creates an <code><a href=#the-a-element>a</a></code> element or
   modifies an existing <code><a href=#the-a-element>a</a></code> element, then if the <var title="">showUI</var> argument is present and has the value false,
   then the value of the <var title="">value</var> argument must be
   used as the <a href=#url>URL</a> of the link. Otherwise, the user agent
   should prompt the user for the URL of the link.</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-delete title=command-delete><code>delete</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had performed <a href=#contenteditable-delete>a backspace
   operation</a>.</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-formatblock title=command-formatBlock><code>formatBlock</code></dfn></dt>
   <dd>
    <p><strong>Action:</strong> The user agent must run the following
    steps:</p>
    <ol><li><p>If the <var title="">value</var> argument wasn't
     specified, abort these steps without doing anything.</li>
     <li><p>If the <var title="">value</var> argument has a leading
     U+003C LESS-THAN SIGN character ('&lt;') and a trailing U+003E
     GREATER-THAN SIGN character ('&gt;'), then remove the first and last
     characters from <var title="">value</var>.</li>
     <li>
      <p>If <var title="">value</var> is (now) an <a href=#ascii-case-insensitive>ASCII
      case-insensitive</a> match for the tag name of an element
      defined by this specification that is defined to be a
      <span>prose element</span> but not a <span>phrasing
      element</span>, then, for every position in the selection, take
      the furthest <a href=#flow-content-0>flow content</a> ancestor element of that
      position that contains only <a href=#phrasing-content-0>phrasing content</a>, and,
      if that element is <a href=#editable>editable</a>, and has a content
      model that allows it to contain <span>prose content</span> other
      than <a href=#phrasing-content-0>phrasing content</a>, and has a parent element
      whose content model allows that parent to contain any
      <span>prose content</span>, rename the element (as if the <code title="">Element.renameNode()</code> method had been used) to
      <var title="">value</var>, using the HTML namespace.</p> <p>If
      there is no selection, then, where in the description above
      refers to the selection, the user agent must act as if the
      selection was an empty range (with just one position) at the
      caret position.</p>
     </li>
    </ol></dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-forwarddelete title=command-forwardDelete><code>forwardDelete</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had performed <a href=#contenteditable-delete>a forward delete
   operation</a>.</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-insertimage title=command-insertImage><code>insertImage</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <em><code><a href=#the-img-element>img</a></code></em> element (or, again,
   unwrapped, or have that semantic inserted or removed, as defined by
   the UA). If the user agent creates an <code><a href=#the-img-element>img</a></code> element or
   modifies an existing <code><a href=#the-img-element>img</a></code> element, then if the <var title="">showUI</var> argument is present and has the value false,
   then the value of the <var title="">value</var> argument must be
   used as the <a href=#url>URL</a> of the image. Otherwise, the user
   agent should prompt the user for the URL of the image.</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-inserthtml title=command-insertHTML><code>insertHTML</code></dfn></dt>
   <dd>
    <p><strong>Action:</strong> The user agent must run the following
    steps:</p>
    <ol><li><p>If the document is an <span>XML document</span>, then
     throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code> exception and abort
     these steps.</li><!-- XXX support XML? -->
     <li><p>If the <var title="">value</var> argument wasn't
     specified, abort these steps without doing anything.</li>
     <li><p>If there is a selection, act as if the user had requested
     that <a href=#contenteditable-delete>the selection be
     deleted</a>.</li>
     <li><p>Invoke the <a href=#html-fragment-parsing-algorithm>HTML fragment parsing algorithm</a>
     with an arbitrary orphan <code><a href=#the-body-element>body</a></code> element as the
     <i><a href=#context>context</a></i> element and with the <var title="">value</var>
     argument as <i><a href=#the-input-element>input</a></i>.</li>
     <li><p>Insert the nodes returned by the previous step into the
     document at the location of the caret, without firing any
     mutation events.</li>
    </ol></dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-insertlinebreak title=command-insertLineBreak><code>insertLineBreak</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had <a href=#contenteditable-br>requested a line
   separator</a>.</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-insertorderedlist title=command-insertOrderedList><code>insertOrderedList</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <code><a href=#the-ol-element>ol</a></code> element (or unwrapped, or, if
   there is no selection, have that semantic inserted or removed
   &mdash; the exact behavior is UA-defined).</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-insertunorderedlist title=command-insertUnorderedList><code>insertUnorderedList</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <code><a href=#the-ul-element>ul</a></code> element (or unwrapped, or, if
   there is no selection, have that semantic inserted or removed
   &mdash; the exact behavior is UA-defined).</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-insertparagraph title=command-insertParagraph><code>insertParagraph</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had performed a <a href=#contenteditable-breakBlock>break
   block</a> editing action.</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-inserttext title=command-insertText><code>insertText</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had <a href=#contenteditable-insertText>inserted text</a>
   corresponding to the <var title="">value</var> parameter.</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-italic title=command-italic><code>italic</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <em><code><a href=#the-i-element>i</a></code></em> element (or, again,
   unwrapped, or have that semantic inserted or removed, as defined by
   the UA).</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> True if the selection, or the caret, if
   there is no selection, is, or is contained within, a
   <code><a href=#the-i-element>i</a></code> element. False otherwise.</dd>
   <dd><strong>Value:</strong> The string "<code title="">true</code>"
   if the expression given for the "State" above is true, the string
   "<code title="">false</code>" otherwise.</dd>

   <dt><dfn id=command-redo title=command-redo><code>redo</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must <a href=#redo:-moving-forward-in-the-undo-transaction-history title=do-redo>move forward one step</a> in its <a href=#undo-transaction-history>undo
   transaction history</a>, restoring the associated state. If the
   <a href=#undo-position>undo position</a> is at the end of the <a href=#undo-transaction-history>undo
   transaction history</a>, the user agent must do nothing. See the
   <a href=#undo>undo history</a>.</dd>
   <dd><strong>Enabled When:</strong> The <a href=#undo-position>undo position</a>
   is not at the end of the <a href=#undo-transaction-history>undo transaction
   history</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-selectall title=command-selectAll><code>selectAll</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must change the
   selection so that all the content in the currently focused
   <a href=#editing-host>editing host</a> is selected. If no <a href=#editing-host>editing
   host</a> is focused, then the content of the entire document
   must be selected.</dd>
   <dd><strong>Enabled When:</strong> Always.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-subscript title=command-subscript><code>subscript</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <em><code><a href=#the-sub-and-sup-elements>sub</a></code></em> element (or, again,
   unwrapped, or have that semantic inserted or removed, as defined by
   the UA).</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> True if the selection, or the caret, if
   there is no selection, is, or is contained within, a
   <code><a href=#the-sub-and-sup-elements>sub</a></code> element. False otherwise.</dd>
   <dd><strong>Value:</strong> The string "<code title="">true</code>"
   if the expression given for the "State" above is true, the string
   "<code title="">false</code>" otherwise.</dd>

   <dt><dfn id=command-superscript title=command-superscript><code>superscript</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must act as if the user
   had requested that the selection <a href=#contenteditable-wrapSemantic>be wrapped in the
   semantics</a> of the <code><a href=#the-sub-and-sup-elements>sup</a></code> element (or unwrapped, or, if
   there is no selection, have that semantic inserted or removed
   &mdash; the exact behavior is UA-defined).</dd>
   <dd><strong>Enabled When:</strong> The document is <a href=#ready-for-editing-host-commands>ready for
   editing host commands</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> True if the selection, or the caret, if
   there is no selection, is, or is contained within, a
   <code><a href=#the-sub-and-sup-elements>sup</a></code> element. False otherwise.</dd>
   <dd><strong>Value:</strong> The string "<code title="">true</code>"
   if the expression given for the "State" above is true, the string
   "<code title="">false</code>" otherwise.</dd>

   <dt><dfn id=command-undo title=command-undo><code>undo</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must <a href=#undo:-moving-back-in-the-undo-transaction-history title=do-undo>move back one step</a> in its <a href=#undo-transaction-history>undo
   transaction history</a>, restoring the associated state. If the
   <a href=#undo-position>undo position</a> is at the start of the <a href=#undo-transaction-history>undo
   transaction history</a>, the user agent must do nothing. See the
   <a href=#undo>undo history</a>.</dd>
   <dd><strong>Enabled When:</strong> The <a href=#undo-position>undo position</a>
   is not at the start of the <a href=#undo-transaction-history>undo transaction
   history</a>.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-unlink title=command-unlink><code>unlink</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must remove all
   <code><a href=#the-a-element>a</a></code> elements that have <code title=attr-a-href>href</code> attributes and that are partially
   or completely included in the current selection.</dd>
   <dd><strong>Enabled When:</strong> The document has a selection
   that is entirely within an <a href=#editing-host>editing host</a> and that
   contains (either partially or completely) at least one
   <code><a href=#the-a-element>a</a></code> element that has an <code title=attr-a-href>href</code> attribute.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><dfn id=command-unselect title=command-unselect><code>unselect</code></dfn></dt>
   <dd><strong>Action:</strong> The user agent must change the
   selection so that nothing is selected.</dd>
   <dd><strong>Enabled When:</strong> Always.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

   <dt><code><var title="">vendorID</var>-<var title="">customCommandID</var></code></dt>
   <dd><strong>Action:</strong> User agents may implement
   vendor-specific extensions to this API. Vendor-specific extensions
   to the list of commands should use the syntax <code><var title="">vendorID</var>-<var title="">customCommandID</var></code>
   so as to prevent clashes between extensions from different vendors
   and future additions to this specification.</dd>
   <dd><strong>Enabled When:</strong> UA-defined.</dd>
   <dd><strong>Indeterminate When:</strong> UA-defined.</dd>
   <dd><strong>State:</strong> UA-defined.</dd>
   <dd><strong>Value:</strong> UA-defined.</dd>

   <dt>Anything else</dt>
   <dd><strong>Action:</strong> User agents must do nothing.</dd>
   <dd><strong>Enabled When:</strong> Never.</dd>
   <dd><strong>Indeterminate When:</strong> Never.</dd>
   <dd><strong>State:</strong> Always false.</dd>
   <dd><strong>Value:</strong> Always the string "<code title="">false</code>".</dd>

  </dl><!--
XXX Once we resolve the style="" issue, address these:
 "forecolor", "hilitecolor", "fontname", "fontsize", "justifyleft",
 "justifycenter", "justifyright", "justifyfull", "indent", "outdent"
--><h2 id=comms><span class=secno>7 </span>Communication</h2>


  <h3 id=event-definitions><span class=secno>7.1 </span>Event definitions</h3>

  <p>Messages in <a href=#server-sent-events>server-sent events</a>, <a href=#network>Web
  sockets</a>, <a href=#crossDocumentMessages>cross-document messaging</a>, and
  <a href=#channel-messaging>channel messaging</a> use the <dfn id=event-message title=event-message><code>message</code></dfn> event.</p>

  <p>The following interface is defined for this event:</p>

  <pre class=idl>interface <dfn id=messageevent>MessageEvent</dfn> : Event {
  readonly attribute any <a href=#dom-messageevent-data title=dom-MessageEvent-data>data</a>;
  readonly attribute DOMString <a href=#dom-messageevent-origin title=dom-MessageEvent-origin>origin</a>;
  readonly attribute DOMString <a href=#dom-messageevent-lasteventid title=dom-MessageEvent-lastEventId>lastEventId</a>;
  readonly attribute <a href=#windowproxy>WindowProxy</a> <a href=#dom-messageevent-source title=dom-MessageEvent-source>source</a>;
  readonly attribute <a href=#messageport>MessagePort</a> <a href=#dom-messageevent-messageport title=dom-MessageEvent-messagePort>messagePort</a>;
  void <a href=#dom-messageevent-initmessageevent title=dom-MessageEvent-initMessageEvent>initMessageEvent</a>(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any dataArg, in DOMString originArg, in DOMString lastEventIdArg, in <a href=#windowproxy>WindowProxy</a> sourceArg, in <a href=#messageport>MessagePort</a> messagePortArg);
  void <a href=#dom-messageevent-initmessageeventns title=dom-MessageEvent-initMessageEventNS>initMessageEventNS</a>(in DOMString namespaceURI, in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in any dataArg, in DOMString originArg, in DOMString lastEventIdArg, in <a href=#windowproxy>WindowProxy</a> sourceArg, in <a href=#messageport>MessagePort</a> messagePortArg);
};</pre>

  <p>The <dfn id=dom-messageevent-initmessageevent title=dom-MessageEvent-initMessageEvent><code>initMessageEvent()</code></dfn>
  and <dfn id=dom-messageevent-initmessageeventns title=dom-MessageEvent-initMessageEventNS><code>initMessageEventNS()</code></dfn>
  methods must initialize the event in a manner analogous to the
  similarly-named methods in the DOM3 Events interfaces. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p>The <dfn id=dom-messageevent-data title=dom-MessageEvent-data><code>data</code></dfn>
  attribute represents the message being sent.</p>

  <p>The <dfn id=dom-messageevent-origin title=dom-MessageEvent-origin><code>origin</code></dfn> attribute
  represents, in <a href=#server-sent-events>server-sent events</a> and
  <a href=#crossDocumentMessages>cross-document messaging</a>, the <a href=#origin-0>origin</a> of
  the document that sent the message (typically the scheme, hostname,
  and port of the document, but not its path or fragment
  identifier).</p>

  <p>The <dfn id=dom-messageevent-lasteventid title=dom-MessageEvent-lastEventId><code>lastEventId</code></dfn>
  attribute represents, in <a href=#server-sent-events>server-sent events</a>, the
  <span>last event ID string</span> of the event source.</p>

  <p>The <dfn id=dom-messageevent-source title=dom-MessageEvent-source><code>source</code></dfn> attribute
  represents, in <a href=#crossDocumentMessages>cross-document messaging</a>, the
  <code><a href=#windowproxy>WindowProxy</a></code> of the <a href=#browsing-context>browsing context</a> of the
  <code><a href=#window>Window</a></code> object from which the message came.</p>

  <p>The <dfn id=dom-messageevent-messageport title=dom-MessageEvent-messagePort><code>messagePort</code></dfn>
  attribute represents, in <a href=#crossDocumentMessages>cross-document messaging</a> and
  <a href=#channel-messaging>channel messaging</a> the <code><a href=#messageport>MessagePort</a></code> being
  sent, if any.</p>

  <p>Unless otherwise specified, when the user agent creates and
  dispatches a <code title=event-message><a href=#event-message>message</a></code> event in the
  algorithms described in the following sections, the <code title=dom-MessageEvent-lastEventId><a href=#dom-messageevent-lasteventid>lastEventId</a></code> attribute
  must be the empty string, the <code title=dom-MessageEvent-origin><a href=#dom-messageevent-origin>origin</a></code> attribute must be the
  empty string, the <code title=dom-MessageEvent-source><a href=#dom-messageevent-source>source</a></code> attribute must be
  null, and the <code title=dom-MessageEvent-messagePort><a href=#dom-messageevent-messageport>messagePort</a></code>
  attribute must be null.</p>


  <h3 id=server-sent-events><span class=secno>7.2 </span><dfn>Server-sent events</dfn></h3>
  <!-- eventsource -->

  <p>This section describes a mechanism for allowing servers to
  dispatch DOM events into documents that expect it. The
  <code><a href=#the-eventsource-element>eventsource</a></code> element provides a simple interface to
  this mechanism.</p>



  <h4 id=the-remoteeventtarget-interface><span class=secno>7.2.1 </span>The <code><a href=#remoteeventtarget>RemoteEventTarget</a></code> interface</h4>

  <p>Any object that implements the <code>EventTarget</code> interface
  must also implement the <code><a href=#remoteeventtarget>RemoteEventTarget</a></code>
  interface.</p>

  <pre class=idl>[NoInterfaceObject, ImplementedOn=<span>EventTarget</span>] interface <dfn id=remoteeventtarget>RemoteEventTarget</dfn> {
  void <a href=#dom-remoteeventtarget-addeventsource title=dom-RemoteEventTarget-addEventSource>addEventSource</a>(in DOMString src);
  void <a href=#dom-remoteeventtarget-removeeventsource title=dom-RemoteEventTarget-removeEventSource>removeEventSource</a>(in DOMString src);
};</pre>

  <p>When the <dfn id=dom-remoteeventtarget-addeventsource title=dom-RemoteEventTarget-addEventSource><code>addEventSource(<var title="">src</var>)</code></dfn> method is invoked, the user agent
  must <a href=#resolve-a-url title="resolve a url">resolve</a> the <a href=#url>URL</a>
  specified in <var title="">src</var>, relative to the <a href=#first-script>first
  script</a>'s <a href="#script's-base-url" title="script's base URL">base URL</a>, and
  if that succeeds, add the resulting <a href=#absolute-url>absolute URL</a> to the
  <a href=#concept-eventsource-list title=concept-eventsource-list>list of event sources</a>
  for that object. The same URL can be registered multiple times. If
  the URL fails to resolve, then the user agent must raise a
  <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception.</p>

  <p>When the <dfn id=dom-remoteeventtarget-removeeventsource title=dom-RemoteEventTarget-removeEventSource><code>removeEventSource(<var title="">src</var>)</code></dfn> method is invoked, the user agent
  must <a href=#resolve-a-url title="resolve a url">resolve</a> the <a href=#url>URL</a>
  specified in <var title="">src</var>, relative to the <a href=#first-script>first
  script</a>'s <a href="#script's-base-url" title="script's base URL">base URL</a>, and
  if that succeeds, remove the resulting <a href=#absolute-url>absolute URL</a>
  from the <a href=#concept-eventsource-list title=concept-eventsource-list>list of event
  sources</a> for that object. If the same URL has been registered
  multiple times, removing it must remove only one instance of that
  URL for each invocation of the <code title=removeEventSource>removeEventSource()</code> method. If the
  URL fails to resolve, the user agent does nothing.</p>


  <h4 id=connecting-to-an-event-stream><span class=secno>7.2.2 </span>Connecting to an event stream</h4>

  <p>Each object implementing the <code>EventTarget</code> and
  <code><a href=#remoteeventtarget>RemoteEventTarget</a></code> interfaces has a <dfn id=concept-eventsource-list title=concept-eventsource-list>list of event sources</dfn> that
  are registered for that object.</p>

  <p>When a new <a href=#absolute-url>absolute URL</a> is added to this list, the
  user agent should <a href=#queue-a-task>queue a task</a> to run the following
  steps with the new <a href=#absolute-url>absolute URL</a>:</p>

  <ol><li><p>If the entry for the new <a href=#absolute-url>absolute URL</a> has been
   removed from the list, then abort these steps.</li>

   <li>

    <p><a href=#fetch>Fetch</a> the resource identified by that
    <a href=#absolute-url>absolute URL</a>.</p>

    <p>As data is received, the <a href=#concept-task title=concept-task>tasks</a> queued by the <a href=#networking-task-source>networking
    task source</a> to handle the data must consist of following
    the rules given in the following sections.</p>

   </li>

  </ol><p>When an event source is removed from the list of event sources
  for an object, if that resource is still being fetched, then the
  relevant connection must be closed.</p>

  <p>Since connections established to remote servers for such
  resources are expected to be long-lived, UAs should ensure that
  appropriate buffering is used. In particular, while line buffering
  may be safe if lines are defined to end with a single U+000A LINE
  FEED character, block buffering or line buffering with different
  expected line endings can cause delays in event dispatch.</p>

  <p>Each event source in the list must have associated with it the
  following:</p>

  <ul><li>The <dfn id=concept-event-stream-reconnection-time title=concept-event-stream-reconnection-time>reconnection
   time</dfn>, in milliseconds. This must initially be a
   user-agent-defined value, probably in the region of a few
   seconds.</li>

   <li>The <dfn id=concept-event-stream-last-event-id title=concept-event-stream-last-event-id>last event
   ID string</dfn>. This must initially be the empty string.</li>

  </ul><p>In general, the semantics of the transport protocol specified by
  the URLs for the event sources must be followed, including HTTP
  caching rules.</p>

  <p>For HTTP connections, the <code title="">Accept</code> header may
  be included; if included, it must contain only formats of event
  framing that are supported by the user agent (one of which must be
  <code>text/event-stream</code>, as described below).</p>

  <p>Other formats of event framing may also be supported in addition
  to <code>text/event-stream</code>, but this specification does not
  define how they are to be parsed or processed.</p>

  <p class=note>Such formats could include systems like SMS-push;
  for example servers could use <code title="">Accept</code> headers
  and HTTP redirects to an SMS-push mechanism as a kind of protocol
  negotiation to reduce network load in GSM environments.</p>

  <p>User agents should use the <code>Cache-Control: no-cache</code>
  header in requests to bypass any caches for requests of event
  sources.</p>

  <p>If the event source's last event ID string is not the empty
  string, then a <code title="">Last-Event-ID</code> HTTP header must
  be included with the request, whose value is the value of the event
  source's last event ID string.</p>

  <p>For connections to domains other than <a href="#the-document's-domain">the document's
  domain</a>, the semantics of the Access-Control HTTP header must
  be followed. <a href=#refsACCESSCONTROL>[ACCESSCONTROL]</a> <!--
  XXX define this better once that spec is more stable -->

  <p>HTTP 200 OK responses with a <a href=#content-type-0>Content-Type</a> header
  specifying the type <code>text/event-stream</code> that are either
  from <a href="#the-document's-domain">the document's domain</a> or explicitly allowed by the
  Access-Control HTTP headers must be processed line by line <a href=#event-stream-interpretation>as described below</a>.</p>

  <p>For the purposes of such successfully opened event streams only,
  user agents should ignore HTTP cache headers, and instead assume
  that the resource indicates that it does not wish to be cached.</p>

  <p>If such a resource (with the correct MIME type) completes loading
  (i.e. the entire HTTP response body is received or the connection
  itself closes), the user agent should request the event source
  resource again after a delay equal to the reconnection time of the
  event source. This doesn't apply for the error cases that are listed
  below.</p>

  <p>HTTP 200 OK responses that have a <a href=#content-type-0>Content-Type</a> other
  than <code>text/event-stream</code> (or some other supported type),
  and HTTP responses whose Access-Control headers indicate that the
  resource are not to be used, must be ignored.</p>

  <p>HTTP 204 No Content, and 205 Reset Content responses must be
  treated as if they were 200 OK responses with the right MIME type
  but no content, and should therefore cause the user agent to refetch
  the resource after a delay equal to the reconnection time of the
  event source.</p>

  <p>Other HTTP response codes in the 2xx range <!--201 Created, 202
  Accepted, 203 Non-Authoritative Information, and 206 Partial
  Content-->must be treated like HTTP 200 OK responses for the
  purposes of reopening event source resources. They are, however,
  likely to indicate an error has occurred somewhere and may cause the
  user agent to emit a warning.</p>

  <p>HTTP 300 Multiple Choices responses should be handled
  automatically if possible (treating the responses as if they were
  302 Found responses pointing to the appropriate resource), and
  otherwise must be treated as HTTP 404 responses.</p>

  <p>HTTP 301 Moved Permanently responses must cause the user agent to
  reconnect using the new server specified URL instead of the
  previously specified URL for all subsequent requests for this event
  source. (It doesn't affect other event sources with the same URL
  unless they also receive 301 responses, and it doesn't affect future
  sessions, e.g. if the page is reloaded.)</p>

  <p>HTTP 302 Found, 303 See Other, and 307 Temporary Redirect
  responses must cause the user agent to connect to the new
  server-specified URL, but if the user agent needs to again request
  the resource at a later point, it must return to the previously
  specified URL for this event source.</p>

  <p>HTTP 304 Not Modified responses should be handled like HTTP 200
  OK responses, with the content coming from the user agent cache. A
  new request should then be made after a delay equal to the
  reconnection time of the event source.</p>

  <p>HTTP 305 Use Proxy, HTTP 401 Unauthorized, and 407 Proxy
  Authentication Required should be treated transparently as for any
  other subresource.</p>

  <p>Any other HTTP response code not listed here or network error
  (e.g. DNS errors) must be ignored.</p> <!-- including: HTTP 400 Bad
  Request, 403 Forbidden, 404 Not Found, 405 Method Not Allowed, 406
  Not Acceptable, 408 Request Timeout, 409 Conflict, 410 Gone, 411
  Length Required, 412 Precondition Failed, 413 Request Entity Too
  Large, 414 Request-URI Too Long, 415 Unsupported Media Type, 416
  Requested Range Not Satisfiable, 417 Expectation Failed, 500
  Internal Server Error, 501 Not Implemented, 502 Bad Gateway, 503
  Service Unavailable, 504 Gateway Timeout, and 505 HTTP Version Not
  Supported responses -->

  <p>For non-HTTP protocols, UAs should act in equivalent ways.</p>


  <h4 id=parsing-an-event-stream><span class=secno>7.2.3 </span>Parsing an event stream</h4>

  <!-- XXX Wladimir Palant pointed out problems with HTTP chunking with server-sent-events -->

  <p>This event stream format's MIME type is
  <code>text/event-stream</code>.</p>

  <p>The event stream format is as described by the <code title="">stream</code> production of the following ABNF, the
  character set for which is Unicode. <a href=#refsABNF>[ABNF]</a></p> <!-- XXX
  ftp://ftp.rfc-editor.org/in-notes/std/std68.txt -->

  <pre>stream        = [ bom ] *event
event         = *( comment / field ) end-of-line
comment       = colon *any-char end-of-line
field         = 1*name-char [ colon [ space ] *any-char ] end-of-line
end-of-line   = ( cr lf / cr / lf / eof )
eof           = &lt; matches repeatedly at the end of the stream &gt;

; characters
lf            = %x000A ; U+000A LINE FEED
cr            = %x000D ; U+000D CARRIAGE RETURN
space         = %x0020 ; U+0020 SPACE
colon         = %x003A ; U+003A COLON
bom           = %xFEFF ; U+FEFF BYTE ORDER MARK
name-char     = %x0000-0009 / %x000B-000C / %x000E-0039 / %x003B-10FFFF
                ; a Unicode character other than U+000A LINE FEED, U+000D CARRIAGE RETURN, or U+003A COLON
any-char      = %x0000-0009 / %x000B-000C / %x000E-10FFFF
                ; a Unicode character other than U+000D CARRIAGE RETURN or U+003A COLON</pre>

  <p>Event streams in this format must always be encoded as
  UTF-8.</p>

  <p>Lines must be separated by either a U+000D CARRIAGE RETURN U+000A
  LINE FEED (CRLF) character pair, a single U+000A LINE FEED (LF)
  character, or a single U+000D CARRIAGE RETURN (CR) character.</p>



  <h4 id=event-stream-interpretation><span class=secno>7.2.4 </span>Interpreting an event stream</h4>

  <p>Bytes or sequences of bytes that are not valid UTF-8 sequences
  must be interpreted as the U+FFFD REPLACEMENT CHARACTER.</p>

  <p>One leading U+FEFF BYTE ORDER MARK character must be ignored if
  any are present.</p>

  <p>The stream must then be parsed by reading everything line by
  line, with a U+000D CARRIAGE RETURN U+000A LINE FEED (CRLF)
  character pair, a single U+000A LINE FEED (LF) character, a single
  U+000D CARRIAGE RETURN (CR) character, and the end of the file being
  the four ways in which a line can end.</p>

  <p>When a stream is parsed, a <var title="">data</var> buffer and an
  <var title="">event name</var> buffer must be associated with
  it. They must be initialized to the empty string</p>

  <p>Lines must be processed, in the order they are received, as
  follows:</p>

  <dl class=switch><dt>If the line is empty (a blank line)</dt>

   <dd><p><a href=#dispatchMessage>Dispatch the event</a>, as
   defined below.</dd>


   <dt>If the line starts with a U+003A COLON character (':')</dt>

   <dd><p>Ignore the line.</dd>


   <dt>If the line contains a U+003A COLON character (':') character</dt>

   <dd>

    <p>Collect the characters on the line before the first U+003A
    COLON character (':'), and let <var title="">field</var> be that
    string.</p>

    <p>Collect the characters on the line after the first U+003A COLON
    character (':'), and let <var title="">value</var> be that
    string. If <var title="">value</var> starts with a single U+0020
    SPACE character, remove it from <var title="">value</var>.</p>

    <p><a href=#processField>Process the field</a> using the steps
    described below, using <var title="">field</var> as the field name
    and <var title="">value</var> as the field value.</p>

   </dd>


   <dt>Otherwise, the string is not empty but does not contain a U+003A COLON character (':') character</dt>

   <dd>

    <p><a href=#processField>Process the field</a> using the steps
    described below, using the whole line as the field name, and
    the empty string as the field value.</p>

   </dd>

  </dl><p>Once the end of the file is reached, the user agent must <a href=#dispatchMessage>dispatch the event</a> one final time, as
  defined below.</p>


  <p id=processField>The steps to <dfn title="">process the
  field</dfn> given a field name and a field value depend on the field
  name, as given in the following list. Field names must be compared
  literally, with no case folding performed.</p>

  <dl class=switch><dt>If the field name is "event"</dt>

   <dd><p>Set the <var title="">event name</var> buffer the to field
   value.</dd>


   <dt>If the field name is "data"</dt>

   <dd><p>If the <var title="">data</var> buffer is not the empty
   string, then append a single U+000A LINE FEED character to the <var title="">data</var> buffer. Append the field value to the <var title="">data</var> buffer.</dd>


   <dt>If the field name is "id"</dt>

   <dd><p>Set the event stream's <a href=#concept-event-stream-last-event-id title=concept-event-stream-last-event-id>last event ID</a> to
   the field value.</dd>


   <dt>If the field name is "retry"</dt>

   <dd><p>If the field value consists of only characters in the range
   U+0030 DIGIT ZERO ('0') U+0039 DIGIT NINE ('9'), then interpret the
   field value as an integer in base ten, and set the event stream's
   <a href=#concept-event-stream-reconnection-time title=concept-event-stream-reconnection-time>reconnection
   time</a> to that integer. Otherwise, ignore the field.</dd>

<!-- v2 feature request from John Fallows - http://www.w3.org/mid/c5b3a7130810271238h11e40a4fybfcd5983ed5dc08d@mail.gmail.com

   <dt>If the field name is "reconnect"</dt>

   <dd><p>If the field value is the empty string, then: <a
   href="#dispatchMessage">dispatch the event</a> as defined below,
   and then drop the connection and immediately reconnect as if the
   <span title="concept-event-stream-reconnection-time">reconnection
   time</span> was zero for this one time.</p></dd>

  -->

   <dt>Otherwise</dt>

   <dd><p>The field is ignored.</dd>

  </dl><p id=dispatchMessage>When the user agent is required to <dfn title="">dispatch the event</dfn>, then the user agent must act as
  follows:

  <ol><li><p>If the <var title="">data</var> buffer is an empty string,
   set the <var title="">data</var> buffer and the <var title="">event
   name</var> buffer to the empty string and abort these
   steps.</li>

   <li><p>If the <var title="">event name</var> buffer is not the
   empty string but is also not a valid <a href=http://www.w3.org/TR/REC-xml-names/#NT-NCName>NCName</a>,
   set the <var title="">data</var> buffer and the <var title="">event
   name</var> buffer to the empty string and abort these
   steps.</li>

   <li><p>Otherwise, create an event that uses the
   <code><a href=#messageevent>MessageEvent</a></code> interface, with the event name <code title=event-message><a href=#event-message>message</a></code>, which does not bubble, is
   cancelable, and has no default action. The <code title=dom-MessageEvent-data><a href=#dom-messageevent-data>data</a></code> attribute must be set to
   the value of the <var title="">data</var> buffer, the <code title=dom-MessageEvent-origin><a href=#dom-messageevent-origin>origin</a></code> attribute must be set
   to the <a href=#unicode-serialization-of-an-origin title="Unicode serialization of an origin">Unicode
   serialization</a> of the <a href=#origin-0>origin</a> of the event
   stream's URL, and the <code title=dom-MessageEvent-lastEventId><a href=#dom-messageevent-lasteventid>lastEventId</a></code> attribute
   must be set to the <span>last event ID string</span> of the event
   source.</li>
   
   <li><p>If the <var title="">event name</var> buffer has a value
   other than the empty string, change the type of the newly created
   event to equal the value of the <var title="">event name</var>
   buffer.</li>

   <li><p>Set the <var title="">data</var> buffer and the <var title="">event name</var> buffer to the empty string.</li>

   <li><p><a href=#queue-a-task>Queue a task</a> to dispatch the newly created
   event at the <code><a href=#remoteeventtarget>RemoteEventTarget</a></code> object to which the
   event stream is registered. The <a href=#task-source>task source</a> for this
   <a href=#concept-task title=concept-task>task</a> is the <dfn id=remote-event-task-source>remote event
   task source</dfn>.</li>

  </ol><p class=note>If an event doesn't have an "id" field, but an
  earlier event did set the event source's <span>last event ID
  string</span>, then the event's <code title=dom-MessageEvent-lastEventId><a href=#dom-messageevent-lasteventid>lastEventId</a></code> field will
  be set to the value of whatever the last seen "id" field was.</p>


  <div class=example>

   <p>The following event stream, once followed by a blank line:</p>
   <pre>data: YHOO
data: -2
data: 10</pre>

   <p>...would cause an event <code title=event-message><a href=#event-message>message</a></code> with the interface
   <code><a href=#messageevent>MessageEvent</a></code> to be dispatched on the
   <code><a href=#the-eventsource-element>eventsource</a></code> element, whose <code title=dom-MessageEvent-data><a href=#dom-messageevent-data>data</a></code> attribute would contain
   the string <code>YHOO\n-2\n10</code> (where <code>\n</code>
   represents a newline).</p>

   <p>This could be used as follows:
   <pre>&lt;eventsource src="http://stocks.example.com/ticker.php"
              onmessage="var data = event.data.split('\n'); updateStocks(data[0], data[1], data[2]);"&gt;</pre>
   <p>...where <code title="">updateStocks()</code> is a function defined as:</p>
   <pre>function updateStocks(symbol, delta, value) { ... }</pre>
   <p>...or some such.</p>

  </div>

  <div class=example>

   <p>The following stream contains four blocks. The first block has
   just a comment, and will fire nothing. The second block has two
   fields with names "data" and "id" respectively; an event will be
   fired for this block, with the data "first event", and will then
   set the last event ID to "1" so that if the connection died between
   this block and the next, the server would be sent a <code title="">Last-Event-ID</code> header with the value "1". The third
   block fires an event with data "second event", and also has an "id"
   field, this time with no value, which resets the last event ID to
   the empty string (meaning no <code title="">Last-Event-ID</code>
   header will now be sent in the event of a reconnection being
   attempted). Finally the last block just fires an event with the
   data "third event". Note that the last block doesn't have to end
   with a blank line, the end of the stream is enough to trigger the
   dispatch of the last event.</p>

   <pre>: test stream

data: first event
id: 1

data: second event
id

data: third event</pre>
  </div>

  <div class=example>

   <p>The following stream fires just one event:</p>

   <pre>data

data
data

data:</pre>

   <p>The first and last blocks do nothing, since they do not contain
   any actual data (the <var title="">data</var> buffer remains at the
   empty string, and so nothing gets dispatched). The middle block
   fires an event with the data set to a single newline character.</p>
  </div>

  <div class=example>

   <p>The following stream fires two identical events:</p>

   <pre>data:test

data:&nbsp;test</pre>

   <p>This is because the space after the colon is ignored if
   present.</p>

  </div>


  <h4 id=notes><span class=secno>7.2.5 </span>Notes</h4>

  <p>Legacy proxy servers are known to, in certain cases, drop HTTP
  connections after a short timeout. To protect against such proxy
  servers, authors can include a comment line (one starting with a ':'
  character) every 15 seconds or so.</p>

  <p>Authors wishing to relate event source connections to each other
  or to specific documents previously served might find that relying
  on IP addresses doesn't work, as individual clients can have
  multiple IP addresses (due to having multiple proxy servers) and
  individual IP addresses can have multiple clients (due to sharing a
  proxy server). It is better to include a unique identifier in the
  document when it is served and then pass that identifier as part of
  the URL in the <code title=attr-eventsource-src><a href=#attr-eventsource-src>src</a></code>
  attribute of the <code><a href=#the-eventsource-element>eventsource</a></code> element.</p>

  <p>Implementations that support HTTP's per-server connection
  limitation might run into trouble when opening multiple pages from a
  site if each page has an <code><a href=#the-eventsource-element>eventsource</a></code> to the same
  domain. Authors can avoid this using the relatively complex
  mechanism of using unique domain names per connection, or by
  allowing the user to enable or disable the <code><a href=#the-eventsource-element>eventsource</a></code>
  functionality on a per-page basis.</p>



  <h3 id=network><span class=secno>7.3 </span><dfn>Web sockets</dfn></h3>

  <h4 id=network-intro><span class=secno>7.3.1 </span>Introduction</h4>

  <p><em>This section is non-normative.</em></p>

  <p>To enable Web applications to maintain bidirectional
  communications with server-side processes, this specification
  introduces the <code><a href=#websocket>WebSocket</a></code> interface.</p>

  <p class=note>This interface does not allow for raw access to the
  underlying network. For example, this interface could not be used to
  implement an IRC client without proxying messages through a custom
  server.</p>

  <p class=XXX>An introduction to the client-side and
  server-side of using the direct connection APIs.</p>

  <!--BOILERPLATE-->

  <h4 id=the-websocket-interface><span class=secno>7.3.2 </span>The <code><a href=#websocket>WebSocket</a></code> interface</h4>
 
  <pre class=idl>[<a href=#dom-websocket title=dom-WebSocket>Constructor</a>(in DOMString url)]
interface <dfn id=websocket>WebSocket</dfn> {
  readonly attribute DOMString <a href=#dom-websocket-url title=dom-WebSocket-URL>URL</a>;

  // ready state
  const unsigned short <a href=#dom-websocket-connecting title=dom-WebSocket-CONNECTING>CONNECTING</a> = 0;
  const unsigned short <a href=#dom-websocket-open title=dom-WebSocket-OPEN>OPEN</a> = 1;
  const unsigned short <a href=#dom-websocket-closed title=dom-WebSocket-CLOSED>CLOSED</a> = 2;
  readonly attribute long <a href=#dom-websocket-readystate title=dom-WebSocket-readyState>readyState</a>;

  // networking
           attribute <a href=#function>Function</a> <a href=#handler-websocket-onopen title=handler-WebSocket-onopen>onopen</a>;
           attribute <a href=#function>Function</a> <a href=#handler-websocket-onmessage title=handler-WebSocket-onmessage>onmessage</a>;
           attribute <a href=#function>Function</a> <a href=#handler-websocket-onclosed title=handler-WebSocket-onclosed>onclosed</a>;
  void <a href=#dom-websocket-postmessage title=dom-WebSocket-postMessage>postMessage</a>(in DOMString data);
  void <a href=#dom-websocket-disconnect title=dom-WebSocket-disconnect>disconnect</a>();
};</pre>

  <p><code><a href=#websocket>WebSocket</a></code> objects must also implement the
  <code>EventTarget</code> interface. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a>

  <p>The <dfn id=dom-websocket title=dom-WebSocket><code>WebSocket(<var title="">url</var>)</code></dfn> constructor takes one argument,
  <var title="">url</var>, which specifies the <a href=#url>URL</a> to
  which to connect. When the <code>WebSocket()</code> constructor is
  invoked, the UA must run these steps:</p>

  <ol><li><p><a href=#parse-a-url title="parse a url">Parse</a> the <var title="">url</var> argument.</li>

   <li><p>If the previous step failed, or if <var title="">url</var>
   does not have a <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a>
   component whose value is either "<code title="">ws</code>" or
   "<code title="">wss</code>", when compared in an <a href=#ascii-case-insensitive>ASCII
   case-insensitive</a> manner, then throw a
   <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception.</li>

   <li><p>Return a new <code><a href=#websocket>WebSocket</a></code> object, and continue
   these steps in the background (without blocking scripts).</li>

   <li><p>Let <var title="">origin</var> be the <a href=#ascii-serialization-of-an-origin title="ASCII
   serialization of an origin">ASCII serialization</a> of the
   <a href=#origin-0>origin</a> of the script that invoked the <code title=dom-WebSocket><a href=#dom-websocket>WebSocket()</a></code> constructor.</li>

   <li><p>If the <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a>
   component of <var title="">url</var> is "<code title="">ws</code>",
   set <var title="">secure</var> to false; otherwise, the <a href=#url-scheme title=url-scheme>&lt;scheme&gt;</a> component is "<code title="">wss</code>", set <var title="">secure</var> to
   true.</li>

   <li><p>Let <var title="">host</var> be the value of the <a href=#url-host title=url-host>&lt;host&gt;</a> component of <var title="">url</var>.</li>

   <li><p>If <var title="">url</var> has a <a href=#url-port title=url-port>&lt;port&gt;</a> component, then let <var title="">port</var> be that component's value; otherwise, there is
   no explicit <var title="">port</var>.</li>

   <li><p>Let <var title="">resource name</var> be the value of the
   <a href=#url-path title=url-path>&lt;path&gt;</a> component (which might
   be empty) of <var title="">url</var>.</li>

   <li><p>If <var title="">resource name</var> is the empty string,
   set it to a single character U+002F SOLIDUS (/).</li>

   <li><p>If <var title="">url</var> has a <a href=#url-query title=url-query>&lt;query&gt;</a> component, then append a
   single U+003F QUESTION MARK (?) character to <var title="">resource
   name</var>, followed by the value of the <a href=#url-query title=url-query>&lt;query&gt;</a> component.</li>

   <li><p><a href=#establish-a-web-socket-connection>Establish a Web Socket connection</a> to a host
   <var title="">host</var>, on port <var title="">port</var> (if one
   was specified), from <var title="">origin</var>, with the flag <var title="">secure</var>, and with <var title="">resource name</var>
   as the resource name.</li>

  </ol><hr><p>The <dfn id=dom-websocket-url title=dom-WebSocket-URL><code>URL</code></dfn>
  attribute must return the value that was passed to the
  constructor.</p>

  <p>The <dfn id=dom-websocket-readystate title=dom-WebSocket-readyState><code>readyState</code></dfn>
  attribute represents the state of the connection. It can have the
  following values:</p>

  <dl><dt><dfn id=dom-websocket-connecting title=dom-WebSocket-CONNECTING><code>CONNECTING</code></dfn> (numeric value 0)</dt>

   <dd>The connection has not yet been established.</dd>

   <dt><dfn id=dom-websocket-open title=dom-WebSocket-OPEN><code>OPEN</code></dfn> (numeric value 1)</dt>

   <dd>The <a href=#web-socket-connection-is-established>Web Socket connection is established</a> and communication is possible.</dd>

   <dt><dfn id=dom-websocket-closed title=dom-WebSocket-CLOSED><code>CLOSED</code></dfn> (numeric value 2)</dt>

   <dd>The connection has been closed or could not be opened.</dd>

  </dl><p>When the object is created its <code title=dom-WebSocket-readyState><a href=#dom-websocket-readystate>readyState</a></code> must be set to
  <code title=dom-WebSocket-CONNECTING><a href=#dom-websocket-connecting>CONNECTING</a></code> (0). The
  steps executed when the constructor is invoked change this
  attribute's value.</p>

  <p>The <dfn id=dom-websocket-postmessage title=dom-WebSocket-postMessage><code>postMessage(<var title="">data</var>)</code></dfn> method transmits data using the
  connection. If the connection is not established (<code title=dom-WebSocket-readyState><a href=#dom-websocket-readystate>readyState</a></code> is not <code title=dom-WebSocket-OPEN><a href=#dom-websocket-open>OPEN</a></code>), it must raise an
  <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception. If the connection
  <em>is</em> established, then the user agent must <a href=#send-data-using-the-web-socket>send <var title="">data</var> using the Web Socket</a>.</p>

  <p>The <dfn id=dom-websocket-disconnect title=dom-WebSocket-disconnect><code>disconnect()</code></dfn>
  method must <a href=#close-the-web-socket-connection>close the Web Socket connection</a> or
  connection attempt, if any. If the connection is already closed, it
  must do nothing. Closing the connection causes a <code title=event-WebSocket-close><a href=#event-websocket-close>close</a></code> event to be fired and
  the <code title=dom-WebSocket-readyState><a href=#dom-websocket-readystate>readyState</a></code>
  attribute's value to change, as <a href=#closeWebSocket>described
  below</a>.</p>


  <h4 id=websocket-events><span class=secno>7.3.3 </span>WebSocket Events</h4>

  <p>The <dfn id=event-websocket-open title=event-WebSocket-open><code>open</code></dfn>
  event is fired when the <a href=#web-socket-connection-is-established>Web Socket connection is
  established</a>.</p>

  <p>The <dfn id=event-websocket-close title=event-WebSocket-close><code>close</code></dfn>
  event is fired when the connection is closed (whether by the author,
  calling the <code title=dom-WebSocket-disconnect><a href=#dom-websocket-disconnect>disconnect()</a></code> method, or by
  the server, or by a network error).</p>

  <p class=note>No information regarding why the connection was
  closed is passed to the application in this version of this
  specification.</p>

  <p>The <code title=event-message><a href=#event-message>message</a></code> event is fired
  when when data is received for a connection.</p>

  <hr><p>The following are the <a href=#event-handler-attributes-0>event handler attributes</a> that
  must be supported, as DOM attributes, by all objects implementing
  the <code><a href=#websocket>WebSocket</a></code> interface:</p>

  <dl><dt><dfn id=handler-websocket-onopen title=handler-WebSocket-onopen><code>onopen</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-WebSocket-open><a href=#event-websocket-open>open</a></code> event is targeted at or
   bubbles through the <code><a href=#websocket>WebSocket</a></code> object.</dd>

   <dt><dfn id=handler-websocket-onmessage title=handler-WebSocket-onmessage><code>onmessage</code></dfn></dt>

   <dd><p>Must be invoked whenever a <code title=event-message><a href=#event-message>message</a></code> event is targeted at or
   bubbles through the <code><a href=#websocket>WebSocket</a></code> object.</dd>

   <dt><dfn id=handler-websocket-onclosed title=handler-WebSocket-onclosed><code>onclosed</code></dfn></dt>

   <dd><p>Must be invoked whenever an <code title=event-WebSocket-closed>closed</code> event is targeted at or
   bubbles through the <code><a href=#websocket>WebSocket</a></code> object.</dd>

  </dl><h4 id=feedback-from-the-protocol><span class=secno>7.3.4 </span>Feedback from the protocol</h4>

  <p>When the <i><a href=#web-socket-connection-is-established>Web Socket connection is established</a></i>, the user
  agent must run the following steps:</p>

  <ol><li>

    <p>Change the <code title=dom-WebSocket-readyState><a href=#dom-websocket-readystate>readyState</a></code> attribute's value
    to <code title=dom-WebSocket-OPEN><a href=#dom-websocket-open>OPEN</a></code> (1).</p>

   </li>

   <li>

    <p><a href=#queue-a-task>Queue a task</a> to <a href=#fire-a-simple-event>fire a simple event</a>
    named <code title=event-WebSocket-open><a href=#event-websocket-open>open</a></code> at the
    <code><a href=#websocket>WebSocket</a></code> object.</p>

   </li>

  </ol><hr><p>When <i>a Web Socket message has been received</i> with text <var title="">data</var>, the user agent must create an event that uses
  the <code><a href=#messageevent>MessageEvent</a></code> interface, with the event name <code title=event-message><a href=#event-message>message</a></code>, which does not bubble, is
  cancelable, has no default action, and whose <code title=dom-MessageEvent-data><a href=#dom-messageevent-data>data</a></code> attribute is set to <var title="">data</var>, and <a href=#queue-a-task>queue a task</a> to dispatch it at
  the <code><a href=#websocket>WebSocket</a></code> object.</p>

  <hr><p id=closeWebSocket>When the <i><a href=#web-socket-connection-is-closed>Web Socket connection is
  closed</a></i>, the <code title=dom-WebSocket-readyState><a href=#dom-websocket-readystate>readyState</a></code> attribute's value
  must be changed to <code title=dom-WebSocket-CLOSED><a href=#dom-websocket-closed>CLOSED</a></code>
  (2), and the user agent must <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-simple-event>fire
  a simple event</a> named <code title=event-WebSocket-close><a href=#event-websocket-close>close</a></code> at the
  <code><a href=#websocket>WebSocket</a></code> object.</p>

  <hr><p>The <a href=#task-source>task source</a> for all <a href=#concept-task title=concept-task>tasks</a> <a href=#queue-a-task title="queue a
  task">queued</a> in this section is the <dfn id=web-socket-task-source>Web Socket task
  source</dfn>.</p>



  <h4 id=websocket-protocol title="This protocol enables two-way
  communication between a user agent running untrusted code running in
  a controlled environment to a remote host that understands the
  protocol. It is intended to fail to communicate with servers of
  pre-existing protocols like SMTP or HTTP, while allowing HTTP
  servers to opt-in to supporting this protocol if desired. It is
  designed to be easy to implement on the server side."><span class=secno>7.3.5 </span>The Web Socket
  protocol</h4>

  <div class=no-rfc>
   <p class=note>This section will be extracted into an RFC in due
   course.</p>
  </div>

  <h5 id=introduction-5><span class=secno>7.3.5.1 </span>Introduction</h5>

  <p class=XXX>...</p>

  <h5 id=client-side-requirements><span class=secno>7.3.5.2 </span>Client-side requirements</h5>

  <p><em>This section only applies to user agents, not to
  servers.</em></p>

  <p class=note>This specification doesn't currently define a limit
  to the number of simultaneous connections that a client can
  establish to a server.</p>


  <h6 id=handshake><span class=secno>7.3.5.2.1 </span>Handshake</h6>

  <p>When the user agent is to <dfn id=establish-a-web-socket-connection>establish a Web Socket
  connection</dfn> to a host <var title="">host</var>, optionally on
  port <var title="">port</var>, from an origin <var title="">origin</var>, with a flag <var title="">secure</var>, and
  with a particular <var title="">resource name</var>, it must run the
  following steps:</p>

  <ol><li>

    <p>If there is no explicit <var title="">port</var>, then: if <var title="">secure</var> is false, let <var title="">port</var> be 81,
    otherwise let <var title="">port</var> be 815.</p>

   </li>

   <li>

    <p>If the user agent is configured to use a proxy to connect to
    host <var title="">host</var> and/or port <var title="">port</var>, then connect to that proxy and ask it to open
    a TCP/IP connection to the host given by <var title="">host</var>
    and the port given by <var title="">port</var>.</p>

    <div class=example>

     <p>For example, if the user agent uses an HTTP proxy for all
     traffic, then if it was to try to connect to port 80 on server
     example.com, it might send the following lines to the proxy
     server:</p>

     <pre>CONNECT example.com HTTP/1.1</pre>

     <p>If there was a password, the connection might look like:</p>

     <pre>CONNECT example.com HTTP/1.1
Proxy-authorization: Basic ZWRuYW1vZGU6bm9jYXBlcyE=</pre>

    </div>

    <p>Otherwise, if the user agent is not configured to use a proxy,
    then open a TCP/IP connection to the host given by <var title="">host</var> and the port given by <var title="">port</var>.</p>

   </li>

   <li><p>If the connection could not be opened, then <a href=#fail-the-web-socket-connection>fail the
   Web Socket connection</a> and abort these steps.</li>

   <li><p>If <var title="">secure</var> is true, perform a TLS
   handshake over the connection. If this fails (e.g. the server's
   certificate could not be verified), then <a href=#fail-the-web-socket-connection>fail the Web Socket
   connection</a> and abort these steps. Otherwise, all further
   communication on this channel must run through the encrypted
   tunnel. <a href=#refsRFC2246>[RFC2246]</a></li>

   <li>

    <p>Send the following bytes to the remote side (the server):</p>

    <pre>47 45 54 20</pre>

    <p>Send the <var title="">resource name</var> value, encoded as
    US-ASCII.</p>

    <p>Send the following bytes:</p>

    <pre>20 48 54 54 50 2f 31 2e  31 0d 0a 55 70 67 72 61
64 65 3a 20 57 65 62 53  6f 63 6b 65 74 0d 0a 43
6f 6e 6e 65 63 74 69 6f  6e 3a 20 55 70 67 72 61
64 65 0d 0a</pre>

    <p class=note>The string "GET&nbsp;", the path,
    "&nbsp;HTTP/1.1", CRLF, the string "Upgrade:&nbsp;WebSocket",
    CRLF, and the string "Connection:&nbsp;Upgrade", CRLF.</p>

   </li>

   <li>

    <p>Send the following bytes:</p>

    <pre>48 6f 73 74 3a 20</pre>

    <p>Send the <var title="">host</var> value, encoded as US-ASCII
    and <a href=#converted-to-lowercase>converted to lowercase</a>, if it represents a host
    name (and not an IP address).</p>

    <p>Send the following bytes:</p>

    <pre>0d 0a</pre>

    <p class=note>The string "Host:&nbsp;", the host, and CRLF.</p>

   </li>

   <li>

    <p>Send the following bytes:</p>

    <pre>4f 72 69 67 69 6e 3a 20</pre>

    <p>Send the <var title="">origin</var> value, encoded as US-ASCII
    and <a href=#converted-to-lowercase>converted to lowercase</a>.</p>

    <p>Send the following bytes:</p>

    <pre>0d 0a</pre>

    <p class=note>The string "Origin:&nbsp;", the origin, and CRLF.</p>

   </li>

   <li>

    <p>If the client has any authentication information or cookies
    that would be relevant to a resource accessed over HTTP, if <var title="">secure</var> is false, or HTTPS, if it is true, on host
    <var title="">host</var>, port <var title="">port</var>, with <var title="">resource name</var> as the path (and possibly query
    parameters), then HTTP headers that would be appropriate for that
    information should be sent at this point. <a href=#refsRFC2616>[RFC2616]</a> <a href=#refsRFC2109>[RFC2109]</a> <a href=#refsRFC2965>[RFC2965]</a></p>

    <p>Each header must be on a line of its own (each ending with a CR
    LF sequence). For the purposes of this step, each header must not
    be split into multiple lines (despite HTTP otherwise allowing this
    with continuation lines).</p>

    <div class=example>

     <p>For example, if the server had a username and password that
     applied to <code title="">http://example.com/socket</code>, and
     the Web Socket was being opened to <code title="">ws://example.com:80/socket</code>, it could send
     them:</p>

     <pre>Authorization: Basic d2FsbGU6ZXZl</pre>

     <p>However, it would not send them if the Web Socket was being
     opened to <code title="">ws://example.com/socket</code>, as that
     uses a different port (81, not 80).</p>

    </div>

   </li>

   <li>

    <p>Send the following bytes:</p>

    <pre>0d 0a</pre>

    <p class=note>Just a CRLF (a blank line).</p>

   </li>

   <li>

    <p>Read the first 85 bytes from the server. If the connection
    closes before 85 bytes are received, or if the first 85 bytes
    aren't exactly equal to the following bytes, then <a href=#fail-the-web-socket-connection>fail the
    Web Socket connection</a> and abort these steps.</p>

    <pre>48 54 54 50 2f 31 2e 31  20 31 30 31 20 57 65 62
20 53 6f 63 6b 65 74 20  50 72 6f 74 6f 63 6f 6c
20 48 61 6e 64 73 68 61  6b 65 0d 0a 55 70 67 72
61 64 65 3a 20 57 65 62  53 6f 63 6b 65 74 0d 0a
43 6f 6e 6e 65 63 74 69  6f 6e 3a 20 55 70 67 72
61 64 65 0d 0a</pre>

    <p class=note>The string
    "HTTP/1.1&nbsp;101&nbsp;Web&nbsp;Socket&nbsp;Protocol&nbsp;Handshake", CRLF, the
    string "Upgrade:&nbsp;WebSocket", CRLF, the string
    "Connection:&nbsp;Upgrade", CRLF.</p>

    <!-- v2 if we ever support the server requiring credentials, this
    is where it goes -->

   </li>

   <li><p>Let <var title="">headers</var> be a list of name-value
   pairs, initially empty.</li>

   <li id=ws-ua-header-loop><p><em>Header</em>: Let <var title="">name</var> and <var title="">value</var> be empty byte
   arrays.</li>

   <li>

    <p>Read a byte from the server.</p>

    <p>If the connection closes before this byte is received, then
    <a href=#fail-the-web-socket-connection>fail the Web Socket connection</a> and abort these
    steps.</p>

    <p>Otherwise, handle the byte as described in the appropriate
    entry below:</p>

    <dl class=switch><dt>If the byte is 0x0d (ASCII CR)</dt>

     <dd>If the <var title="">name</var> byte array is empty, then
     jump to the <a href=#ws-ua-headers-processing>headers
     processing</a> step. Otherwise, <a href=#fail-the-web-socket-connection>fail the Web Socket
     connection</a> and abort these steps.</dd>


     <dt>If the byte is 0x0a (ASCII LF)</dt>

     <dd><a href=#fail-the-web-socket-connection>Fail the Web Socket connection</a> and abort these
     steps.</dd>


     <dt>If the byte is 0x3a (ASCII ":")</dt>

     <dd>Move on to the next step.</dd>


     <dt>If the byte is in the range 0x41 .. 0x5a (ASCII "A" .. "Z")</dt>

     <dd>Append a byte whose value is the byte's value plus 0x20 to
     the <var title="">name</var> byte array and redo this step for
     the next byte.</dd>


     <dt>Otherwise</dt>

     <dd>Append the byte to the <var title="">name</var> byte
     array and redo this step for the next byte.</dd>

    </dl><p class=note>This reads a header name, terminated by a colon,
    converting upper-case ASCII letters to lowercase, and aborting if
    a stray CR or LF is found.</p>

   </li>

   <li>

    <p>Read a byte from the server.</p>

    <p>If the connection closes before this byte is received, then
    <a href=#fail-the-web-socket-connection>fail the Web Socket connection</a> and abort these
    steps.</p>

    <p>Otherwise, handle the byte as described in the appropriate
    entry below:</p>

    <dl class=switch><dt>If the byte is 0x20 (ASCII space)</dt>

     <dd>Ignore the byte and move on to the next step.</dd>


     <dt>Otherwise</dt>

     <dd>Treat the byte as described by the list in the next step,
     then move on to that next step for real.</dd>

    </dl><p class=note>This skips past a space character after the colon,
    if necessary.</p>

   </li>

   <li>

    <p>Read a byte from the server.</p>

    <p>If the connection closes before this byte is received, then
    <a href=#fail-the-web-socket-connection>fail the Web Socket connection</a> and abort these
    steps.</p>

    <p>Otherwise, handle the byte as described in the appropriate
    entry below:</p>

    <dl class=switch><dt>If the byte is 0x0d (ASCII CR)</dt>

     <dd>Move on to the next step.</dd>


     <dt>If the byte is 0x0a (ASCII LF)</dt>

     <dd><a href=#fail-the-web-socket-connection>Fail the Web Socket connection</a> and abort these
     steps.</dd>


     <dt>Otherwise</dt>

     <dd>Append the byte to the <var title="">name</var> byte array
     and redo this step for the next byte.</dd>

    </dl><p class=note>This reads a header value, terminated by a
    CRLF.</p>

   </li>

   <li>

    <p>Read a byte from the server.</p>

    <p>If the connection closes before this byte is received, or if
    the byte is not a 0x0a byte (ASCII LF), then <a href=#fail-the-web-socket-connection>fail the Web
    Socket connection</a> and abort these steps.</p>

    <p class=note>This skips past the LF byte of the CRLF after the
    header.</p>

   </li>

   <li>

    <p>Append an entry to the <var title="">headers</var> list that
    has the name given by the string obtained by interpreting the <var title="">name</var> byte array as a UTF-8 byte stream and the
    value given by the string obtained by interpreting the <var title="">value</var> byte array as a UTF-8 byte stream.</p>

   </li>

   <li>

    <p>Return to the <a href=#ws-ua-header-loop>header</a> step
    above.</p>

   </li>

   <li id=ws-ua-headers-processing>

    <p><em>Headers processing</em>: If there is not exactly one entry
    in the <var title="">headers</var> list whose name is "<code title="">websocket-origin</code>", or if there is not exactly one
    entry in the <var title="">headers</var> list whose name is "<code title="">websocket-location</code>", or if there are any entries
    in the <var title="">headers</var> list whose names are the empty
    string, then <a href=#fail-the-web-socket-connection>fail the Web Socket connection</a> and abort
    these steps.</p>

   </li>

   <li>

    <p>Handle each entry in the <var title="">headers</var> list as
    follows:</p>

    <dl class=switch><dt>If the entry's name is "<code title="">websocket-origin</code>"</dt>

     <dd><p>If the value is not exactly equal to <var title="">origin</var>, <a href=#converted-to-lowercase>converted to lowercase</a>, then
     <a href=#fail-the-web-socket-connection>fail the Web Socket connection</a> and abort these
     steps.</dd>


     <dt>If the entry's name is "<code title="">websocket-location</code>"</dt>

     <dd>

      <p>If the value is not exactly equal to a string consisting of
      the following components in the same order, then <a href=#fail-the-web-socket-connection>fail the
      Web Socket connection</a> and abort these steps:</p>

      <ol><li>The string "<code title="">http</code>" if <var title="">secure</var> is false and "<code title="">https</code>" if <var title="">secure</var> is
       true</li>

       <li>The three characters "<code title="">://</code>".</li>

       <li>The value of <var title="">host</var>.</li>

       <li>If <var title="">secure</var> is false and <var title="">port</var> is not 81, or if <var title="">secure</var>
       is true and <var title="">port</var> is not 815: a "<code title="">:</code>" character followed by the value of <var title="">port</var>.</li>

       <li>The value of <var title="">resource name</var>.</li>

      </ol></dd>


     <dt>If the entry's name is "<code title="">set-cookie</code>" or
     "<code title="">set-cookie2</code>" or another cookie-related
     header name</dt>

     <dd><p>Handle the cookie as defined by the appropriate spec, with
     the resource being the one with the host <var title="">host</var>, the port <var title="">port</var>, the path
     (and possibly query parameters) <var title="">resource
     name</var>, and the scheme <code title="">http</code> if <var title="">secure</var> is false and <code title="">https</code> if
     <var title="">secure</var> is true. <a href=#refsRFC2109>[RFC2109]</a> <a href=#refsRFC2965>[RFC2965]</a></dd>


     <dt>Any other name</dt>

     <dd>Ignore it.</dd>

    </dl></li>

   <li>

    <p>The <dfn id=web-socket-connection-is-established>Web Socket connection is established</dfn>. Now the
    user agent must send and receive to and from the connection as
    described in the next section.</p>

   </li>

  </ol><p>To <dfn id=fail-the-web-socket-connection>fail the Web Socket connection</dfn>, the user agent must
  <a href=#close-the-web-socket-connection>close the Web Socket connection</a>, and may report the
  problem to the user (which would be especially useful for
  developers). However, user agents must not convey the failure
  information to the script that attempted the connection in a way
  distinguishable from the Web Socket being closed normally.</p>


  <h6 id=data-framing><span class=secno>7.3.5.2.2 </span>Data framing</h6>

  <p>Once a <a href=#web-socket-connection-is-established>Web Socket connection is established</a>, the
  user agent must run through the following state machine for the
  bytes sent by the server.</p>

  <ol><li>

    <p>Try to read a byte from the server. Let <var title="">frame
    type</var> be that byte.</p>

    <p>If no byte could be read because the <a href=#web-socket-connection-is-closed>Web Socket
    connection is closed</a>, then abort.</p>

   </li>

   <li>

    <p>Handle the <var title="">frame type</var> byte as follows:</p>

    <dl><dt>If the high-order bit of the <var title="">frame type</var>
     byte is set (i.e. if <var title="">frame type</var> <i title="">and</i>ed with 0x80 returns 0x80)</dt>

     <dd>

      <p>Run these steps. If at any point during these steps a read is
      attempted but fails because the <a href=#web-socket-connection-is-closed>Web Socket connection is
      closed</a>, then abort.</p>

      <ol><li><p>Let <var title="">length</var> be zero.</li>

       <li id=ws-cd-length><p><em>Length</em>: Read a byte, let <var title="">b</var> be that byte.</li>

       <li><p>Let <var title="">b<sub title="">v</sub></var> be
       integer corresponding to the low 7 bits of <var title="">b</var>
       (the value you would get by <i>and</i>ing <var title="">b</var>
       with 0x7f).</li>

       <li><p>Multiply <var title="">length</var> by 128, add <var title="">b<sub title="">v</sub></var> to that result, and store
       the final result in <var title="">length</var>.</li>

       <li><p>If the high-order bit of <var title="">b</var> is set
       (i.e. if <var title="">b</var> <i title="">and</i>ed with 0x80
       returns 0x80), then return to the step above labeled <a href=#ws-cd-length><i>length</i></a>.</li>

       <li><p>Read <var title="">length</var> bytes.</li>

       <li><p>Discard the read bytes.</li>

      </ol></dd>

     <dt>If the high-order bit of the <var title="">frame type</var>
     byte is <em>not</em> set (i.e. if <var title="">frame type</var>
     <i title="">and</i>ed with 0x80 returns 0x00)</dt>

     <dd>

      <p>Run these steps. If at any point during these steps a read is
      attempted but fails because the <a href=#web-socket-connection-is-closed>Web Socket connection is
      closed</a>, then abort.</p>

      <ol><li><p>Let <var title="">raw data</var> be an empty byte array.</li>

       <li id=ws-cd-data><p><em>Data</em>: Read a byte, let <var title="">b</var> be that byte.</li>

       <li><p>If <var title="">b</var> is not 0xff, then append <var title="">b</var> to <var title="">raw data</var> and return to
       the previous step (labeled <a href=#ws-cd-data><i>data</i></a>).</li>

       <li><p>Interpret <var title="">raw data</var> as a UTF-8
       string, and store that string in <var title="">data</var>.</p>

       <li><p>If <var title="">frame type</var> is 0x00, then <dfn id=a-message-has-been-received>a
       message has been received</dfn> with text <var title="">data</var>.  Otherwise, discard the data.</li>

      </ol></dd>

    </dl></li>

   <li><p>Return to the first step to read the next byte.</li>

  </ol><p>If the user agent is faced with content that is too large to be
  handled appropriately, then it must <a href=#fail-the-web-socket-connection>fail the Web Socket
  connection</a>.</p>

  <hr><p>Once a <a href=#web-socket-connection-is-established>Web Socket connection is established</a>, the
  user agent must use the following steps to <dfn id=send-data-using-the-web-socket>send <var title="">data</var> using the Web Socket</dfn>:</p>

  <ol><li><p>Send a 0x00 byte to the server.</li>

   <li><p>Encode <var title="">data</var> using UTF-8 and send the
   resulting byte stream to the server.</li>

   <li><p>Send a 0xff byte to the server.</li>

  </ol><!-- v2: People often request the ability to send binary blobs over
  this API; we should also look into allowing name/value pairs,
  arrays, and numbers using postMessage() instead of just strings and
  binary data. --><h5 id=server-side-requirements><span class=secno>7.3.5.3 </span>Server-side requirements</h5>

  <p><em>This section only applies to servers.</em></p> <!-- XXX that's not a defined conformance class -->

  <h6 id=minimal-handshake><span class=secno>7.3.5.3.1 </span>Minimal handshake</h6>

  <p class=note>This section describes the minimal requirements for
  a server-side implementation of Web Sockets.</p>

  <p>Listen on a port for TCP/IP. Upon receiving a connection request,
  open a connection and send the following bytes back to the
  client:</p>

  <pre>48 54 54 50 2f 31 2e 31  20 31 30 31 20 57 65 62
20 53 6f 63 6b 65 74 20  50 72 6f 74 6f 63 6f 6c
20 48 61 6e 64 73 68 61  6b 65 0d 0a 55 70 67 72
61 64 65 3a 20 57 65 62  53 6f 63 6b 65 74 0d 0a
43 6f 6e 6e 65 63 74 69  6f 6e 3a 20 55 70 67 72
61 64 65 0d 0a</pre>

  <p>Send the string "<code title="">WebSocket-Origin</code>" followed
  by a U+003A COLON (":") followed by the <a href=#ascii-serialization-of-an-origin title="ASCII
  serialization of an origin">ASCII serialization</a> of the origin
  from which the server is willing to accept connections, followed by
  a CRLF pair (0x0d 0x0a).</p>

  <div class=example>

   <p>For instance:</p>

   <pre>WebSocket-Origin: http://example.com</pre>

  </div>

  <p>Send the string "<code title="">WebSocket-Location</code>"
  followed by a U+003A COLON (":") followed by the <a href=#url>URL</a> of
  the Web Socket script, followed by a CRLF pair (0x0d 0x0a).</p>

  <div class=example>

   <p>For instance:</p>

   <pre>WebSocket-Location: ws://example.com:80/demo</pre>

  </div>

  <p>Send another CRLF pair (0x0d 0x0a).</p>

  <p>Read (and discard) data from the client until four bytes 0x0d
  0x0a 0x0d 0x0a are read.</p>

  <p>If the connection isn't dropped at this point, go to the <a href=#ws-sd-framing>data framing</a> section.</p>


  <h6 id=handshake-details><span class=secno>7.3.5.3.2 </span>Handshake details</h6>

  <p>The previous section ignores the data that is transmitted by the
  client during the handshake.</p>

  <p>The data sent by the client consists of a number of fields
  separated by CR LF pairs (bytes 0x0d 0x0a).</p>

  <p>The first field consists of three tokens separated by space
  characters (byte 0x20). The middle token is the path being
  opened. If the server supports multiple paths, then the server
  should echo the value of this field in the initial handshake, as
  part of the <a href=#url>URL</a> given on the <code title="">WebSocket-Location</code> line (after the appropriate
  scheme and host).</p>

  <p>The remaining fields consist of name-value pairs, with the name
  part separated from the value part by a colon and a space (bytes
  0x3a 0x20). Of these, several are interesting:</p>

  <dl><dt>Host (bytes 48 6f 73 74)</dt>

   <dd>

    <p>The value gives the hostname that the client intended to use
    when opening the Web Socket. It would be of interest in particular
    to virtual hosting environments, where one server might serve
    multiple hosts, and might therefore want to return different
    data.</p>

    <p>The right host has to be output as part of the <a href=#url>URL</a>
    given on the <code title="">WebSocket-Location</code> line of the
    handshake described above, to verify that the server knows that it
    is really representing that host.</p>

   </dd>

   <dt>Origin (bytes 4f 72 69 67 69 6e)</dt>

   <dd>

    <p>The value gives the scheme, hostname, and port (if it's not the
    default port for the given scheme) of the page that asked the
    client to open the Web Socket. It would be interesting if the
    server's operator had deals with operators of other sites, since
    the server could then decide how to respond (or indeed,
    <em>whether</em> to respond) based on which site was requesting a
    connection.</p>

    <p>If the server supports connections from more than one origin,
    then the server should echo the value of this field in the initial
    handshake, on the <code title="">WebSocket-Origin</code> line.</p>

   </dd>

   <dt>Other fields</dt>

   <dd>

    <p>Other fields can be used, such as "<code title="">Cookie</code>" or "<code>Authorization</code>", for
    authentication purposes.</p>

   </dd>

  </dl><h6 id=ws-sd-framing><span class=secno>7.3.5.3.3 </span>Data framing</h6>

  <p class=note>This section only describes how to handle content
  that this specification allows user agents to send (text). It
  doesn't handle any arbitrary content in the same way that the
  requirements on user agents defined earlier handle any content
  including possible future extensions to the protocols.</p>

  <p>The server should run through the following steps to process the
  bytes sent by the client:</p>

  <ol><li><p>Read a byte from the client. Assuming everything is going
   according to plan, it will be a 0x00 byte. Behaviour for the server
   is undefined if the byte is not 0x00.</li>

   <li><p>Let <var title="">raw data</var> be an empty byte
   array.</li>

   <li id=ws-sd-data><p><i>Data</i>: Read a byte, let <var title="">b</var> be that byte.</li>

   <li><p>If <var title="">b</var> is not 0xff, then append <var title="">b</var> to <var title="">raw data</var> and return to the
   previous step (labeled <a href=#ws-sd-data><i>data</i></a>).</li>

   <li><p>Interpret <var title="">raw data</var> as a UTF-8 string,
   and apply whatever server-specific processing should occur for the
   resulting string.</p>

   <li><p>Return to the first step to read the next byte.</li>

  </ol><hr><p>The server should run through the following steps to send strings
  to the client:</p>

  <ol><li><p>Send a 0x00 byte to the client to indicate the start of a
   string.</li>

   <li><p>Encode <var title="">data</var> using UTF-8 and send the
   resulting byte stream to the client.</li>

   <li><p>Send a 0xff byte to the client to indicate the end of the
   message.</li>

  </ol><h5 id=closing-the-connection><span class=secno>7.3.5.4 </span>Closing the connection</h5>

  <p>To <dfn id=close-the-web-socket-connection>close the Web Socket connection</dfn>, either the user
  agent or the server closes the TCP/IP connection. There is no
  closing handshake. Whether the user agent or the server closes the
  connection, it is said that the <dfn id=web-socket-connection-is-closed>Web Socket connection is
  closed</dfn>.</p>

  <p>Servers may <a href=#close-the-web-socket-connection>close the Web Socket connection</a> whenever
  desired.</p>

  <p>User agents should not <a href=#close-the-web-socket-connection>close the Web Socket
  connection</a> arbitrarily.</p>


  <h5 id=security-considerations><span class=secno>7.3.5.5 </span>Security considerations</h5>

  <p class=XXX>...</p>


  <h5 id=iana-considerations><span class=secno>7.3.5.6 </span>IANA considerations</h5>

  <p class=XXX>...(two URI schemes, two ports, HTTP Upgrade keyword)</p>


  <h3 id=crossDocumentMessages><span class=secno>7.4 </span><dfn>Cross-document messaging</dfn></h3>

  <p>Web browsers, for security and privacy reasons, prevent documents
  in different domains from affecting each other; that is, cross-site
  scripting is disallowed.</p>

  <p>While this is an important security feature, it prevents pages
  from different domains from communicating even when those pages are
  not hostile. This section introduces a messaging system that allows
  documents to communicate with each other regardless of their source
  domain, in a way designed to not enable cross-site scripting
  attacks.</p>

  <p>The <a href=#task-source>task source</a> for the <a href=#concept-task title=concept-task>tasks</a> in <a href=#crossDocumentMessages>cross-document
  messaging</a> is the <dfn id=posted-message-task-source>posted message task source</dfn>.</p>


  <h4 id=introduction-6><span class=secno>7.4.1 </span>Introduction</h4>

  <p><em>This section is non-normative.</em></p>

  <div class=example>

   <p>For example, if document A contains an <code><a href=#the-iframe-element>iframe</a></code>
   element that contains document B, and script in document A calls
   <code title=dom-window-postMessage-2><a href=#dom-window-postmessage-2>postMessage()</a></code> on the
   <code><a href=#window>Window</a></code> object of document B, then a message event will
   be fired on that object, marked as originating from the
   <code><a href=#window>Window</a></code> of document A.  The script in document A might
   look like:</p>

   <pre>var o = document.getElementsByTagName('iframe')[0];
o.contentWindow.postMessage('Hello world', 'http://b.example.org/');</pre>

   <p>To register an event handler for incoming events, the script
   would use <code title="">addEventListener()</code> (or similar
   mechanisms).  For example, the script in document B might look
   like:</p>

   <pre>window.addEventListener('message', receiver, false);
function receiver(e) {
  if (e.origin == 'http://example.com') {
    if (e.data == 'Hello world') {
      e.source.postMessage('Hello', e.origin);
    } else {
      alert(e.data);
    }
  }
}</pre>

   <p>This script first checks the domain is the expected domain, and
   then looks at the message, which it either displays to the user, or
   responds to by sending a message back to the document which sent
   the message in the first place.</p>

  </div>


  <h4 id=security-5><span class=secno>7.4.2 </span>Security</h4>

  <h5 id=authors><span class=secno>7.4.2.1 </span>Authors</h5>

  <p class=warning>Use of this API requires extra care to protect
  users from hostile entities abusing a site for their own
  purposes.</p>

  <p>Authors should check the <code title=dom-MessageEvent-origin><a href=#dom-messageevent-origin>origin</a></code> attribute to ensure
  that messages are only accepted from domains that they expect to
  receive messages from. Otherwise, bugs in the author's message
  handling code could be exploited by hostile sites.</p>

  <p>Authors should not use the wildcard keyword ("*") in the <var title="">targetOrigin</var> argument in messages that contain any
  confidential information, as otherwise there is no way to guarantee
  that the message is only delivered to the recipient to which it was
  intended.</p>


  <h5 id=user-agents><span class=secno>7.4.2.2 </span>User agents</h5>

  <p>The integrity of this API is based on the inability for scripts
  of one <a href=#origin-0>origin</a> to post arbitrary events (using <code title="">dispatchEvent()</code> or otherwise) to objects in other
  origins (those that are not the <a href=#same-origin title="same
  origin">same</a>).</p>

  <p class=note>Implementors are urged to take extra care in the
  implementation of this feature. It allows authors to transmit
  information from one domain to another domain, which is normally
  disallowed for security reasons. It also requires that UAs be
  careful to allow access to certain properties but not others.</p>


  <h4 id=posting-messages><span class=secno>7.4.3 </span>Posting messages</h4>

  <p>When a script invokes the <dfn id=dom-window-postmessage-2 title=dom-window-postMessage-2><code>postMessage(<var title="">message</var>, <var title="">targetOrigin</var>)</code></dfn> method (with only two
  arguments) on a <code><a href=#window>Window</a></code> object, the user agent must
  follow these steps:

  <ol><li>

    <p>If the value of the <var title="">targetOrigin</var> argument
    is not a single U+002A ASTERISK character ("*"), and <a href=#resolve-a-url title="resolve a url">resolving</a> it relative to the
    <a href=#first-script>first script</a>'s <a href="#script's-base-url" title="script's base URL">base
    URL</a> either fails or results in a <a href=#url>URL</a> with a
    <code title=url-host-specific><a href=#url-host-specific>&lt;host-specific&gt;</a></code>
    component that is neither empty nor a single U+002F SOLIDUS
    character (/), then throw a <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception and
    abort the overall set of steps.</p>

   </li>

   <li>

    <p>Let <var title="">message clone</var> be the result of
    obtaining a <a href=#structured-clone>structured clone</a> of the <var title="">message</var> argument. If this throws an exception, then
    throw that exception and abort these steps.</p>

   </li>

   <li>

    <p>Return from the <code title=dom-window-postMessage-2><a href=#dom-window-postmessage-2>postMessage()</a></code> method, but
    asynchronously continue running these steps.</p>

   </li>

   <li>

    <p>If the <var title="">targetOrigin</var> argument has a value
    other than a single literal U+002A ASTERISK character ("*"), and
    the <code>Document</code> of the <code><a href=#window>Window</a></code> object on
    which the method was invoked does not have the <a href=#same-origin>same
    origin</a> as <var title="">targetOrigin</var>, then abort
    these steps silently.</p>

   </li>

   <li>

    <p>Create an event that uses the <code><a href=#messageevent>MessageEvent</a></code>
    interface, with the event name <code title=event-message><a href=#event-message>message</a></code>, which does not bubble, is
    cancelable, and has no default action. The <code title=dom-MessageEvent-data><a href=#dom-messageevent-data>data</a></code> attribute must be set to
    the value of <var title="">message clone</var>, the <code title=dom-MessageEvent-origin><a href=#dom-messageevent-origin>origin</a></code> attribute must be
    set to the <a href=#unicode-serialization-of-an-origin title="Unicode serialization of an
    origin">Unicode serialization</a> of the <a href=#origin-0>origin</a> of
    the script that invoked the method, and the <code title=dom-MessageEvent-source><a href=#dom-messageevent-source>source</a></code> attribute must be
    set to the <a href="#script's-global-object">script's global object</a>.</p> <!-- invariant:
    the global scope is always a Window if the script can see this
    method -->

   </li>

   <li>

    <p><a href=#queue-a-task>Queue a task</a> to dispatch the event created in the
    previous step at the <code><a href=#window>Window</a></code> object on which the
    method was invoked. The <a href=#task-source>task source</a> for this <a href=#concept-task title=concept-task>task</a> is the <a href=#posted-message-task-source>posted message task
    source</a>.</p>

   </li>

  </ol><h4 id=posting-messages-with-message-ports><span class=secno>7.4.4 </span>Posting messages with message ports</h4>

  <p>When a script invokes the <dfn id=dom-window-postmessage-3 title=dom-window-postMessage-3><code>postMessage(<var title="">message</var>, <var title="">messagePort</var>, <var title="">targetOrigin</var>)</code></dfn> method (with three
  arguments) on a <code><a href=#window>Window</a></code> object, the user agent must
  follow these steps:

  <ol><!-- EXCEPT WHERE NOTED, THESE STEPS ARE IDENTICAL TO THE PREVIOUS SECTION --><!-- one exception is the use of -3 instead of -2 in the xrefs --><li>

    <p>If the value of the <var title="">targetOrigin</var> argument
    is not a single U+002A ASTERISK character ("*"), and <a href=#resolve-a-url title="resolve a url">resolving</a> it relative to the
    <a href=#first-script>first script</a>'s <a href="#script's-base-url" title="script's base URL">base
    URL</a> either fails or results in a <a href=#url>URL</a> with a
    <code title=url-host-specific><a href=#url-host-specific>&lt;host-specific&gt;</a></code>
    component that is neither empty nor a single U+002F SOLIDUS
    character (/), then throw a <code><a href=#syntax_err>SYNTAX_ERR</a></code> exception and
    abort the overall set of steps.</p>

   </li>

   <li>

    <p>Let <var title="">message clone</var> be the result of
    obtaining a <a href=#structured-clone>structured clone</a> of the <var title="">message</var> argument. If this throws an exception, then
    throw that exception and abort these steps.</p>

   </li>

   <li> <!-- NEW STEP -->

    <p>If the <var title="">messagePort</var> argument is null, then
    act as if the method had just been <a href=#dom-window-postmessage-2 title=dom-window-postMessage-2>called with two arguments</a>,
    <var title="">message</var> and <var title="">targetOrigin</var>.</p>

   </li>

   <li> <!-- NEW STEP -->

    <p>Try to obtain a <var title="">new port</var> by <a href=#clone-a-port title="clone a port">cloning</a> the <var title="">messagePort</var> argument with the <code><a href=#window>Window</a></code>
    object on which the method was invoked as the owner of the
    clone. If this returns an exception, then throw that exception and
    abort these steps.</p>

   </li>

   <li>

    <p>Return from the <code title=dom-window-postMessage-3><a href=#dom-window-postmessage-3>postMessage()</a></code> method, but
    asynchronously continue running these steps.</p>

   </li>

   <li>

    <p>If the <var title="">targetOrigin</var> argument has a value
    other than a single literal U+002A ASTERISK character ("*"), and
    the <code>Document</code> of the <code><a href=#window>Window</a></code> object on
    which the method was invoked does not have the <a href=#same-origin>same
    origin</a> as <var title="">targetOrigin</var>, then abort
    these steps silently.</p>

   </li>

   <li>

    <p>Create an event that uses the <code><a href=#messageevent>MessageEvent</a></code>
    interface, with the event name <code title=event-message><a href=#event-message>message</a></code>, which does not bubble, is
    cancelable, and has no default action. The <code title=dom-MessageEvent-data><a href=#dom-messageevent-data>data</a></code> attribute must be set to
    the value of <var title="">message clone</var>, the <code title=dom-MessageEvent-origin><a href=#dom-messageevent-origin>origin</a></code> attribute must be
    set to the <a href=#unicode-serialization-of-an-origin title="Unicode serialization of an
    origin">Unicode serialization</a> of the <a href=#origin-0>origin</a> of
    the script that invoked the method, and the <code title=dom-MessageEvent-source><a href=#dom-messageevent-source>source</a></code> attribute must be
    set to the <a href="#script's-global-object">script's global object</a>.</p> <!-- invariant:
    the global scope is always a Window if the script can see this
    method -->

   </li>

   <li> <!-- NEW STEP -->
 
    <p>Let the <code title=dom-MessageEvent-messagePort><a href=#dom-messageevent-messageport>messagePort</a></code> attribute
    of the event be the <var title="">new port</var>.</p>

   </li>

   <li>

    <p><a href=#queue-a-task>Queue a task</a> to dispatch the event created in the
    previous step at the <code><a href=#window>Window</a></code> object on which the
    method was invoked. The <a href=#task-source>task source</a> for this <a href=#concept-task title=concept-task>task</a> is the <a href=#posted-message-task-source>posted message task
    source</a>.</p>

   </li>

  </ol><p class=note>These steps, with the exception of the second and
  third steps and the penultimate step, are identical to those in the
  previous section.</p>

  <!-- XXX merge this section and the previous section when
  implementations have shipped postMessage(). Anne asked that these
  sections be kept separate so that implementors can avoid getting
  confused with the 'port' step. -->




  <h3 id=channel-messaging><span class=secno>7.5 </span><dfn>Channel messaging</dfn></h3>

  <h4 id=introduction-7><span class=secno>7.5.1 </span>Introduction</h4>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>An introduction to the channel and port
  APIs.</p>



  <h4 id=message-channels><span class=secno>7.5.2 </span>Message channels</h4>

  <pre class=idl>[<a href=#dom-messagechannel title=dom-MessageChannel>Constructor</a>]
interface <dfn id=messagechannel>MessageChannel</dfn> {
  readonly attribute <a href=#messageport>MessagePort</a> <a href=#dom-channel-port1 title=dom-channel-port1>port1</a>;
  readonly attribute <a href=#messageport>MessagePort</a> <a href=#dom-channel-port2 title=dom-channel-port2>port2</a>;
};</pre>

  <p>When the <dfn id=dom-messagechannel title=dom-MessageChannel><code>MessageChannel()</code></dfn>
  constructor is called, it must run the following algorithm:</p>

  <ol><li><p><a href=#create-a-new-messageport-object>Create a new <code>MessagePort</code> object</a>
   owned by the <a href="#script's-global-object">script's global object</a>, and let <var title="">port1</var> be that object.</li>

   <li><p><a href=#create-a-new-messageport-object>Create a new <code>MessagePort</code> object</a>
   owned by the <a href="#script's-global-object">script's global object</a>, and let <var title="">port2</var> be that object.</li>

   <li><p><a href=#entangle>Entangle</a> the <var title="">port1</var> and <var title="">port2</var> objects.</li>

   <li><p>Instantiate a new <code><a href=#messagechannel>MessageChannel</a></code> object, and
   let <var title="">channel</var> be that object.</li>

   <li><p>Let the <code title=dom-channel-port1><a href=#dom-channel-port1>port1</a></code>
   attribute of the <var title="">channel</var> object be <var title="">port1</var>.</p>

   <li><p>Let the <code title=dom-channel-port2><a href=#dom-channel-port2>port2</a></code>
   attribute of the <var title="">channel</var> object be <var title="">port2</var>.</p>

   <li><p>Return <var title="">channel</var>.</li>

  </ol><p>The <dfn id=dom-channel-port1 title=dom-channel-port1><code>port1</code></dfn> and
  <dfn id=dom-channel-port2 title=dom-channel-port2><code>port2</code></dfn> attributes
  must return the values they were assigned when the
  <code><a href=#messagechannel>MessageChannel</a></code> object was created.</p>


  <h4 id=message-ports><span class=secno>7.5.3 </span>Message ports</h4>

  <p>Each channel has two message ports. Data sent through one port is
  received by the other port, and vice versa.</p>

  <pre class=idl>interface <dfn id=messageport>MessagePort</dfn> {
  readonly attribute boolean <a href=#dom-messageport-active title=dom-MessagePort-active>active</a>;
  void <a href=#dom-messageport-postmessage title=dom-MessagePort-postMessage>postMessage</a>(in any message, [Optional] in <a href=#messageport>MessagePort</a> messagePort);<!--
  <span>MessagePort</span> <span title="dom-MessagePort-startConversation">startConversation</span>(in any message);-->
  void <a href=#dom-messageport-start title=dom-MessagePort-start>start</a>();
  void <a href=#dom-messageport-close title=dom-MessagePort-close>close</a>();

  // event handler attributes
           attribute <a href=#function>Function</a> <a href=#handler-messageport-onmessage title=handler-MessagePort-onmessage>onmessage</a>;
};</pre>

  <p>Objects implementing the <code><a href=#messageport>MessagePort</a></code> interface must
  also implement the <code>EventTarget</code> interface.</p>

  <p>Each <code><a href=#messageport>MessagePort</a></code> object can be entangled with
  another (a symmetric relationship). Each <code><a href=#messageport>MessagePort</a></code>
  object also has a <a href=#task-source>task source</a> called the <dfn id=port-message-queue>port
  message queue</dfn>, initial empty. A <a href=#port-message-queue>port message
  queue</a> can be open or closed, and is initially closed.</p>

  <p>When the user agent is to <dfn id=create-a-new-messageport-object>create a new
  <code>MessagePort</code> object</dfn> owned by a <a href="#script's-global-object">script's
  global object</a> object <var title="">owner</var>, it must
  instantiate a new <code><a href=#messageport>MessagePort</a></code> object, and let its owner
  be <var title="">owner</var>.</p>

  <hr><p>When the user agent is to <dfn id=entangle>entangle</dfn> two
  <code><a href=#messageport>MessagePort</a></code> objects, it must run the following
  steps:</p>

  <ol><li>

    <p>If one of the ports is already entangled, then unentangle it
    and the port that it was entangled with.</p>

    <p class=note>If those two previously entangled ports were the
    two ports of a <code><a href=#messagechannel>MessageChannel</a></code> object, then that
    <code><a href=#messagechannel>MessageChannel</a></code> object no longer represents an actual
    channel: the two ports in that object are no longer entangled.</p>

   </li>

   <li><p>Associate the two ports to be entangled, so that they form
   the two parts of a new channel. (There is no
   <code><a href=#messagechannel>MessageChannel</a></code> object that represents this
   channel.)</li>

  </ol><hr><p>When the user agent is to <dfn id=clone-a-port>clone a port</dfn> <var title="">original port</var>, with the clone being owned by <var title="">owner</var>, it must run the following steps, which return
  either a new <code><a href=#messageport>MessagePort</a></code> object or an exception for the
  caller to raise:</p>

  <ol><li><p>If the <var title="">original port</var> is not entangled
   without another port, then return an <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code>
   exception and abort all these steps.</li>

   <li><p>Let the <var title="">remote port</var> be the port with
   which the <var title="">original port</var> is entangled.</li>

   <li><p><a href=#create-a-new-messageport-object>Create a new <code>MessagePort</code> object</a>
   owned by <var title="">owner</var>, and let <var title="">new
   port</var> be that object.</li>

   <li><p>Move all the events in the <a href=#port-message-queue>port message queue</a>
   of <var title="">original port</var> to the <a href=#port-message-queue>port message
   queue</a> of <var title="">new port</var>, if any, leaving the
   <var title="">new port</var>'s <a href=#port-message-queue>port message queue</a> in
   its initial closed state.</li>

   <li><p><a href=#entangle>Entangle</a> the <var title="">remote port</var>
   and <var title="">new port</var> objects. The <var title="">original port</var> object will be unentangled by this
   process.</li>

   <li><p>Return <var title="">new port</var>. It is the
   clone.</li>

  </ol><hr><p>The <dfn id=dom-messageport-active title=dom-MessagePort-active><code>active</code></dfn>
  attribute must return true if the port is entangled, and false
  otherwise.</p>

  <hr><p>The <dfn id=dom-messageport-postmessage title=dom-MessagePort-postMessage><code>postMessage()</code></dfn>
  method, when called on a port <var title="">source port</var>, must
  cause the user agent to run the following steps:</p>

  <ol><li><p>Let <var title="">message</var> be the method's first
   argument.</li>

   <li><p>Let <var title="">data port</var> be the method's second
   argument, if any.</li>

   <li><p>Let <var title="">message clone</var> be the result of
   obtaining a <a href=#structured-clone>structured clone</a> of the <var title="">message</var> argument. If this throws an exception, then
   throw that exception and abort these steps.</li>

   <li><p>If the <var title="">source port</var> is not entangled with
   another port, then return and abort these steps.</li>
   <!-- we don't raise an exception because this can happen moment's
   notice. we don't return false because if the port is _about_
   to be closed, the message might not be listened for anyway. -->

   <li><p>Let <var title="">target port</var> be the port with which
   <var title="">source port</var> is entangled.</li>

   <li><p>Create an event that uses the <code><a href=#messageevent>MessageEvent</a></code>
   interface, with the name <code title=event-message><a href=#event-message>message</a></code>, which does not bubble, is
   cancelable, and has no default action.</li>

   <li><p>Let the <code title=dom-MessageEvent-data><a href=#dom-messageevent-data>data</a></code>
   attribute of the event have the value of <var title="">message
   clone</var>.</li>

   <li><p>If the method was called with a second argument <var title="">data port</var> and that argument isn't null, then run the
   following substeps:</p>

    <ol><li><p>If the <var title="">data port</var> is the <var title="">source port</var> or the <var title="">target
     port</var>, then throw an <code><a href=#invalid_access_err>INVALID_ACCESS_ERR</a></code>
     exception and abort all these steps.</li>

     <li><p>Try to obtain a <var title="">new data port</var> by <a href=#clone-a-port title="clone a port">cloning</a> the <var title="">data
     port</var> with the owner of the <var title="">target port</var>
     as the owner of the clone. If this returns an exception, then
     throw that exception and abort these steps.</li>
 
     <li><p>Let the <code title=dom-MessageEvent-messagePort><a href=#dom-messageevent-messageport>messagePort</a></code> attribute
     of the event be the <var title="">new data port</var>.</li>

    </ol></li>

   <li><p>Return from the method, but continue with these
   steps.</li>

   <li><p>Add the event to the <a href=#port-message-queue>port message queue</a> of <var title="">target port</var>.</li>

  </ol><!--
  <hr>

  <p>The <dfn
  title="dom-MessagePort-startConversation"><code>startConversation(<var
  title="">message</var>)</code></dfn> method is a convenience method
  that simplifies create a new <code>MessageChannel</code> and
  invoking <code
  title="dom-MessagePort-postMessage">postMessage()</code> with one of
  the new ports. When invoked on a port <var title="">source
  port</var>, it must run the following steps:</p>

  <ol>

   <li><p>Let <var title="">message</var> be the method's first
   argument.</p></li>

   <li><p><span>Create a new <code>MessagePort</code> object</span>
   owned by the <span>script's global object</span>, and let <var
   title="">port1</var> be that object.</p></li>

   <li><p>If the <var title="">source port</var> is not entangled with
   another port, then return <var title="">port1</var> and abort these
   steps.</p></li>
   <!- - we don't raise an exception because this can happen moment's
   notice. we don't return null because then we'd end up with
   null derefs. better to just let the likely next postMessage call
   fall on the floor. - ->

   <li><p>Let <var title="">target port</var> be the port with which
   <var title="">source port</var> is entangled.</p></li>

   <li><p><span>Create a new <code>MessagePort</code> object</span>
   owned by the owner of the <var title="">target port</var>, and let
   <var title="">port2</var> be that object.</p></li>

   <li><p><span>Entangle</span> the <var title="">port1</var> and <var
   title="">port2</var> objects.</p></li>

   <li><p>Create an event that uses the <code>MessageEvent</code>
   interface, with the name <code
   title="event-message">message</code>, which does not bubble, is
   cancelable, and has no default action.</p></li>

   <li><p>Let the <code title="dom-MessageEvent-data">data</code>
   attribute of the event have the value of <var
   title="">message</var>, the method's first argument.</p></li>
 
   <li><p>Let the <code
   title="dom-MessageEvent-messagePort">messagePort</code> attribute
   of the event be <var title="">port2</var>.</p></li>

   <li><p>Return <var title="">port1</var> from the method, but
   continue with these steps.</p></li>

   <li><p>Add the event to the <span>port message queue</span> of <var
   title="">target port</var>.</p></li>

  </ol>
--><hr><p>The <dfn id=dom-messageport-start title=dom-MessagePort-start><code>start()</code></dfn>
  method must open its port's <a href=#port-message-queue>port message queue</a>, if it
  is not already open.</p>

  <p>When a port's <a href=#port-message-queue>port message queue</a> is open, the
  <a href=#event-loop>event loop</a> must use it as one of its <a href=#task-source title="task
  source">task sources</a>.</p>

  <p class=note>If the <code>Document</code> of the port's event
  handlers' <a href="#script's-global-object" title="script's global object">global object</a>
  is not <a href=#fully-active>fully active</a>, then the messages are lost.</p>
  <!-- because of the jump-to-entry-point algorithm first step -->

  <hr><p>The <dfn id=dom-messageport-close title=dom-MessagePort-close><code>close()</code></dfn>
  method, when called on a port <var title="">local port</var> that is
  entangled with another port, must cause the user agents to
  unentangle the two ports. If the method is called on a port that is
  not entangled, then the method must do nothing.</p>

  <hr><p>The following are the <a href=#event-handler-attributes-0>event handler attributes</a> that
  must be supported, as DOM attributes, by all objects implementing
  the <code><a href=#messageport>MessagePort</a></code> interface:</p>

  <dl><dt><dfn id=handler-messageport-onmessage title=handler-MessagePort-onmessage><code>onmessage</code></dfn></dt>

   <dd>

    <p>Must be invoked whenever a <code title=event-MessagePort-message>message</code> event is targeted
    at or bubbles through the <code><a href=#messageport>MessagePort</a></code> object.</p>

    <p>The first time a <code><a href=#messageport>MessagePort</a></code> object's <code title=handler-MessagePort-onmessage><a href=#handler-messageport-onmessage>onmessage</a></code> DOM
    attribute is set, the port's <a href=#port-message-queue>port message queue</a> must
    be opened, as if the <code title=dom-MessagePort-start><a href=#dom-messageport-start>start()</a></code> method had been
    called.</p>

   </dd>

  </dl><h5 id=ports-and-garbage-collection><span class=secno>7.5.3.1 </span>Ports and garbage collection</h5>

  <p>User agents must act as if <code><a href=#messageport>MessagePort</a></code> objects have
  a strong reference to their entangled <code><a href=#messageport>MessagePort</a></code>
  object.</p>

  <div class=note>

   <p>Thus, a message port can be received, given an event listener,
   and then forgotten, and so long as that event listener could
   receive a message, the channel will be maintained.</p>

   <p>Of course, if this was to occur on both sides of the channel,
   then both ports would be garbage collected, since they would not be
   reachable from live code, despite having a strong reference to each
   other.</p>

  </div>

  <p>Furthermore, a <code><a href=#messageport>MessagePort</a></code> object must not be
  garbage collected while there exists a message in a <a href=#task-queue>task
  queue</a> that is to be dispatched on that
  <code><a href=#messageport>MessagePort</a></code> object, or while the
  <code><a href=#messageport>MessagePort</a></code> object's <a href=#port-message-queue>port message queue</a> is
  open and there exists a <code title=event-message><a href=#event-message>message</a></code>
  event in that queue.</p>
  <!-- we might not need to explicitly say the first part of DOM
  Events is fixed to say that events on a task queue prevent GC -->



  <h2 id=syntax><span class=secno>8 </span><dfn>The HTML syntax</dfn></h2>

  <p class=note>This section only describes the rules for <code title="">text/html</code> resources. Rules for XML resources are
  discussed in the section below entitled "<a href=#the-xhtml-syntax>The XHTML
  syntax</a>".</p>

  <h3 id=writing-html-documents><span class=secno>8.1 </span>Writing HTML documents</h3>

  <p><em>This section only applies to documents, authoring tools, and
  markup generators. In particular, it does not apply to conformance
  checkers; conformance checkers must use the requirements given in
  the next section ("parsing HTML documents").</em></p>

  <p>Documents must consist of the following parts, in the given
  order:</p>

  <ol><li>Optionally, a single U+FEFF BYTE ORDER MARK (BOM) character.</li>

   <li>Any number of <a href=#syntax-comments title=syntax-comments>comments</a> and
   <a href=#space-character title="space character">space characters</a>.</li>

   <li>A <a href=#syntax-doctype title=syntax-doctype>DOCTYPE</a>.

   <li>Any number of <a href=#syntax-comments title=syntax-comments>comments</a> and
   <a href=#space-character title="space character">space characters</a>.</li>

   <li>The root element, in the form of an <code><a href=#the-html-element>html</a></code> <a href=#syntax-elements title=syntax-elements>element</a>.</li>

   <li>Any number of <a href=#syntax-comments title=syntax-comments>comments</a> and
   <a href=#space-character title="space character">space characters</a>.</li>

  </ol><p>The various types of content mentioned above are described in the
  next few sections.</p>

  <p>In addition, there are some restrictions on how <span>character
  encoding declarations</span> are to be serialized, as discussed in
  the section on that topic.</p>

  <div class=note>

   <p>Space characters before the root <code><a href=#the-html-element>html</a></code> element, and
   space characters at the start of the <code><a href=#the-html-element>html</a></code> element and
   before the <code><a href=#the-head-element>head</a></code> element, will be dropped when the
   document is parsed; space characters <em>after</em> the root
   <code><a href=#the-html-element>html</a></code> element will be parsed as if they were at the end
   of the <code><a href=#the-body-element>body</a></code> element. Thus, space characters around the
   root element do not round-trip.</p>

   <p>It is suggested that newlines be inserted after the DOCTYPE,
   after any comments that are before the root element, after the
   <code><a href=#the-html-element>html</a></code> element's start tag (if it is not <a href=#syntax-tag-omission title=syntax-tag-omission>omitted</a>), and after any comments
   that are inside the <code><a href=#the-html-element>html</a></code> element but before the
   <code><a href=#the-head-element>head</a></code> element.</p>

  </div>

  <p>Many strings in the HTML syntax (e.g. the names of elements and
  their attributes) are case-insensitive, but only for characters in
  the ranges U+0041 .. U+005A (LATIN CAPITAL LETTER A to LATIN CAPITAL
  LETTER Z) and U+0061 .. U+007A (LATIN SMALL LETTER A to LATIN SMALL
  LETTER Z). For convenience, in this section this is just referred to
  as "case-insensitive".</p>


  <h4 id=the-doctype><span class=secno>8.1.1 </span>The DOCTYPE</h4>

  <p>A <dfn id=syntax-doctype title=syntax-doctype>DOCTYPE</dfn> is a mostly useless,
  but required, header.</p>

  <p class=note>DOCTYPEs are required for legacy reasons. When
  omitted, browsers tend to use a different rendering mode that is
  incompatible with some specifications. Including the DOCTYPE in a
  document ensures that the browser makes a best-effort attempt at
  following the relevant specifications.</p>

  <p>A DOCTYPE must consist of the following characters, in this
  order:</p>

  <ol class=brief><li>A U+003C LESS-THAN SIGN (<code>&lt;</code>) character.</li>
   <li>A U+0021 EXCLAMATION MARK (<code>!</code>) character.</li>
   <li>A string that is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">DOCTYPE</code>".</li>
   <li>One or more <a href=#space-character title="space character">space characters</a>.</li>
   <li>A string that is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">HTML</code>".</li>
   <li>Optionally, a <a href=#doctype-legacy-string>DOCTYPE legacy string</a> (defined below).</li>
   <li>Zero or more <a href=#space-character title="space character">space characters</a>.</li>
   <li>A U+003E GREATER-THAN SIGN (<code>&gt;</code>) character.</li>
  </ol><p class=note>In other words, <code>&lt;!DOCTYPE HTML&gt;</code>,
  case-insensitively.</p>

  <p>For the purposes of HTML generators that cannot output HTML
  markup with the short DOCTYPE "<code title="">&lt;!DOCTYPE
  HTML&gt;</code>", a <dfn id=doctype-legacy-string>DOCTYPE legacy string</dfn> may be inserted
  into the DOCTYPE (in the position defined above). This string must
  consist of:</p>

  <ol class=brief><li>One or more <a href=#space-character title="space character">space characters</a>.</li>
   <li>A string that is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">SYSTEM</code>".</li>
   <li>One or more <a href=#space-character title="space character">space characters</a>.</li>
   <li>A U+0022 QUOTATION MARK or U+0027 APOSTROPHE character (the <i>quote mark</i>).</li>
   <li>The literal string "<code title="">about:legacy-compat</code>".</li>
   <li>A matching U+0022 QUOTATION MARK or U+0027 APOSTROPHE character (i.e. the same character as in the earlier step marked <i>quote mark</i>).</li>
  </ol><p class=note>In other words, <code>&lt;!DOCTYPE HTML SYSTEM
  "about:legacy-compat"&gt;</code> or <code>&lt;!DOCTYPE HTML SYSTEM
  'about:legacy-compat'&gt;</code>, case-insensitively except for the bit
  in quotes.</p>

  <p>The <a href=#doctype-legacy-string>DOCTYPE legacy string</a> should not be used unless
  the document is generated from a system that cannot output the
  shorter string.</p>



  <h4 id=elements-0><span class=secno>8.1.2 </span>Elements</h4>

  <p>There are five different kinds of <dfn id=syntax-elements title=syntax-elements>elements</dfn>: void elements, CDATA
  elements, RCDATA elements, foreign elements, and normal
  elements.</p>

  <dl><dt><dfn id=void-elements>Void elements</dfn></dt>

   <dd><code><a href=#the-base-element>base</a></code>, <code><a href=#the-command>command</a></code>,
   <code><a href=#the-eventsource-element>eventsource</a></code>, <code><a href=#the-link-element>link</a></code>, <code><a href=#meta>meta</a></code>,
   <code><a href=#the-hr-element>hr</a></code>, <code><a href=#the-br-element>br</a></code>, <code><a href=#the-img-element>img</a></code>,
   <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-param-element>param</a></code>, <code><a href=#the-area-element>area</a></code>,
   <code><a href=#the-col-element>col</a></code>, <code><a href=#the-input-element>input</a></code>, <code><a href=#the-source-element>source</a></code></dd>

   <dt>CDATA elements</dt>

   <dd><code><a href=#the-style-element>style</a></code>, <code><a href=#script>script</a></code></dd> <!-- iframe and
   noscript don't count as CDATA for syntax purposes -->

   <dt>RCDATA elements</dt>

   <dd><code><a href=#the-title-element>title</a></code>, <code><a href=#the-textarea-element>textarea</a></code></dd>

   <dt>Foreign elements</dt>

   <dd>Elements from the <a href=#mathml-namespace>MathML namespace</a>
<!--XXXSVG
   and the <span>SVG namespace</span>.</dd>
-->

   <dt>Normal elements</dt>

   <dd>All other allowed <a href=#html-elements>HTML elements</a> are normal
   elements.</dd>

  </dl><p><dfn id=syntax-tags title=syntax-tags>Tags</dfn> are used to delimit the start
  and end of elements in the markup. CDATA, RCDATA, and normal
  elements have a <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> to
  indicate where they begin, and an <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> to indicate where they end. The start and end tags of
  certain normal elements can be <a href=#syntax-tag-omission title=syntax-tag-omission>omitted</a>, as described
  later. Those that cannot be omitted must not be omitted. <a href=#void-elements>Void
  elements</a> only have a start tag; end tags must not be
  specified for void elements. Foreign elements must either have a
  start tag and an end tag, or a start tag that is marked as
  self-closing, in which case they must not have an end tag.</p>

  <p>The contents of the element must be placed between just after the
  start tag (which <a href=#syntax-tag-omission title=syntax-tag-omission>might be implied,
  in certain cases</a>) and just before the end tag (which again,
  <a href=#syntax-tag-omission title=syntax-tag-omission>might be implied in certain
  cases</a>). The exact allowed contents of each individual element
  depends on the content model of that element, as described earlier
  in this specification. Elements must not contain content that their
  content model disallows. In addition to the restrictions placed on
  the contents by those content models, however, the five types of
  elements have additional <em>syntactic</em> requirements.</p>

  <p><a href=#void-elements>Void elements</a> can't have any contents (since there's
  no end tag, no content can be put between the start tag and the end
  tag).</p>

  <p>CDATA elements can have <a href=#syntax-text title=syntax-text>text</a>,
  though it has <a href=#cdata-rcdata-restrictions>restrictions</a>
  described below.</p>

  <p>RCDATA elements can have <a href=#syntax-text title=syntax-text>text</a>
  and <a href=#syntax-charref title=syntax-charref>character references</a>, but
  the text must not contain an <a href=#syntax-ambiguous-ampersand title=syntax-ambiguous-ampersand>ambiguous ampersand</a>.
  There are also <a href=#cdata-rcdata-restrictions>further
  restrictions</a> described below.</p>

  <p>Foreign elements whose start tag is marked as self-closing can't
  have any contents (since, again, as there's no end tag, no content
  can be put between the start tag and the end tag). Foreign elements
  whose start tag is <em>not</em> marked as self-closing can have
  <a href=#syntax-text title=syntax-text>text</a>, <a href=#syntax-charref title=syntax-charref>character references</a>, <a href=#syntax-cdata title=syntax-cdata>CDATA sections</a>, other <a href=#syntax-elements title=syntax-elements>elements</a>, and <a href=#syntax-comments title=syntax-comments>comments</a>, but the text must not
  contain the character U+003C LESS-THAN SIGN (<code>&lt;</code>) or
  an <a href=#syntax-ambiguous-ampersand title=syntax-ambiguous-ampersand>ambiguous
  ampersand</a>.</p>

  <p>Normal elements can have <a href=#syntax-text title=syntax-text>text</a>,
  <a href=#syntax-charref title=syntax-charref>character references</a>, other
  <a href=#syntax-elements title=syntax-elements>elements</a>, and <a href=#syntax-comments title=syntax-comments>comments</a>, but the text must not
  contain the character U+003C LESS-THAN SIGN (<code>&lt;</code>) or
  an <a href=#syntax-ambiguous-ampersand title=syntax-ambiguous-ampersand>ambiguous
  ampersand</a>. Some normal elements also have <a href=#element-restrictions>yet more restrictions</a> on what
  content they are allowed to hold, beyond the restrictions imposed by
  the content model and those described in this paragraph. Those
  restrictions are described below.</p>

  <p>Tags contain a <dfn id=syntax-tag-name title=syntax-tag-name>tag name</dfn>,
  giving the element's name. HTML elements all have names that only
  use characters in the range U+0030 DIGIT ZERO ..  U+0039 DIGIT NINE,
  U+0061 LATIN SMALL LETTER A .. U+007A LATIN SMALL LETTER Z, U+0041
  LATIN CAPITAL LETTER A .. U+005A LATIN CAPITAL LETTER Z, and U+002D
  HYPHEN-MINUS (<code>-</code>). In the HTML syntax, tag names may be
  written with any mix of lower- and uppercase letters that, when
  converted to all-lowercase, matches the element's tag name; tag
  names are case-insensitive.</p>


  <h5 id=start-tags><span class=secno>8.1.2.1 </span>Start tags</h5>

  <p><dfn id=syntax-start-tag title=syntax-start-tag>Start tags</dfn> must have the
  following format:</p>

  <ol><li>The first character of a start tag must be a U+003C LESS-THAN
   SIGN (<code>&lt;</code>).</li>

   <li>The next few characters of a start tag must be the element's
   <a href=#syntax-tag-name title=syntax-tag-name>tag name</a>.</li>

   <li>If there are to be any attributes in the next step, there must
   first be one or more <a href=#space-character title="space character">space
   characters</a>.</li>

   <li>Then, the start tag may have a number of attributes, the <a href=#syntax-attributes title=syntax-attributes>syntax for which</a> is described
   below. Attributes may be separated from each other by one or more
   <a href=#space-character title="space character">space characters</a>.</li>

   <li>After the attributes, there may be one or more <a href=#space-character title="space character">space characters</a>. (Some attributes
   are required to be followed by a space. See the <a href=#syntax-attributes title=syntax-attributes>attributes section</a> below.)</li>

   <li>Then, if the element is one of the <a href=#void-elements>void elements</a>,
   or if the element is a foreign element, then there may be a single
   U+002F SOLIDUS (<code>/</code>) character. This character has no
   effect on void elements, but on foreign elements it marks the start
   tag as self-closing.</li>

   <li>Finally, start tags must be closed by a U+003E GREATER-THAN
   SIGN (<code>&gt;</code>) character.</li>

  </ol><h5 id=end-tags><span class=secno>8.1.2.2 </span>End tags</h5>

  <p><dfn id=syntax-end-tag title=syntax-end-tag>End tags</dfn> must have the
  following format:</p>

  <ol><li>The first character of an end tag must be a U+003C LESS-THAN
   SIGN (<code>&lt;</code>).</li>

   <li>The second character of an end tag must be a U+002F SOLIDUS
   (<code>/</code>).</li>

   <li>The next few characters of an end tag must be the element's
   <a href=#syntax-tag-name title=syntax-tag-name>tag name</a>.</li>

   <li>After the tag name, there may be one or more <a href=#space-character title="space
   character">space characters</a>.</li>

   <li>Finally, end tags must be closed by a U+003E GREATER-THAN
   SIGN (<code>&gt;</code>) character.</li>

  </ol><h5 id=attributes><span class=secno>8.1.2.3 </span>Attributes</h5>

  <p><dfn id=syntax-attributes title=syntax-attributes>Attributes</dfn> for an element
  are expressed inside the element's start tag.</p>

  <p>Attributes have a name and a value. <dfn id=syntax-attribute-name title=syntax-attribute-name>Attribute names</dfn> must consist of
  one or more characters other than the <a href=#space-character title="space
  character">space characters</a>, U+0000 NULL, U+0022 QUOTATION
  MARK ("), U+0027 APOSTROPHE ('), U+003E GREATER-THAN SIGN
  (&gt;), U+002F SOLIDUS (/), and U+003D EQUALS SIGN (=) characters,
  the control characters, and any characters that are not defined by
  Unicode. In the HTML syntax, attribute names may be written with any
  mix of lower- and uppercase letters that are an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> match for the attribute's name.</p>

  <p><dfn id=syntax-attribute-value title=syntax-attribute-value>Attribute values</dfn> are a
  mixture of <a href=#syntax-text title=syntax-text>text</a> and <a href=#syntax-charref title=syntax-charref>character references</a>, except with the
  additional restriction that the text cannot contain an <a href=#syntax-ambiguous-ampersand title=syntax-ambiguous-ampersand>ambiguous ampersand</a>.</p>

  <p>Attributes can be specified in four different ways:</p>

  <dl><dt>Empty attribute syntax</dt>

   <dd>

    <p>Just the <a href=#syntax-attribute-name title=syntax-attribute-name>attribute
    name</a>.</p>

    <div class=example>

     <p>In the following example, the <code title=attr-fe-disabled><a href=#attr-fe-disabled>disabled</a></code> attribute is given with
     the empty attribute syntax:</p>

     <pre>&lt;input <em>disabled</em>&gt;</pre>

    </div>

    <p>If an attribute using the empty attribute syntax is to be
    followed by another attribute, then there must be a <a href=#space-character>space
    character</a> separating the two.</p>

   </dd>

   <dt>Unquoted attribute value syntax</dt>

   <dd>

    <p>The <a href=#syntax-attribute-name title=syntax-attribute-name>attribute name</a>,
    followed by zero or more <a href=#space-character title="space character">space
    characters</a>, followed by a single U+003D EQUALS SIGN
    character, followed by zero or more <a href=#space-character title="space
    character">space characters</a>, followed by the <a href=#syntax-attribute-value title=syntax-attribute-value>attribute value</a>, which, in
    addition to the requirements given above for attribute values,
    must not contain any literal <a href=#space-character title="space character">space
    characters</a>, any U+0022 QUOTATION MARK (<code>"</code>)
    characters, U+0027 APOSTROPHE (<code>'</code>) characters,
    U+003D EQUALS SIGN (<code>=</code>) characters, or U+003E
    GREATER-THAN SIGN (<code>&gt;</code>) characters, and must not be
    the empty string.</p>

    <div class=example>

     <p>In the following example, the <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute is given
     with the unquoted attribute value syntax:</p>

     <pre>&lt;input <em>value=yes</em>&gt;</pre>

    </div>

    <p>If an attribute using the unquoted attribute syntax is to be
    followed by another attribute or by one of the optional U+002F
    SOLIDUS (<code>/</code>) characters allowed in step 6 of the <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> syntax above, then there
    must be a <a href=#space-character>space character</a> separating the two.</p>

   </dd>

   <dt>Single-quoted attribute value syntax</dt>

   <dd>

    <p>The <a href=#syntax-attribute-name title=syntax-attribute-name>attribute name</a>,
    followed by zero or more <a href=#space-character title="space character">space
    characters</a>, followed by a single U+003D EQUALS SIGN
    character, followed by zero or more <a href=#space-character title="space
    character">space characters</a>, followed by a single U+0027
    APOSTROPHE (<code>'</code>) character, followed by the <a href=#syntax-attribute-value title=syntax-attribute-value>attribute value</a>, which, in
    addition to the requirements given above for attribute values,
    must not contain any literal U+0027 APOSTROPHE (<code>'</code>)
    characters, and finally followed by a second single U+0027
    APOSTROPHE (<code>'</code>) character.</p>

    <div class=example>

     <p>In the following example, the <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is given with the
     single-quoted attribute value syntax:</p>

     <pre>&lt;input <em>type='checkbox'</em>&gt;</pre>

    </div>

    <p>If an attribute using the single-quoted attribute syntax is to
    be followed by another attribute, then there must be a <a href=#space-character>space
    character</a> separating the two.</p>

   </dd>

   <dt>Double-quoted attribute value syntax</dt>

   <dd>

    <p>The <a href=#syntax-attribute-name title=syntax-attribute-name>attribute name</a>,
    followed by zero or more <a href=#space-character title="space character">space
    characters</a>, followed by a single U+003D EQUALS SIGN
    character, followed by zero or more <a href=#space-character title="space
    character">space characters</a>, followed by a single U+0022
    QUOTATION MARK (<code>"</code>) character, followed by the <a href=#syntax-attribute-value title=syntax-attribute-value>attribute value</a>, which, in
    addition to the requirements given above for attribute values,
    must not contain any literal U+0022 QUOTATION MARK
    (<code>"</code>) characters, and finally followed by a second
    single U+0022 QUOTATION MARK (<code>"</code>) character.</p>

    <div class=example>

     <p>In the following example, the <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute is given with the
     double-quoted attribute value syntax:</p>

     <pre>&lt;input <em>name="be evil"</em>&gt;</pre>

    </div>

    <p>If an attribute using the double-quoted attribute syntax is to
    be followed by another attribute, then there must be a <a href=#space-character>space
    character</a> separating the two.</p>

   </dd>

  </dl><p>There must never be two or more attributes on the same start tag
  whose names are an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for
  each other.</p>

  <h5 id=optional-tags><span class=secno>8.1.2.4 </span>Optional tags</h5>

  <p>Certain tags can be <dfn id=syntax-tag-omission title=syntax-tag-omission>omitted</dfn>.</p>

  <!-- <html> -->
  <p>An <code><a href=#the-html-element>html</a></code> element's <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> may be omitted if the
  first thing inside the <code><a href=#the-html-element>html</a></code> element is not a <a href=#syntax-comments title=syntax-comments>comment</a>.</p>

  <!-- </html> -->
  <p>An <code><a href=#the-html-element>html</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-html-element>html</a></code> element is not
  immediately followed by a <a href=#syntax-comments title=syntax-comments>comment</a>.</p>

  <!-- <head> -->
  <p>A <code><a href=#the-head-element>head</a></code> element's <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> may be omitted if the
  first thing inside the <code><a href=#the-head-element>head</a></code> element is an element.</p>

  <!-- </head> -->
  <p>A <code><a href=#the-head-element>head</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-head-element>head</a></code> element is not
  immediately followed by a <a href=#space-character>space character</a> or a <a href=#syntax-comments title=syntax-comments>comment</a>.</p>

  <!-- <body> -->
  <p>A <code><a href=#the-body-element>body</a></code> element's <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> may be omitted if the
  first thing inside the <code><a href=#the-body-element>body</a></code> element is not a
  <a href=#space-character>space character</a> or a <a href=#syntax-comments title=syntax-comments>comment</a>, except if the first thing
  inside the <code><a href=#the-body-element>body</a></code> element is a <code><a href=#script>script</a></code> or
  <code><a href=#the-style-element>style</a></code> element. <!-- Note that even if the </head> end
  tag is present, the parser makes <style> and <script> elements
  between </head> and <body> end up in the <head> instead of implying
  the <body> --></p>

  <!-- </body> -->
  <p>A <code><a href=#the-body-element>body</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-body-element>body</a></code> element is not
  immediately followed by a <a href=#syntax-comments title=syntax-comments>comment</a>.</p>

  <!-- </li> -->
  <p>A <code><a href=#the-li-element>li</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-li-element>li</a></code> element is
  immediately followed by another <code><a href=#the-li-element>li</a></code> element or if there
  is no more content in the parent element.</p>

  <!-- </dt> -->
  <p>A <code><a href=#the-dt-element>dt</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-dt-element>dt</a></code> element is
  immediately followed by another <code><a href=#the-dt-element>dt</a></code> element or a
  <code><a href=#the-dd-element>dd</a></code> element.</p>

  <!-- </dd> -->
  <p>A <code><a href=#the-dd-element>dd</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-dd-element>dd</a></code> element is
  immediately followed by another <code><a href=#the-dd-element>dd</a></code> element or a
  <code><a href=#the-dt-element>dt</a></code> element, or if there is no more content in the
  parent element.</p>

  <!-- </p> -->
  <p>A <code><a href=#the-p-element>p</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-p-element>p</a></code> element is
  immediately followed by an <code><a href=#the-address-element>address</a></code>,
  <code><a href=#the-article-element>article</a></code>, <code><a href=#the-aside-element>aside</a></code>, <code><a href=#the-blockquote-element>blockquote</a></code>,
  <code><a href=#datagrid>datagrid</a></code>, <code><a href=#the-dialog-element>dialog</a></code>, <code>dir</code>,
  <code><a href=#the-div-element>div</a></code>, <code><a href=#the-dl-element>dl</a></code>, <code><a href=#the-fieldset-element>fieldset</a></code>,
  <code><a href=#the-footer-element>footer</a></code>, <code><a href=#the-form-element>form</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>,
  <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h2</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h3</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h4</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h5</a></code>,
  <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code>, <code><a href=#the-header-element>header</a></code>, <code><a href=#the-hr-element>hr</a></code>,
  <code><a href=#menus>menu</a></code>, <code><a href=#the-nav-element>nav</a></code>, <code><a href=#the-ol-element>ol</a></code>,
  <code><a href=#the-p-element>p</a></code>, <code><a href=#the-pre-element>pre</a></code>, <code><a href=#the-section-element>section</a></code>,
  <code><a href=#the-table-element>table</a></code>, or <code><a href=#the-ul-element>ul</a></code>, element, or if there is no
  more content in the parent element and the parent element is not an
  <code><a href=#the-a-element>a</a></code> element.</p>

  <!-- </rt> -->
  <p>An <code><a href=#the-rt-element>rt</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-rt-element>rt</a></code> element is
  immediately followed by an <code><a href=#the-rt-element>rt</a></code> or <code><a href=#the-rp-element>rp</a></code>
  element, or if there is no more content in the parent element.</p>

  <!-- </rp> -->
  <p>An <code><a href=#the-rp-element>rp</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-rp-element>rp</a></code> element is
  immediately followed by an <code><a href=#the-rt-element>rt</a></code> or <code><a href=#the-rp-element>rp</a></code>
  element, or if there is no more content in the parent element.</p>

  <!-- </optgroup> (the text assumes <optgroup> can only be inside a
  <select>; commented out text below can handle the non-<select> case
  if we ever allow it) -->
  <p>An <code><a href=#the-optgroup-element>optgroup</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end tag</a> may be omitted if the
  <code><a href=#the-optgroup-element>optgroup</a></code> element <!--has an ancestor
  <code>select</code> element and--> is immediately followed by
  another <code><a href=#the-optgroup-element>optgroup</a></code> element, or if <!--all of the elements
  that are ancestors of the <code>optgroup</code> element, up to and
  including the first ancestor element that is not an
  <code>optgroup</code> element, have no more content--> there is no
  more content in the parent element.</p>
  <!-- so e.g. the max number of </optgroup>s are omitted here:
   <select><optgroup></select>
   <p id=x><optgroup></optgroup>x</p>
   <p id=x><optgroup><optgroup></optgroup></optgroup>x</p>
   <p><optgroup id=x><optgroup></optgroup>x</p>
   <p><optgroup><optgroup id=x>x</p>
  -->

  <!-- </option> -->
  <p>An <code><a href=#the-option-element>option</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-option-element>option</a></code> element is
  immediately followed by another <code><a href=#the-option-element>option</a></code> element, or if
  it is immediately followed by an <code><a href=#the-optgroup-element>optgroup</a></code> element, or
  if there is no more content in the parent element.</p>

  <!-- <colgroup> -->
  <p>A <code><a href=#the-colgroup-element>colgroup</a></code> element's <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> may be omitted if the
  first thing inside the <code><a href=#the-colgroup-element>colgroup</a></code> element is a
  <code><a href=#the-col-element>col</a></code> element, and if the element is not immediately
  preceded by another <code><a href=#the-colgroup-element>colgroup</a></code> element whose <a href=#syntax-end-tag title=syntax-end-tag>end tag</a> has been omitted.</p>

  <!-- </colgroup> -->
  <p>A <code><a href=#the-colgroup-element>colgroup</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end tag</a> may be omitted if the
  <code><a href=#the-colgroup-element>colgroup</a></code> element is not immediately followed by a
  <a href=#space-character>space character</a> or a <a href=#syntax-comments title=syntax-comments>comment</a>.</p>

  <!-- </thead> -->
  <p>A <code><a href=#the-thead-element>thead</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-thead-element>thead</a></code> element is
  immediately followed by a <code><a href=#the-tbody-element>tbody</a></code> or <code><a href=#the-tfoot-element>tfoot</a></code>
  element.</p>

  <!-- <tbody> -->
  <p>A <code><a href=#the-tbody-element>tbody</a></code> element's <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> may be omitted if the
  first thing inside the <code><a href=#the-tbody-element>tbody</a></code> element is a
  <code><a href=#the-tr-element>tr</a></code> element, and if the element is not immediately
  preceded by a <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-thead-element>thead</a></code>, or
  <code><a href=#the-tfoot-element>tfoot</a></code> element whose <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> has been omitted.</p>

  <!-- </tbody> -->
  <p>A <code><a href=#the-tbody-element>tbody</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-tbody-element>tbody</a></code> element is
  immediately followed by a <code><a href=#the-tbody-element>tbody</a></code> or <code><a href=#the-tfoot-element>tfoot</a></code>
  element, or if there is no more content in the parent element.</p>

  <!-- </tfoot> -->
  <p>A <code><a href=#the-tfoot-element>tfoot</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-tfoot-element>tfoot</a></code> element is
  immediately followed by a <code><a href=#the-tbody-element>tbody</a></code> element, or if there is
  no more content in the parent element.</p>

  <!-- </tr> -->
  <p>A <code><a href=#the-tr-element>tr</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-tr-element>tr</a></code> element is
  immediately followed by another <code><a href=#the-tr-element>tr</a></code> element, or if there
  is no more content in the parent element.</p>

  <!-- </td> -->
  <p>A <code><a href=#the-td-element>td</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-td-element>td</a></code> element is
  immediately followed by a <code><a href=#the-td-element>td</a></code> or <code><a href=#the-th-element>th</a></code>
  element, or if there is no more content in the parent element.</p>

  <!-- </th> -->
  <p>A <code><a href=#the-th-element>th</a></code> element's <a href=#syntax-end-tag title=syntax-end-tag>end
  tag</a> may be omitted if the <code><a href=#the-th-element>th</a></code> element is
  immediately followed by a <code><a href=#the-td-element>td</a></code> or <code><a href=#the-th-element>th</a></code>
  element, or if there is no more content in the parent element.</p>

  <p><strong>However</strong>, a <a href=#syntax-start-tag title=syntax-start-tag>start
  tag</a> must never be omitted if it has any attributes.</p>


  <h5 id=element-restrictions><span class=secno>8.1.2.5 </span>Restrictions on content models</h5>

  <p>For historical reasons, certain elements have extra restrictions
  beyond even the restrictions given by their content model.</p>

  <p>A <code><a href=#the-table-element>table</a></code> element must not contain <code><a href=#the-tr-element>tr</a></code>
  elements, even though these elements are technically allowed inside
  <code><a href=#the-table-element>table</a></code> elements according to the content models
  described in this specification. (If a <code><a href=#the-tr-element>tr</a></code> element is
  put inside a <code><a href=#the-table-element>table</a></code> in the markup, it will in fact imply
  a <code><a href=#the-tbody-element>tbody</a></code> start tag before it.)</p>

  <p>A single U+000A LINE FEED (LF) character may be placed
  immediately after the <a href=#syntax-start-tag title=syntax-start-tag>start
  tag</a> of <code><a href=#the-pre-element>pre</a></code> and <code><a href=#the-textarea-element>textarea</a></code>
  elements. This does not affect the processing of the element. The
  otherwise optional U+000A LINE FEED (LF) character <em>must</em> be
  included if the element's contents start with that character
  (because otherwise the leading newline in the contents would be
  treated like the optional newline, and ignored).</p>

  <div class=example>
   <p>The following two <code><a href=#the-pre-element>pre</a></code> blocks are equivalent:</p>
   <pre>&lt;pre&gt;Hello&lt;/pre&gt;</pre>
   <pre>&lt;pre&gt;<br>Hello&lt;/pre&gt;</pre>
  </div>


  <h5 id=cdata-rcdata-restrictions><span class=secno>8.1.2.6 </span>Restrictions on the contents of CDATA and RCDATA elements</h5>

  <p>The text in CDATA and RCDATA elements must not contain any
  occurrences of the string "<code title="">&lt;/</code>" (U+003C
  LESS-THAN SIGN, U+002F SOLIDUS) followed by characters that
  case-insensitively match the tag name of the element followed by one
  of U+0009 CHARACTER TABULATION, U+000A LINE FEED (LF), U+000C FORM
  FEED (FF), U+0020 SPACE, U+003E GREATER-THAN SIGN (&gt;), or U+002F
  SOLIDUS (/), unless that string is part of an <a href=#syntax-escape title=syntax-escape>escaping text span</a>.</p>

  <p>An <dfn id=syntax-escape title=syntax-escape>escaping text span</dfn> is a span
  of <a href=#syntax-text title=syntax-text>text</a> that starts with an <a href=#syntax-escape-start title=syntax-escape-start>escaping text span start</a> that is
  not itself in an <a href=#syntax-escape title=syntax-escape>escaping text
  span</a>, and ends at the next <a href=#syntax-escape-end title=syntax-escape-end>escaping text span end</a>. There
  cannot be any <a href=#syntax-charref title=syntax-charref>character
  references</a> inside an <a href=#syntax-escape title=syntax-escape>escaping
  text span</a> &mdash; sequences of characters that would look
  like <a href=#syntax-charref title=syntax-charref>character references</a> do not
  have special meaning.</p>

  <p>An <dfn id=syntax-escape-start title=syntax-escape-start>escaping text span
  start</dfn> is a part of <a href=#syntax-text title=syntax-text>text</a> that
  consists of the four character sequence "<code title="">&lt;!--</code>" (U+003C LESS-THAN SIGN, U+0021 EXCLAMATION
  MARK, U+002D HYPHEN-MINUS, U+002D HYPHEN-MINUS).</p>

  <p>An <dfn id=syntax-escape-end title=syntax-escape-end>escaping text span end</dfn> is
  a part of <a href=#syntax-text title=syntax-text>text</a> that consists of the
  three character sequence "<code title="">--&gt;</code>" (U+002D
  HYPHEN-MINUS, U+002D HYPHEN-MINUS, U+003E GREATER-THAN SIGN) whose
  U+003E GREATER-THAN SIGN (&gt;).</p>

  <p>An <a href=#syntax-escape-start title=syntax-escape-start>escaping text span
  start</a> may share its U+002D HYPHEN-MINUS characters with its
  corresponding <a href=#syntax-escape-end title=syntax-escape-end>escaping text span
  end</a>.</p>

  <p>The text in CDATA and RCDATA elements must not have an <a href=#syntax-escape-start title=syntax-escape-start>escaping text span start</a> that is
  not followed by an <a href=#syntax-escape-end title=syntax-escape-end>escaping text
  span end</a>.</p>


  <h4 id=text-0><span class=secno>8.1.3 </span>Text</h4>

  <p><dfn id=syntax-text title=syntax-text>Text</dfn> is allowed inside elements,
  attributes, and comments. Text must consist of Unicode characters.
  Text must not contain U+0000 characters. Text must not contain
  permanently undefined Unicode characters. Text must not contain
  control characters other than <a href=#space-character title="space character">space
  characters</a>. Extra constraints are placed on what is and what
  is not allowed in text based on where the text is to be put, as
  described in the other sections.</p>


  <h5 id=newlines><span class=secno>8.1.3.1 </span>Newlines</h5>

  <p><dfn id=syntax-newlines title=syntax-newlines>Newlines</dfn> in HTML may be
  represented either as U+000D CARRIAGE RETURN (CR) characters, U+000A
  LINE FEED (LF) characters, or pairs of U+000D CARRIAGE RETURN (CR),
  U+000A LINE FEED (LF) characters in that order.</p>


  <h4 id=character-references><span class=secno>8.1.4 </span>Character references</h4>

  <p>In certain cases described in other sections, <a href=#syntax-text title=syntax-text>text</a> may be mixed with <dfn id=syntax-charref title=syntax-charref>character references</dfn>. These can be used
  to escape characters that couldn't otherwise legally be included in
  <a href=#syntax-text title=syntax-text>text</a>.</p>

  <p>Character references must start with a U+0026 AMPERSAND
  (<code>&amp;</code>). Following this, there are three possible kinds
  of character references:</p>

  <dl><dt>Named character references</dt>

   <dd>The ampersand must be followed by one of the names given in the
   <a href=#named-character-references>named character references</a> section, using the same
   case. The name must be one that is terminated by a U+003B SEMICOLON
   (<code title="">;</code>) character.</dd>


   <dt>Decimal numeric character reference</dt>

   <dd>The ampersand must be followed by a U+0023 NUMBER SIGN
   (<code>#</code>) character, followed by one or more digits in the
   range U+0030 DIGIT ZERO .. U+0039 DIGIT NINE, representing a
   base-ten integer that itself is a Unicode code point that is
   not U+0000, U+000D, in the range U+0080 .. U+009F, or in the range
   0xD800 .. 0xDFFF (surrogates). The digits must then be followed by
   a U+003B SEMICOLON character (<code title="">;</code>).</dd>


   <dt>Hexadecimal numeric character reference</dt>

   <dd>The ampersand must be followed by a U+0023 NUMBER SIGN
   (<code>#</code>) character, which must be followed by either a
   U+0078 LATIN SMALL LETTER X or a U+0058 LATIN CAPITAL LETTER X
   character, which must then be followed by one or more digits in the
   range U+0030 DIGIT ZERO .. U+0039 DIGIT NINE, U+0061 LATIN SMALL
   LETTER A .. U+0066 LATIN SMALL LETTER F, and U+0041 LATIN CAPITAL
   LETTER A .. U+0046 LATIN CAPITAL LETTER F, representing a
   base-sixteen integer that itself is a Unicode code point that is
   not U+0000, U+000D, in the range U+0080 .. U+009F, or in the range
   0xD800 .. 0xDFFF (surrogates). The digits must then be followed by
   a U+003B SEMICOLON character (<code title="">;</code>).</dd>

  </dl><p>An <dfn id=syntax-ambiguous-ampersand title=syntax-ambiguous-ampersand>ambiguous
  ampersand</dfn> is a U+0026 AMPERSAND (<code>&amp;</code>) character
  that is followed by some <a href=#syntax-text title=syntax-text>text</a> other
  than a <a href=#space-character>space character</a>, a U+003C LESS-THAN SIGN
  character ('&lt;'), or another U+0026 AMPERSAND (<code>&amp;</code>)
  character.</p>


  <h4 id=cdata-sections><span class=secno>8.1.5 </span>CDATA sections</h4>

  <p><dfn id=syntax-cdata title=syntax-cdata>CDATA sections</dfn> must start with
  the character sequence U+003C LESS-THAN SIGN, U+0021 EXCLAMATION
  MARK, U+005B LEFT SQUARE BRACKET, U+0043 LATIN CAPITAL LETTER C,
  U+0044 LATIN CAPITAL LETTER D, U+0041 LATIN CAPITAL LETTER A, U+0054
  LATIN CAPITAL LETTER T, U+0041 LATIN CAPITAL LETTER A, U+005B LEFT
  SQUARE BRACKET (<code title="">&lt;![CDATA[</code>). Following this
  sequence, the CDATA section may have <a href=#syntax-text title=syntax-text>text</a>, with the additional restriction
  that the text must not contain the three character sequence U+005D
  RIGHT SQUARE BRACKET, U+005D RIGHT SQUARE BRACKET, U+003E
  GREATER-THAN SIGN (<code title="">]]&gt;</code>). Finally, the CDATA
  section must be ended by the three character sequence U+005D RIGHT
  SQUARE BRACKET, U+005D RIGHT SQUARE BRACKET, U+003E GREATER-THAN
  SIGN (<code title="">]]&gt;</code>).</p>


  <h4 id=comments><span class=secno>8.1.6 </span>Comments</h4>

  <p><dfn id=syntax-comments title=syntax-comments>Comments</dfn> must start with the
  four character sequence U+003C LESS-THAN SIGN, U+0021 EXCLAMATION
  MARK, U+002D HYPHEN-MINUS, U+002D HYPHEN-MINUS (<code title="">&lt;!--</code>). Following this sequence, the comment may
  have <a href=#syntax-text title=syntax-text>text</a>, with the additional
  restriction that the text must not start with a single U+003E
  GREATER-THAN SIGN ('&gt;') character, nor start with a U+002D
  HYPHEN-MINUS (<code title="">-</code>) character followed by a
  U+003E GREATER-THAN SIGN ('&gt;') character, nor contain two
  consecutive U+002D HYPHEN-MINUS (<code title="">-</code>)
  characters, nor end with a U+002D HYPHEN-MINUS (<code title="">-</code>) character. Finally, the comment must be ended by
  the three character sequence U+002D HYPHEN-MINUS, U+002D
  HYPHEN-MINUS, U+003E GREATER-THAN SIGN (<code title="">--&gt;</code>).</p>



  <h3 id=parsing><span class=secno>8.2 </span>Parsing HTML documents</h3>

  <p><em>This section only applies to user agents, data mining tools,
  and conformance checkers.</em></p>
 
  <p>The rules for parsing <a href=#xml-documents>XML documents</a> (and thus
  <a href=#xhtml5>XHTML</a> documents) into DOM trees are covered by the next
  section, entitled "<a href=#the-xhtml-syntax>The XHTML syntax</a>".</p>

  <p>For <a href=#html-documents>HTML documents</a>, user agents must use the parsing
  rules described in this section to generate the DOM trees. Together,
  these rules define what is referred to as the <dfn id=html-parser>HTML
  parser</dfn>.</p>

  <div class=note>

   <p>While the HTML form of HTML5 bears a close resemblance to SGML
   and XML, it is a separate language with its own parsing rules.</p>

   <p>Some earlier versions of HTML (in particular from HTML2 to
   HTML4) were based on SGML and used SGML parsing rules. However, few
   (if any) web browsers ever implemented true SGML parsing for HTML
   documents; the only user agents to strictly handle HTML as an SGML
   application have historically been validators. The resulting
   confusion &mdash; with validators claiming documents to have one
   representation while widely deployed Web browsers interoperably
   implemented a different representation &mdash; has wasted decades
   of productivity. This version of HTML thus returns to a non-SGML
   basis.</p>

   <p>Authors interested in using SGML tools in their authoring
   pipeline are encouraged to use XML tools and the XML serialization
   of HTML5.</p>

  </div>

  <p>This specification defines the parsing rules for HTML documents,
  whether they are syntactically correct or not. Certain points in the
  parsing algorithm are said to be <dfn id=parse-error title="parse error">parse
  errors</dfn>. The error handling for parse errors is well-defined:
  user agents must either act as described below when encountering
  such problems, or must abort processing at the first error that they
  encounter for which they do not wish to apply the rules described
  below.</p>

  <p>Conformance checkers must report at least one parse error
  condition to the user if one or more parse error conditions exist in
  the document and must not report parse error conditions if none
  exist in the document. Conformance checkers may report more than one
  parse error condition if more than one parse error conditions exist
  in the document. Conformance checkers are not required to recover
  from parse errors.</p>

  <p class=note>Parse errors are only errors with the
  <em>syntax</em> of HTML. In addition to checking for parse errors,
  conformance checkers will also verify that the document obeys all
  the other conformance requirements described in this
  specification.</p>


  <h4 id=overview-of-the-parsing-model><span class=secno>8.2.1 </span>Overview of the parsing model</h4>

  <p>The input to the HTML parsing process consists of a stream of
  Unicode characters, which is passed through a
  <a href=#tokenization>tokenization</a> stage (lexical analysis) followed by a
  <a href=#tree-construction>tree construction</a> stage (semantic analysis). The output
  is a <code>Document</code> object.</p>

  <p class=note>Implementations that <a href=#non-scripted>do not
  support scripting</a> do not have to actually create a DOM
  <code>Document</code> object, but the DOM tree in such cases is
  still used as the model for the rest of the specification.</p>

  <p>In the common case, the data handled by the tokenization stage
  comes from the network, but <a href=#dynamic-markup-insertion title="dynamic markup
  insertion">it can also come from script</a>, e.g. using the <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> API.</p>

  <p><img alt="" src=images/parsing-model-overview.png></p>

  <p id=nestedParsing>There is only one set of state for the
  tokeniser stage and the tree construction stage, but the tree
  construction stage is reentrant, meaning that while the tree
  construction stage is handling one token, the tokeniser might be
  resumed, causing further tokens to be emitted and processed before
  the first token's processing is complete.</p>

  <div class=example>

   <p>In the following example, the tree construction stage will be
   called upon to handle a "p" start tag token while handling the
   "script" start tag token:</p>

   <pre>...
&lt;script&gt;
 document.write('&lt;p&gt;');
&lt;/script&gt;
...</pre>

  </div>

  <p>To handle these cases, parsers have a <dfn id=script-nesting-level>script nesting
  level</dfn>, which must be initially set to zero, and a <dfn id=parser-pause-flag>parser
  pause flag</dfn>, which must be initially set to false.</p>


  <h4 id=the-input-stream><span class=secno>8.2.2 </span>The <dfn>input stream</dfn></h4>

  <p>The stream of Unicode characters that consists the input to the
  tokenization stage will be initially seen by the user agent as a
  stream of bytes (typically coming over the network or from the local
  file system). The bytes encode the actual characters according to a
  particular <em>character encoding</em>, which the user agent must
  use to decode the bytes into characters.</p>

  <p class=note>For XML documents, the algorithm user agents must
  use to determine the character encoding is given by the XML
  specification. This section does not apply to XML documents. <a href=#refsXML>[XML]</a></p>


  <h5 id=determining-the-character-encoding><span class=secno>8.2.2.1 </span>Determining the character encoding</h5>

  <p>In some cases, it might be impractical to unambiguously determine
  the encoding before parsing the document. Because of this, this
  specification provides for a two-pass mechanism with an optional
  pre-scan. Implementations are allowed, as described below, to apply
  a simplified parsing algorithm to whatever bytes they have available
  before beginning to parse the document. Then, the real parser is
  started, using a tentative encoding derived from this pre-parse and
  other out-of-band metadata. If, while the document is being loaded,
  the user agent discovers an encoding declaration that conflicts with
  this information, then the parser can get reinvoked to perform a
  parse of the document with the real encoding.</p>

  <p id=documentEncoding>User agents must use the following
  algorithm (the <dfn id=encoding-sniffing-algorithm>encoding sniffing algorithm</dfn>) to determine
  the character encoding to use when decoding a document in the first
  pass. This algorithm takes as input any out-of-band metadata
  available to the user agent (e.g. the <a href=#content-type-0 title=Content-Type>Content-Type metadata</a> of the document)
  and all the bytes available so far, and returns an encoding and a
  <dfn id=concept-encoding-confidence title=concept-encoding-confidence>confidence</dfn>. The
  confidence is either <i>tentative</i>, <i>certain</i>, or
  <i>irrelevant</i>. The encoding used, and whether the confidence in
  that encoding is <i>tentative</i> or <i>confident</i>, is <a href=#meta-charset-during-parse>used during the parsing</a> to
  determine whether to <a href=#change-the-encoding>change the encoding</a>. If no
  encoding is necessary, e.g. because the parser is operating on a
  stream of Unicode characters and doesn't have to use an encoding at
  all, then the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> is
  <i>irrelevant</i>.</p>

  <ol><li><p>If the transport layer specifies an encoding, and it is
   supported, return that encoding with the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a>
   <i>certain</i>, and abort these steps.</li>

   <li><p>The user agent may wait for more bytes of the resource to be
   available, either in this step or at any later step in this
   algorithm. For instance, a user agent might wait 500ms or 512
   bytes, whichever came first. In general preparsing the source to
   find the encoding improves performance, as it reduces the need to
   throw away the data structures used when parsing upon finding the
   encoding information. However, if the user agent delays too long to
   obtain data to determine the encoding, then the cost of the delay
   could outweigh any performance improvements from the
   preparse.</li>

   <li><p>For each of the rows in the following table, starting with
   the first one and going down, if there are as many or more bytes
   available than the number of bytes in the first column, and the
   first bytes of the file match the bytes given in the first column,
   then return the encoding given in the cell in the second column of
   that row, with the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a>
   <i>certain</i>, and abort these steps:</p>

    <table><thead><tr><th>Bytes in Hexadecimal
       <th>Encoding
     <tbody><!-- nobody uses this
      <tr>
       <td>00 00 FE FF
       <td>UTF-32BE
      <tr>
       <td>FF FE 00 00
       <td>UTF-32LE
--><tr><td>FE FF
       <td>UTF-16BE
      <tr><td>FF FE
       <td>UTF-16LE
      <tr><td>EF BB BF
       <td>UTF-8
<!-- nobody uses this
      <tr>
       <td>DD 73 66 73
       <td>UTF-EBCDIC
-->
    </table><p class=note>This step looks for Unicode Byte Order Marks
   (BOMs).</li>

   <li><p>Otherwise, the user agent will have to search for explicit
   character encoding information in the file itself. This should
   proceed as follows:

    <p>Let <var title="">position</var> be a pointer to a byte in the
    input stream, initially pointing at the first byte. If at any
    point during these substeps the user agent either runs out of
    bytes or decides that scanning further bytes would not be
    efficient, then skip to the next step of the overall character
    encoding detection algorithm. User agents may decide that scanning
    <em>any</em> bytes is not efficient, in which case these substeps
    are entirely skipped.</p>

    <p>Now, repeat the following "two" steps until the algorithm
    aborts (either because user agent aborts, as described above, or
    because a character encoding is found):</p>

    <ol><li><p>If <var title="">position</var> points to:</p>

      <dl class=switch><dt>A sequence of bytes starting with: 0x3C 0x21 0x2D 0x2D (ASCII '&lt;!--')</dt>
       <dd>

        <p>Advance the <var title="">position</var> pointer so that it
        points at the first 0x3E byte which is preceded by two 0x2D
        bytes (i.e. at the end of an ASCII '--&gt;' sequence) and comes
        after the 0x3C byte that was found. (The two 0x2D bytes can be
        the same as the those in the '&lt;!--' sequence.)</p>

       </dd>

       <dt>A sequence of bytes starting with: 0x3C, 0x4D or 0x6D, 0x45 or 0x65, 0x54 or 0x74, 0x41 or 0x61, and finally one of 0x09, 0x0A, 0x0C, 0x0D, 0x20, 0x2F (case-insensitive ASCII '&lt;meta' followed by a space or slash)</dt>
       <dd>

        <ol><li><p>Advance the <var title="">position</var> pointer so
         that it points at the next 0x09, 0x0A, 0x0C, 0x0D, 0x20, or
         0x2F byte (the one in sequence of characters matched
         above).</li>

         <li><p><a href=#concept-get-attributes-when-sniffing title=concept-get-attributes-when-sniffing>Get
         an attribute</a> and its value. If no attribute was
         sniffed, then skip this inner set of steps, and jump to the
         second step in the overall "two step" algorithm.</li>

         <li><p>If the attribute's name is neither "<code title="">charset</code>" nor "<code title="">content</code>",
         then return to step 2 in these inner steps.</li>

         <li><p>If the attribute's name is "<code title="">charset</code>", let <var title="">charset</var> be
         the attribute's value, interpreted as a character
         encoding.</li>

         <li><p>Otherwise, the attribute's name is "<code title="">content</code>": apply the <a href=#algorithm-for-extracting-an-encoding-from-a-content-type>algorithm for
         extracting an encoding from a Content-Type</a>, giving the
         attribute's value as the string to parse. If an encoding is
         returned, let <var title="">charset</var> be that
         encoding. Otherwise, return to step 2 in these inner
         steps.</li>

         <li><p>If <var title="">charset</var> is a UTF-16 encoding,
         change it to UTF-8.</li>

         <li><p>If <var title="">charset</var> is a supported
         character encoding, then return the given encoding, with
         <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a>
         <i>tentative</i>, and abort all these steps.</li>

         <li><p>Otherwise, return to step 2 in these inner
         steps.</li>

        </ol></dd>

       <dt>A sequence of bytes starting with a 0x3C byte (ASCII '&lt;'), optionally a 0x2F byte (ASCII '/'), and finally a byte in the range 0x41-0x5A or 0x61-0x7A (an ASCII letter)</dt>
       <dd>

        <ol><li><p>Advance the <var title="">position</var> pointer so
         that it points at the next 0x09 (ASCII TAB), 0x0A (ASCII LF),
         0x0C (ASCII FF), 0x0D (ASCII CR), 0x20 (ASCII space), or 0x3E
         (ASCII '&gt;') byte.</li>

         <li><p>Repeatedly <a href=#concept-get-attributes-when-sniffing title=concept-get-attributes-when-sniffing>get an
         attribute</a> until no further attributes can be found,
         then jump to the second step in the overall "two step"
         algorithm.</li>

        </ol></dd>

       <dt>A sequence of bytes starting with: 0x3C 0x21 (ASCII '&lt;!')</dt>
       <dt>A sequence of bytes starting with: 0x3C 0x2F (ASCII '&lt;/')</dt>
       <dt>A sequence of bytes starting with: 0x3C 0x3F (ASCII '&lt;?')</dt>
       <dd>

        <p>Advance the <var title="">position</var> pointer so that it
        points at the first 0x3E byte (ASCII '&gt;') that comes after the
        0x3C byte that was found.</p>

       </dd>

       <dt>Any other byte</dt>
       <dd>

        <p>Do nothing with that byte.</p>

       </dd>

      </dl></li>

     <li>Move <var title="">position</var> so it points at the next
     byte in the input stream, and return to the first step of this
     "two step" algorithm.</li>

    </ol><p>When the above "two step" algorithm says to <dfn id=concept-get-attributes-when-sniffing title=concept-get-attributes-when-sniffing>get an
    attribute</dfn>, it means doing this:</p>

    <ol><li><p>If the byte at <var title="">position</var> is one of 0x09
     (ASCII TAB), 0x0A (ASCII LF), 0x0C (ASCII FF), 0x0D (ASCII CR),
     0x20 (ASCII space), or 0x2F (ASCII '/') then advance <var title="">position</var> to the next byte and redo this
     substep.</li>

     <li><p>If the byte at <var title="">position</var> is 0x3E (ASCII
     '&gt;'), then abort the "get an attribute" algorithm. There isn't
     one.</li>

     <li><p>Otherwise, the byte at <var title="">position</var> is the
     start of the attribute name. Let <var title="">attribute
     name</var> and <var title="">attribute value</var> be the empty
     string.</li>

     <li><p><em>Attribute name</em>: Process the byte at <var title="">position</var> as follows:</p>

      <dl class=switch><dt>If it is 0x3D (ASCII '='), and the <var title="">attribute
       name</var> is longer than the empty string</dt>

       <dd>Advance <var title="">position</var> to the next byte and
       jump to the step below labeled <em>value</em>.</dd>

       <dt>If it is 0x09 (ASCII TAB), 0x0A (ASCII LF), 0x0C (ASCII
       FF), 0x0D (ASCII CR), or 0x20 (ASCII space)</dt>

       <dd>Jump to the step below labeled <em>spaces</em>.</dd>

       <dt>If it is 0x2F (ASCII '/') or 0x3E (ASCII '&gt;')</dt>

       <dd>Abort the "get an attribute" algorithm. The attribute's
       name is the value of <var title="">attribute name</var>, its
       value is the empty string.</dd>

       <dt>If it is in the range 0x41 (ASCII 'A') to 0x5A (ASCII
       'Z')</dt>

       <dd>Append the Unicode character with codepoint <span><var title="">b</var>+0x20</span> to <var title="">attribute
       name</var> (where <var title="">b</var> is the value of the
       byte at <var title="">position</var>).</dd>

       <dt>Anything else</dt>

       <dd>Append the Unicode character with the same codepoint as the
       value of the byte at <var title="">position</var>) to <var title="">attribute name</var>. (It doesn't actually matter how
       bytes outside the ASCII range are handled here, since only
       ASCII characters can contribute to the detection of a character
       encoding.)</dd>

      </dl></li>

     <li><p>Advance <var title="">position</var> to the next byte and
     return to the previous step.</li>

     <li><p><em>Spaces.</em> If the byte at <var title="">position</var> is one of 0x09 (ASCII TAB), 0x0A (ASCII
     LF), 0x0C (ASCII FF), 0x0D (ASCII CR), or 0x20 (ASCII space) then
     advance <var title="">position</var> to the next byte, then,
     repeat this step.</li>

     <li><p>If the byte at <var title="">position</var> is
     <em>not</em> 0x3D (ASCII '='), abort the "get an attribute"
     algorithm. The attribute's name is the value of <var title="">attribute name</var>, its value is the empty
     string.</li>

     <li><p>Advance <var title="">position</var> past the 0x3D (ASCII
     '=') byte.</li>

     <li><p><em>Value.</em> If the byte at <var title="">position</var> is one of 0x09 (ASCII TAB), 0x0A (ASCII
     LF), 0x0C (ASCII FF), 0x0D (ASCII CR), or 0x20 (ASCII space) then
     advance <var title="">position</var> to the next byte, then,
     repeat this step.</li>

     <li><p>Process the byte at <var title="">position</var> as
     follows:</p>

      <dl class=switch><dt>If it is 0x22 (ASCII '"') or 0x27 ("'")</dt>

       <dd>

        <ol><li>Let <var title="">b</var> be the value of the byte at
         <var title="">position</var>.</li>

         <li>Advance <var title="">position</var> to the next
         byte.</li>

         <li>If the value of the byte at <var title="">position</var>
         is the value of <var title="">b</var>, then advance <var title="">position</var> to the next byte and abort the "get
         an attribute" algorithm. The attribute's name is the value of
         <var title="">attribute name</var>, and its value is the
         value of <var title="">attribute value</var>.</li>

         <li>Otherwise, if the value of the byte at <var title="">position</var> is in the range 0x41 (ASCII 'A') to
         0x5A (ASCII 'Z'), then append a Unicode character to <var title="">attribute value</var> whose codepoint is 0x20 more
         than the value of the byte at <var title="">position</var>.</li>

         <li>Otherwise, append a Unicode character to <var title="">attribute value</var> whose codepoint is the same as
         the value of the byte at <var title="">position</var>.</li>

         <li>Return to the second step in these substeps.</li>

        </ol></dd>

       <dt>If it is 0x3E (ASCII '&gt;')</dt>

       <dd>Abort the "get an attribute" algorithm. The attribute's
       name is the value of <var title="">attribute name</var>, its
       value is the empty string.</dd>


       <dt>If it is in the range 0x41 (ASCII 'A') to 0x5A (ASCII
       'Z')</dt>

       <dd>Append the Unicode character with codepoint <span><var title="">b</var>+0x20</span> to <var title="">attribute
       value</var> (where <var title="">b</var> is the value of the
       byte at <var title="">position</var>). Advance <var title="">position</var> to the next byte.</dd>

       <dt>Anything else</dt>

       <dd>Append the Unicode character with the same codepoint as the
       value of the byte at <var title="">position</var>) to <var title="">attribute value</var>. Advance <var title="">position</var> to the next byte.</dd>

      </dl></li>

     <li><p>Process the byte at <var title="">position</var> as
     follows:</p>

      <dl class=switch><dt>If it is 0x09 (ASCII TAB), 0x0A (ASCII LF), 0x0C (ASCII
       FF), 0x0D (ASCII CR), 0x20 (ASCII space), or 0x3E (ASCII
       '&gt;')</dt>

       <dd>Abort the "get an attribute" algorithm. The attribute's
       name is the value of <var title="">attribute name</var> and its
       value is the value of <var title="">attribute value</var>.</dd>

       <dt>If it is in the range 0x41 (ASCII 'A') to 0x5A (ASCII
       'Z')</dt>

       <dd>Append the Unicode character with codepoint <span><var title="">b</var>+0x20</span> to <var title="">attribute
       value</var> (where <var title="">b</var> is the value of the
       byte at <var title="">position</var>).</dd>

       <dt>Anything else</dt>

       <dd>Append the Unicode character with the same codepoint as the
       value of the byte at <var title="">position</var>) to <var title="">attribute value</var>.</dd>

      </dl></li>

     <li><p>Advance <var title="">position</var> to the next byte and
     return to the previous step.</li>

    </ol><p>For the sake of interoperability, user agents should not use a
    pre-scan algorithm that returns different results than the one
    described above. (But, if you do, please at least let us know, so
    that we can improve this algorithm and benefit everyone...)</p>

   </li>

   <li><p>If the user agent has information on the likely encoding for
   this page, e.g. based on the encoding of the page when it was last
   visited, then return that encoding, with the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a>
   <i>tentative</i>, and abort these steps.</li>

   <li><p>The user agent may attempt to autodetect the character
   encoding from applying frequency analysis or other algorithms to
   the data stream. If autodetection succeeds in determining a
   character encoding, then return that encoding, with the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a>
   <i>tentative</i>, and abort these steps. <a href=#refsUNIVCHARDET>[UNIVCHARDET]</a></li> <!--
   http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html
   -->

   <li><p>Otherwise, return an implementation-defined or
   user-specified default character encoding, with the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a>
   <i>tentative</i>. In non-legacy environments, the more
   comprehensive <code title="">UTF-8</code> encoding is
   recommended. Due to its use in legacy content, <code title="">windows-1252</code> is recommended as a default in
   predominantly Western demographics instead. Since these encodings
   can in many cases be distinguished by inspection, a user agent may
   heuristically decide which to use as a default.</li>

  </ol><p>The <a href="#document's-character-encoding">document's character encoding</a> must immediately
  be set to the value returned from this algorithm, at the same time
  as the user agent uses the returned value to select the decoder to
  use for the input stream.</p>


  <h5 id=character-encoding-requirements><span class=secno>8.2.2.2 </span>Character encoding requirements</h5>

  <p>User agents must at a minimum support the UTF-8 and Windows-1252
  encodings, but may support more.</p>

  <p class=note>It is not unusual for Web browsers to support dozens
  if not upwards of a hundred distinct character encodings.</p>

  <p>User agents must support the preferred MIME name of every
  character encoding they support that has a preferred MIME name, and
  should support all the IANA-registered aliases. <a href=#refsIANACHARSET>[IANACHARSET]</a></p>

  <!-- XXX should all this be abstracted out so it can be used for
  <script charset=""> and <form accept-charset="">? Maybe move this
  stuff and the 'character encodings' section of the terminology
  section into its own infrastructure subsection? -->

  <p>When comparing a string specifying a character encoding with the
  name or alias of a character encoding to determine if they are
  equal, user agents must ignore all characters in the ranges U+0009
  to U+000D, U+0020 to U+002F, U+003A to U+0040, U+005B to U+0060, and
  U+007B to U+007E (all whitespace and punctuation characters in
  ASCII) in both names, and then perform the comparison in an
  <a href=#ascii-case-insensitive>ASCII case-insensitive</a> manner.</p>

  <p class=example>For instance, "GB_2312-80" and "g.b.2312(80)" are
  considered equivalent names.</p>

  <p>When a user agent would otherwise use an encoding given in the
  first column of the following table, it must instead use the
  encoding given in the cell in the second column of the same row. Any
  bytes that are treated differently due to this encoding aliasing
  must be considered <a href=#parse-error title="parse error">parse
  errors</a>.</p>

  <table><caption>Character encoding overrides</caption>
   <thead><tr><th> Input encoding <th> Replacement encoding <th> References
   <tbody><!-- how about EUC-JP? --><tr><td> EUC-KR <td> Windows-949 <td>
         <a href=#refsEUCKR>[EUCKR]</a> <!-- see reference for [EUC-KR] in RFC1557 -->
         <a href=#refsWin949>[WIN949]</a><!-- http://www.microsoft.com/globaldev/reference/dbcs/949.mspx -->
    <tr><td> GB2312 <td> GBK <td>
         <a href=#refsGB2312>[GB2312]</a><!-- XXX ? -->
         <a href=#refsGBK>[GBK]</a><!-- http://www.iana.org/assignments/charset-reg/GBK -->
    <tr><td> GB_2312-80 <td> GBK <td>
         <a href=#refsRFC1345>[RFC1345]</a><!-- XXX consider more direct reference? -->
         <a href=#refsGBK>[GBK]</a><!-- http://www.iana.org/assignments/charset-reg/GBK -->
    <tr><td> ISO-8859-1 <td> Windows-1252 <td>
         <a href=#refsRFC1345>[RFC1345]</a><!-- XXX consider more direct reference? -->
         <a href=#refsWin1252>[WIN1252]</a><!-- http://www.microsoft.com/globaldev/reference/sbcs/1252.htm -->
    <tr><td> ISO-8859-9 <td> Windows-1254 <td>
         <a href=#refsRFC1345>[RFC1345]</a><!-- XXX consider more direct reference? -->
         <a href=#refsWin1254>[WIN1254]</a><!-- http://www.microsoft.com/globaldev/reference/sbcs/1254.htm -->
    <tr><td> ISO-8859-11 <td> Windows-874 <td>
         <a href=#refsISO885911>[ISO885911]</a><!-- get reference from http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=28263 -->
         <a href=#refsWin874>[WIN874]</a><!-- http://www.microsoft.com/globaldev/reference/sbcs/874.mspx -->
    <tr><td> KS_C_5601-1987 <td> Windows-949 <td>
         <a href=#refsRFC1345>[RFC1345]</a><!-- XXX consider more direct reference? -->
         <a href=#refsWin949>[WIN949]</a><!-- http://www.microsoft.com/globaldev/reference/dbcs/949.mspx -->
    <tr><td> TIS-620 <td> Windows-874 <td>
         <a href=#refsTIS620>[TIS620]</a> <!-- http://www.nectec.or.th/it-standards/std620/std620.htm -->
         <a href=#refsWin874>[WIN874]</a><!-- http://www.microsoft.com/globaldev/reference/sbcs/874.mspx -->
    <tr><td> US-ASCII <td> Windows-1252 <td>
         <a href=#refsRFC1345>[RFC1345]</a><!-- XXX consider more direct reference? -->
         <a href=#refsWin1252>[WIN1252]</a><!-- http://www.microsoft.com/globaldev/reference/sbcs/1252.htm -->
    <tr><td> x-x-big5 <td> Big5 <td>
         <a href=#refsBIG5>[BIG5]</a> <!-- XXX ? -->
   </table><p class=note>The requirement to treat certain encodings as other
  encodings according to the table above is a willful violation of the
  W3C Character Model specification. <a href=#refsCHARMOD>[CHARMOD]</a></p>

  <p>User agents must not support the CESU-8, UTF-7, BOCU-1 and SCSU
  encodings. <a href=#refsCESU8>[CESU8]</a> <a href=#refsUTF7>[UTF7]</a> <a href=#refsBOCU1>[BOCU1]</a> <a href=#refsSCSU>[SCSU]</a></p>

  <p>Support for encodings based on EBCDIC is not recommended. This
  encoding is rarely used for publicly-facing Web content.</p>

  <p>Support for UTF-32 is not recommended. This encoding is rarely
  used, and frequently misimplemented.</p>

  <p class=note>This specification does not make any attempt to
  support EBCDIC-based encodings and UTF-32 in its algorithms; support
  and use of these encodings can thus lead to unexpected behavior in
  implementations of this specification.</p>



  <h5 id=preprocessing-the-input-stream><span class=secno>8.2.2.3 </span>Preprocessing the input stream</h5>

  <p>Given an encoding, the bytes in the input stream must be
  converted to Unicode characters for the tokeniser, as described by
  the rules for that encoding, except that the leading U+FEFF BYTE
  ORDER MARK character, if any, must not be stripped by the encoding
  layer (it is stripped by the rule below).</p> <!-- this is to
  prevent two leading BOMs from being both stripped, once by the
  decoder, and once by the parser -->

  <p>Bytes or sequences of bytes in the original byte stream that
  could not be converted to Unicode characters must be converted to
  U+FFFD REPLACEMENT CHARACTER code points.</p>

  <p class=note>Bytes or sequences of bytes in the original byte
  stream that did not conform to the encoding specification
  (e.g. invalid UTF-8 byte sequences in a UTF-8 input stream) are
  errors that conformance checkers are expected to report.</p>

  <p>One leading U+FEFF BYTE ORDER MARK character must be ignored if
  any are present.</p>

  <p>All U+0000 NULL characters in the input must be replaced by
  U+FFFD REPLACEMENT CHARACTERs. Any occurrences of such characters is
  a <a href=#parse-error>parse error</a>.</p>

  <p>Any occurrences of any characters in the ranges U+0001 to U+0008,
  <!-- HT, LF allowed --> <!-- U+000B is in the next list --> <!-- FF,
  CR allowed --> U+000E to U+001F, <!-- ASCII allowed --> U+007F
  <!--to U+0084, (U+0085 NEL not allowed), U+0086--> to U+009F, U+D800
  to U+DFFF<!-- surrogates not allowed -->, U+FDD0 to U+FDEF, and
  characters U+000B, U+FFFE, U+FFFF, U+1FFFE, U+1FFFF, U+2FFFE,
  U+2FFFF, U+3FFFE, U+3FFFF, U+4FFFE, U+4FFFF, U+5FFFE, U+5FFFF,
  U+6FFFE, U+6FFFF, U+7FFFE, U+7FFFF, U+8FFFE, U+8FFFF, U+9FFFE,
  U+9FFFF, U+AFFFE, U+AFFFF, U+BFFFE, U+BFFFF, U+CFFFE, U+CFFFF,
  U+DFFFE, U+DFFFF, U+EFFFE, U+EFFFF, U+FFFFE, U+FFFFF, U+10FFFE, and
  U+10FFFF are <a href=#parse-error title="parse error">parse errors</a>. (These
  are all control characters or permanently undefined Unicode
  characters.)</p>

  <p>U+000D CARRIAGE RETURN (CR) characters and U+000A LINE FEED (LF)
  characters are treated specially. Any CR characters that are
  followed by LF characters must be removed, and any CR characters not
  followed by LF characters must be converted to LF characters. Thus,
  newlines in HTML DOMs are represented by LF characters, and there
  are never any CR characters in the input to the
  <a href=#tokenization>tokenization</a> stage.</p>

  <p>The <dfn id=next-input-character>next input character</dfn> is the first character in the
  input stream that has not yet been <dfn id=consumed>consumed</dfn>. Initially,
  the <i><a href=#next-input-character>next input character</a></i> is the first character in the
  input. The <dfn id=current-input-character>current input character</dfn> is the last character
  to have been <i><a href=#consumed>consumed</a></i>.</p>

  <p>The <dfn id=insertion-point>insertion point</dfn> is the position (just before a
  character or just before the end of the input stream) where content
  inserted using <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> is actually
  inserted. The insertion point is relative to the position of the
  character immediately after it, it is not an absolute offset into
  the input stream. Initially, the insertion point is
  uninitialized.</p>

  <p>The "EOF" character in the tables below is a conceptual character
  representing the end of the <a href=#the-input-stream>input stream</a>. If the parser
  is a <a href=#script-created-parser>script-created parser</a>, then the end of the
  <a href=#the-input-stream>input stream</a> is reached when an <dfn id=explicit-eof-character>explicit "EOF"
  character</dfn> (inserted by the <code title=dom-document-close><a href=#dom-document-close>document.close()</a></code> method) is
  consumed. Otherwise, the "EOF" character is not a real character in
  the stream, but rather the lack of any further characters.</p>


  <h5 id=changing-the-encoding-while-parsing><span class=secno>8.2.2.4 </span>Changing the encoding while parsing</h5>

  <p>When the parser requires the user agent to <dfn id=change-the-encoding>change the
  encoding</dfn>, it must run the following steps. This might happen
  if the <a href=#encoding-sniffing-algorithm>encoding sniffing algorithm</a> described above
  failed to find an encoding, or if it found an encoding that was not
  the actual encoding of the file.</p>

  <ol><li>If the new encoding is a UTF-16 encoding, change it to
   UTF-8.</li>

   <li>If the new encoding is identical or equivalent to the encoding
   that is already being used to interpret the input stream, then set
   the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> to
   <i>confident</i> and abort these steps. This happens when the
   encoding information found in the file matches what the
   <a href=#encoding-sniffing-algorithm>encoding sniffing algorithm</a> determined to be the
   encoding, and in the second pass through the parser if the first
   pass found that the encoding sniffing algorithm described in the
   earlier section failed to find the right encoding.</li>

   <li>If all the bytes up to the last byte converted by the current
   decoder have the same Unicode interpretations in both the current
   encoding and the new encoding, and if the user agent supports
   changing the converter on the fly, then the user agent may change
   to the new converter for the encoding on the fly. Set the
   <a href="#document's-character-encoding">document's character encoding</a> and the encoding used to
   convert the input stream to the new encoding, set the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> to
   <i>confident</i>, and abort these steps.</li>

   <li>Otherwise, <a href=#navigate>navigate</a> to the document again, with
   <a href=#replacement-enabled>replacement enabled</a>, and using the same <a href=#source-browsing-context>source
   browsing context</a>, but this time skip the <a href=#encoding-sniffing-algorithm>encoding
   sniffing algorithm</a> and instead just set the encoding to the
   new encoding and the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> to
   <i>confident</i>. Whenever possible, this should be done without
   actually contacting the network layer (the bytes should be
   re-parsed from memory), even if, e.g., the document is marked as
   not being cacheable. If this is not possible and contacting the
   network layer would involve repeating a request that uses a method
   other than HTTP GET (<a href=#concept-http-equivalent-get title=concept-http-equivalent-get>or
   equivalent</a> for non-HTTP URLs), then instead set the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> to
   <i>confident</i> and ignore the new encoding. The resource will be
   misinterpreted. User agents may notify the user of the situation,
   to aid in application development.</li>

  </ol><h4 id=parse-state><span class=secno>8.2.3 </span>Parse state</h4>

  <h5 id=the-insertion-mode><span class=secno>8.2.3.1 </span>The insertion mode</h5>

  <p>The <dfn id=insertion-mode>insertion mode</dfn> is a flag that controls the primary
  operation of the tree construction stage.</p>

  <p>Initially the <a href=#insertion-mode>insertion mode</a> is "<a href=#the-initial-insertion-mode title="insertion mode: initial">initial</a>". It can change to
  "<a href=#the-before-html-insertion-mode title="insertion mode: before html">before html</a>",
  "<a href=#the-before-head-insertion-mode title="insertion mode: before head">before head</a>",
  "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>", "<a href=#parsing-main-inheadnoscript title="insertion mode: in head noscript">in head noscript</a>",
  "<a href=#the-after-head-insertion-mode title="insertion mode: after head">after head</a>", "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>", "<a href=#parsing-main-incdata title="insertion mode: in CDATA/RCDATA">in CDATA/RCDATA</a>",
  "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>", "<a href=#parsing-main-incaption title="insertion mode: in caption">in caption</a>", "<a href=#parsing-main-incolgroup title="insertion mode: in column group">in column group</a>",
  "<a href=#parsing-main-intbody title="insertion mode: in table body">in table body</a>",
  "<a href=#parsing-main-intr title="insertion mode: in row">in row</a>", "<a href=#parsing-main-intd title="insertion mode: in cell">in cell</a>", "<a href=#parsing-main-inselect title="insertion mode: in select">in select</a>", "<a href=#parsing-main-inselectintable title="insertion mode: in select in table">in select in
  table</a>", "<a href=#parsing-main-inforeign title="insertion mode: in foreign content">in
  foreign content</a>", "<a href=#parsing-main-afterbody title="insertion mode: after
  body">after body</a>", "<a href=#parsing-main-inframeset title="insertion mode: in
  frameset">in frameset</a>", "<a href=#parsing-main-afterframeset title="insertion mode: after
  frameset">after frameset</a>", "<a href=#the-after-after-body-insertion-mode title="insertion mode:
  after after body">after after body</a>", and "<a href=#the-after-after-frameset-insertion-mode title="insertion mode: after after frameset">after after
  frameset</a>" during the course of the parsing, as described in
  the <a href=#tree-construction>tree construction</a> stage. The insertion mode affects
  how tokens are processed and whether CDATA sections are
  supported.</p>

  <p>Seven of these modes, namely "<a href=#parsing-main-inhead title="insertion mode: in
  head">in head</a>", "<a href=#parsing-main-inbody title="insertion mode: in body">in
  body</a>", "<a href=#parsing-main-incdata title="insertion mode: in CDATA/RCDATA">in
  CDATA/RCDATA</a>", "<a href=#parsing-main-intable title="insertion mode: in table">in
  table</a>", "<a href=#parsing-main-intbody title="insertion mode: in table body">in table
  body</a>", "<a href=#parsing-main-intr title="insertion mode: in row">in row</a>",
  "<a href=#parsing-main-intd title="insertion mode: in cell">in cell</a>", and "<a href=#parsing-main-inselect title="insertion mode: in select">in select</a>", are special, in
  that the other modes defer to them at various times. When the
  algorithm below says that the user agent is to do something
  "<dfn id=using-the-rules-for>using the rules for</dfn> the <var title="">m</var> insertion
  mode", where <var title="">m</var> is one of these modes, the user
  agent must use the rules described under the <var title="">m</var>
  <a href=#insertion-mode>insertion mode</a>'s section, but must leave the
  <a href=#insertion-mode>insertion mode</a> unchanged unless the rules in <var title="">m</var> themselves switch the <a href=#insertion-mode>insertion mode</a>
  to a new value.</p>

  <p>When the insertion mode is switched to "<a href=#parsing-main-incdata title="insertion
  mode: in CDATA/RCDATA">in CDATA/RCDATA</a>", the <dfn id=original-insertion-mode>original
  insertion mode</dfn> is also set. This is the insertion mode to
  which the tree construction stage will return when the corresponding
  end tag is parsed.</p>

  <p>When the insertion mode is switched to "<a href=#parsing-main-inforeign title="insertion
  mode: in foreign content">in foreign content</a>", the
  <dfn id=secondary-insertion-mode>secondary insertion mode</dfn> is also set. This secondary mode
  is used within the rules for the "<a href=#parsing-main-inforeign title="insertion mode: in
  foreign content">in foreign content</a>" mode to handle HTML
  (i.e. not foreign) content.</p>

  <hr><p>When the steps below require the UA to <dfn id=reset-the-insertion-mode-appropriately>reset the insertion
  mode appropriately</dfn>, it means the UA must follow these
  steps:</p>

  <ol><li>Let <var title="">last</var> be false.</li>

   <li>Let <var title="">node</var> be the last node in the
   <a href=#stack-of-open-elements>stack of open elements</a>.</li>

   <li>If <var title="">node</var> is the first node in the stack of
   open elements, then set <var title="">last</var> to true and set
   <var title="">node</var> to the <var title="">context</var>
   element. (<a href=#fragment-case>fragment case</a>)</li>

   <li>If <var title="">node</var> is a <code><a href=#the-select-element>select</a></code> element,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inselect title="insertion mode: in select">in select</a>" and abort these
   steps. (<a href=#fragment-case>fragment case</a>)</li>

   <li>If <var title="">node</var> is a <code><a href=#the-td-element>td</a></code> or
   <code><a href=#the-th-element>th</a></code> element and <var title="">last</var> is false, then
   switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intd title="insertion
   mode: in cell">in cell</a>" and abort these steps.</li>

   <li>If <var title="">node</var> is a <code><a href=#the-tr-element>tr</a></code> element, then
   switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intr title="insertion
   mode: in row">in row</a>" and abort these steps.</li>

   <li>If <var title="">node</var> is a <code><a href=#the-tbody-element>tbody</a></code>,
   <code><a href=#the-thead-element>thead</a></code>, or <code><a href=#the-tfoot-element>tfoot</a></code> element, then switch the
   <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intbody title="insertion mode: in
   table body">in table body</a>" and abort these steps.</li>

   <li>If <var title="">node</var> is a <code><a href=#the-caption-element>caption</a></code> element,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-incaption title="insertion mode: in caption">in caption</a>" and abort
   these steps.</li>

   <li>If <var title="">node</var> is a <code><a href=#the-colgroup-element>colgroup</a></code> element,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-incolgroup title="insertion mode: in column group">in column group</a>" and
   abort these steps. (<a href=#fragment-case>fragment case</a>)</li>

   <li>If <var title="">node</var> is a <code><a href=#the-table-element>table</a></code> element,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>" and abort these
   steps.</li>

   <li>If <var title="">node</var> is an element from the <a href=#mathml-namespace>MathML
   namespace</a><!--XXXSVG or the <span>SVG namespace</span>-->,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inforeign title="insertion mode: in foreign content">in foreign
   content</a>", let the <a href=#secondary-insertion-mode>secondary insertion mode</a> be
   "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>", and abort
   these steps.</li>

   <li>If <var title="">node</var> is a <code><a href=#the-head-element>head</a></code> element,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" ("<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>"! <em> not "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>"</em>!) and abort
   these steps. (<a href=#fragment-case>fragment case</a>)</li> <!-- This is only
   here for now in case people think that the spec accidentally
   omitted it and try to "fix" it. Note that noscript-in-head is also
   handled this way. This is all intentional. The only thing it
   doesn't handle is the scripting-disabled fragment parsing case for
   a <head> element containing a <noscript> which itself contains
   something other than a <link> or a <style> element; you'd expect
   that to break out of the <noscript> but it doesn't. This is an edge
   case that doesn't affect the spec, since the algorithm for fragment
   parsing is only used for innerHTML/outerHTML/insertAdjacentHTML(),
   where we know scripting is enabled. (XXX except maybe if innerHTML
   is set from another browsing context on a document with designMode
   set?) -->

   <li>If <var title="">node</var> is a <code><a href=#the-body-element>body</a></code> element,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" and abort these
   steps.</li>

   <li>If <var title="">node</var> is a <code>frameset</code> element,
   then switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inframeset title="insertion mode: in frameset">in frameset</a>" and abort
   these steps. (<a href=#fragment-case>fragment case</a>)</li>

   <li>If <var title="">node</var> is an <code><a href=#the-html-element>html</a></code> element,
   then: if the <a href=#head-element-pointer><code title="">head</code> element
   pointer</a> is null, switch the <a href=#insertion-mode>insertion mode</a> to
   "<a href=#the-before-head-insertion-mode title="insertion mode: before head">before head</a>",
   otherwise, switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-after-head-insertion-mode title="insertion mode: after head">after head</a>". In either
   case, abort these steps. (<a href=#fragment-case>fragment case</a>)</li> <!-- XXX
   can the head element pointer ever be non-null when we're going
   through these steps? -->

   <li>If <var title="">last</var> is true, then switch the
   <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inbody title="insertion mode: in
   body">in body</a>" and abort these steps. (<a href=#fragment-case>fragment
   case</a>)</li>

   <li>Let <var title="">node</var> now be the node before <var title="">node</var> in the <a href=#stack-of-open-elements>stack of open
   elements</a>.</li>

   <li>Return to step 3.</li>

  </ol><h5 id=the-stack-of-open-elements><span class=secno>8.2.3.2 </span>The stack of open elements</h5>

  <p>Initially the <dfn id=stack-of-open-elements>stack of open elements</dfn> is empty. The
  stack grows downwards; the topmost node on the stack is the first
  one added to the stack, and the bottommost node of the stack is the
  most recently added node in the stack (notwithstanding when the
  stack is manipulated in a random access fashion as part of <a href=#adoptionAgency>the handling for misnested tags</a>).</p>

  <p>The "<a href=#the-before-html-insertion-mode title="insertion mode: before html">before
  html</a>" <a href=#insertion-mode>insertion mode</a> creates the
  <code><a href=#the-html-element>html</a></code> root element node, which is then added to the
  stack.</p>

  <p>In the <a href=#fragment-case>fragment case</a>, the <a href=#stack-of-open-elements>stack of open
  elements</a> is initialized to contain an <code><a href=#the-html-element>html</a></code>
  element that is created as part of <a href=#html-fragment-parsing-algorithm title="html fragment
  parsing algorithm">that algorithm</a>. (The <a href=#fragment-case>fragment
  case</a> skips the "<a href=#the-before-html-insertion-mode title="insertion mode: before
  html">before html</a>" <a href=#insertion-mode>insertion mode</a>.)</p>

  <p>The <code><a href=#the-html-element>html</a></code> node, however it is created, is the topmost
  node of the stack. It never gets popped off the stack.</p>

  <p>The <dfn id=current-node>current node</dfn> is the bottommost node in this
  stack.</p>

  <p>The <dfn id=current-table>current table</dfn> is the last <code><a href=#the-table-element>table</a></code>
  element in the <a href=#stack-of-open-elements>stack of open elements</a>, if there is
  one. If there is no <code><a href=#the-table-element>table</a></code> element in the <a href=#stack-of-open-elements>stack of
  open elements</a> (<a href=#fragment-case>fragment case</a>), then the
  <a href=#current-table>current table</a> is the first element in the <a href=#stack-of-open-elements>stack
  of open elements</a> (the <code><a href=#the-html-element>html</a></code> element).</p>

  <p>Elements in the stack fall into the following categories:</p>

  <dl><dt><dfn id=special>Special</dfn></dt>

   <dd><p>The following HTML elements have varying levels of special
   parsing rules: <code><a href=#the-address-element>address</a></code>, <code><a href=#the-area-element>area</a></code>,
   <code><a href=#the-article-element>article</a></code>, <code><a href=#the-aside-element>aside</a></code>, <code><a href=#the-base-element>base</a></code>,
   <code>basefont</code>, <code>bgsound</code>,
   <code><a href=#the-blockquote-element>blockquote</a></code>, <code><a href=#the-body-element>body</a></code>, <code><a href=#the-br-element>br</a></code>,
   <code><a href=#center>center</a></code>, <code><a href=#the-col-element>col</a></code>, <code><a href=#the-colgroup-element>colgroup</a></code>,
   <code><a href=#the-command>command</a></code>, <code><a href=#datagrid>datagrid</a></code>, <code><a href=#the-dd-element>dd</a></code>,
   <code><a href=#the-details-element>details</a></code>, <code><a href=#the-dialog-element>dialog</a></code>, <code>dir</code>,
   <code><a href=#the-div-element>div</a></code>, <code><a href=#the-dl-element>dl</a></code>, <code><a href=#the-dt-element>dt</a></code>,
   <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-eventsource-element>eventsource</a></code>, <code><a href=#the-fieldset-element>fieldset</a></code>,
   <code><a href=#the-figure-element>figure</a></code>, <code><a href=#the-footer-element>footer</a></code>, <code><a href=#the-form-element>form</a></code>,
   <code>frame</code>, <code>frameset</code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code>,
   <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h2</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h3</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h4</a></code>, <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h5</a></code>,
   <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h6</a></code>, <code><a href=#the-head-element>head</a></code>, <code><a href=#the-header-element>header</a></code>,
   <code><a href=#the-hr-element>hr</a></code>, <code><a href=#the-iframe-element>iframe</a></code>, <!-- <code>image</code>,
   (commented out because this isn't an element that can end up on the
   stack, so it doesn't matter) --> <code><a href=#the-img-element>img</a></code>,
   <code><a href=#the-input-element>input</a></code>, <code>isindex</code>, <code><a href=#the-li-element>li</a></code>,
   <code><a href=#the-link-element>link</a></code>, <code>listing</code>, <code><a href=#menus>menu</a></code>,
   <code><a href=#meta>meta</a></code>, <code><a href=#the-nav-element>nav</a></code>, <code>noembed</code>,
   <code>noframes</code>, <code><a href=#the-noscript-element>noscript</a></code>, <code><a href=#the-ol-element>ol</a></code>,
   <code><a href=#the-p-element>p</a></code>, <code><a href=#the-param-element>param</a></code>, <code>plaintext</code>,
   <code><a href=#the-pre-element>pre</a></code>, <code><a href=#script>script</a></code>, <code><a href=#the-section-element>section</a></code>,
   <code><a href=#the-select-element>select</a></code>, <code>spacer</code>, <code><a href=#the-style-element>style</a></code>,
   <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-textarea-element>textarea</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>,
   <code><a href=#the-thead-element>thead</a></code>, <code><a href=#the-title-element>title</a></code>, <code><a href=#the-tr-element>tr</a></code>,
   <code><a href=#the-ul-element>ul</a></code>, and <code>wbr</code>.</dd>

   <dt><dfn id=scoping>Scoping</dfn></dt>
   <dd><p>The following HTML elements introduce new <a href=#has-an-element-in-scope title="has
   an element in scope">scopes</a> for various parts of the
   parsing: <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-button-element>button</a></code>,
   <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-html-element>html</a></code>, <code><a href=#the-marquee-element-0>marquee</a></code>,
   <code><a href=#the-object-element>object</a></code>, <code><a href=#the-table-element>table</a></code>, <code><a href=#the-td-element>td</a></code>,
   <code><a href=#the-th-element>th</a></code><!--XXXSVG, and SVG's <code>foreignObject</code>-->.</dd>

   <dt><dfn id=formatting>Formatting</dfn></dt>
   <dd><p>The following HTML elements are those that end up in the
   <a href=#list-of-active-formatting-elements>list of active formatting elements</a>: <code><a href=#the-a-element>a</a></code>,
   <code><a href=#the-b-element>b</a></code>, <code>big</code>, <code><a href=#the-code-element>code</a></code>,
   <code><a href=#the-em-element>em</a></code>, <code>font</code>, <code><a href=#the-i-element>i</a></code>,
   <code>nobr</code>, <code>s</code>, <code><a href=#the-small-element>small</a></code>,
   <code>strike</code>, <code><a href=#the-strong-element>strong</a></code>, <code>tt</code>, and
   <code>u</code>.</dd>

   <dt><dfn id=phrasing>Phrasing</dfn></dt>
   <dd><p>All other elements found while parsing an HTML
   document.</dd>

  </dl><p>The <a href=#stack-of-open-elements>stack of open elements</a> is said to <dfn id=has-an-element-in-scope title="has an element in scope">have an element in scope</dfn> when
  the following algorithm terminates in a match state:</p>

  <ol><li><p>Initialize <var title="">node</var> to be the <a href=#current-node>current
   node</a> (the bottommost node of the stack).</li>

   <li><p>If <var title="">node</var> is the target node, terminate in
   a match state.</li>

   <li><p>Otherwise, if <var title="">node</var> is one of the
   following elements, terminate in a failure state:</p>
    <ul class=brief><li><code><a href=#the-applet-element>applet</a></code> in the HTML namespace</li>
     <li><code><a href=#the-caption-element>caption</a></code> in the HTML namespace</li>
     <li><code><a href=#the-html-element>html</a></code> in the HTML namespace</li> <!-- (This can only happen if the <var title="">node</var> is the topmost node of the <span>stack of open elements</span>, and prevents the next step from being invoked if there are no more elements in the stack.) -->
     <li><code><a href=#the-table-element>table</a></code> in the HTML namespace</li>
     <li><code><a href=#the-td-element>td</a></code> in the HTML namespace</li>
     <li><code><a href=#the-th-element>th</a></code> in the HTML namespace</li>
     <li><code><a href=#the-button-element>button</a></code> in the HTML namespace</li>
     <li><code><a href=#the-marquee-element-0>marquee</a></code> in the HTML namespace</li>
     <li><code><a href=#the-object-element>object</a></code> in the HTML namespace</li>
<!--XXXSVG     <li><code title="">foreignObject</code> in the SVG namespace</li>-->
    </ul></li>

   <li><p>Otherwise, set <var title="">node</var> to the previous
   entry in the <a href=#stack-of-open-elements>stack of open elements</a> and return to step
   2. (This will never fail, since the loop will always terminate in
   the previous step if the top of the stack &mdash; an
   <code><a href=#the-html-element>html</a></code> element &mdash; is reached.)</li>

  </ol><p>The <a href=#stack-of-open-elements>stack of open elements</a> is said to <dfn id=has-an-element-in-table-scope title="has an element in table scope">have an element in <em>table
  scope</em></dfn> when the following algorithm terminates in a match
  state:</p>

  <ol><li><p>Initialize <var title="">node</var> to be the <a href=#current-node>current
   node</a> (the bottommost node of the stack).</li>

   <li><p>If <var title="">node</var> is the target node, terminate in
   a match state.</li>

   <li><p>Otherwise, if <var title="">node</var> is one of the
   following elements, terminate in a failure state:</p>
    <ul class=brief><li><code><a href=#the-html-element>html</a></code> in the HTML namespace</li> <!-- (This can only happen if the <var title="">node</var> is the topmost node of the <span>stack of open elements</span>, and prevents the next step from being invoked if there are no more elements in the stack.) -->
     <li><code><a href=#the-table-element>table</a></code> in the HTML namespace</li>
    </ul></li>

   <li><p>Otherwise, set <var title="">node</var> to the previous
   entry in the <a href=#stack-of-open-elements>stack of open elements</a> and return to step
   2. (This will never fail, since the loop will always terminate in
   the previous step if the top of the stack &mdash; an
   <code><a href=#the-html-element>html</a></code> element &mdash; is reached.)</li>

  </ol><p>Nothing happens if at any time any of the elements in the
  <a href=#stack-of-open-elements>stack of open elements</a> are moved to a new location in,
  or removed from, the <code>Document</code> tree. In particular, the
  stack is not changed in this situation. This can cause, amongst
  other strange effects, content to be appended to nodes that are no
  longer in the DOM.</p>

  <p class=note>In some cases (namely, when <a href=#adoptionAgency>closing misnested formatting elements</a>),
  the stack is manipulated in a random-access fashion.</p>


  <h5 id=the-list-of-active-formatting-elements><span class=secno>8.2.3.3 </span>The list of active formatting elements</h5>

  <p>Initially the <dfn id=list-of-active-formatting-elements>list of active formatting elements</dfn> is
  empty. It is used to handle mis-nested <a href=#formatting title=formatting>formatting element tags</a>.</p>

  <p>The list contains elements in the <a href=#formatting>formatting</a>
  category, and scope markers. The scope markers are inserted when
  entering <code><a href=#the-applet-element>applet</a></code> elements, buttons, <code><a href=#the-object-element>object</a></code>
  elements, marquees, table cells, and table captions, and are used to
  prevent formatting from "leaking" into <code><a href=#the-applet-element>applet</a></code> elements,
  buttons, <code><a href=#the-object-element>object</a></code> elements, marquees, and tables.</p>

  <p>When the steps below require the UA to <dfn id=reconstruct-the-active-formatting-elements>reconstruct the
  active formatting elements</dfn>, the UA must perform the following
  steps:</p>

  <ol><li>If there are no entries in the <a href=#list-of-active-formatting-elements>list of active formatting
   elements</a>, then there is nothing to reconstruct; stop this
   algorithm.</li>

   <li>If the last (most recently added) entry in the <a href=#list-of-active-formatting-elements>list of
   active formatting elements</a> is a marker, or if it is an
   element that is in the <a href=#stack-of-open-elements>stack of open elements</a>, then
   there is nothing to reconstruct; stop this algorithm.</li>

   <li>Let <var title="">entry</var> be the last (most recently added)
   element in the <a href=#list-of-active-formatting-elements>list of active formatting
   elements</a>.</li>

   <li>If there are no entries before <var title="">entry</var> in the
   <a href=#list-of-active-formatting-elements>list of active formatting elements</a>, then jump to step
   8.</li>

   <li>Let <var title="">entry</var> be the entry one earlier than
   <var title="">entry</var> in the <a href=#list-of-active-formatting-elements>list of active formatting
   elements</a>.</li>

   <li>If <var title="">entry</var> is neither a marker nor an element
   that is also in the <a href=#stack-of-open-elements>stack of open elements</a>, go to step
   4.</li>

   <li>Let <var title="">entry</var> be the element one later than
   <var title="">entry</var> in the <a href=#list-of-active-formatting-elements>list of active formatting
   elements</a>.</li>

   <li>Perform a shallow clone of the element <var title="">entry</var> to
   obtain <var title="">clone</var>. <a href=#refsDOM3CORE>[DOM3CORE]</a></li>

   <li>Append <var title="">clone</var> to the <a href=#current-node>current
   node</a> and push it onto the <a href=#stack-of-open-elements>stack of open
   elements</a> so that it is the new <a href=#current-node>current
   node</a>.</li>

   <li>Replace the entry for <var title="">entry</var> in the list
   with an entry for <var title="">clone</var>.</li>

   <li>If the entry for <var title="">clone</var> in the <a href=#list-of-active-formatting-elements>list of
   active formatting elements</a> is not the last entry in the
   list, return to step 7.</li>

  </ol><p>This has the effect of reopening all the formatting elements that
  were opened in the current body, cell, or caption (whichever is
  youngest) that haven't been explicitly closed.</p>

  <p class=note>The way this specification is written, the
  <a href=#list-of-active-formatting-elements>list of active formatting elements</a> always consists of
  elements in chronological order with the least recently added
  element first and the most recently added element last (except for
  while steps 8 to 11 of the above algorithm are being executed, of
  course).</p>

  <p>When the steps below require the UA to <dfn id=clear-the-list-of-active-formatting-elements-up-to-the-last-marker>clear the list of
  active formatting elements up to the last marker</dfn>, the UA must
  perform the following steps:</p>

  <ol><li>Let <var title="">entry</var> be the last (most recently added)
   entry in the <a href=#list-of-active-formatting-elements>list of active formatting elements</a>.</li>

   <li>Remove <var title="">entry</var> from the <a href=#list-of-active-formatting-elements>list of active
   formatting elements</a>.</li>

   <li>If <var title="">entry</var> was a marker, then stop the
   algorithm at this point. The list has been cleared up to the last
   marker.</li>

   <li>Go to step 1.</li>

  </ol><h5 id=the-element-pointers><span class=secno>8.2.3.4 </span>The element pointers</h5>

  <p>Initially the <dfn id=head-element-pointer><code title="">head</code> element
  pointer</dfn> and the <dfn id=form-element-pointer><code title="">form</code> element
  pointer</dfn> are both null.</p>

  <p>Once a <code><a href=#the-head-element>head</a></code> element has been parsed (whether
  implicitly or explicitly) the <a href=#head-element-pointer><code title="">head</code>
  element pointer</a> gets set to point to this node.</p>

  <p>The <a href=#form-element-pointer><code title="">form</code> element pointer</a>
  points to the last <code><a href=#the-form-element>form</a></code> element that was opened and
  whose end tag has not yet been seen. It is used to make form
  controls associate with forms in the face of dramatically bad
  markup, for historical reasons.</p>


  <h5 id=other-parsing-state-flags><span class=secno>8.2.3.5 </span>Other parsing state flags</h5>

  <p>The <dfn id=scripting-flag>scripting flag</dfn> is set to "enabled" if the <a href=#concept-n-script title=concept-n-script>scripting was enabled</a> for the
  <code>Document</code> with which the parser is associated when the
  parser was created, and "disabled" otherwise.</p>

  <p>The <dfn id=frameset-ok-flag>frameset-ok flag</dfn> is set to "ok" when the parser is
  created. It is set to "not ok" after certain tokens are seen.</p>


  <h4 id=tokenization><span class=secno>8.2.4 </span><dfn>Tokenization</dfn></h4>

  <p>Implementations must act as if they used the following state
  machine to tokenise HTML. The state machine must start in the
  <a href=#data-state>data state</a>. Most states consume a single character,
  which may have various side-effects, and either switches the state
  machine to a new state to <em>reconsume</em> the same character, or
  switches it to a new state (to consume the next character), or
  repeats the same state (to consume the next character). Some states
  have more complicated behavior and can consume several characters
  before switching to another state.</p>

  <p>The exact behavior of certain states depends on a <dfn id=content-model-flag>content
  model flag</dfn> that is set after certain tokens are emitted. The
  flag has several states: <i title="">PCDATA</i>, <i title="">RCDATA</i>, <i title="">CDATA</i>, and <i title="">PLAINTEXT</i>. Initially it must be in the PCDATA
  state. In the RCDATA and CDATA states, a further <dfn id=escape-flag>escape
  flag</dfn> is used to control the behavior of the tokeniser. It is
  either true or false, and initially must be set to the false
  state. The <a href=#insertion-mode>insertion mode</a> and the <a href=#stack-of-open-elements>stack of open
  elements</a> also affects tokenization.</p>

  <p>The output of the tokenization step is a series of zero or more
  of the following tokens: DOCTYPE, start tag, end tag, comment,
  character, end-of-file. DOCTYPE tokens have a name, a public
  identifier, a system identifier, and a <i>force-quirks
  flag</i>. When a DOCTYPE token is created, its name, public
  identifier, and system identifier must be marked as missing (which
  is a distinct state from the empty string), and the <i>force-quirks
  flag</i> must be set to <i>off</i> (its other state is
  <i>on</i>). Start and end tag tokens have a tag name, a
  <i>self-closing flag</i>, and a list of attributes, each of which
  has a name and a value. When a start or end tag token is created,
  its <i>self-closing flag</i> must be unset (its other state is that
  it be set), and its attributes list must be empty. Comment and
  character tokens have data.</p>

  <p>When a token is emitted, it must immediately be handled by the
  <a href=#tree-construction>tree construction</a> stage. The tree construction stage
  can affect the state of the <a href=#content-model-flag>content model flag</a>, and can
  insert additional characters into the stream. (For example, the
  <code><a href=#script>script</a></code> element can result in scripts executing and
  using the <a href=#dynamic-markup-insertion>dynamic markup insertion</a> APIs to insert
  characters into the stream being tokenised.)</p>

  <p>When a start tag token is emitted with its <i>self-closing
  flag</i> set, if the flag is not <dfn id=acknowledge-self-closing-flag title="acknowledge
  self-closing flag">acknowledged</dfn> when it is processed by the
  tree construction stage, that is a <a href=#parse-error>parse error</a>.</p>

  <p>When an end tag token is emitted, the <a href=#content-model-flag>content model
  flag</a> must be switched to the PCDATA state.</p>

  <p>When an end tag token is emitted with attributes, that is a
  <a href=#parse-error>parse error</a>.</p>

  <p>When an end tag token is emitted with its <i>self-closing
  flag</i> set, that is a <a href=#parse-error>parse error</a>.</p>

  <p>Before each step of the tokeniser, the user agent must first
  check the <a href=#parser-pause-flag>parser pause flag</a>. If it is true, then the
  tokeniser must abort the processing of any nested invocations of the
  tokeniser, yielding control back to the caller. If it is false, then
  the user agent may then check to see if either one of the scripts in
  the <a href=#list-of-scripts-that-will-execute-as-soon-as-possible>list of scripts that will execute as soon as
  possible</a> or the first script in the <a href=#list-of-scripts-that-will-execute-asynchronously>list of scripts
  that will execute asynchronously</a>, has <a href=#completed-loading>completed
  loading</a>. If one has, then it must be <a href=#executing-a-script-block title="executing a
  script block">executed</a> and removed from its list.</p>

  <p>The tokeniser state machine consists of the states defined in the
  following subsections.</p>

  <!-- XXX should go through these reordering the entries so that
  they're in some consistent order, like, by Unicode, errors last, or
  something -->

  <h5 id=data-state><span class=secno>8.2.4.1 </span><dfn>Data state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0026 AMPERSAND (&amp;)</dt>
   <dd>When the <a href=#content-model-flag>content model flag</a> is set to one of the
   PCDATA or RCDATA states and the <a href=#escape-flag>escape flag</a> is
   false: switch to the <a href=#character-reference-data-state>character reference data
   state</a>.</dd> <dd>Otherwise: treat it as per the "anything
   else" entry below.</dd>

   <dt>U+002D HYPHEN-MINUS (-)</dt>
   <dd>

    <p>If the <a href=#content-model-flag>content model flag</a> is set to either the
    RCDATA state or the CDATA state, and the <a href=#escape-flag>escape flag</a>
    is false, and there are at least three characters before this
    one in the input stream, and the last four characters in the
    input stream, including this one, are U+003C LESS-THAN SIGN,
    U+0021 EXCLAMATION MARK, U+002D HYPHEN-MINUS, and U+002D
    HYPHEN-MINUS ("&lt;!--"), then set the <a href=#escape-flag>escape flag</a>
    to true.</p>

    <p>In any case, emit the input character as a character
    token. Stay in the <a href=#data-state>data state</a>.</p>

   </dd>

   <dt>U+003C LESS-THAN SIGN (&lt;)</dt>
   <dd>When the <a href=#content-model-flag>content model flag</a> is set to the PCDATA
   state: switch to the <a href=#tag-open-state>tag open state</a>.</dd>
   <dd>When the <a href=#content-model-flag>content model flag</a> is set to either the
   RCDATA state or the CDATA state, and the <a href=#escape-flag>escape flag</a>
   is false: switch to the <a href=#tag-open-state>tag open state</a>.</dd>
   <dd>Otherwise: treat it as per the "anything else" entry
   below.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>

    <p>If the <a href=#content-model-flag>content model flag</a> is set to either the
    RCDATA state or the CDATA state, and the <a href=#escape-flag>escape
    flag</a> is true, and the last three characters in the input
    stream including this one are U+002D HYPHEN-MINUS, U+002D
    HYPHEN-MINUS, U+003E GREATER-THAN SIGN ("--&gt;"), set the
    <a href=#escape-flag>escape flag</a> to false.</p> <!-- no need to check
    that there are enough characters, since you can only run into
    this if the flag is true in the first place, which requires four
    characters. -->

    <p>In any case, emit the input character as a character
    token. Stay in the <a href=#data-state>data state</a>.</p>

   </dd>

   <dt>EOF</dt>
   <dd>Emit an end-of-file token.</dd>

   <dt>Anything else</dt>
   <dd>Emit the input character as a character token. Stay in the
   <a href=#data-state>data state</a>.</dd>

  </dl><h5 id=character-reference-data-state><span class=secno>8.2.4.2 </span><dfn>Character reference data state</dfn></h5>

  <p><em>(This cannot happen if the <a href=#content-model-flag>content model flag</a>
  is set to the CDATA state.)</em></p>

  <p>Attempt to <a href=#consume-a-character-reference>consume a character reference</a>, with no
  <a href=#additional-allowed-character>additional allowed character</a>.</p>

  <p>If nothing is returned, emit a U+0026 AMPERSAND character
  token.</p>

  <p>Otherwise, emit the character token that was returned.</p>

  <p>Finally, switch to the <a href=#data-state>data state</a>.</p>


  <h5 id=tag-open-state><span class=secno>8.2.4.3 </span><dfn>Tag open state</dfn></h5>

  <p>The behavior of this state depends on the <a href=#content-model-flag>content model
  flag</a>.</p>

  <dl><dt>If the <a href=#content-model-flag>content model flag</a> is set to the RCDATA
   or CDATA states</dt>

   <dd>

    <p>Consume the <a href=#next-input-character>next input character</a>. If it is a
    U+002F SOLIDUS (/) character, switch to the <a href=#close-tag-open-state>close tag open
    state</a>. Otherwise, emit a U+003C LESS-THAN SIGN character
    token and reconsume the <a href=#current-input-character>current input character</a> in the
    <a href=#data-state>data state</a>.</p>

   </dd>

   <dt>If the <a href=#content-model-flag>content model flag</a> is set to the PCDATA
   state</dt>

   <dd>

    <p>Consume the <a href=#next-input-character>next input character</a>:</p>

    <dl class=switch><dt>U+0021 EXCLAMATION MARK (!)</dt>
     <dd>Switch to the <a href=#markup-declaration-open-state>markup declaration open state</a>.</dd>

     <dt>U+002F SOLIDUS (/)</dt>
     <dd>Switch to the <a href=#close-tag-open-state>close tag open state</a>.</dd>

     <dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
     <dd>Create a new start tag token, set its tag name to the
     lowercase version of the input character (add 0x0020 to the
     character's code point), then switch to the <a href=#tag-name-state>tag name
     state</a>. (Don't emit the token yet; further details will
     be filled in before it is emitted.)</dd>

     <dt>U+0061 LATIN SMALL LETTER A through to U+007A LATIN SMALL LETTER Z</dt>
     <dd>Create a new start tag token, set its tag name to the input
     character, then switch to the <a href=#tag-name-state>tag name
     state</a>. (Don't emit the token yet; further details will
     be filled in before it is emitted.)</dd>

     <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
     <dd><a href=#parse-error>Parse error</a>. Emit a U+003C LESS-THAN SIGN
     character token and a U+003E GREATER-THAN SIGN character
     token. Switch to the <a href=#data-state>data state</a>.</dd>

     <dt>U+003F QUESTION MARK (?)</dt>
     <dd><a href=#parse-error>Parse error</a>. Switch to the <a href=#bogus-comment-state>bogus
     comment state</a>.</dd>

     <dt>Anything else</dt>
     <dd><a href=#parse-error>Parse error</a>. Emit a U+003C LESS-THAN SIGN
     character token and reconsume the <a href=#current-input-character>current input character</a> in the
     <a href=#data-state>data state</a>.</dd>

    </dl></dd>

  </dl><h5 id=close-tag-open-state><span class=secno>8.2.4.4 </span><dfn>Close tag open state</dfn></h5>

  <p>If the <a href=#content-model-flag>content model flag</a> is set to the RCDATA or
  CDATA states but no start tag token has ever been emitted by this
  instance of the tokeniser (<a href=#fragment-case>fragment case</a>), or, if the
  <a href=#content-model-flag>content model flag</a> is set to the RCDATA or CDATA states
  and the next few characters do not match the tag name of the last
  start tag token emitted (compared in an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> manner), or if they do but they are not
  immediately followed by one of the following characters:</p>

  <ul class=brief><li>U+0009 CHARACTER TABULATION</li>
   <li>U+000A LINE FEED (LF)</li>
   <li>U+000C FORM FEED (FF)</li>
   <!--<li>U+000D CARRIAGE RETURN (CR)</li>-->
   <li>U+0020 SPACE</li>
   <li>U+003E GREATER-THAN SIGN (&gt;)</li>
   <li>U+002F SOLIDUS (/)</li>
   <li>EOF</li>
  </ul><p>...then emit a U+003C LESS-THAN SIGN character token, a U+002F
  SOLIDUS character token, and switch to the <a href=#data-state>data state</a>
  to process the <a href=#next-input-character>next input character</a>.</p>

  <p>Otherwise, if the <a href=#content-model-flag>content model flag</a> is set to the
  PCDATA state, or if the next few characters <em>do</em> match that tag
  name, consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
   <dd>Create a new end tag token, set its tag name to the lowercase
   version of the input character (add 0x0020 to the character's
   code point), then switch to the <a href=#tag-name-state>tag name
   state</a>. (Don't emit the token yet; further details will be
   filled in before it is emitted.)</dd>

   <dt>U+0061 LATIN SMALL LETTER A through to U+007A LATIN SMALL LETTER Z</dt>
   <dd>Create a new end tag token, set its tag name to the input
   character, then switch to the <a href=#tag-name-state>tag name state</a>. (Don't
   emit the token yet; further details will be filled in before it
   is emitted.)</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit a U+003C LESS-THAN SIGN
   character token and a U+002F SOLIDUS character token.  Reconsume
   the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Switch to the <a href=#bogus-comment-state>bogus
   comment state</a>.</dd>

  </dl><h5 id=tag-name-state><span class=secno>8.2.4.5 </span><dfn>Tag name state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Switch to the <a href=#before-attribute-name-state>before attribute name state</a>.</dd>

   <dt>U+002F SOLIDUS (/)</dt>
   <dd>Switch to the <a href=#self-closing-start-tag-state>self-closing start tag state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current tag token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
   <dd>Append the lowercase version of the <a href=#current-input-character>current input character</a>
   (add 0x0020 to the character's code point) to the current tag
   token's tag name. Stay in the <a href=#tag-name-state>tag name state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the EOF character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current tag token's
   tag name. Stay in the <a href=#tag-name-state>tag name state</a>.</dd>

  </dl><h5 id=before-attribute-name-state><span class=secno>8.2.4.6 </span><dfn>Before attribute name state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#before-attribute-name-state>before attribute name state</a>.</dd>

   <dt>U+002F SOLIDUS (/)</dt>
   <dd>Switch to the <a href=#self-closing-start-tag-state>self-closing start tag state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current tag token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
   <dd>Start a new attribute in the current tag token. Set that
   attribute's name to the lowercase version of the <a href=#current-input-character>current input
   character</a> (add 0x0020 to the character's code point), and its
   value to the empty string. Switch to the <a href=#attribute-name-state>attribute name
   state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dt>U+0027 APOSTROPHE (')</dt>
   <dt>U+003D EQUALS SIGN (=)</dt>
   <dd><a href=#parse-error>Parse error</a>. Treat it as per the "anything else"
   entry below.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the EOF character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Start a new attribute in the current tag token. Set that
   attribute's name to the <a href=#current-input-character>current input character</a>, and its value to
   the empty string. Switch to the <a href=#attribute-name-state>attribute name
   state</a>.</dd>

  </dl><h5 id=attribute-name-state><span class=secno>8.2.4.7 </span><dfn>Attribute name state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Switch to the <a href=#after-attribute-name-state>after attribute name state</a>.</dd>

   <dt>U+002F SOLIDUS (/)</dt>
   <dd>Switch to the <a href=#self-closing-start-tag-state>self-closing start tag state</a>.</dd>

   <dt>U+003D EQUALS SIGN (=)</dt>
   <dd>Switch to the <a href=#before-attribute-value-state>before attribute value state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current tag token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
   <dd>Append the lowercase version of the <a href=#current-input-character>current input character</a>
   (add 0x0020 to the character's code point) to the current
   attribute's name. Stay in the <a href=#attribute-name-state>attribute name
   state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dt>U+0027 APOSTROPHE (')</dt>
   <dd><a href=#parse-error>Parse error</a>. Treat it as per the "anything else"
   entry below.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the EOF character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current attribute's
   name. Stay in the <a href=#attribute-name-state>attribute name state</a>.</dd>

  </dl><p>When the user agent leaves the attribute name state (and before
  emitting the tag token, if appropriate), the complete attribute's
  name must be compared to the other attributes on the same token;
  if there is already an attribute on the token with the exact same
  name, then this is a <a href=#parse-error>parse error</a> and the new
  attribute must be dropped, along with the value that gets
  associated with it (if any).</p>


  <h5 id=after-attribute-name-state><span class=secno>8.2.4.8 </span><dfn>After attribute name state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#after-attribute-name-state>after attribute name state</a>.</dd>

   <dt>U+002F SOLIDUS (/)</dt>
   <dd>Switch to the <a href=#self-closing-start-tag-state>self-closing start tag state</a>.</dd>

   <dt>U+003D EQUALS SIGN (=)</dt>
   <dd>Switch to the <a href=#before-attribute-value-state>before attribute value state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current tag token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
   <dd>Start a new attribute in the current tag token. Set that
   attribute's name to the lowercase version of the <a href=#current-input-character>current input character</a>
   (add 0x0020 to the character's code point), and its value to
   the empty string. Switch to the <a href=#attribute-name-state>attribute name
   state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dt>U+0027 APOSTROPHE (')</dt>
   <dd><a href=#parse-error>Parse error</a>. Treat it as per the "anything else"
   entry below.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the EOF character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Start a new attribute in the current tag token. Set that
   attribute's name to the <a href=#current-input-character>current input character</a>, and its value to
   the empty string. Switch to the <a href=#attribute-name-state>attribute name
   state</a>.</dd>

  </dl><h5 id=before-attribute-value-state><span class=secno>8.2.4.9 </span><dfn>Before attribute value state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#before-attribute-value-state>before attribute value state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dd>Switch to the <a href=#attribute-value-(double-quoted)-state>attribute value (double-quoted) state</a>.</dd>

   <dt>U+0026 AMPERSAND (&amp;)</dt>
   <dd>Switch to the <a href=#attribute-value-(unquoted)-state>attribute value (unquoted) state</a>
   and reconsume this input character.</dd>

   <dt>U+0027 APOSTROPHE (')</dt>
   <dd>Switch to the <a href=#attribute-value-(single-quoted)-state>attribute value (single-quoted) state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag token. Switch to
   the <a href=#data-state>data state</a>.</dd>

   <dt>U+003D EQUALS SIGN (=)</dt>
   <dd><a href=#parse-error>Parse error</a>. Treat it as per the "anything else"
   entry below.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current attribute's
   value. Switch to the <a href=#attribute-value-(unquoted)-state>attribute value (unquoted)
   state</a>.</dd>

  </dl><h5 id=attribute-value-(double-quoted)-state><span class=secno>8.2.4.10 </span><dfn>Attribute value (double-quoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0022 QUOTATION MARK (")</dt>
   <dd>Switch to the <a href=#after-attribute-value-(quoted)-state>after attribute value (quoted)
   state</a>.</dd>

   <dt>U+0026 AMPERSAND (&amp;)</dt>
   <dd>Switch to the <a href=#character-reference-in-attribute-value-state>character reference in attribute value
   state</a>, with the <a href=#additional-allowed-character>additional allowed character</a>
   being U+0022 QUOTATION MARK (").</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current attribute's
   value. Stay in the <a href=#attribute-value-(double-quoted)-state>attribute value (double-quoted)
   state</a>.</dd>

  </dl><h5 id=attribute-value-(single-quoted)-state><span class=secno>8.2.4.11 </span><dfn>Attribute value (single-quoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0027 APOSTROPHE (')</dt>
   <dd>Switch to the <a href=#after-attribute-value-(quoted)-state>after attribute value (quoted)
   state</a>.</dd>

   <dt>U+0026 AMPERSAND (&amp;)</dt>
   <dd>Switch to the <a href=#character-reference-in-attribute-value-state>character reference in attribute value
   state</a>, with the <a href=#additional-allowed-character>additional allowed character</a>
   being U+0027 APOSTROPHE (').</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current attribute's
   value. Stay in the <a href=#attribute-value-(single-quoted)-state>attribute value (single-quoted)
   state</a>.</dd>

  </dl><h5 id=attribute-value-(unquoted)-state><span class=secno>8.2.4.12 </span><dfn>Attribute value (unquoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Switch to the <a href=#before-attribute-name-state>before attribute name state</a>.</dd>

   <dt>U+0026 AMPERSAND (&amp;)</dt>
   <dd>Switch to the <a href=#character-reference-in-attribute-value-state>character reference in attribute value
   state</a>, with no <a href=#additional-allowed-character>additional allowed
   character</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current tag token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dt>U+0027 APOSTROPHE (')</dt>
   <dt>U+003D EQUALS SIGN (=)</dt>
   <dd><a href=#parse-error>Parse error</a>. Treat it as per the "anything else"
   entry below.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current attribute's
   value. Stay in the <a href=#attribute-value-(unquoted)-state>attribute value (unquoted)
   state</a>.</dd>

  </dl><h5 id=character-reference-in-attribute-value-state><span class=secno>8.2.4.13 </span><dfn>Character reference in attribute value state</dfn></h5>

  <p>Attempt to <a href=#consume-a-character-reference>consume a character reference</a>.</p>

  <p>If nothing is returned, append a U+0026 AMPERSAND character to
  the current attribute's value.</p>

  <p>Otherwise, append the returned character token to the current
  attribute's value.</p>

  <p>Finally, switch back to the attribute value state that you were
  in when were switched into this state.</p>


  <h5 id=after-attribute-value-(quoted)-state><span class=secno>8.2.4.14 </span><dfn>After attribute value (quoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Switch to the <a href=#before-attribute-name-state>before attribute name state</a>.</dd>

   <dt>U+002F SOLIDUS (/)</dt>
   <dd>Switch to the <a href=#self-closing-start-tag-state>self-closing start tag state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current tag token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the EOF character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Reconsume the character in
   the <a href=#before-attribute-name-state>before attribute name state</a>.</dd>

  </dl><h5 id=self-closing-start-tag-state><span class=secno>8.2.4.15 </span><dfn>Self-closing start tag state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Set the <i>self-closing flag</i> of the current tag
   token. Emit the current tag token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the current tag
   token. Reconsume the EOF character in the <a href=#data-state>data
   state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Reconsume the character in
   the <a href=#before-attribute-name-state>before attribute name state</a>.</dd>

  </dl><h5 id=bogus-comment-state><span class=secno>8.2.4.16 </span><dfn>Bogus comment state</dfn></h5>

  <p><em>(This can only happen if the <a href=#content-model-flag>content model
  flag</a> is set to the PCDATA state.)</em></p>

  <p>Consume every character up to and including the first U+003E
  GREATER-THAN SIGN character (&gt;) or the end of the file (EOF),
  whichever comes first. Emit a comment token whose data is the
  concatenation of all the characters starting from and including
  the character that caused the state machine to switch into the
  bogus comment state, up to and including the character immediately
  before the last consumed character (i.e. up to the character just
  before the U+003E or EOF character). (If the comment was started
  by the end of the file (EOF), the token is empty.)</p>

  <p>Switch to the <a href=#data-state>data state</a>.</p>

  <p>If the end of the file was reached, reconsume the EOF
  character.</p>


  <h5 id=markup-declaration-open-state><span class=secno>8.2.4.17 </span><dfn>Markup declaration open state</dfn></h5>

  <p><em>(This can only happen if the <a href=#content-model-flag>content model
  flag</a> is set to the PCDATA state.)</em></p>

  <p>If the next two characters are both U+002D HYPHEN-MINUS (-)
  characters, consume those two characters, create a comment token
  whose data is the empty string, and switch to the <a href=#comment-start-state>comment
  start state</a>.</p>

  <p>Otherwise, if the next seven characters are an <a href=#ascii-case-insensitive>ASCII
  case-insensitive</a> match for the word "DOCTYPE", then consume
  those characters and switch to the <a href=#doctype-state>DOCTYPE state</a>.</p>

  <p>Otherwise, if the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inforeign title="insertion mode: in foreign content">in foreign
  content</a>" and the <a href=#current-node>current node</a> is not an element
  in the <a href=#html-namespace-0>HTML namespace</a> and the next seven characters are
  an <span>ASCII case-sensitive</span> match for the string "[CDATA["
  (the five uppercase letters "CDATA" with a U+005B LEFT SQUARE
  BRACKET character before and after), then consume those characters
  and switch to the <a href=#cdata-section-state>CDATA section state</a> (which is
  unrelated to the <a href=#content-model-flag>content model flag</a>'s CDATA state).</p>

  <p>Otherwise, this is a <a href=#parse-error>parse error</a>. Switch to the
  <a href=#bogus-comment-state>bogus comment state</a>. The next character that is
  consumed, if any, is the first character that will be in the
  comment.</p>


  <h5 id=comment-start-state><span class=secno>8.2.4.18 </span><dfn>Comment start state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+002D HYPHEN-MINUS (-)</dt>
   <dd>Switch to the <a href=#comment-start-dash-state>comment start dash state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the comment token. Switch to
   the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the comment token. Reconsume
   the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the input character to the comment token's
   data. Switch to the <a href=#comment-state>comment state</a>.</dd>

  </dl><h5 id=comment-start-dash-state><span class=secno>8.2.4.19 </span><dfn>Comment start dash state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+002D HYPHEN-MINUS (-)</dt>
   <dd>Switch to the <a href=#comment-end-state>comment end state</a></dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the comment token. Switch to
   the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the comment token. Reconsume
   the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append a U+002D HYPHEN-MINUS (-) character and the input
   character to the comment token's data. Switch to the
   <a href=#comment-state>comment state</a>.</dd>

  </dl><h5 id=comment-state><span class=secno>8.2.4.20 </span><dfn id=comment>Comment state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+002D HYPHEN-MINUS (-)</dt>
   <dd>Switch to the <a href=#comment-end-dash-state>comment end dash state</a></dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the comment token. Reconsume
   the EOF character in the <a href=#data-state>data state</a>.</dd> <!-- For
   security reasons: otherwise, hostile user could put a <script> in
   a comment e.g. in a blog comment and then DOS the server so that
   the end tag isn't read, and then the commented <script> tag would
   be treated as live code -->

   <dt>Anything else</dt>
   <dd>Append the input character to the comment token's data. Stay
   in the <a href=#comment-state>comment state</a>.</dd>

  </dl><h5 id=comment-end-dash-state><span class=secno>8.2.4.21 </span><dfn>Comment end dash state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+002D HYPHEN-MINUS (-)</dt>
   <dd>Switch to the <a href=#comment-end-state>comment end state</a></dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the comment token. Reconsume
   the EOF character in the <a href=#data-state>data state</a>.</dd> <!-- For
   security reasons: otherwise, hostile user could put a <script> in
   a comment e.g. in a blog comment and then DOS the server so that
   the end tag isn't read, and then the commented <script> tag would
   be treated as live code -->

   <dt>Anything else</dt>
   <dd>Append a U+002D HYPHEN-MINUS (-) character and the input
   character to the comment token's data. Switch to the
   <a href=#comment-state>comment state</a>.</dd>

  </dl><h5 id=comment-end-state><span class=secno>8.2.4.22 </span><dfn>Comment end state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the comment token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>U+002D HYPHEN-MINUS (-)</dt>
   <dd><a href=#parse-error>Parse error</a>. Append a U+002D HYPHEN-MINUS
   (-) character to the comment token's data. Stay in the
   <a href=#comment-end-state>comment end state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Emit the comment token. Reconsume
   the EOF character in the <a href=#data-state>data state</a>.</dd> <!-- For
   security reasons: otherwise, hostile user could put a <script> in
   a comment e.g. in a blog comment and then DOS the server so that
   the end tag isn't read, and then the commented <script> tag would
   be treated as live code -->

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Append two U+002D HYPHEN-MINUS (-)
   characters and the input character to the comment token's
   data. Switch to the <a href=#comment-state>comment state</a>.</dd>

  </dl><h5 id=doctype-state><span class=secno>8.2.4.23 </span><dfn>DOCTYPE state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Switch to the <a href=#before-doctype-name-state>before DOCTYPE name state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Reconsume the current
   character in the <a href=#before-doctype-name-state>before DOCTYPE name state</a>.</dd>

  </dl><h5 id=before-doctype-name-state><span class=secno>8.2.4.24 </span><dfn>Before DOCTYPE name state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#before-doctype-name-state>before DOCTYPE name state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Create a new DOCTYPE token. Set its
   <i>force-quirks flag</i> to <i>on</i>. Emit the token. Switch to
   the <a href=#data-state>data state</a>.</dd>

   <dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
   <dd>Create a new DOCTYPE token. Set the token's name to the
   lowercase version of the input character (add 0x0020 to the
   character's code point). Switch to the <a href=#doctype-name-state>DOCTYPE name
   state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Create a new DOCTYPE token. Set its
   <i>force-quirks flag</i> to <i>on</i>. Emit the token. Reconsume
   the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Create a new DOCTYPE token. Set the token's name to the
   <a href=#current-input-character>current input character</a>. Switch to the <a href=#doctype-name-state>DOCTYPE name
   state</a>.</dd>

  </dl><h5 id=doctype-name-state><span class=secno>8.2.4.25 </span><dfn>DOCTYPE name state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Switch to the <a href=#after-doctype-name-state>after DOCTYPE name state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current DOCTYPE token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>U+0041 LATIN CAPITAL LETTER A through to U+005A LATIN CAPITAL LETTER Z</dt>
   <dd>Append the lowercase version of the input character (add 0x0020
   to the character's code point) to the current DOCTYPE token's
   name. Stay in the <a href=#doctype-name-state>DOCTYPE name state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current DOCTYPE
   token's name. Stay in the <a href=#doctype-name-state>DOCTYPE name state</a>.</dd>

  </dl><h5 id=after-doctype-name-state><span class=secno>8.2.4.26 </span><dfn>After DOCTYPE name state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#after-doctype-name-state>after DOCTYPE name state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current DOCTYPE token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>

    <p>If the six characters starting from the <a href=#current-input-character>current input
    character</a> are an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match
    for the word "PUBLIC", then consume those characters and switch to
    the <a href=#before-doctype-public-identifier-state>before DOCTYPE public identifier state</a>.</p>

    <p>Otherwise, if the six characters starting from the
    <a href=#current-input-character>current input character</a> are an <a href=#ascii-case-insensitive>ASCII
    case-insensitive</a> match for the word "SYSTEM", then consume
    those characters and switch to the <a href=#before-doctype-system-identifier-state>before DOCTYPE system
    identifier state</a>.</p>

    <p>Otherwise, this is the <a href=#parse-error>parse error</a>. Set the
    DOCTYPE token's <i>force-quirks flag</i> to <i>on</i>. Switch to
    the <a href=#bogus-doctype-state>bogus DOCTYPE state</a>.</p>

   </dd>

  </dl><h5 id=before-doctype-public-identifier-state><span class=secno>8.2.4.27 </span><dfn>Before DOCTYPE public identifier state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#before-doctype-public-identifier-state>before DOCTYPE public identifier state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dd>Set the DOCTYPE token's public identifier to the empty string
   (not missing), then switch to the <a href=#doctype-public-identifier-(double-quoted)-state>DOCTYPE public identifier
   (double-quoted) state</a>.</dd>

   <dt>U+0027 APOSTROPHE (')</dt>
   <dd>Set the DOCTYPE token's public identifier to the empty string
   (not missing), then switch to the <a href=#doctype-public-identifier-(single-quoted)-state>DOCTYPE public identifier
   (single-quoted) state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE
   token. Switch to the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>.  Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Switch to the <a href=#bogus-doctype-state>bogus
   DOCTYPE state</a>.</dd>

  </dl><h5 id=doctype-public-identifier-(double-quoted)-state><span class=secno>8.2.4.28 </span><dfn>DOCTYPE public identifier (double-quoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0022 QUOTATION MARK (")</dt>
   <dd>Switch to the <a href=#after-doctype-public-identifier-state>after DOCTYPE public identifier state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE
   token. Switch to the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current DOCTYPE
   token's public identifier. Stay in the <a href=#doctype-public-identifier-(double-quoted)-state>DOCTYPE public
   identifier (double-quoted) state</a>.</dd>

  </dl><h5 id=doctype-public-identifier-(single-quoted)-state><span class=secno>8.2.4.29 </span><dfn>DOCTYPE public identifier (single-quoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0027 APOSTROPHE (')</dt>
   <dd>Switch to the <a href=#after-doctype-public-identifier-state>after DOCTYPE public identifier state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE
   token. Switch to the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current DOCTYPE
   token's public identifier. Stay in the <a href=#doctype-public-identifier-(single-quoted)-state>DOCTYPE public
   identifier (single-quoted) state</a>.</dd>

  </dl><h5 id=after-doctype-public-identifier-state><span class=secno>8.2.4.30 </span><dfn>After DOCTYPE public identifier state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#after-doctype-public-identifier-state>after DOCTYPE public identifier state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dd>Set the DOCTYPE token's system identifier to the empty string
   (not missing), then switch to the <a href=#doctype-system-identifier-(double-quoted)-state>DOCTYPE system identifier
   (double-quoted) state</a>.</dd>

   <dt>U+0027 APOSTROPHE (')</dt>
   <dd>Set the DOCTYPE token's system identifier to the empty string
   (not missing), then switch to the <a href=#doctype-system-identifier-(single-quoted)-state>DOCTYPE system identifier
   (single-quoted) state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current DOCTYPE token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Switch to the <a href=#bogus-doctype-state>bogus
   DOCTYPE state</a>.</dd>

  </dl><h5 id=before-doctype-system-identifier-state><span class=secno>8.2.4.31 </span><dfn>Before DOCTYPE system identifier state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#before-doctype-system-identifier-state>before DOCTYPE system identifier state</a>.</dd>

   <dt>U+0022 QUOTATION MARK (")</dt>
   <dd>Set the DOCTYPE token's system identifier to the empty string
   (not missing), then switch to the <a href=#doctype-system-identifier-(double-quoted)-state>DOCTYPE system identifier
   (double-quoted) state</a>.</dd>

   <dt>U+0027 APOSTROPHE (')</dt>
   <dd>Set the DOCTYPE token's system identifier to the empty string
   (not missing), then switch to the <a href=#doctype-system-identifier-(single-quoted)-state>DOCTYPE system identifier
   (single-quoted) state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE
   token. Switch to the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Switch to the <a href=#bogus-doctype-state>bogus
   DOCTYPE state</a>.</dd>

  </dl><h5 id=doctype-system-identifier-(double-quoted)-state><span class=secno>8.2.4.32 </span><dfn>DOCTYPE system identifier (double-quoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0022 QUOTATION MARK (")</dt>
   <dd>Switch to the <a href=#after-doctype-system-identifier-state>after DOCTYPE system identifier state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE
   token. Switch to the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current DOCTYPE
   token's system identifier. Stay in the <a href=#doctype-system-identifier-(double-quoted)-state>DOCTYPE system
   identifier (double-quoted) state</a>.</dd>

  </dl><h5 id=doctype-system-identifier-(single-quoted)-state><span class=secno>8.2.4.33 </span><dfn>DOCTYPE system identifier (single-quoted) state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0027 APOSTROPHE (')</dt>
   <dd>Switch to the <a href=#after-doctype-system-identifier-state>after DOCTYPE system identifier state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE
   token. Switch to the <a href=#data-state>data state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Append the <a href=#current-input-character>current input character</a> to the current DOCTYPE
   token's system identifier. Stay in the <a href=#doctype-system-identifier-(single-quoted)-state>DOCTYPE system
   identifier (single-quoted) state</a>.</dd>

  </dl><h5 id=after-doctype-system-identifier-state><span class=secno>8.2.4.34 </span><dfn>After DOCTYPE system identifier state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dd>Stay in the <a href=#after-doctype-system-identifier-state>after DOCTYPE system identifier state</a>.</dd>

   <dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the current DOCTYPE token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>EOF</dt>
   <dd><a href=#parse-error>Parse error</a>. Set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>. Emit that DOCTYPE token.
   Reconsume the EOF character in the <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd><a href=#parse-error>Parse error</a>. Switch to the <a href=#bogus-doctype-state>bogus DOCTYPE
   state</a>. (This does <em>not</em> set the DOCTYPE token's
   <i>force-quirks flag</i> to <i>on</i>.)</dd>

  </dl><h5 id=bogus-doctype-state><span class=secno>8.2.4.35 </span><dfn>Bogus DOCTYPE state</dfn></h5>

  <p>Consume the <a href=#next-input-character>next input character</a>:</p>

  <dl class=switch><dt>U+003E GREATER-THAN SIGN (&gt;)</dt>
   <dd>Emit the DOCTYPE token. Switch to the <a href=#data-state>data
   state</a>.</dd>

   <dt>EOF</dt>
   <dd>Emit the DOCTYPE token. Reconsume the EOF character in the
   <a href=#data-state>data state</a>.</dd>

   <dt>Anything else</dt>
   <dd>Stay in the <a href=#bogus-doctype-state>bogus DOCTYPE state</a>.</dd>

  </dl><h5 id=cdata-section-state><span class=secno>8.2.4.36 </span><dfn>CDATA section state</dfn></h5>

  <p><em>(This can only happen if the <a href=#content-model-flag>content model
  flag</a> is set to the PCDATA state, and is unrelated to the
  <a href=#content-model-flag>content model flag</a>'s CDATA state.)</em></p>

  <p>Consume every character up to the next occurrence of the three
  character sequence U+005D RIGHT SQUARE BRACKET U+005D RIGHT SQUARE
  BRACKET U+003E GREATER-THAN SIGN (<code title="">]]&gt;</code>), or the
  end of the file (EOF), whichever comes first. Emit a series of
  character tokens consisting of all the characters consumed except
  the matching three character sequence at the end (if one was found
  before the end of the file).</p>

  <p>Switch to the <a href=#data-state>data state</a>.</p>

  <p>If the end of the file was reached, reconsume the EOF
  character.</p>



  <h5 id=tokenizing-character-references><span class=secno>8.2.4.37 </span>Tokenizing character references</h5>

  <p>This section defines how to <dfn id=consume-a-character-reference>consume a character
  reference</dfn>. This definition is used when parsing character
  references <a href=#character-reference-data-state title="character reference data state">in
  text</a> and <a href=#character-reference-in-attribute-value-state title="character reference in attribute value
  state">in attributes</a>.</p>

  <p>The behavior depends on the identity of the next character (the
  one immediately after the U+0026 AMPERSAND character):</p>

  <dl class=switch><dt>U+0009 CHARACTER TABULATION</dt>
   <dt>U+000A LINE FEED (LF)</dt>
   <dt>U+000C FORM FEED (FF)</dt>
   <!--<dt>U+000D CARRIAGE RETURN (CR)</dt>-->
   <dt>U+0020 SPACE</dt>
   <dt>U+003C LESS-THAN SIGN</dt>
   <dt>U+0026 AMPERSAND</dt>
   <dt>EOF</dt>
   <dt>The <dfn id=additional-allowed-character>additional allowed character</dfn>, if there is one</dt>

   <dd>Not a character reference. No characters are consumed, and
   nothing is returned. (This is not an error, either.)</dd>


   <dt>U+0023 NUMBER SIGN (#)</dt>

   <dd>

    <p>Consume the U+0023 NUMBER SIGN.</p>

    <p>The behavior further depends on the character after the U+0023
    NUMBER SIGN:</p>

    <dl class=switch><dt>U+0078 LATIN SMALL LETTER X</dt>
     <dt>U+0058 LATIN CAPITAL LETTER X</dt>

     <dd>

      <p>Consume the X.</p>

      <p>Follow the steps below, but using the range of characters
      U+0030 DIGIT ZERO through to U+0039 DIGIT NINE, U+0061 LATIN
      SMALL LETTER A through to U+0066 LATIN SMALL LETTER F, and
      U+0041 LATIN CAPITAL LETTER A, through to U+0046 LATIN CAPITAL
      LETTER F (in other words, 0-9, A-F, a-f).</p>

      <p>When it comes to interpreting the number, interpret it as a
      hexadecimal number.</p>

     </dd>


     <dt>Anything else</dt>

     <dd>

      <p>Follow the steps below, but using the range of characters
      U+0030 DIGIT ZERO through to U+0039 DIGIT NINE (i.e. just
      0-9).</p>

      <p>When it comes to interpreting the number, interpret it as a
      decimal number.</p>

     </dd>

    </dl><p>Consume as many characters as match the range of characters
    given above.</p>

    <p>If no characters match the range, then don't consume any
    characters (and unconsume the U+0023 NUMBER SIGN character and, if
    appropriate, the X character). This is a <a href=#parse-error>parse
    error</a>; nothing is returned.</p>

    <p>Otherwise, if the next character is a U+003B SEMICOLON, consume
    that too. If it isn't, there is a <a href=#parse-error>parse
    error</a>.</p>

    <p>If one or more characters match the range, then take them all
    and interpret the string of characters as a number (either
    hexadecimal or decimal as appropriate).</p>

    <p>If that number is one of the numbers in the first column of the
    following table, then this is a <a href=#parse-error>parse error</a>. Find the
    row with that number in the first column, and return a character
    token for the Unicode character given in the second column of that
    row.</p>

    <table><thead><tr><th>Number <th colspan=2>Unicode character
     <tbody><tr><td>0x0D <td>U+000A <td>LINE FEED (LF)
      <tr><td>0x80 <td>U+20AC <td>EURO SIGN ('&euro;')
      <tr><td>0x81 <td>U+FFFD <td>REPLACEMENT CHARACTER
      <tr><td>0x82 <td>U+201A <td>SINGLE LOW-9 QUOTATION MARK ('&sbquo;')
      <tr><td>0x83 <td>U+0192 <td>LATIN SMALL LETTER F WITH HOOK ('&fnof;')
      <tr><td>0x84 <td>U+201E <td>DOUBLE LOW-9 QUOTATION MARK ('&bdquo;')
      <tr><td>0x85 <td>U+2026 <td>HORIZONTAL ELLIPSIS ('&hellip;')
      <tr><td>0x86 <td>U+2020 <td>DAGGER ('&dagger;')
      <tr><td>0x87 <td>U+2021 <td>DOUBLE DAGGER ('&Dagger;')
      <tr><td>0x88 <td>U+02C6 <td>MODIFIER LETTER CIRCUMFLEX ACCENT ('&circ;')
      <tr><td>0x89 <td>U+2030 <td>PER MILLE SIGN ('&permil;')
      <tr><td>0x8A <td>U+0160 <td>LATIN CAPITAL LETTER S WITH CARON ('&Scaron;')
      <tr><td>0x8B <td>U+2039 <td>SINGLE LEFT-POINTING ANGLE QUOTATION MARK ('&lsaquo;')
      <tr><td>0x8C <td>U+0152 <td>LATIN CAPITAL LIGATURE OE ('&OElig;')
      <tr><td>0x8D <td>U+FFFD <td>REPLACEMENT CHARACTER
      <tr><td>0x8E <td>U+017D <td>LATIN CAPITAL LETTER Z WITH CARON ('&#381;')
      <tr><td>0x8F <td>U+FFFD <td>REPLACEMENT CHARACTER
      <tr><td>0x90 <td>U+FFFD <td>REPLACEMENT CHARACTER
      <tr><td>0x91 <td>U+2018 <td>LEFT SINGLE QUOTATION MARK ('&lsquo;')
      <tr><td>0x92 <td>U+2019 <td>RIGHT SINGLE QUOTATION MARK ('&rsquo;')
      <tr><td>0x93 <td>U+201C <td>LEFT DOUBLE QUOTATION MARK ('&ldquo;')
      <tr><td>0x94 <td>U+201D <td>RIGHT DOUBLE QUOTATION MARK ('&rdquo;')
      <tr><td>0x95 <td>U+2022 <td>BULLET ('&bull;')
      <tr><td>0x96 <td>U+2013 <td>EN DASH ('&ndash;')
      <tr><td>0x97 <td>U+2014 <td>EM DASH ('&mdash;')
      <tr><td>0x98 <td>U+02DC <td>SMALL TILDE ('&tilde;')
      <tr><td>0x99 <td>U+2122 <td>TRADE MARK SIGN ('&trade;')
      <tr><td>0x9A <td>U+0161 <td>LATIN SMALL LETTER S WITH CARON ('&scaron;')
      <tr><td>0x9B <td>U+203A <td>SINGLE RIGHT-POINTING ANGLE QUOTATION MARK ('&rsaquo;')
      <tr><td>0x9C <td>U+0153 <td>LATIN SMALL LIGATURE OE ('&oelig;')
      <tr><td>0x9D <td>U+FFFD <td>REPLACEMENT CHARACTER
      <tr><td>0x9E <td>U+017E <td>LATIN SMALL LETTER Z WITH CARON ('&#382;')
      <tr><td>0x9F <td>U+0178 <td>LATIN CAPITAL LETTER Y WITH DIAERESIS ('&Yuml;')
    </table><!-- this is the same as the equivalent list in the input stream
    section, except it has 0x0000 included in the first range. --><p>Otherwise, if the number is in the range 0x0000 to 0x0008, <!--
    HT, LF allowed --> <!-- U+000B is in the next list --> <!-- FF, CR
    allowed --> 0x000E to 0x001F, <!-- ASCII allowed --> 0x007F <!--to
    0x0084, (0x0085 NEL not allowed), 0x0086--> to 0x009F, 0xD800 to
    0xDFFF<!-- surrogates not allowed -->, 0xFDD0 to 0xFDEF, or is one
    of 0x000B, 0xFFFE, 0xFFFF, 0x1FFFE, 0x1FFFF, 0x2FFFE, 0x2FFFF,
    0x3FFFE, 0x3FFFF, 0x4FFFE, 0x4FFFF, 0x5FFFE, 0x5FFFF, 0x6FFFE,
    0x6FFFF, 0x7FFFE, 0x7FFFF, 0x8FFFE, 0x8FFFF, 0x9FFFE, 0x9FFFF,
    0xAFFFE, 0xAFFFF, 0xBFFFE, 0xBFFFF, 0xCFFFE, 0xCFFFF, 0xDFFFE,
    0xDFFFF, 0xEFFFE, 0xEFFFF, 0xFFFFE, 0xFFFFF, 0x10FFFE, or
    0x10FFFF, or is higher than 0x10FFFF, then this is a <a href=#parse-error>parse
    error</a>; return a character token for the U+FFFD REPLACEMENT
    CHARACTER character instead.</p>

    <p>Otherwise, return a character token for the Unicode character
    whose code point is that number.</p>

   </dd>


   <dt>Anything else</dt>

   <dd>

    <p>Consume the maximum number of characters possible, with the
    consumed characters matching one of the identifiers in the first
    column of the <a href=#named-character-references>named character references</a> table (in a
    <a href=#case-sensitive>case-sensitive</a> manner).</p>

    <p>If no match can be made, then this is a <a href=#parse-error>parse
    error</a>. No characters are consumed, and nothing is
    returned.</p>

    <p>If the last character matched is not a U+003B SEMICOLON (<code title="">;</code>), there is a <a href=#parse-error>parse error</a>.</p>

    <p>If the character reference is being consumed <a href=#character-reference-in-attribute-value-state title="character reference in attribute value state">as part of an
    attribute</a>, and the last character matched is not a U+003B
    SEMICOLON (<code title="">;</code>), and the next character is in
    the range U+0030 DIGIT ZERO to U+0039 DIGIT NINE, U+0041 LATIN
    CAPITAL LETTER A to U+005A LATIN CAPITAL LETTER Z, or U+0061 LATIN
    SMALL LETTER A to U+007A LATIN SMALL LETTER Z, then, for
    historical reasons, all the characters that were matched after the
    U+0026 AMPERSAND (&amp;) must be unconsumed, and nothing is
    returned.</p>

    <p>Otherwise, return a character token for the character
    corresponding to the character reference name (as given by the
    second column of the <a href=#named-character-references>named character references</a>
    table).</p>

    <div class=example>

     <p>If the markup contains <code title="">I'm &amp;notit; I tell
     you</code>, the character reference is parsed as "not", as in,
     <code title="">I'm &not;it; I tell you</code>. But if the markup
     was <code title="">I'm &amp;notin; I tell you</code>, the
     character reference would be parsed as "notin;", resulting in
     <code title="">I'm &notin; I tell you</code>.</p>

    </div>

   </dd>

  </dl><h4 id=tree-construction><span class=secno>8.2.5 </span><dfn>Tree construction</dfn></h4>

  <p>The input to the tree construction stage is a sequence of tokens
  from the <a href=#tokenization>tokenization</a> stage. The tree construction
  stage is associated with a DOM <code>Document</code> object when a
  parser is created. The "output" of this stage consists of
  dynamically modifying or extending that document's DOM tree.</p>

  <p>This specification does not define when an interactive user agent
  has to render the <code>Document</code> so that it is available to
  the user, or when it has to begin accepting user input.</p>

  <p>As each token is emitted from the tokeniser, the user agent must
  process the token according to the rules given in the section
  corresponding to the current <a href=#insertion-mode>insertion mode</a>.</p>

  <p>When the steps below require the UA to <dfn id=insert-a-character>insert a
  character</dfn> into a node, if that node has a child immediately
  before where the character is to be inserted, and that child is a
  <code>Text</code> node, and that <code>Text</code> node was the last
  node that the parser inserted into the document, then the character
  must be appended to that <code>Text</code> node; otherwise, a new
  <code>Text</code> node whose data is just that character must be
  inserted in the appropriate place.</p>

  <p id=mutation-during-parsing>DOM mutation events must not fire
  for changes caused by the UA parsing the document. (Conceptually,
  the parser is not mutating the DOM, it is constructing it.) This
  includes the parsing of any content inserted using <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> and <code title=dom-document-writeln><a href=#dom-document-writeln>document.writeln()</a></code> calls. <a href=#refsDOM3EVENTS>[DOM3EVENTS]</a></p>

  <p class=note>Not all of the tag names mentioned below are
  conformant tag names in this specification; many are included to
  handle legacy content. They still form part of the algorithm that
  implementations are required to implement to claim conformance.</p>

  <p class=note>The algorithm described below places no limit on the
  depth of the DOM tree generated, or on the length of tag names,
  attribute names, attribute values, text nodes, etc. While
  implementors are encouraged to avoid arbitrary limits, it is
  recognized that <a href=#hardwareLimitations>practical
  concerns</a> will likely force user agents to impose nesting
  depths.</p>


  <h5 id=creating-and-inserting-elements><span class=secno>8.2.5.1 </span>Creating and inserting elements</h5>

  <p>When the steps below require the UA to <dfn id=create-an-element-for-the-token title="create an
  element for the token">create an element for a token</dfn> in a
  particular namespace, the UA must create a node implementing the
  interface appropriate for the element type corresponding to the tag
  name of the token in the given namespace (as given in the
  specification that defines that element, e.g. for an <code><a href=#the-a-element>a</a></code>
  element in the <a href=#html-namespace-0>HTML namespace</a>, this specification
  defines it to be the <code><a href=#htmlanchorelement>HTMLAnchorElement</a></code> interface), with
  the tag name being the name of that element, with the node being in
  the given namespace, and with the attributes on the node being those
  given in the given token.</p>

  <p>The interface appropriate for an element in the <a href=#html-namespace-0>HTML
  namespace</a> that is not defined in this specification is
  <code><a href=#htmlelement>HTMLElement</a></code>. The interface appropriate for an element
  in another namespace that is not defined by that namespace's
  specification is <code>Element</code>.</p>

  <p>When a <a href=#category-reset title=category-reset>resettable</a> element is
  created in this manner, its <a href=#concept-form-reset-control title=concept-form-reset-control>reset algorithm</a> must be
  invoked once the attributes are set. (This initializes the element's
  <a href=#concept-fe-value title=concept-fe-value>value</a> and <a href=#concept-fe-checked title=concept-fe-checked>checkedness</a> based on the element's
  attributes.)</p>

  <hr><p>When the steps below require the UA to <dfn id=insert-an-html-element>insert an HTML
  element</dfn> for a token, the UA must first <a href=#create-an-element-for-the-token>create an element
  for the token</a> in the <a href=#html-namespace-0>HTML namespace</a>, and then
  append this node to the <a href=#current-node>current node</a>, and push it onto
  the <a href=#stack-of-open-elements>stack of open elements</a> so that it is the new
  <a href=#current-node>current node</a>.</p>

  <p>The steps below may also require that the UA insert an HTML
  element in a particular place, in which case the UA must follow the
  same steps except that it must insert or append the new node in the
  location specified instead of appending it to the <a href=#current-node>current
  node</a>. (This happens in particular during the parsing of
  tables with invalid content.)</p>

  <p>If an element created by the <a href=#insert-an-html-element>insert an HTML element</a>
  algorithm is a <a href=#form-associated-element>form-associated element</a>, and the
  <a href=#form-element-pointer><code title="">form</code> element pointer</a> is not null,
  and the newly created element doesn't have a <code title=attr-fae-form><a href=#attr-fae-form>form</a></code> attribute, the user agent must
  <a href=#concept-form-association title=concept-form-association>associate</a> the newly
  created element with the <code><a href=#the-form-element>form</a></code> element pointed to by the
  <a href=#form-element-pointer><code title="">form</code> element pointer</a> before
  inserting it wherever it is to be inserted.</p>

  <hr><p>When the steps below require the UA to <dfn id=insert-a-foreign-element>insert a foreign
  element</dfn> for a token, the UA must first <a href=#create-an-element-for-the-token>create an element
  for the token</a> in the given namespace, and then append this
  node to the <a href=#current-node>current node</a>, and push it onto the
  <a href=#stack-of-open-elements>stack of open elements</a> so that it is the new
  <a href=#current-node>current node</a>. If the newly created element has an <code title="">xmlns</code> attribute in the <a href=#xmlns-namespace>XMLNS namespace</a>
  whose value is not exactly the same as the element's namespace, that
  is a <a href=#parse-error>parse error</a>. Similarly, if the newly created
  element has an <code title="">xmlns:xlink</code> attribute in the
  <a href=#xmlns-namespace>XMLNS namespace</a> whose value is not the <a href=#xlink-namespace>XLink
  Namespace</a>, that is a <a href=#parse-error>parse error</a>.</p>

  <p>When the steps below require the user agent to <dfn id=adjust-mathml-attributes>adjust MathML
  attributes</dfn> for a token, then, if the token has an attribute
  named <code title="">definitionurl</code>, change its name to <code title="">definitionURL</code> (note the case difference).</p>

<!--XXXSVG
  <p>When the steps below require the user agent to <dfn>adjust SVG
  attributes</dfn> for a token, then, for each attribute on the token
  whose attribute name is one of the ones in the first column of the
  following table, change the attribute's name to the name given in
  the corresponding cell in the second column. (This fixes the case of
  SVG attributes that are not all lowercase.)</p>

  <table>
   <thead>
    <tr> <th> Attribute name on token <th> Attribute name on element
   <tbody>
    <tr> <td> <code title="">attributename</code> <td> <code title="">attributeName</code>
    <tr> <td> <code title="">attributetype</code> <td> <code title="">attributeType</code>
    <tr> <td> <code title="">basefrequency</code> <td> <code title="">baseFrequency</code>
    <tr> <td> <code title="">baseprofile</code> <td> <code title="">baseProfile</code>
    <tr> <td> <code title="">calcmode</code> <td> <code title="">calcMode</code>
    <tr> <td> <code title="">clippathunits</code> <td> <code title="">clipPathUnits</code>
    <tr> <td> <code title="">contentscripttype</code> <td> <code title="">contentScriptType</code>
    <tr> <td> <code title="">contentstyletype</code> <td> <code title="">contentStyleType</code>
    <tr> <td> <code title="">diffuseconstant</code> <td> <code title="">diffuseConstant</code>
    <tr> <td> <code title="">edgemode</code> <td> <code title="">edgeMode</code>
    <tr> <td> <code title="">externalresourcesrequired</code> <td> <code title="">externalResourcesRequired</code>
    <tr> <td> <code title="">filterres</code> <td> <code title="">filterRes</code>
    <tr> <td> <code title="">filterunits</code> <td> <code title="">filterUnits</code>
    <tr> <td> <code title="">glyphref</code> <td> <code title="">glyphRef</code>
    <tr> <td> <code title="">gradienttransform</code> <td> <code title="">gradientTransform</code>
    <tr> <td> <code title="">gradientunits</code> <td> <code title="">gradientUnits</code>
    <tr> <td> <code title="">kernelmatrix</code> <td> <code title="">kernelMatrix</code>
    <tr> <td> <code title="">kernelunitlength</code> <td> <code title="">kernelUnitLength</code>
    <tr> <td> <code title="">keypoints</code> <td> <code title="">keyPoints</code>
    <tr> <td> <code title="">keysplines</code> <td> <code title="">keySplines</code>
    <tr> <td> <code title="">keytimes</code> <td> <code title="">keyTimes</code>
    <tr> <td> <code title="">lengthadjust</code> <td> <code title="">lengthAdjust</code>
    <tr> <td> <code title="">limitingconeangle</code> <td> <code title="">limitingConeAngle</code>
    <tr> <td> <code title="">markerheight</code> <td> <code title="">markerHeight</code>
    <tr> <td> <code title="">markerunits</code> <td> <code title="">markerUnits</code>
    <tr> <td> <code title="">markerwidth</code> <td> <code title="">markerWidth</code>
    <tr> <td> <code title="">maskcontentunits</code> <td> <code title="">maskContentUnits</code>
    <tr> <td> <code title="">maskunits</code> <td> <code title="">maskUnits</code>
    <tr> <td> <code title="">numoctaves</code> <td> <code title="">numOctaves</code>
    <tr> <td> <code title="">pathlength</code> <td> <code title="">pathLength</code>
    <tr> <td> <code title="">patterncontentunits</code> <td> <code title="">patternContentUnits</code>
    <tr> <td> <code title="">patterntransform</code> <td> <code title="">patternTransform</code>
    <tr> <td> <code title="">patternunits</code> <td> <code title="">patternUnits</code>
    <tr> <td> <code title="">pointsatx</code> <td> <code title="">pointsAtX</code>
    <tr> <td> <code title="">pointsaty</code> <td> <code title="">pointsAtY</code>
    <tr> <td> <code title="">pointsatz</code> <td> <code title="">pointsAtZ</code>
    <tr> <td> <code title="">preservealpha</code> <td> <code title="">preserveAlpha</code>
    <tr> <td> <code title="">preserveaspectratio</code> <td> <code title="">preserveAspectRatio</code>
    <tr> <td> <code title="">primitiveunits</code> <td> <code title="">primitiveUnits</code>
    <tr> <td> <code title="">refx</code> <td> <code title="">refX</code>
    <tr> <td> <code title="">refy</code> <td> <code title="">refY</code>
    <tr> <td> <code title="">repeatcount</code> <td> <code title="">repeatCount</code>
    <tr> <td> <code title="">repeatdur</code> <td> <code title="">repeatDur</code>
    <tr> <td> <code title="">requiredextensions</code> <td> <code title="">requiredExtensions</code>
    <tr> <td> <code title="">requiredfeatures</code> <td> <code title="">requiredFeatures</code>
    <tr> <td> <code title="">specularconstant</code> <td> <code title="">specularConstant</code>
    <tr> <td> <code title="">specularexponent</code> <td> <code title="">specularExponent</code>
    <tr> <td> <code title="">spreadmethod</code> <td> <code title="">spreadMethod</code>
    <tr> <td> <code title="">startoffset</code> <td> <code title="">startOffset</code>
    <tr> <td> <code title="">stddeviation</code> <td> <code title="">stdDeviation</code>
    <tr> <td> <code title="">stitchtiles</code> <td> <code title="">stitchTiles</code>
    <tr> <td> <code title="">surfacescale</code> <td> <code title="">surfaceScale</code>
    <tr> <td> <code title="">systemlanguage</code> <td> <code title="">systemLanguage</code>
    <tr> <td> <code title="">tablevalues</code> <td> <code title="">tableValues</code>
    <tr> <td> <code title="">targetx</code> <td> <code title="">targetX</code>
    <tr> <td> <code title="">targety</code> <td> <code title="">targetY</code>
    <tr> <td> <code title="">textlength</code> <td> <code title="">textLength</code>
    <tr> <td> <code title="">viewbox</code> <td> <code title="">viewBox</code>
    <tr> <td> <code title="">viewtarget</code> <td> <code title="">viewTarget</code>
    <tr> <td> <code title="">xchannelselector</code> <td> <code title="">xChannelSelector</code>
    <tr> <td> <code title="">ychannelselector</code> <td> <code title="">yChannelSelector</code>
    <tr> <td> <code title="">zoomandpan</code> <td> <code title="">zoomAndPan</code>
  </table>
-->

  <p>When the steps below require the user agent to <dfn id=adjust-foreign-attributes>adjust
  foreign attributes</dfn> for a token, then, if any of the attributes
  on the token match the strings given in the first column of the
  following table, let the attribute be a namespaced attribute, with
  the prefix being the string given in the corresponding cell in the
  second column, the local name being the string given in the
  corresponding cell in the third column, and the namespace being the
  namespace given in the corresponding cell in the fourth
  column. (This fixes the use of namespaced attributes, in particular
  <code title="">xml:lang</code>.)</p>

  <table><thead><tr><th> Attribute name <th> Prefix <th> Local name <th> Namespace
   <tbody><tr><td> <code title="">xlink:actuate</code> <td> <code title="">xlink</code> <td> <code title="">actuate</code> <td> <a href=#xlink-namespace>XLink namespace</a>
    <tr><td> <code title="">xlink:arcrole</code> <td> <code title="">xlink</code> <td> <code title="">arcrole</code> <td> <a href=#xlink-namespace>XLink namespace</a>
    <tr><td> <code title="">xlink:href</code> <td> <code title="">xlink</code> <td> <code title="">href</code> <td> <a href=#xlink-namespace>XLink namespace</a>
    <tr><td> <code title="">xlink:role</code> <td> <code title="">xlink</code> <td> <code title="">role</code> <td> <a href=#xlink-namespace>XLink namespace</a>
    <tr><td> <code title="">xlink:show</code> <td> <code title="">xlink</code> <td> <code title="">show</code> <td> <a href=#xlink-namespace>XLink namespace</a>
    <tr><td> <code title="">xlink:title</code> <td> <code title="">xlink</code> <td> <code title="">title</code> <td> <a href=#xlink-namespace>XLink namespace</a>
    <tr><td> <code title="">xlink:type</code> <td> <code title="">xlink</code> <td> <code title="">type</code> <td> <a href=#xlink-namespace>XLink namespace</a>
    <tr><td> <code title="">xml:base</code> <td> <code title="">xml</code> <td> <code title="">base</code> <td> <a href=#xml-namespace>XML namespace</a> <!-- attr-xml-base -->
    <tr><td> <code title="">xml:lang</code> <td> <code title="">xml</code> <td> <code title="">lang</code> <td> <a href=#xml-namespace>XML namespace</a>
    <tr><td> <code title="">xml:space</code> <td> <code title="">xml</code> <td> <code title="">space</code> <td> <a href=#xml-namespace>XML namespace</a>
    <tr><td> <code title="">xmlns</code> <td> (none) <td> <code title="">xmlns</code> <td> <a href=#xmlns-namespace>XMLNS namespace</a>
    <tr><td> <code title="">xmlns:xlink</code> <td> <code title="">xmlns</code> <td> <code title="">xlink</code> <td> <a href=#xmlns-namespace>XMLNS namespace</a>
  </table><hr><p>The <dfn id=generic-cdata-element-parsing-algorithm>generic CDATA element parsing algorithm</dfn> and the
  <dfn id=generic-rcdata-element-parsing-algorithm>generic RCDATA element parsing algorithm</dfn> consist of the
  following steps. These algorithms are always invoked in response to
  a start tag token.</p>

  <ol><li><p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</li>

   <li><p>If the algorithm that was invoked is the <a href=#generic-cdata-element-parsing-algorithm>generic CDATA
   element parsing algorithm</a>, switch the tokeniser's
   <a href=#content-model-flag>content model flag</a> to the CDATA state; otherwise the
   algorithm invoked was the <a href=#generic-rcdata-element-parsing-algorithm>generic RCDATA element parsing
   algorithm</a>, switch the tokeniser's <a href=#content-model-flag>content model
   flag</a> to the RCDATA state.</li>

   <li><p>Let the <a href=#original-insertion-mode>original insertion mode</a> be the current
   <a href=#insertion-mode>insertion mode</a>.</p>

   <li><p>Then, switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-incdata title="insertion mode: in CDATA/RCDATA">in
   CDATA/RCDATA</a>".</li>

  </ol><h5 id=closing-elements-that-have-implied-end-tags><span class=secno>8.2.5.2 </span>Closing elements that have implied end tags</h5>

  <p>When the steps below require the UA to <dfn id=generate-implied-end-tags>generate implied end
  tags</dfn>, then, while the <a href=#current-node>current node</a> is a
  <code><a href=#the-dd-element>dd</a></code> element, a <code><a href=#the-dt-element>dt</a></code> element, an
  <code><a href=#the-li-element>li</a></code> element, an <code><a href=#the-option-element>option</a></code> element, an
  <code><a href=#the-optgroup-element>optgroup</a></code> element, a <code><a href=#the-p-element>p</a></code> element, an
  <code><a href=#the-rp-element>rp</a></code> element, or an <code><a href=#the-rt-element>rt</a></code> element, the UA must
  pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
  elements</a>.</p>

  <p>If a step requires the UA to generate implied end tags but lists
  an element to exclude from the process, then the UA must perform the
  above steps as if that element was not in the above list.</p>


  <h5 id=foster-parenting><span class=secno>8.2.5.3 </span>Foster parenting</h5>

  <p>Foster parenting happens when content is misnested in tables.</p>

  <p>When a node <var title="">node</var> is to be <dfn id=foster-parent title="foster
  parent">foster parented</dfn>, the node <var title="">node</var>
  must be inserted into the <i><a href=#foster-parent-element>foster parent element</a></i>, and the
  <a href=#current-table>current table</a> must be marked as
  <dfn id=tainted>tainted</dfn>. (Once the <a href=#current-table>current table</a> has been
  <a href=#tainted>tainted</a>, whitespace characters are inserted into the
  <i><a href=#foster-parent-element>foster parent element</a></i> instead of the <a href=#current-node>current
  node</a>.)</p>

  <p>The <dfn id=foster-parent-element>foster parent element</dfn> is defined as follows: If
  there is no <code><a href=#the-table-element>table</a></code> element in the <a href=#stack-of-open-elements>stack of open
  elements</a> (<a href=#fragment-case>fragment case</a>), then the <i><a href=#foster-parent-element>foster
  parent element</a></i> is the first element in the <a href=#stack-of-open-elements>stack of open
  elements</a> (the <code><a href=#the-html-element>html</a></code> element). Otherwise, the
  <i><a href=#foster-parent-element>foster parent element</a></i> is the element before the last
  <code><a href=#the-table-element>table</a></code> element in the <a href=#stack-of-open-elements>stack of open
  elements</a>.</p>

  <p>If the <i><a href=#foster-parent-element>foster parent element</a></i> is the parent element of the
  last <code><a href=#the-table-element>table</a></code> element in the <a href=#stack-of-open-elements>stack of open
  elements</a>, then <var title="">node</var> must be inserted
  immediately <em>before</em> the last <code><a href=#the-table-element>table</a></code> element in
  the <a href=#stack-of-open-elements>stack of open elements</a> in the <i><a href=#foster-parent-element>foster parent
  element</a></i>; otherwise, <var title="">node</var> must be
  <em>appended</em> to the <i><a href=#foster-parent-element>foster parent element</a></i>.</p>



  <h5 id=the-initial-insertion-mode><span class=secno>8.2.5.4 </span>The "<dfn title="insertion mode: initial">initial</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#the-initial-insertion-mode title="insertion
  mode: initial">initial</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p>Ignore the token.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <code>Document</code>
    object with the <code title="">data</code> attribute set to the
    data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>

    <p>If the DOCTYPE token's <code title="">name</code> is not a
    <a href=#case-sensitive>case-sensitive</a> match for the string "<code title="">html</code>", or if the token's public identifier is not
    missing, or if the token's system identifier is neither missing
    nor a <a href=#case-sensitive>case-sensitive</a> match for the string
    "<code>about:legacy-compat</code>", then there is a <a href=#parse-error>parse
    error</a> (this is the <dfn id=doctype-parse-error>DOCTYPE parse
    error</dfn>). Conformance checkers may, instead of reporting this
    error, switch to a conformance checking mode for another language
    (e.g. based on the DOCTYPE token a conformance checker could
    recognize that the document is an HTML4-era document, and defer to
    an HTML4 conformance checker.)</p>

    <p>Append a <code>DocumentType</code> node to the
    <code>Document</code> node, with the <code title="">name</code>
    attribute set to the name given in the DOCTYPE token, or the empty
    string if the name was missing; the <code title="">publicId</code>
    attribute set to the public identifier given in the DOCTYPE token,
    or the empty string if the public identifier was missing; the
    <code title="">systemId</code> attribute set to the system
    identifier given in the DOCTYPE token, or the empty string if the
    system identifier was missing; and the other attributes specific
    to <code>DocumentType</code> objects set to null and empty lists
    as appropriate. Associate the <code>DocumentType</code> node with
    the <code>Document</code> object so that it is returned as the
    value of the <code title="">doctype</code> attribute of the
    <code>Document</code> object.</p>

    <p id=quirks-mode-doctypes>Then, if the DOCTYPE
    token matches one of the conditions in the following list, then
    set the document to <a href=#quirks-mode>quirks mode</a>:</p>

    <ul class=brief><li> The <i>force-quirks flag</i> is set to <i>on</i>. </li>
     <li> The name is set to anything other than "<code title="">HTML</code>". </li>
     <li> The public identifier starts with: "<code title="">+//Silmaril//dtd html Pro v0r11 19970101//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//AdvaSoft Ltd//DTD HTML 3.0 asWedit + extensions//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//AS//DTD HTML 3.0 asWedit + extensions//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 2.0 Level 1//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 2.0 Level 2//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 2.0 Strict Level 1//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 2.0 Strict Level 2//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 2.0 Strict//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 2.0//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 2.1E//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 3.0//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML 3.0//EN//</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 3.2 Final//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 3.2//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML 3//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Level 0//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Level 0//EN//2.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Level 1//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Level 1//EN//2.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Level 2//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Level 2//EN//2.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Level 3//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Level 3//EN//3.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Strict Level 0//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Strict Level 0//EN//2.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Strict Level 1//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Strict Level 1//EN//2.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Strict Level 2//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Strict Level 2//EN//2.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Strict Level 3//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Strict Level 3//EN//3.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML Strict//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Strict//EN//2.0</code>" </li>-->
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML Strict//EN//3.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//IETF//DTD HTML//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML//EN//2.0</code>" </li>-->
   <!--<li> The public identifier is set to: "<code title="">-//IETF//DTD HTML//EN//3.0</code>" </li>-->
     <li> The public identifier starts with: "<code title="">-//Metrius//DTD Metrius Presentational//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Microsoft//DTD Internet Explorer 2.0 HTML Strict//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Microsoft//DTD Internet Explorer 2.0 HTML//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Microsoft//DTD Internet Explorer 2.0 Tables//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Microsoft//DTD Internet Explorer 3.0 HTML Strict//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Microsoft//DTD Internet Explorer 3.0 HTML//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Microsoft//DTD Internet Explorer 3.0 Tables//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Netscape Comm. Corp.//DTD HTML//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Netscape Comm. Corp.//DTD Strict HTML//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//O'Reilly and Associates//DTD HTML 2.0//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//O'Reilly and Associates//DTD HTML Extended 1.0//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//O'Reilly and Associates//DTD HTML Extended Relaxed 1.0//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//SoftQuad//DTD HoTMetaL PRO 4.0::19971010::extensions to HTML 4.0//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Spyglass//DTD HTML 2.0 Extended//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//SQ//DTD HTML 2.0 HoTMetaL + extensions//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Sun Microsystems Corp.//DTD HotJava HTML//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//Sun Microsystems Corp.//DTD HotJava Strict HTML//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML 3 1995-03-24//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML 3.2 Draft//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML 3.2 Final//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML 3.2//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML 3.2S Draft//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML 4.0 Frameset//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML 4.0 Transitional//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML Experimental 19960712//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD HTML Experimental 970421//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD W3 HTML//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3O//DTD W3 HTML 3.0//<!--EN--></code>" </li>
   <!--<li> The public identifier is set to: "<code title="">-//W3O//DTD W3 HTML 3.0//EN//</code>" </li>-->
     <li> The public identifier is set to: "<code title="">-//W3O//DTD W3 HTML Strict 3.0//EN//</code>" </li>
     <li> The public identifier starts with: "<code title="">-//WebTechs//DTD Mozilla HTML 2.0//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//WebTechs//DTD Mozilla HTML//<!--EN--></code>" </li>
     <li> The public identifier is set to: "<code title="">-/W3C/DTD HTML 4.0 Transitional/EN</code>" </li>
     <li> The public identifier is set to: "<code title="">HTML</code>" </li>
     <li> The system identifier is set to: "<code title="">http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd</code>" </li>
     <li> The system identifier is missing and the public identifier starts with: "<code title="">-//W3C//DTD HTML 4.01 Frameset//<!--EN--></code>" </li>
     <li> The system identifier is missing and the public identifier starts with: "<code title="">-//W3C//DTD HTML 4.01 Transitional//<!--EN--></code>" </li>
    </ul><p>Otherwise, if the DOCTYPE
    token matches one of the conditions in the following list, then
    set the document to <a href=#limited-quirks-mode>limited quirks mode</a>:</p>

    <ul class=brief><li> The public identifier starts with: "<code title="">-//W3C//DTD XHTML 1.0 Frameset//<!--EN--></code>" </li>
     <li> The public identifier starts with: "<code title="">-//W3C//DTD XHTML 1.0 Transitional//<!--EN--></code>" </li>
     <li> The system identifier is not missing and the public identifier starts with: "<code title="">-//W3C//DTD HTML 4.01 Frameset//<!--EN--></code>" </li>
     <li> The system identifier is not missing and the public identifier starts with: "<code title="">-//W3C//DTD HTML 4.01 Transitional//<!--EN--></code>" </li>
    </ul><p>The name, system identifier, and public identifier strings must
    be compared to the values given in the lists above in an
    <a href=#ascii-case-insensitive>ASCII case-insensitive</a> manner. A system identifier
    whose value is the empty string is not considered missing for the
    purposes of the conditions above.</p>

    <p>Then, switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-before-html-insertion-mode title="insertion mode: before html">before html</a>".</p>

   </dd>

   <dt>Anything else</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p>Set the document to <a href=#quirks-mode>quirks mode</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-before-html-insertion-mode title="insertion mode: before html">before html</a>", then
    reprocess the current token.</p>

   </dd>

  </dl><h5 id=the-before-html-insertion-mode><span class=secno>8.2.5.5 </span>The "<dfn title="insertion mode: before html">before html</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#the-before-html-insertion-mode title="insertion
  mode: before html">before html</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <code>Document</code>
    object with the <code title="">data</code> attribute set to the
    data given in the comment token.</p>
   </dd>

   <dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p>Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>

    <p><a href=#create-an-element-for-the-token>Create an element for the token</a> in the <a href=#html-namespace-0>HTML
    namespace</a>. Append it to the <code>Document</code>
    object. Put this element in the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p id=parser-appcache>If the <code>Document</code> is being
    loaded as part of <a href=#navigate title=navigate>navigation</a> of a
    <a href=#browsing-context>browsing context</a>, then: if the newly created element
    has a <code title=attr-html-manifest><a href=#attr-html-manifest>manifest</a></code> attribute,
    then <a href=#resolve-a-url title="resolve a url">resolve</a> the value of that
    attribute to an <a href=#absolute-url>absolute URL</a>, relative to the newly
    created element, and if that is successful, run the <a href=#concept-appcache-init title=concept-appcache-init>application cache selection
    algorithm</a> with the resulting <a href=#absolute-url>absolute URL</a>;
    otherwise, if there is no such attribute or resolving it fails,
    run the <a href=#concept-appcache-init title=concept-appcache-init>application cache
    selection algorithm</a> with no manifest. The algorithm must be
    passed the <code>Document</code> object, and the <var title="">document-is-markup</var> flag must be set to true.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-before-head-insertion-mode title="insertion mode: before head">before head</a>".</p>

   </dd>

   <dt>Anything else</dt>
   <dd>

    <p>Create an <code><a href=#the-html-element>html</a></code> element. Append it to the
    <code>Document</code> object. Put this element in the <a href=#stack-of-open-elements>stack
    of open elements</a>.</p>

    <p>If the <code>Document</code> is being loaded as part of <a href=#navigate title=navigate>navigation</a> of a <a href=#browsing-context>browsing
    context</a>, then: run the <a href=#concept-appcache-init title=concept-appcache-init>application cache selection
    algorithm</a> with no manifest, passing it the
    <code>Document</code> object.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-before-head-insertion-mode title="insertion mode: before head">before head</a>", then
    reprocess the current token.</p>

    <p class=XXX>Should probably make end tags be ignored, so
    that "&lt;/head&gt;&lt;!-- --&gt;&lt;html&gt;" puts the comment before the
    root node (or should we?)</p>

   </dd>

  </dl><p>The root element can end up being removed from the
  <code>Document</code> object, e.g. by scripts; nothing in particular
  happens in such cases, content continues being appended to the nodes
  as described in the next section.</p>


  <h5 id=the-before-head-insertion-mode><span class=secno>8.2.5.6 </span>The "<dfn title="insertion mode: before head">before head</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#the-before-head-insertion-mode title="insertion
  mode: before head">before head</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p>Ignore the token.</p> <!-- :-( -->
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "head"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Set the <a href=#head-element-pointer><code title="">head</code> element pointer</a>
    to the newly created <code><a href=#the-head-element>head</a></code> element.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>".</p>

   </dd>

   <dt>An end tag whose tag name is one of: "head", "body", "html", "br"</dt>
   <dd>

    <p>Act as if a start tag token with the tag name "head" and no
    attributes had been seen, then reprocess the current token.</p>

   </dd>

   <dt>Any other end tag</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>

   </dd>

   <dt>Anything else</dt>
   <dd>

    <p>Act as if a start tag token with the tag name "head" and no
    attributes had been seen, then reprocess the current
    token.</p>

    <p class=note>This will result in an empty <code><a href=#the-head-element>head</a></code>
    element being generated, with the current token being
    reprocessed in the "<a href=#the-after-head-insertion-mode title="insertion mode: after
    head">after head</a>" <a href=#insertion-mode>insertion mode</a>.</p>

   </dd>

  </dl><h5 id=parsing-main-inhead><span class=secno>8.2.5.7 </span>The "<dfn title="insertion mode: in head">in head</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inhead title="insertion
  mode: in head">in head</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p><a href=#insert-a-character title="insert a character">Insert the character</a> into
    the <a href=#current-node>current node</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A start tag whose tag name is one of: "base", "command",
   "eventsource", "link"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Immediately
    pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p>

   </dd>

   <dt>A start tag whose tag name is "meta"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Immediately
    pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p>

    <p id=meta-charset-during-parse>If the element has a <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute, and its
    value is a supported encoding, and the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> is
    currently <i>tentative</i>, then <a href=#change-the-encoding>change the
    encoding</a> to the encoding given by the value of the
    <code title=attr-meta-charset><a href=#attr-meta-charset>charset</a></code> attribute.</p>

    <p>Otherwise, if the element has a <code title=attr-meta-charset><a href=#attr-meta-charset>content</a></code> attribute, and
    applying the <a href=#algorithm-for-extracting-an-encoding-from-a-content-type>algorithm for extracting an encoding from a
    Content-Type</a> to its value returns a supported encoding
    <var title="">encoding</var>, and the <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> is
    currently <i>tentative</i>, then <a href=#change-the-encoding>change the
    encoding</a> to the encoding <var title="">encoding</var>.</p>

   </dd>

   <dt>A start tag whose tag name is "title"</dt>
   <dd>
    <p>Follow the <a href=#generic-rcdata-element-parsing-algorithm>generic RCDATA element parsing algorithm</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "noscript", if the <a href=#scripting-flag>scripting flag</a> is enabled</dt>
   <dt>A start tag whose tag name is one of: "noframes", "style"</dt>
   <dd>
    <p>Follow the <a href=#generic-cdata-element-parsing-algorithm>generic CDATA element parsing algorithm</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "noscript", if the <a href=#scripting-flag>scripting flag</a> is disabled</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inheadnoscript title="insertion mode: in head noscript">in head
    noscript</a>".</p>

   </dd>

   <dt id=scriptTag>A start tag whose tag name is "script"</dt>
   <dd>

    <ol><li><p><a href=#create-an-element-for-the-token>Create an element for the token</a> in the
     <a href=#html-namespace-0>HTML namespace</a>.</li>

     <li>

      <p>Mark the element as being <a href=#parser-inserted>"parser-inserted"</a>.</p>

      <p class=note>This ensures that, if the script is external,
      any <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code>
      calls in the script will execute in-line, instead of blowing the
      document away, as would happen in most other cases. It also
      prevents the script from executing until the end tag is
      seen.</p>

     </li>

     <li><p>If the parser was originally created for the <a href=#html-fragment-parsing-algorithm>HTML
     fragment parsing algorithm</a>, then mark the
     <code><a href=#script>script</a></code> element as <a href=#already-executed>"already
     executed"</a>. (<a href=#fragment-case>fragment case</a>)</li>

     <li><p>Append the new element to the <a href=#current-node>current node</a>
     and push it onto the <a href=#stack-of-open-elements>stack of open
     elements</a>.</li>

     <li><p>Switch the tokeniser's <a href=#content-model-flag>content model flag</a> to
     the CDATA state.</li>

     <li><p>Let the <a href=#original-insertion-mode>original insertion mode</a> be the current
     <a href=#insertion-mode>insertion mode</a>.</p>

     <li><p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-incdata title="insertion mode: in CDATA/RCDATA">in
     CDATA/RCDATA</a>".</li>

    </ol></dd>

   <dt>An end tag whose tag name is "head"</dt>
   <dd>

    <p>Pop the <a href=#current-node>current node</a> (which will be the
    <code><a href=#the-head-element>head</a></code> element) off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-after-head-insertion-mode title="insertion mode: after head">after head</a>".</p>

   </dd>

   <dt>An end tag whose tag name is one of: "body", "html", "br"</dt>
   <dd>
    <p>Act as described in the "anything else" entry below.</p>
   </dd>

   <dt>A start tag whose tag name is "head"</dt>
   <dt>Any other end tag</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>

    <!-- can't get here with an EOF and a fragment case -->

    <p>Act as if an end tag token with the tag name "head" had
    been seen, and reprocess the current token.</p>

    <p class=XXX>In certain UAs, <a href="https://bugzilla.mozilla.org/attachment.cgi?id=180157&amp;action=view">some
    elements</a> don't trigger the "in body" mode straight away,
    but instead get put into the head. Do we want to copy
    that?</p>

   </dd>

  </dl><h5 id=parsing-main-inheadnoscript><span class=secno>8.2.5.8 </span>The "<dfn title="insertion mode: in head noscript">in head noscript</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inheadnoscript title="insertion
  mode: in head noscript">in head noscript</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end tag whose tag name is "noscript"</dt>
   <dd>

    <p>Pop the <a href=#current-node>current node</a> (which will be a
    <code><a href=#the-noscript-element>noscript</a></code> element) from the <a href=#stack-of-open-elements>stack of open
    elements</a>; the new <a href=#current-node>current node</a> will be a
    <code><a href=#the-head-element>head</a></code> element.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>".</p>

   </dd>

   <dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dt>A comment token</dt>
   <dt>A start tag whose tag name is one of: "link", "meta", "noframes", "style"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end tag whose tag name is "br"</dt>
   <dd>
    <p>Act as described in the "anything else" entry below.</p>
   </dd>

   <dt>A start tag whose tag name is one of: "head", "noscript"</dt>
   <dt>Any other end tag</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>

    <!-- can't get here with an EOF and a fragment case -->

    <p><a href=#parse-error>Parse error</a>. Act as if an end tag with the tag
    name "noscript" had been seen and reprocess the current
    token.</p>

   </dd>

  </dl><h5 id=the-after-head-insertion-mode><span class=secno>8.2.5.9 </span>The "<dfn title="insertion mode: after head">after head</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#the-after-head-insertion-mode title="insertion
  mode: after head">after head</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p><a href=#insert-a-character title="insert a character">Insert the character</a> into
    the <a href=#current-node>current node</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "body"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>".</p>

   </dd>

   <dt>A start tag whose tag name is "frameset"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inframeset title="insertion mode: in frameset">in frameset</a>".</p>

   </dd>

   <dt>A start tag token whose tag name is one of: "base", "link",
   "meta", "noframes", "script", "style", "title"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p>Push the node pointed to by the <a href=#head-element-pointer><code title="">head</code> element pointer</a> onto the
    <a href=#stack-of-open-elements>stack of open elements</a>.</p>

    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>

    <p>Remove the node pointed to by the <a href=#head-element-pointer><code title="">head</code> element pointer</a> from the <a href=#stack-of-open-elements>stack
    of open elements</a>.</p>

   </dd>

   <dt>An end tag whose tag name is one of: "body", "html", "br"</dt>
   <dd>
    <p>Act as described in the "anything else" entry below.</p>
   </dd>

   <dt>A start tag whose tag name is "head"</dt>
   <dt>Any other end tag</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>
    <p>Act as if a start tag token with the tag name "body" and no
    attributes had been seen, and then reprocess the current
    token.</p>
   </dd>

  </dl><h5 id=parsing-main-inbody><span class=secno>8.2.5.10 </span>The "<dfn title="insertion mode: in body">in body</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inbody title="insertion
  mode: in body">in body</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-a-character title="insert a character">Insert the token's
    character</a> into the <a href=#current-node>current node</a>.</p>

    <p>If the token is not one of U+0009 CHARACTER TABULATION, U+000A
    LINE FEED (LF), U+000C FORM FEED (FF), <!--U+000D CARRIAGE RETURN
    (CR),--> or U+0020 SPACE, then set the <a href=#frameset-ok-flag>frameset-ok
    flag</a> to "not ok".</p>

   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. For each attribute on the token,
    check to see if the attribute is already present on the top
    element of the <a href=#stack-of-open-elements>stack of open elements</a>. If it is not,
    add the attribute and its corresponding value to that element.</p>
   </dd>

   <dt>A start tag token whose tag name is one of: "base", "command",
   "eventsource", "link", "meta", "noframes", "script", "style",
   "title"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "body"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p>If the second element on the <a href=#stack-of-open-elements>stack of open
    elements</a> is not a <code><a href=#the-body-element>body</a></code> element, or, if the
    <a href=#stack-of-open-elements>stack of open elements</a> has only one node on it,
    then ignore the token. (<a href=#fragment-case>fragment case</a>)</p>

    <p>Otherwise, for each attribute on the token, check to see if
    the attribute is already present on the <code><a href=#the-body-element>body</a></code>
    element (the second element) on the <a href=#stack-of-open-elements>stack of open
    elements</a>. If it is not, add the attribute and its
    corresponding value to that element.</p>

   </dd>

   <dt>A start tag whose tag name is "frameset"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p>If the second element on the <a href=#stack-of-open-elements>stack of open
    elements</a> is not a <code><a href=#the-body-element>body</a></code> element, or, if the
    <a href=#stack-of-open-elements>stack of open elements</a> has only one node on it,
    then ignore the token. (<a href=#fragment-case>fragment case</a>)</p>

    <p>If the <a href=#frameset-ok-flag>frameset-ok flag</a> is set to "not ok", ignore
    the token.</p>

    <p>Otherwise, run the following steps:</p>

    <ol><li><p>Remove the second element on the <a href=#stack-of-open-elements>stack of open
     elements</a> from its parent node, if it has one.</li>

     <li><p>Pop all the nodes from the bottom of the <a href=#stack-of-open-elements>stack of
     open elements</a>, from the <a href=#current-node>current node</a> up to
     the root <code><a href=#the-html-element>html</a></code> element.</p>

     <li><p><a href=#insert-an-html-element>Insert an HTML element</a> for the
     token.</li>

     <li><p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inframeset title="insertion mode: in frameset">in frameset</a>".</p>

    </ol></dd>

   <dt>An end-of-file token</dt>
   <dd>

    <p>If there is a node in the <a href=#stack-of-open-elements>stack of open elements</a>
    that is not either a <code><a href=#the-dd-element>dd</a></code> element, a <code><a href=#the-dt-element>dt</a></code>
    element, an <code><a href=#the-li-element>li</a></code> element, a <code><a href=#the-p-element>p</a></code> element, a
    <code><a href=#the-tbody-element>tbody</a></code> element, a <code><a href=#the-td-element>td</a></code> element, a
    <code><a href=#the-tfoot-element>tfoot</a></code> element, a <code><a href=#the-th-element>th</a></code> element, a
    <code><a href=#the-thead-element>thead</a></code> element, a <code><a href=#the-tr-element>tr</a></code> element, the
    <code><a href=#the-body-element>body</a></code> element, or the <code><a href=#the-html-element>html</a></code> element, then
    this is a <a href=#parse-error>parse error</a>.</p> <!-- (some of those are
    fragment cases) -->

    <p><a href=#stop-parsing>Stop parsing</a>.</p>

   </dd>

   <dt>An end tag whose tag name is "body"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-scope title="has an element in scope">have a <code>body</code> element
    in scope</a>, this is a <a href=#parse-error>parse error</a>; ignore the
    token.</p>

    <!-- if we get here, the insertion mode here is forcibly "in
    body". -->

    <p>Otherwise, if there is a node in the <a href=#stack-of-open-elements>stack of open
    elements</a> that is not either a <code><a href=#the-dd-element>dd</a></code> element, a
    <code><a href=#the-dt-element>dt</a></code> element, an <code><a href=#the-li-element>li</a></code> element, a
    <code><a href=#the-p-element>p</a></code> element, a <code><a href=#the-tbody-element>tbody</a></code> element, a
    <code><a href=#the-td-element>td</a></code> element, a <code><a href=#the-tfoot-element>tfoot</a></code> element, a
    <code><a href=#the-th-element>th</a></code> element, a <code><a href=#the-thead-element>thead</a></code> element, a
    <code><a href=#the-tr-element>tr</a></code> element, the <code><a href=#the-body-element>body</a></code> element, or the
    <code><a href=#the-html-element>html</a></code> element, then this is a <a href=#parse-error>parse
    error</a>.</p> <!-- (some of those are fragment cases, e.g. for
    <tbody> you'd have hit the first paragraph since the <body>
    wouldn't be in scope, unless it was a fragment case) -->

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-afterbody title="insertion mode: after body">after body</a>".</p>

   </dd>

   <dt>An end tag whose tag name is "html"</dt>
   <dd>

    <p>Act as if an end tag with tag name "body" had been seen,
    then, if that token wasn't ignored, reprocess the current
    token.</p>

    <p class=note>The fake end tag token here can only be
    ignored in the <a href=#fragment-case>fragment case</a>.</p>

   </dd>

   <!-- start tags for non-phrasing flow content elements -->

   <!-- the normal ones -->
   <dt>A start tag whose tag name is one of: "address", "article",
   "aside", "blockquote", "center", "datagrid", "details", "dialog",
   "dir", "div", "dl", "fieldset", "figure", "footer", "header",
   "menu", "nav", "ol", "p", "section", "ul"</dt>
   <dd>

    <!-- As of May 2008 this doesn't match any browser exactly, but is
    as close to what IE does as I can get without doing the non-tree
    DOM nonsense, and thus should actually afford better compatibility
    when implemented by the other browsers. -->

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>p</code> element in
    scope</a>, then act as if an end tag with the tag name
    "p" had been seen.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

   </dd>

   <!-- as normal, but close h1-h6 if it's the current node -->
   <dt>A start tag whose tag name is one of: "h1", "h2", "h3", "h4",
   "h5", "h6"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>p</code> element in
    scope</a>, then act as if an end tag with the tag name
    "p" had been seen.</p>

    <p>If the <a href=#current-node>current node</a> is an element whose tag name
    is one of "h1", "h2", "h3", "h4", "h5", or "h6", then this is a
    <a href=#parse-error>parse error</a>; pop the <a href=#current-node>current node</a> off
    the <a href=#stack-of-open-elements>stack of open elements</a>.</p>
    <!-- See https://bugs.webkit.org/show_bug.cgi?id=12646 -->

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

   </dd>

   <!-- as normal, but drops leading newline -->
   <dt>A start tag whose tag name is one of: "pre", "listing"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>p</code> element in
    scope</a>, then act as if an end tag with the tag name
    "p" had been seen.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>If the next token is a U+000A LINE FEED (LF) character
    token, then ignore that token and move on to the next
    one. (Newlines at the start of <code><a href=#the-pre-element>pre</a></code> blocks are
    ignored as an authoring convenience.)</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

   </dd>

   <!-- as normal, but interacts with the form element pointer -->
   <dt>A start tag whose tag name is "form"</dt>
   <dd>

    <p>If the <a href=#form-element-pointer><code title=form>form</code> element
    pointer</a> is not null, then this is a <a href=#parse-error>parse
    error</a>; ignore the token.</p>

    <p>Otherwise:</p>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>p</code> element in
    scope</a>, then act as if an end tag with the tag name
    "p" had been seen.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token, and set the
    <a href=#form-element-pointer><code title=form>form</code> element pointer</a> to
    point to the element created.</p>

   </dd>

   <!-- as normal, but imply </li> when there's another <li> open in weird cases -->
   <dt>A start tag whose tag name is "li"</dt>
   <dd>

    <p>Run the following algorithm:</p>

    <ol><li><p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</li>

     <li><p>Initialize <var title="">node</var> to be the <a href=#current-node>current
     node</a> (the bottommost node of the stack).</li>

     <li><p>If <var title="">node</var> is an <code><a href=#the-li-element>li</a></code> element,
     then act as if an end tag with the tag name "li" had
     been seen, then jump to the last step.</li>

     <li><p>If <var title="">node</var> is not in the
     <a href=#formatting>formatting</a> category, and is not in the
     <a href=#phrasing>phrasing</a> category, and is not an
     <code><a href=#the-address-element>address</a></code>, <code><a href=#the-div-element>div</a></code>, or <code><a href=#the-p-element>p</a></code>
     element, then jump to the last step.</li> <!-- an element
     <foo> is in this list if the following markup:

         <!DOCTYPE html><body><ol><li><foo><li>

     ...results in the second <li> not being (in any way) a descendant
     of the first <li>, or if <foo> is a formatting element that gets
     reopened later. -->

     <li><p>Otherwise, set <var title="">node</var> to the previous
     entry in the <a href=#stack-of-open-elements>stack of open elements</a> and return to
     step 2.</li>

     <li>

      <p>This is the last step.</p>

      <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
      an element in scope">has a <code>p</code> element in
      scope</a>, then act as if an end tag with the tag name
      "p" had been seen.</p>

      <p>Finally, <a href=#insert-an-html-element>insert an HTML element</a> for the
      token.</p>

     </li>

    </ol></dd>

   <!-- as normal, but imply </dt> or </dd> when there's another <dt> or <dd> open in weird cases  -->
   <dt>A start tag whose tag name is one of: "dd", "dt"</dt>
   <dd>

    <p>Run the following algorithm:</p>

    <ol><li><p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</li>

     <li><p>Initialize <var title="">node</var> to be the <a href=#current-node>current
     node</a> (the bottommost node of the stack).</li>

     <li><p>If <var title="">node</var> is a <code><a href=#the-dd-element>dd</a></code> or
     <code><a href=#the-dt-element>dt</a></code> element, then act as if an end tag with the same
     tag name as <var title="">node</var> had been seen, then jump to
     the last step.</li>

     <li><p>If <var title="">node</var> is not in the
     <a href=#formatting>formatting</a> category, and is not in the
     <a href=#phrasing>phrasing</a> category, and is not an
     <code><a href=#the-address-element>address</a></code>, <code><a href=#the-div-element>div</a></code>, or <code><a href=#the-p-element>p</a></code>
     element, then jump to the last step.</li> <!-- an element
     <foo> is in this list if the following markup:

         <!DOCTYPE html><body><dl><dt><foo><dt>

     ...results in the second <dt> not being (in any way) a descendant
     of the first <dt>, or if <foo> is a formatting element that gets
     reopened later. -->

     <li><p>Otherwise, set <var title="">node</var> to the previous
     entry in the <a href=#stack-of-open-elements>stack of open elements</a> and return to
     step 2.</li>

     <li>

      <p>This is the last step.</p>

      <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
      an element in scope">has a <code>p</code> element in
      scope</a>, then act as if an end tag with the tag name
      "p" had been seen.</p>

      <p>Finally, <a href=#insert-an-html-element>insert an HTML element</a> for the
      token.</p>

     </li>

    </ol></dd>

   <!-- same as normal, but effectively ends parsing -->
   <dt>A start tag whose tag name is "plaintext"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>p</code> element in
    scope</a>, then act as if an end tag with the tag name
    "p" had been seen.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Switch the <a href=#content-model-flag>content model flag</a> to the PLAINTEXT
    state.</p>

    <p class=note>Once a start tag with the tag name "plaintext"
    has been seen, that will be the last token ever seen other
    than character tokens (and the end-of-file token), because
    there is no way to switch the <a href=#content-model-flag>content model flag</a>
    out of the PLAINTEXT state.</p>

   </dd>

   <!-- end tags for non-phrasing flow content elements -->

   <!-- the normal ones -->
   <dt>An end tag whose tag name is one of: "address", "article",
   "aside", "blockquote", "center", "datagrid", "details", "dialog",
   "dir", "div", "dl", "fieldset", "figure", "footer", "header",
   "listing", "menu", "nav", "ol", "pre", "section", "ul"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-scope title="has an element in scope">have an element in scope</a>
    with the same tag name as that of the token, then this is a
    <a href=#parse-error>parse error</a>; ignore the token.</p>

    <p>Otherwise, run these steps:</p>

    <ol><li><p><a href=#generate-implied-end-tags>Generate implied end tags</a>.</li>

     <li><p>If the <a href=#current-node>current node</a> is not an element with
     the same tag name as that of the token, then this is a
     <a href=#parse-error>parse error</a>.</li>

     <li><p>Pop elements from the <a href=#stack-of-open-elements>stack of open elements</a>
     until an element with the same tag name as the token has been
     popped from the stack.</li>

    </ol></dd>

   <!-- removes the form element pointer instead of the matching node -->
   <dt>An end tag whose tag name is "form"</dt>
   <dd>

    <p>Let <var title="">node</var> be the element that the
    <a href=#form-element-pointer><code title="">form</code> element pointer</a> is set
    to.</p>

    <p>Set the <a href=#form-element-pointer><code title="">form</code> element pointer</a>
    to null.</p>

    <p>If <var title="">node</var> is null or the <a href=#stack-of-open-elements>stack of open
    elements</a> does not <a href=#has-an-element-in-scope title="has an element in
    scope">have <var title="">node</var> in scope</a>, then this is
    a <a href=#parse-error>parse error</a>; ignore the token.</p>

    <p>Otherwise, run these steps:</p>

    <ol><li><p><a href=#generate-implied-end-tags>Generate implied end tags</a>.</li>

     <li><p>If the <a href=#current-node>current node</a> is not <var title="">node</var>, then this is a <a href=#parse-error>parse
     error</a>.</li>

     <li><p>Remove <var title="">node</var> from the <a href=#stack-of-open-elements>stack of
     open elements</a>.</li>

    </ol></dd>

   <!-- as normal, except </p> implies <p> if there's no <p> in scope, and needs care as the elements have optional tags -->
   <dt>An end tag whose tag name is "p"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-scope title="has an element in scope">have an element in scope</a>
    with the same tag name as that of the token, then this is a
    <a href=#parse-error>parse error</a>; act as if a start tag with the tag name
    "p" had been seen, then reprocess the current token.</p>

    <p>Otherwise, run these steps:</p>

    <ol><li><p><a href=#generate-implied-end-tags>Generate implied end tags</a>, except
     for elements with the same tag name as the token.</li>

     <li><p>If the <a href=#current-node>current node</a> is not an element with
     the same tag name as that of the token, then this is a
     <a href=#parse-error>parse error</a>.</li>

     <li><p>Pop elements from the <a href=#stack-of-open-elements>stack of open elements</a>
     until an element with the same tag name as the token has been
     popped from the stack.</li>

    </ol></dd>

   <!-- as normal, but needs care as the elements have optional tags -->
   <dt>An end tag whose tag name is one of: "dd", "dt", "li"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-scope title="has an element in scope">have an element in scope</a>
    with the same tag name as that of the token, then this is a
    <a href=#parse-error>parse error</a>; ignore the token.</p>

    <p>Otherwise, run these steps:</p>

    <ol><li><p><a href=#generate-implied-end-tags>Generate implied end tags</a>, except
     for elements with the same tag name as the token.</li>

     <li><p>If the <a href=#current-node>current node</a> is not an element with
     the same tag name as that of the token, then this is a
     <a href=#parse-error>parse error</a>.</li>

     <li><p>Pop elements from the <a href=#stack-of-open-elements>stack of open elements</a>
     until an element with the same tag name as the token has been
     popped from the stack.</li>

    </ol></dd>

   <!-- as normal, except acts as a closer for any of the h1-h6 elements -->
   <dt>An end tag whose tag name is one of: "h1", "h2", "h3", "h4", "h5", "h6"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-scope title="has an element in scope">have an element in scope</a>
    whose tag name is one of "h1", "h2", "h3", "h4", "h5", or "h6",
    then this is a <a href=#parse-error>parse error</a>; ignore the token. <!--
    XXX quirk: Act as if a start tag with the tag name given in the
    token had been seen, then reprocess the current token. --></p>

    <p>Otherwise, run these steps:</p>

    <ol><li><p><a href=#generate-implied-end-tags>Generate implied end tags</a>.</li>

     <li><p>If the <a href=#current-node>current node</a> is not an element with
     the same tag name as that of the token, then this is a
     <a href=#parse-error>parse error</a>.</li>

     <li><p>Pop elements from the <a href=#stack-of-open-elements>stack of open elements</a>
     until an element whose tag name is one of "h1", "h2", "h3", "h4",
     "h5", or "h6" has been popped from the stack.</li>

    </ol></dd>

   <dt>An end tag whose tag name is "sarcasm"</dt>
   <dd>
    <p>Take a deep breath, then act as described in the "any other end
    tag" entry below.</p>
   </dd>

   <!-- ADOPTION AGENCY ELEMENTS
        Mozilla-only: bdo blink del ins sub sup q
        Safari-only: code dfn kbd nobr samp var wbr
        Both: a b big em font i s small strike strong tt u -->

   <dt>A start tag whose tag name is "a"</dt>
   <dd>

    <p>If the <a href=#list-of-active-formatting-elements>list of active formatting elements</a>
    contains an element whose tag name is "a" between the end of
    the list and the last marker on the list (or the start of the
    list if there is no marker on the list), then this is a
    <a href=#parse-error>parse error</a>; act as if an end tag with the tag
    name "a" had been seen, then remove that element from the
    <a href=#list-of-active-formatting-elements>list of active formatting elements</a> and the
    <a href=#stack-of-open-elements>stack of open elements</a> if the end tag didn't
    already remove it (it might not have if the element is not
    <a href=#has-an-element-in-table-scope title="has an element in table scope">in table
    scope</a>).</p>

    <p class=example>In the non-conforming stream
    <code>&lt;a&nbsp;href="a"&gt;a&lt;table&gt;&lt;a&nbsp;href="b"&gt;b&lt;/table&gt;x</code>,
    the first <code><a href=#the-a-element>a</a></code> element would be closed upon seeing
    the second one, and the "x" character would be inside a link
    to "b", not to "a". This is despite the fact that the outer
    <code><a href=#the-a-element>a</a></code> element is not in table scope (meaning that a
    regular <code>&lt;/a&gt;</code> end tag at the start of the table
    wouldn't close the outer <code><a href=#the-a-element>a</a></code> element).</p>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Add that
    element to the <a href=#list-of-active-formatting-elements>list of active formatting
    elements</a>.</p>

   </dd>

   <dt>A start tag whose tag name is one of: "b", "big", "em",
   "font", "i", "s", "small", "strike", "strong", "tt", "u"</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Add that
    element to the <a href=#list-of-active-formatting-elements>list of active formatting
    elements</a>.</p>

   </dd>

   <dt>A start tag whose tag name is "nobr"</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has an
    element in scope">has a <code>nobr</code> element in scope</a>,
    then this is a <a href=#parse-error>parse error</a>; act as if an end tag with
    the tag name "nobr" had been seen, then once again
    <a href=#reconstruct-the-active-formatting-elements>reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Add that
    element to the <a href=#list-of-active-formatting-elements>list of active formatting
    elements</a>.</p>

   </dd>

   <dt id=adoptionAgency>An end tag whose tag name is one of:
   "a", "b", "big", "em", "font", "i", "nobr", "s", "small",
   "strike", "strong", "tt", "u"</dt>
   <dd>

    <p>Follow these steps:</p>

    <ol><li>

      <p>Let the <var title="">formatting element</var> be the
      last element in the <a href=#list-of-active-formatting-elements>list of active formatting
      elements</a> that:</p>

      <ul><li>is between the end of the list and the last scope
       marker in the list, if any, or the start of the list
       otherwise, and</li>

       <li>has the same tag name as the token.</li>

      </ul><p>If there is no such node, or, if that node is also in the
      <a href=#stack-of-open-elements>stack of open elements</a> but the element is not <a href=#has-an-element-in-scope title="has an element in scope">in scope</a>, then this is a
      <a href=#parse-error>parse error</a>; ignore the token, and abort these
      steps.</p>

      <p>Otherwise, if there is such a node, but that node is not
      in the <a href=#stack-of-open-elements>stack of open elements</a>, then this is a
      <a href=#parse-error>parse error</a>; remove the element from the list,
      and abort these steps.</p>

      <p>Otherwise, there is a <var title="">formatting
      element</var> and that element is in <a href=#stack-of-open-elements title="stack of
      open elements">the stack</a> and is <a href=#has-an-element-in-scope title="has an
      element in scope">in scope</a>. If the element is not the
      <a href=#current-node>current node</a>, this is a <a href=#parse-error>parse
      error</a>. In any case, proceed with the algorithm as
      written in the following steps.</p>

     </li>

     <li><p>Let the <var title="">furthest block</var> be the
     topmost node in the <a href=#stack-of-open-elements>stack of open elements</a> that
     is lower in the stack than the <var title="">formatting
     element</var>, and is not an element in the
     <a href=#phrasing>phrasing</a> or <a href=#formatting>formatting</a>
     categories. There might not be one.</li>

     <li><p>If there is no <var title="">furthest block</var>,
     then the UA must skip the subsequent steps and instead just
     pop all the nodes from the bottom of the <a href=#stack-of-open-elements>stack of open
     elements</a>, from the <a href=#current-node>current node</a> up to and
     including the <var title="">formatting element</var>, and
     remove the <var title="">formatting element</var> from the
     <a href=#list-of-active-formatting-elements>list of active formatting elements</a>.</li>

     <li><p>Let the <var title="">common ancestor</var> be the element
     immediately above the <var title="">formatting element</var> in the
     <a href=#stack-of-open-elements>stack of open elements</a>.</li>

     <li><p>If the <var title="">furthest block</var> has a parent node,
     then remove the <var title="">furthest block</var> from its parent
     node.</li>

     <li><p>Let a bookmark note the position of the <var title="">formatting element</var> in the <a href=#list-of-active-formatting-elements>list of active
     formatting elements</a> relative to the elements on either
     side of it in the list.</li>

     <li>

      <p>Let <var title="">node</var> and <var title="">last node</var> be the
      <var title="">furthest block</var>. Follow these steps:</p>

      <ol><li>Let <var title="">node</var> be the element immediately
       above <var title="">node</var> in the <a href=#stack-of-open-elements>stack of open
       elements</a>.</li>

       <li>If <var title="">node</var> is not in the <a href=#list-of-active-formatting-elements>list of
       active formatting elements</a>, then remove <var title="">node</var> from the <a href=#stack-of-open-elements>stack of open
       elements</a> and then go back to step 1.</li>

       <li>Otherwise, if <var title="">node</var> is the <var title="">formatting element</var>, then go to the next step
       in the overall algorithm.</li>

       <li>Otherwise, if <var title="">last node</var> is the <var title="">furthest block</var>, then move the aforementioned
       bookmark to be immediately after the <var title="">node</var> in the <a href=#list-of-active-formatting-elements>list of active formatting
       elements</a>.</li>

       <li>If <var title="">node</var> has any children, perform a shallow
       clone of <var title="">node</var>, replace the entry for
       <var title="">node</var> in the <a href=#list-of-active-formatting-elements>list of active formatting
       elements</a> with an entry for the clone, replace the
       entry for <var title="">node</var> in the <a href=#stack-of-open-elements>stack of open
       elements</a> with an entry for the clone, and let
       <var title="">node</var> be the clone.</li>

       <li>Insert <var title="">last node</var> into <var title="">node</var>, first removing it from its previous
       parent node if any.</li>

       <li>Let <var title="">last node</var> be <var title="">node</var>.</li>

       <li>Return to step 1 of this inner set of steps.</li>

      </ol></li>

     <li>

      <p>If the <var title="">common ancestor</var> node is a
      <code><a href=#the-table-element>table</a></code>, <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>,
      <code><a href=#the-thead-element>thead</a></code>, or <code><a href=#the-tr-element>tr</a></code> element, then,
      <a href=#foster-parent>foster parent</a> whatever <var title="">last
      node</var> ended up being in the previous step.</p>

      <p>Otherwise, append whatever <var title="">last node</var>
      ended up being in the previous step to the <var title="">common
      ancestor</var> node, first removing it from its previous parent
      node if any.</p>

     </li>

     <li><p>Perform a shallow clone of the <var title="">formatting
     element</var>.</li>

     <li><p>Take all of the child nodes of the <var title="">furthest
     block</var> and append them to the clone created in the last
     step.</li>

     <li><p>Append that clone to the <var title="">furthest
     block</var>.</li>

     <li><p>Remove the <var title="">formatting element</var> from the
     <a href=#list-of-active-formatting-elements>list of active formatting elements</a>, and insert
     the clone into the <a href=#list-of-active-formatting-elements>list of active formatting
     elements</a> at the position of the aforementioned
     bookmark.</li>

     <li><p>Remove the <var title="">formatting element</var> from the
     <a href=#stack-of-open-elements>stack of open elements</a>, and insert the clone into
     the <a href=#stack-of-open-elements>stack of open elements</a> immediately below the
     position of the <var title="">furthest block</var> in that
     stack.</li>

     <li><p>Jump back to step 1 in this series of steps.</li>

    </ol><p class=note>The way these steps are defined, only elements
    in the <a href=#formatting>formatting</a> category ever get cloned by
    this algorithm.</p>

<!--XXX
    <div class="example">
     <p class="XXX">Need an example.</p>
    </div>
-->

    <p class=note>Because of the way this algorithm causes elements to
    change parents, it has been dubbed the "adoption agency algorithm"
    (in contrast with other possibly algorithms for dealing with
    misnested content, which included the "incest algorithm", the
    "secret affair algorithm", and the "Heisenberg algorithm").</p>

   </dd>

   <dt>A start tag whose tag name is "button"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>button</code> element in
    scope</a>, then this is a <a href=#parse-error>parse error</a>;
    act as if an end tag with the tag name "button" had been seen,
    then reprocess the token.</p>

    <p>Otherwise:</p>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Insert a marker at the end of the <a href=#list-of-active-formatting-elements>list of active
    formatting elements</a>.</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

   </dd>

   <dt>A start tag token whose tag name is one of: "applet",
   "marquee", "object"</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Insert a marker at the end of the <a href=#list-of-active-formatting-elements>list of active
    formatting elements</a>.</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

   </dd>

   <dt>An end tag token whose tag name is one of: "applet", "button",
   "marquee", "object"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-scope title="has an element in scope">have an element in scope</a>
    with the same tag name as that of the token, then this is a
    <a href=#parse-error>parse error</a>; ignore the token.</p>

    <p>Otherwise, run these steps:</p>

    <ol><li><p><a href=#generate-implied-end-tags>Generate implied end tags</a>.</li>

     <li><p>If the <a href=#current-node>current node</a> is not an element with
     the same tag name as that of the token, then this is a
     <a href=#parse-error>parse error</a>.</li>

     <li><p>Pop elements from the <a href=#stack-of-open-elements>stack of open elements</a>
     until an element with the same tag name as the token has been
     popped from the stack.</li>

     <li><a href=#clear-the-list-of-active-formatting-elements-up-to-the-last-marker>Clear the list of active formatting elements up to the
     last marker</a>.</li>

    </ol></dd>

   <dt>A start tag whose tag name is "table"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>p</code> element in
    scope</a>, then act as if an end tag with the tag name
    "p" had been seen.</p> <!-- XXX quirks: don't do this -->

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>".</p>

   </dd>

   <dt>A start tag whose tag name is one of: "area", "basefont",
   "bgsound", "br", "embed", "img", "input", "spacer", "wbr"</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Immediately
    pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p> <!--
    shouldn't really do it for <area>, <basefont>, <bgsound>, and
    <spacer> -->

   </dd>

   <dt>A start tag whose tag name is one of: "param", "source"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Immediately
    pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p>

   </dd>

   <dt>A start tag whose tag name is "hr"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has
    an element in scope">has a <code>p</code> element in
    scope</a>, then act as if an end tag with the tag name
    "p" had been seen.</p> <!-- XXX quirks: don't do this -->

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Immediately
    pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

   </dd>

   <dt>A start tag whose tag name is "image"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Change the token's tag name
    to "img" and reprocess it. (Don't ask.)</p> <!-- As of
    2005-12, studies showed that around 0.2% of pages used the
    <image> element. -->
   </dd>

   <dt id=isindex>A start tag whose tag name is "isindex"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p>If the <a href=#form-element-pointer><code title="">form</code> element
    pointer</a> is not null, then ignore the token.</p>

    <p>Otherwise:</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p> <!--
    purely to reduce the number of errors (we don't care if they
    included the /, they're not supposed to be including the tag at
    all! -->

    <p>Act as if a start tag token with the tag name "form" had been seen.</p>

    <p>If the token has an attribute called "action", set the
    <code title=attr-form-action>action</code> attribute on the
    resulting <code><a href=#the-form-element>form</a></code> element to the value of the
    "action" attribute of the token.</p>

    <p>Act as if a start tag token with the tag name "hr" had been
    seen.</p>

    <p>Act as if a start tag token with the tag name "p" had been
    seen.</p>

    <p>Act as if a start tag token with the tag name "label" had been
    seen.</p>

    <p>Act as if a stream of character tokens had been seen (see below
    for what they should say).</p>

    <p>Act as if a start tag token with the tag name "input" had been
    seen, with all the attributes from the "isindex" token except
    "name", "action", and "prompt". Set the <code title=attr-fe-name><a href=#attr-fe-name>name</a></code> attribute of the resulting
    <code><a href=#the-input-element>input</a></code> element to the value "<code title="">isindex</code>".</p>

    <p>Act as if a stream of character tokens had been seen (see
    below for what they should say).</p>

    <p>Act as if an end tag token with the tag name "label" had been
    seen.</p>

    <p>Act as if an end tag token with the tag name "p" had been
    seen.</p>

    <p>Act as if a start tag token with the tag name "hr" had been
    seen.</p>

    <p>Act as if an end tag token with the tag name "form" had been
    seen.</p>

    <p>If the token has an attribute with the name "prompt", then the
    first stream of characters must be the same string as given in
    that attribute, and the second stream of characters must be
    empty. Otherwise, the two streams of character tokens together
    should, together with the <code><a href=#the-input-element>input</a></code> element, express the
    equivalent of "This is a searchable index. Insert your search
    keywords here: (input field)" in the user's preferred
    language.</p>

   </dd>

<!-- XXX keygen support; don't forget form element pointer!

   <dt>A start tag whose tag name is "keygen"</dt>
   <dd>
    ...
   </dd>
-->

   <dt>A start tag whose tag name is "textarea"</dt>
   <dd>

    <ol><li><p><a href=#insert-an-html-element>Insert an HTML element</a> for the
     token.</li>

     <li><p>If the next token is a U+000A LINE FEED (LF) character
     token, then ignore that token and move on to the next
     one. (Newlines at the start of <code><a href=#the-textarea-element>textarea</a></code> elements are
     ignored as an authoring convenience.)</li>

     <li><p>Switch the tokeniser's <a href=#content-model-flag>content model flag</a> to
     the RCDATA state.</li>

     <li><p>Let the <a href=#original-insertion-mode>original insertion mode</a> be the
     current <a href=#insertion-mode>insertion mode</a>.</p>

     <li><p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not
     ok".</li>

     <li><p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-incdata title="insertion mode: in CDATA/RCDATA">in
     CDATA/RCDATA</a>".</li>

    </ol></dd>

   <dt>A start tag whose tag name is "xmp"</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

    <p>Follow the <a href=#generic-cdata-element-parsing-algorithm>generic CDATA element parsing algorithm</a>.</p>

   </dd>

   <dt>A start tag whose tag name is "iframe"</dt>
   <dd>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

    <p>Follow the <a href=#generic-cdata-element-parsing-algorithm>generic CDATA element parsing algorithm</a>.</p>

   </dd>

   <dt>A start tag whose tag name is "noembed"</dt>
   <dt>A start tag whose tag name is "noscript", if the <a href=#scripting-flag>scripting flag</a> is enabled</dt>
   <dd>

    <p>Follow the <a href=#generic-cdata-element-parsing-algorithm>generic CDATA element parsing algorithm</a>.</p>

   </dd>

   <dt>A start tag whose tag name is "select"</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Set the <a href=#frameset-ok-flag>frameset-ok flag</a> to "not ok".</p>

    <p>If the <a href=#insertion-mode>insertion mode</a> is one of <a href=#parsing-main-intable title="insertion mode: in table">in table</a>", "<a href=#parsing-main-incaption title="insertion mode: in caption">in caption</a>", "<a href=#parsing-main-incolgroup title="insertion mode: in column group">in column group</a>",
    "<a href=#parsing-main-intbody title="insertion mode: in table body">in table
    body</a>", "<a href=#parsing-main-intr title="insertion mode: in row">in
    row</a>", or "<a href=#parsing-main-intd title="insertion mode: in cell">in
    cell</a>", then switch the <a href=#insertion-mode>insertion mode</a> to
    "<a href=#parsing-main-inselectintable title="insertion mode: in select in table">in select in
    table</a>". Otherwise, switch the <a href=#insertion-mode>insertion mode</a>
    to "<a href=#parsing-main-inselect title="insertion mode: in select">in select</a>".</p>

   </dd>

   <dt>A start tag whose tag name is one of: "optgroup", "option"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has an
    element in scope">has an <code>option</code> element in
    scope</a>, then act as if an end tag with the tag name "option"
    had been seen.</p>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

   </dd>

   <dt>A start tag whose tag name is one of: "rp", "rt"</dt>
   <dd>

    <!-- the parsing rules for ruby really don't match IE much at all,
         but in practice the markup used is very simple and so strict
         compatibility with IE isn't required. For example, as defined
         here we get very, very different behaviour than IE for
         pathological cases like:

           <ruby><ol><li><p>a<rt>b
           <ruby>a<rt>b<p>c

         But in practice most ruby markup falls into these cases:

           <ruby>a<rt>b</ruby>
           <ruby>a<rp>b<rt>c<rp>d</ruby>
           <ruby>a<rt>b</rt></ruby>
           <ruby>a<rp>b</rp><rt>c</rt><rp>d</rp></ruby>

    -->

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-scope title="has an
    element in scope">has a <code>ruby</code> element in scope</a>,
    then <a href=#generate-implied-end-tags>generate implied end tags</a>. If the <a href=#current-node>current
    node</a> is not then a <code><a href=#the-ruby-element>ruby</a></code> element, this is a
    <a href=#parse-error>parse error</a>; pop all the nodes from the <a href=#current-node>current
    node</a> up to the node immediately before the bottommost
    <code><a href=#the-ruby-element>ruby</a></code> element on the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

   </dd>

   <dt>An end tag whose tag name is "br"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Act as if a start tag token with
    the tag name "br" had been seen. Ignore the end tag token.</p>
   </dd>

   <dt>A start tag whose tag name is "math"</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#adjust-mathml-attributes>Adjust MathML attributes</a> for the token. (This
    fixes the case of MathML attributes that are not all
    lowercase.)</p>

    <p><a href=#adjust-foreign-attributes>Adjust foreign attributes</a> for the token. (This
    fixes the use of namespaced attributes, in particular XLink.)</p>

    <p><a href=#insert-a-foreign-element>Insert a foreign element</a> for the token, in the
    <a href=#mathml-namespace>MathML namespace</a>.</p>

    <p>If the token has its <i>self-closing flag</i> set, pop the
    <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a> and <a href=#acknowledge-self-closing-flag title="acknowledge self-closing
    flag">acknowledge the token's <i>self-closing flag</i></a>.</p>

    <p>Otherwise, let the <a href=#secondary-insertion-mode>secondary insertion mode</a> be the
    current <a href=#insertion-mode>insertion mode</a>, and then switch the
    <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-inforeign title="insertion mode: in
    foreign content">in foreign content</a>".</p>

   </dd>
<!--XXXSVG
   <dt>A start tag whose tag name is "svg"</dt>
   <dd>

    <p><span>Reconstruct the active formatting elements</span>, if
    any.</p>

    <p><span>Adjust SVG attributes</span> for the token. (This fixes
    the case of SVG attributes that are not all lowercase.)</p>

    <p><span>Adjust foreign attributes</span> for the token. (This
    fixes the use of namespaced attributes, in particular XLink in
    SVG.)</p>

    <p><span>Insert a foreign element</span> for the token, in the
    <span>SVG namespace</span>.</p>

    <p>If the token has its <i>self-closing flag</i> set, pop the
    <span>current node</span> off the <span>stack of open
    elements</span> and <span title="acknowledge self-closing
    flag">acknowledge the token's <i>self-closing flag</i></span>.</p>

    <p>Otherwise, let the <span>secondary insertion mode</span> be the
    current <span>insertion mode</span>, and then switch the
    <span>insertion mode</span> to "<span title="insertion mode: in
    foreign content">in foreign content</span>".</p>

   </dd>
-->

   <dt>A start <!--or end--> tag whose tag name is one of: "caption",
   "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th",
   "thead", "tr"</dt>
   <!--<dt>An end tag whose tag name is one of: "area", "base",
   "basefont", "bgsound", "command", "embed", "eventsource", "hr",
   "iframe", "image", "img", "input", "isindex", "link", "meta",
   "noembed", "noframes", "param", "script", "select", "source",
   "spacer", "style", "table", "textarea", "title", "wbr"</dt>--> <!--
   add keygen if we add the start tag -->
   <!--<dt>An end tag whose tag name is "noscript", if the
   <span>scripting flag</span> is enabled</dt>-->
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
    <!-- end tags are commented out because since they can never end
    up on the stack anyway, the default end tag clause will
    automatically handle them. we don't want to have text in the spec
    that is just an optimisation, as that detracts from the spec
    itself -->
   </dd>

   <dt>Any other start tag</dt>
   <dd>

    <p><a href=#reconstruct-the-active-formatting-elements>Reconstruct the active formatting elements</a>, if
    any.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p class=note>This element will be a <a href=#phrasing>phrasing</a>
    element.</p>

   </dd>

   <dt>Any other end tag</dt>
   <dd>

    <p>Run the following steps:</p>

    <ol><li><p>Initialize <var title="">node</var> to be the <a href=#current-node>current
     node</a> (the bottommost node of the stack).</li>

     <li><p>If <var title="">node</var> has the same tag name as
     the end tag token, then:</p>

      <ol><li><p><a href=#generate-implied-end-tags>Generate implied end tags</a>.</li>

       <li><p>If the tag name of the end tag token does not match
       the tag name of the <a href=#current-node>current node</a>, this is a
       <a href=#parse-error>parse error</a>.</li>

       <li><p>Pop all the nodes from the <a href=#current-node>current node</a> up
       to <var title="">node</var>, including <var title="">node</var>, then stop these steps.</li>

      </ol></li>

     <li><p>Otherwise, if <var title="">node</var> is in neither the
     <a href=#formatting>formatting</a> category nor the <a href=#phrasing>phrasing</a>
     category, then this is a <a href=#parse-error>parse error</a>; ignore the
     token, and abort these steps.</li>

     <li><p>Set <var title="">node</var> to the previous entry in the
     <a href=#stack-of-open-elements>stack of open elements</a>.</li>

     <li><p>Return to step 2.</li>

    </ol></dd>

  </dl><h5 id=parsing-main-incdata><span class=secno>8.2.5.11 </span>The "<dfn title="insertion mode: in CDATA/RCDATA">in CDATA/RCDATA</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-incdata title="insertion
  mode: in CDATA/RCDATA">in CDATA/RCDATA</a>", tokens must be
  handled as follows:</p>

  <dl class=switch><dt>A character token</dt>
   <dd>

    <p><a href=#insert-a-character title="insert a character">Insert the token's
    character</a> into the <a href=#current-node>current node</a>.</p>

   </dd>

   <dt>An end-of-file token</dt>
   <dd>

    <!-- can't be the fragment case -->
    <p><a href=#parse-error>Parse error</a>.</p>

    <p>If the <a href=#current-node>current node</a> is a <code><a href=#script>script</a></code>
    element, mark the <code><a href=#script>script</a></code> element as <a href=#already-executed>"already
    executed"</a>.</p>

    <p>Pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to the <a href=#original-insertion-mode>original
    insertion mode</a> and reprocess the current token.</p>

   </dd>

   <dt>An end tag whose tag name is "script"</dt>
   <dd>

    <p>Let <var title="">script</var> be the <a href=#current-node>current node</a>
    (which will be a <code><a href=#script>script</a></code> element).</p>

    <p>Pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to the <a href=#original-insertion-mode>original
    insertion mode</a>.</p>

    <p>Let the <var title="">old insertion point</var> have the
    same value as the current <a href=#insertion-point>insertion point</a>. Let
    the <a href=#insertion-point>insertion point</a> be just before the <a href=#next-input-character>next
    input character</a>.</p>

    <p>Increment the parser's <a href=#script-nesting-level>script nesting level</a> by
    one.</p>

    <p><a href=#running-a-script title="running a script">Run</a> the <var title="">script</var>. This might cause some script to execute,
    which might cause <a href=#dom-document-write title=dom-document-write>new characters
    to be inserted into the tokeniser</a>, and might cause the
    tokeniser to output more tokens, resulting in a <a href=#nestedParsing>reentrant invocation of the parser</a>.</p>

    <p>Decrement the parser's <a href=#script-nesting-level>script nesting level</a> by
    one. If the parser's <a href=#script-nesting-level>script nesting level</a> is zero,
    then set the <a href=#parser-pause-flag>parser pause flag</a> to false.</p>

    <p>Let the <a href=#insertion-point>insertion point</a> have the value of the
    <var title="">old insertion point</var>. (In other words,
    restore the <a href=#insertion-point>insertion point</a> to the value it had
    before the previous paragraph. This value might be the
    "undefined" value.)</p>

    <p id=scriptTagParserResumes>At this stage, if there is a
    <a href=#pending-external-script>pending external script</a>, then:</p>

    <dl class=switch><dt>If the tree construction stage is <a href=#nestedParsing>being called reentrantly</a>, say from a
     call to <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code>:</dt>

     <dd><p>Set the <a href=#parser-pause-flag>parser pause flag</a> to true, and abort
     the processing of any nested invocations of the tokeniser,
     yielding control back to the caller. (Tokenization will resume
     when the caller returns to the "outer" tree construction
     stage.)</dd>


     <dt>Otherwise:</dt>

     <dd>

      <p>Follow these steps:</p>

      <ol><li><p>Let <var title="">the script</var> be the <a href=#pending-external-script>pending
       external script</a>. There is no longer a <a href=#pending-external-script>pending
       external script</a>.</li>

       <li><p><a href=#pause>Pause</a> until the script has <a href=#completed-loading>completed
       loading</a>.</li>

       <li><p>Let the <a href=#insertion-point>insertion point</a> be just before the
       <a href=#next-input-character>next input character</a>.</li>

       <li><p><a href=#executing-a-script-block title="executing a script block">Execute the
       script</a>.</li>

       <li><p>Let the <a href=#insertion-point>insertion point</a> be undefined
       again.</li>

       <li><p>If there is once again a <a href=#pending-external-script>pending external
       script</a>, then repeat these steps from step 1.</li>

      </ol></dd>

    </dl></dd>

   <dt>Any other end tag</dt>
   <dd>

    <p>Pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to the <a href=#original-insertion-mode>original
    insertion mode</a>.</p>

   </dd>

  </dl><h5 id=parsing-main-intable><span class=secno>8.2.5.12 </span>The "<dfn title="insertion mode: in table">in table</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-intable title="insertion
  mode: in table">in table</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>

    <p>If the <a href=#current-table>current table</a> is <a href=#tainted>tainted</a>, then
    act as described in the "anything else" entry below.</p>

    <p>Otherwise, <a href=#insert-a-character title="insert a character">insert the
    character</a> into the <a href=#current-node>current node</a>.</p>

   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "caption"</dt>
   <dd>

    <p><a href=#clear-the-stack-back-to-a-table-context>Clear the stack back to a table context</a>. (See
    below.)</p>

    <p>Insert a marker at the end of the <a href=#list-of-active-formatting-elements>list of active
    formatting elements</a>.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token, then
    switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-incaption title="insertion mode: in caption">in caption</a>".</p>

   </dd>

   <dt>A start tag whose tag name is "colgroup"</dt>
   <dd>

    <p><a href=#clear-the-stack-back-to-a-table-context>Clear the stack back to a table context</a>. (See
    below.)</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token, then
    switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-incolgroup title="insertion mode: in column group">in column
    group</a>".</p>

   </dd>

   <dt>A start tag whose tag name is "col"</dt>
   <dd>
    <p>Act as if a start tag token with the tag name "colgroup"
    had been seen, then reprocess the current token.</p>
   </dd>

   <dt>A start tag whose tag name is one of: "tbody", "tfoot", "thead"</dt>
   <dd>

    <p><a href=#clear-the-stack-back-to-a-table-context>Clear the stack back to a table context</a>. (See
    below.)</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token, then
    switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intbody title="insertion mode: in table body">in table
    body</a>".</p>

   </dd>

   <dt>A start tag whose tag name is one of: "td", "th", "tr"</dt>
   <dd>
    <p>Act as if a start tag token with the tag name "tbody" had
    been seen, then reprocess the current token.</p>
   </dd>

   <dt>A start tag whose tag name is "table"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>. Act as if an end tag token with
    the tag name "table" had been seen, then, if that token wasn't
    ignored, reprocess the current token.</p>

    <p class=note>The fake end tag token here can only be
    ignored in the <a href=#fragment-case>fragment case</a>.</p>

   </dd>

   <dt>An end tag whose tag name is "table"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as the token, this is a
    <a href=#parse-error>parse error</a>. Ignore the token. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise:</p>

    <p>Pop elements from this stack until a <code><a href=#the-table-element>table</a></code>
    element has been popped from the stack.</p>

    <p><a href=#reset-the-insertion-mode-appropriately>Reset the insertion mode appropriately</a>.</p>

   </dd>

   <dt>An end tag whose tag name is one of: "body", "caption",
   "col", "colgroup", "html", "tbody", "td", "tfoot", "th",
   "thead", "tr"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is one of: "style", "script"</dt>
   <dd>

    <p>If the <a href=#current-table>current table</a> is <a href=#tainted>tainted</a> then
    act as described in the "anything else" entry below.</p>

    <p>Otherwise, process the token <a href=#using-the-rules-for>using the rules for</a>
    the "<a href=#parsing-main-inhead title="insertion mode: in head">in
    head</a>" <a href=#insertion-mode>insertion mode</a>.</p>

   </dd>

   <dt>A start tag whose tag name is "input"</dt>
   <dd>

    <p>If the token does not have an attribute with the name "type",
    or if it does, but that attribute's value is not an <a href=#ascii-case-insensitive>ASCII
    case-insensitive</a> match for the string "<code title="">hidden</code>", or, if the <a href=#current-table>current table</a> is
    <a href=#tainted>tainted</a>, then: act as described in the "anything
    else" entry below.</p>

    <p>Otherwise:</p>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

    <p>Pop that <code><a href=#the-input-element>input</a></code> element off the <a href=#stack-of-open-elements>stack of
    open elements</a>.</p>

   </dd>

   <dt>An end-of-file token</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is not the root
    <code><a href=#the-html-element>html</a></code> element, then this is a <a href=#parse-error>parse
    error</a>.</p>

    <p class=note>It can only be the <a href=#current-node>current node</a> in
    the <a href=#fragment-case>fragment case</a>.</p>

    <p><a href=#stop-parsing>Stop parsing</a>.</p>

   </dd>

   <dt>Anything else</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>. Process the token <a href=#using-the-rules-for>using the
    rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in
    body</a>" <a href=#insertion-mode>insertion mode</a>, except that if the
    <a href=#current-node>current node</a> is a <code><a href=#the-table-element>table</a></code>,
    <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, <code><a href=#the-thead-element>thead</a></code>, or
    <code><a href=#the-tr-element>tr</a></code> element, then, whenever a node would be inserted
    into the <a href=#current-node>current node</a>, it must instead be <a href=#foster-parent title="foster parent">foster parented</a>.</p>

   </dd>

  </dl><p>When the steps above require the UA to <dfn id=clear-the-stack-back-to-a-table-context>clear the stack
  back to a table context</dfn>, it means that the UA must, while
  the <a href=#current-node>current node</a> is not a <code><a href=#the-table-element>table</a></code>
  element or an <code><a href=#the-html-element>html</a></code> element, pop elements from the
  <a href=#stack-of-open-elements>stack of open elements</a>.</p>

  <p class=note>The <a href=#current-node>current node</a> being an
  <code><a href=#the-html-element>html</a></code> element after this process is a <a href=#fragment-case>fragment
  case</a>.</p>


  <h5 id=parsing-main-incaption><span class=secno>8.2.5.13 </span>The "<dfn title="insertion mode: in caption">in caption</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-incaption title="insertion
  mode: in caption">in caption</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>An end tag whose tag name is "caption"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as the token, this is a
    <a href=#parse-error>parse error</a>. Ignore the token. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise:</p>

    <p><a href=#generate-implied-end-tags>Generate implied end tags</a>.</p>

    <p>Now, if the <a href=#current-node>current node</a> is not a
    <code><a href=#the-caption-element>caption</a></code> element, then this is a <a href=#parse-error>parse
    error</a>.</p>

    <p>Pop elements from this stack until a <code><a href=#the-caption-element>caption</a></code>
    element has been popped from the stack.</p>

    <p><a href=#clear-the-list-of-active-formatting-elements-up-to-the-last-marker>Clear the list of active formatting elements up to
    the last marker</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>".</p>

   </dd>

   <dt>A start tag whose tag name is one of: "caption", "col",
   "colgroup", "tbody", "td", "tfoot", "th", "thead", "tr"</dt>
   <dt>An end tag whose tag name is "table"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>. Act as if an end tag with the tag
    name "caption" had been seen, then, if that token wasn't
    ignored, reprocess the current token.</p>

    <p class=note>The fake end tag token here can only be
    ignored in the <a href=#fragment-case>fragment case</a>.</p>

   </dd>

   <dt>An end tag whose tag name is one of: "body", "col",
   "colgroup", "html", "tbody", "td", "tfoot", "th", "thead",
   "tr"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

  </dl><h5 id=parsing-main-incolgroup><span class=secno>8.2.5.14 </span>The "<dfn title="insertion mode: in column group">in column group</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-incolgroup title="insertion
  mode: in column group">in column group</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p><a href=#insert-a-character title="insert a character">Insert the character</a> into
    the <a href=#current-node>current node</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "col"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token. Immediately
    pop the <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a>.</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p>

   </dd>

   <dt>An end tag whose tag name is "colgroup"</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is the root
    <code><a href=#the-html-element>html</a></code> element, then this is a <a href=#parse-error>parse
    error</a>; ignore the token. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise, pop the <a href=#current-node>current node</a> (which will be
    a <code><a href=#the-colgroup-element>colgroup</a></code> element) from the <a href=#stack-of-open-elements>stack of open
    elements</a>. Switch the <a href=#insertion-mode>insertion mode</a> to
    "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>".</p>

   </dd>

   <dt>An end tag whose tag name is "col"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>An end-of-file token</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is the root <code><a href=#the-html-element>html</a></code>
    element, then <a href=#stop-parsing>stop parsing</a>. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise, act as described in the "anything else" entry
    below.</p>

   </dd>

   <dt>Anything else</dt>
   <dd>

    <p>Act as if an end tag with the tag name "colgroup" had been
    seen, and then, if that token wasn't ignored, reprocess the
    current token.</p>

    <p class=note>The fake end tag token here can only be
    ignored in the <a href=#fragment-case>fragment case</a>.</p>

   </dd>

  </dl><h5 id=parsing-main-intbody><span class=secno>8.2.5.15 </span>The "<dfn title="insertion mode: in table body">in table body</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-intbody title="insertion
  mode: in table body">in table body</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A start tag whose tag name is "tr"</dt>
   <dd>

    <p><a href=#clear-the-stack-back-to-a-table-body-context>Clear the stack back to a table body
    context</a>. (See below.)</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token, then switch
    the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intr title="insertion mode:
    in row">in row</a>".</p>

   </dd>

   <dt>A start tag whose tag name is one of: "th", "td"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Act as if a start tag with
    the tag name "tr" had been seen, then reprocess the current
    token.</p>
   </dd>

   <dt>An end tag whose tag name is one of: "tbody", "tfoot",
   "thead"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as the token, this is a
    <a href=#parse-error>parse error</a>. Ignore the token.</p>

    <p>Otherwise:</p>

    <p><a href=#clear-the-stack-back-to-a-table-body-context>Clear the stack back to a table body
    context</a>. (See below.)</p>

    <p>Pop the <a href=#current-node>current node</a> from the <a href=#stack-of-open-elements>stack of
    open elements</a>. Switch the <a href=#insertion-mode>insertion mode</a>
    to "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>".</p>

   </dd>

   <dt>A start tag whose tag name is one of: "caption", "col",
   "colgroup", "tbody", "tfoot", "thead"</dt>
   <dt>An end tag whose tag name is "table"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have a
    <code>tbody</code>, <code>thead</code>, or <code>tfoot</code>
    element in table scope</a>, this is a <a href=#parse-error>parse
    error</a>. Ignore the token. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise:</p>

    <p><a href=#clear-the-stack-back-to-a-table-body-context>Clear the stack back to a table body
    context</a>. (See below.)</p>

    <p>Act as if an end tag with the same tag name as the
    <a href=#current-node>current node</a> ("tbody", "tfoot", or "thead") had
    been seen, then reprocess the current token.</p>

   </dd>

   <dt>An end tag whose tag name is one of: "body", "caption",
   "col", "colgroup", "html", "td", "th", "tr"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

  </dl><p>When the steps above require the UA to <dfn id=clear-the-stack-back-to-a-table-body-context>clear the stack
  back to a table body context</dfn>, it means that the UA must,
  while the <a href=#current-node>current node</a> is not a <code><a href=#the-tbody-element>tbody</a></code>,
  <code><a href=#the-tfoot-element>tfoot</a></code>, <code><a href=#the-thead-element>thead</a></code>, or <code><a href=#the-html-element>html</a></code>
  element, pop elements from the <a href=#stack-of-open-elements>stack of open
  elements</a>.</p>

  <p class=note>The <a href=#current-node>current node</a> being an
  <code><a href=#the-html-element>html</a></code> element after this process is a <a href=#fragment-case>fragment
  case</a>.</p>


  <h5 id=parsing-main-intr><span class=secno>8.2.5.16 </span>The "<dfn title="insertion mode: in row">in row</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-intr title="insertion
  mode: in row">in row</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A start tag whose tag name is one of: "th", "td"</dt>
   <dd>

    <p><a href=#clear-the-stack-back-to-a-table-row-context>Clear the stack back to a table row
    context</a>. (See below.)</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token, then switch
    the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intd title="insertion mode:
    in cell">in cell</a>".</p>

    <p>Insert a marker at the end of the <a href=#list-of-active-formatting-elements>list of active
    formatting elements</a>.</p>

   </dd>

   <dt>An end tag whose tag name is "tr"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as the token, this is a
    <a href=#parse-error>parse error</a>. Ignore the token. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise:</p>

    <p><a href=#clear-the-stack-back-to-a-table-row-context>Clear the stack back to a table row
    context</a>. (See below.)</p>

    <p>Pop the <a href=#current-node>current node</a> (which will be a
    <code><a href=#the-tr-element>tr</a></code> element) from the <a href=#stack-of-open-elements>stack of open
    elements</a>. Switch the <a href=#insertion-mode>insertion mode</a> to
    "<a href=#parsing-main-intbody title="insertion mode: in table body">in table
    body</a>".</p>

   </dd>

   <dt>A start tag whose tag name is one of: "caption", "col",
   "colgroup", "tbody", "tfoot", "thead", "tr"</dt>
   <dt>An end tag whose tag name is "table"</dt>
   <dd>

    <p>Act as if an end tag with the tag name "tr" had been seen,
    then, if that token wasn't ignored, reprocess the current
    token.</p>

    <p class=note>The fake end tag token here can only be
    ignored in the <a href=#fragment-case>fragment case</a>.</p>

   </dd>

   <dt>An end tag whose tag name is one of: "tbody", "tfoot",
   "thead"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as the token, this is a
    <a href=#parse-error>parse error</a>. Ignore the token.</p>

    <p>Otherwise, act as if an end tag with the tag name "tr" had
    been seen, then reprocess the current token.</p>

   </dd>

   <dt>An end tag whose tag name is one of: "body", "caption",
   "col", "colgroup", "html", "td", "th"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-intable title="insertion mode: in table">in table</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

  </dl><p>When the steps above require the UA to <dfn id=clear-the-stack-back-to-a-table-row-context>clear the stack
  back to a table row context</dfn>, it means that the UA must,
  while the <a href=#current-node>current node</a> is not a <code><a href=#the-tr-element>tr</a></code>
  element or an <code><a href=#the-html-element>html</a></code> element, pop elements from the
  <a href=#stack-of-open-elements>stack of open elements</a>.</p>

  <p class=note>The <a href=#current-node>current node</a> being an
  <code><a href=#the-html-element>html</a></code> element after this process is a <a href=#fragment-case>fragment
  case</a>.</p>


  <h5 id=parsing-main-intd><span class=secno>8.2.5.17 </span>The "<dfn title="insertion mode: in cell">in cell</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-intd title="insertion
  mode: in cell">in cell</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>An end tag whose tag name is one of: "td", "th"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as that of the token, then
    this is a <a href=#parse-error>parse error</a> and the token must be
    ignored.</p>

    <p>Otherwise:</p>

    <p><a href=#generate-implied-end-tags>Generate implied end tags</a>.</p>

    <p>Now, if the <a href=#current-node>current node</a> is not an element
    with the same tag name as the token, then this is a
    <a href=#parse-error>parse error</a>.</p>

    <p>Pop elements from this stack until an element with the same
    tag name as the token has been popped from the stack.</p>

    <p><a href=#clear-the-list-of-active-formatting-elements-up-to-the-last-marker>Clear the list of active formatting elements up to
    the last marker</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-intr title="insertion mode: in row">in row</a>". (The
    <a href=#current-node>current node</a> will be a <code><a href=#the-tr-element>tr</a></code> element at
    this point.)</p>

   </dd>

   <dt>A start tag whose tag name is one of: "caption", "col",
   "colgroup", "tbody", "td", "tfoot", "th", "thead", "tr"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does
    <em>not</em> <a href=#has-an-element-in-table-scope title="has an element in table scope">have
    a <code>td</code> or <code>th</code> element in table
    scope</a>, then this is a <a href=#parse-error>parse error</a>; ignore
    the token. (<a href=#fragment-case>fragment case</a>)</p>

    <p>Otherwise, <a href=#close-the-cell>close the cell</a> (see below) and
    reprocess the current token.</p>

   </dd>

   <dt>An end tag whose tag name is one of: "body", "caption",
   "col", "colgroup", "html"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>An end tag whose tag name is one of: "table", "tbody",
   "tfoot", "thead", "tr"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as that of the token
    (which can only happen for "tbody", "tfoot" and "thead", or,
    in the <a href=#fragment-case>fragment case</a>), then this is a <a href=#parse-error>parse
    error</a> and the token must be ignored.</p>

    <p>Otherwise, <a href=#close-the-cell>close the cell</a> (see below) and
    reprocess the current token.</p>

   </dd>

   <dt>Anything else</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

  </dl><p>Where the steps above say to <dfn id=close-the-cell>close the cell</dfn>, they
  mean to run the following algorithm:</p>

  <ol><li><p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-table-scope title="has an element in table scope">has a <code>td</code>
   element in table scope</a>, then act as if an end tag token
   with the tag name "td" had been seen.</li>

   <li><p>Otherwise, the <a href=#stack-of-open-elements>stack of open elements</a> will
   <a href=#has-an-element-in-table-scope title="has an element in table scope">have a
   <code>th</code> element in table scope</a>; act as if an end
   tag token with the tag name "th" had been seen.</li>

  </ol><p class=note>The <a href=#stack-of-open-elements>stack of open elements</a> cannot
  have both a <code><a href=#the-td-element>td</a></code> and a <code><a href=#the-th-element>th</a></code> element <a href=#has-an-element-in-table-scope title="has an element in table scope">in table scope</a> at
  the same time, nor can it have neither when the <a href=#insertion-mode>insertion
  mode</a> is "<a href=#parsing-main-intd title="insertion mode: in cell">in
  cell</a>".</p>


  <h5 id=parsing-main-inselect><span class=secno>8.2.5.18 </span>The "<dfn title="insertion mode: in select">in select</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inselect title="insertion
  mode: in select">in select</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token</dt>
   <dd>
    <p><a href=#insert-a-character title="insert a character">Insert the token's
    character</a> into the <a href=#current-node>current node</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "option"</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is an <code><a href=#the-option-element>option</a></code>
    element, act as if an end tag with the tag name "option" had
    been seen.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

   </dd>

   <dt>A start tag whose tag name is "optgroup"</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is an <code><a href=#the-option-element>option</a></code>
    element, act as if an end tag with the tag name "option" had
    been seen.</p>

    <p>If the <a href=#current-node>current node</a> is an
    <code><a href=#the-optgroup-element>optgroup</a></code> element, act as if an end tag with the
    tag name "optgroup" had been seen.</p>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>

   </dd>

   <dt>An end tag whose tag name is "optgroup"</dt>
   <dd>

    <p>First, if the <a href=#current-node>current node</a> is an
    <code><a href=#the-option-element>option</a></code> element, and the node immediately before
    it in the <a href=#stack-of-open-elements>stack of open elements</a> is an
    <code><a href=#the-optgroup-element>optgroup</a></code> element, then act as if an end tag with
    the tag name "option" had been seen.</p>

    <p>If the <a href=#current-node>current node</a> is an
    <code><a href=#the-optgroup-element>optgroup</a></code> element, then pop that node from the
    <a href=#stack-of-open-elements>stack of open elements</a>. Otherwise, this is a
    <a href=#parse-error>parse error</a>; ignore the token.</p>

   </dd>

   <dt>An end tag whose tag name is "option"</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is an <code><a href=#the-option-element>option</a></code>
    element, then pop that node from the <a href=#stack-of-open-elements>stack of open
    elements</a>. Otherwise, this is a <a href=#parse-error>parse
    error</a>; ignore the token.</p>

   </dd>

   <dt>An end tag whose tag name is "select"</dt>
   <dd>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> does not <a href=#has-an-element-in-table-scope title="has an element in table scope">have an element in table
    scope</a> with the same tag name as the token, this is a
    <a href=#parse-error>parse error</a>. Ignore the token. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise:</p>

    <p>Pop elements from the <a href=#stack-of-open-elements>stack of open elements</a>
    until a <code><a href=#the-select-element>select</a></code> element has been popped from the
    stack.</p>

    <p><a href=#reset-the-insertion-mode-appropriately>Reset the insertion mode appropriately</a>.</p>

   </dd>

   <dt>A start tag whose tag name is "select"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>. Act as if the token had been
    an end tag with the tag name "select" instead.</p>

   </dd>

   <dt>A start tag whose tag name is one of: "input", "textarea"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Act as if an end tag with the tag
    name "select" had been seen, and reprocess the token.</p>
   </dd>

   <dt>A start tag token whose tag name is "script"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end-of-file token</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is not the root
    <code><a href=#the-html-element>html</a></code> element, then this is a <a href=#parse-error>parse
    error</a>.</p>

    <p class=note>It can only be the <a href=#current-node>current node</a> in
    the <a href=#fragment-case>fragment case</a>.</p>

    <p><a href=#stop-parsing>Stop parsing</a>.</p>

   </dd>

   <dt>Anything else</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

  </dl><h5 id=parsing-main-inselectintable><span class=secno>8.2.5.19 </span>The "<dfn title="insertion mode: in select in table">in select in table</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inselectintable title="insertion
  mode: in select in table">in select in table</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A start tag whose tag name is one of: "caption", "table",
   "tbody", "tfoot", "thead", "tr", "td", "th"</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Act as if an end tag with the tag
    name "select" had been seen, and reprocess the token.</p>
   </dd>

   <dt>An end tag whose tag name is one of: "caption", "table",
   "tbody", "tfoot", "thead", "tr", "td", "th"</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p>If the <a href=#stack-of-open-elements>stack of open elements</a> <a href=#has-an-element-in-table-scope>has an
    element in table scope</a> with the same tag name as that
    of the token, then act as if an end tag with the tag name
    "select" had been seen, and reprocess the token. Otherwise,
    ignore the token.</p>

   </dd>

   <dt>Anything else</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inselect title="insertion mode: in select">in select</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

  </dl><h5 id=parsing-main-inforeign><span class=secno>8.2.5.20 </span>The "<dfn title="insertion mode: in foreign content">in foreign content</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inforeign title="insertion
  mode: in foreign content">in foreign content</a>", tokens must be
  handled as follows:</p>

  <dl class=switch><dt>A character token</dt>
   <dd>
    <p><a href=#insert-a-character title="insert a character">Insert the token's
    character</a> into the <a href=#current-node>current node</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <!--XXXSVG need to define processing for </script> to match HTML5's </script> processing -->

   <dt>A start tag whose tag name is neither "mglyph" nor "malignmark", if the <a href=#current-node>current node</a> is an <code title="">mi</code> element in the <a href=#mathml-namespace>MathML namespace</a>.</dt>
   <dt>A start tag whose tag name is neither "mglyph" nor "malignmark", if the <a href=#current-node>current node</a> is an <code title="">mo</code> element in the <a href=#mathml-namespace>MathML namespace</a>.</dt>
   <dt>A start tag whose tag name is neither "mglyph" nor "malignmark", if the <a href=#current-node>current node</a> is an <code title="">mn</code> element in the <a href=#mathml-namespace>MathML namespace</a>.</dt>
   <dt>A start tag whose tag name is neither "mglyph" nor "malignmark", if the <a href=#current-node>current node</a> is an <code title="">ms</code> element in the <a href=#mathml-namespace>MathML namespace</a>.</dt>
   <dt>A start tag whose tag name is neither "mglyph" nor "malignmark", if the <a href=#current-node>current node</a> is an <code title="">mtext</code> element in the <a href=#mathml-namespace>MathML namespace</a>.</dt>
<!--XXXSVG
   <dt>A start tag whose tag name is "svg", if the <span>current node</span> is an <code title="">annotation-xml</code> element in the <span>MathML namespace</span>.</dt>
   <dt>A start tag, if the <span>current node</span> is a <code title="">foreignObject</code> element in the <span>SVG namespace</span>.</dt>
   <dt>A start tag, if the <span>current node</span> is a <code title="">desc</code> element in the <span>SVG namespace</span>.</dt>
   <dt>A start tag, if the <span>current node</span> is a <code title="">title</code> element in the <span>SVG namespace</span>.</dt>
-->
   <dt>A start tag, if the <a href=#current-node>current node</a> is an element in the <a href=#html-namespace-0>HTML namespace</a>.</dt>
   <dt>An end tag</dt>
   <dd>

    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the
    <a href=#secondary-insertion-mode>secondary insertion mode</a>.</p>

    <p>If, after doing so, the <a href=#insertion-mode>insertion mode</a> is still
    "<a href=#parsing-main-inforeign title="insertion mode: in foreign content">in foreign
    content</a>", but there is no element in scope that has a
    namespace other than the <a href=#html-namespace-0>HTML namespace</a><!-- XXX this
    isn't well-defined; it means check to see if the bottom-most HTML
    element on the stack is in scope -->, switch the <a href=#insertion-mode>insertion
    mode</a> to the <a href=#secondary-insertion-mode>secondary insertion mode</a>.</p>

   </dd>

   <dt>A start tag whose tag name is one of: <!--"a",--> "b", "big",
   "blockquote", "body"<!--by inspection-->, "br", "center", "code",
   "dd", "div", "dl", "dt"<!-- so that dd and dt can be handled
   uniformly throughout the parser -->, "em", "embed", "h1", "h2",
   "h3", "h4"<!--for completeness-->, "h5", "h6"<!--for
   completeness-->, "head"<!--by inspection-->, "hr", "i", "img",
   "li", "listing"<!-- so that pre and listing can be handled
   uniformly throughout the parser -->, "menu", "meta", "nobr",
   "ol"<!-- so that dl, ul, and ol can be handled uniformly throughout
   the parser -->, "p", "pre", "ruby", "s", <!--"script",--> "small",
   "span", "strong", "strike"<!-- so that s and strike can be handled
   uniformly throughout the parser -->, <!--"style",--> "sub", "sup",
   "table"<!--by inspection-->, "tt", "u", "ul", "var"</dt>
   <!-- this list was determined empirically by studying over
   6,000,000,000 pages that were specifically not XML pages -->
   <dt>A start tag whose tag name is "font", if the token has
   any attributes named "color", "face", or "size"</dt>
   <!-- the attributes here are required so that SVG <font> will go
   through as SVG but legacy <font>s won't -->
   <dt>An end-of-file token</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>.</p>

    <p>Pop elements from the <a href=#stack-of-open-elements>stack of open elements</a> until
    the <a href=#current-node>current node</a> is in the <a href=#html-namespace-0>HTML
    namespace</a>.</p>

    <p>Switch the <a href=#insertion-mode>insertion mode</a> to the <a href=#secondary-insertion-mode>secondary
    insertion mode</a>, and reprocess the token.</p>

   </dd>

   <dt>Any other start tag</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is an element in the
    <a href=#mathml-namespace>MathML namespace</a>, <a href=#adjust-mathml-attributes>adjust MathML
    attributes</a> for the token. (This fixes the case of MathML
    attributes that are not all lowercase.)</p>

<!--XXXSVG
    <p>If the <span>current node</span> is an element in the <span>SVG
    namespace</span>, and the token's tag name is one of the ones in
    the first column of the following table, change the tag name to
    the name given in the corresponding cell in the second
    column. (This fixes the case of SVG elements that are not all
    lowercase.)</p>

    <table>
     <thead>
      <tr> <th> Tag name <th> Element name
     <tbody>
      <tr> <td> <code title="">altglyph</code> <td> <code title="">altGlyph</code>
      <tr> <td> <code title="">altglyphdef</code> <td> <code title="">altGlyphDef</code>
      <tr> <td> <code title="">altglyphitem</code> <td> <code title="">altGlyphItem</code>
      <tr> <td> <code title="">animatecolor</code> <td> <code title="">animateColor</code>
      <tr> <td> <code title="">animatemotion</code> <td> <code title="">animateMotion</code>
      <tr> <td> <code title="">animatetransform</code> <td> <code title="">animateTransform</code>
      <tr> <td> <code title="">clippath</code> <td> <code title="">clipPath</code>
      <tr> <td> <code title="">feblend</code> <td> <code title="">feBlend</code>
      <tr> <td> <code title="">fecolormatrix</code> <td> <code title="">feColorMatrix</code>
      <tr> <td> <code title="">fecomponenttransfer</code> <td> <code title="">feComponentTransfer</code>
      <tr> <td> <code title="">fecomposite</code> <td> <code title="">feComposite</code>
      <tr> <td> <code title="">feconvolvematrix</code> <td> <code title="">feConvolveMatrix</code>
      <tr> <td> <code title="">fediffuselighting</code> <td> <code title="">feDiffuseLighting</code>
      <tr> <td> <code title="">fedisplacementmap</code> <td> <code title="">feDisplacementMap</code>
      <tr> <td> <code title="">fedistantlight</code> <td> <code title="">feDistantLight</code>
      <tr> <td> <code title="">feflood</code> <td> <code title="">feFlood</code>
      <tr> <td> <code title="">fefunca</code> <td> <code title="">feFuncA</code>
      <tr> <td> <code title="">fefuncb</code> <td> <code title="">feFuncB</code>
      <tr> <td> <code title="">fefuncg</code> <td> <code title="">feFuncG</code>
      <tr> <td> <code title="">fefuncr</code> <td> <code title="">feFuncR</code>
      <tr> <td> <code title="">fegaussianblur</code> <td> <code title="">feGaussianBlur</code>
      <tr> <td> <code title="">feimage</code> <td> <code title="">feImage</code>
      <tr> <td> <code title="">femerge</code> <td> <code title="">feMerge</code>
      <tr> <td> <code title="">femergenode</code> <td> <code title="">feMergeNode</code>
      <tr> <td> <code title="">femorphology</code> <td> <code title="">feMorphology</code>
      <tr> <td> <code title="">feoffset</code> <td> <code title="">feOffset</code>
      <tr> <td> <code title="">fepointlight</code> <td> <code title="">fePointLight</code>
      <tr> <td> <code title="">fespecularlighting</code> <td> <code title="">feSpecularLighting</code>
      <tr> <td> <code title="">fespotlight</code> <td> <code title="">feSpotLight</code>
      <tr> <td> <code title="">fetile</code> <td> <code title="">feTile</code>
      <tr> <td> <code title="">feturbulence</code> <td> <code title="">feTurbulence</code>
      <tr> <td> <code title="">foreignobject</code> <td> <code title="">foreignObject</code>
      <tr> <td> <code title="">glyphref</code> <td> <code title="">glyphRef</code>
      <tr> <td> <code title="">lineargradient</code> <td> <code title="">linearGradient</code>
      <tr> <td> <code title="">radialgradient</code> <td> <code title="">radialGradient</code>
      <!- -<tr> <td> <code title="">solidcolor</code> <td> <code title="">solidColor</code> (SVG 1.2)- ->
      <tr> <td> <code title="">textpath</code> <td> <code title="">textPath</code>
    </table>

    <p>If the <span>current node</span> is an element in the <span>SVG
    namespace</span>, <span>adjust SVG attributes</span> for the
    token.  (This fixes the case of SVG attributes that are not all
    lowercase.)</p>
-->
    <p><a href=#adjust-foreign-attributes>Adjust foreign attributes</a> for the token.  (This
    fixes the use of namespaced attributes, in particular XLink in
    SVG.)</p>

    <p><a href=#insert-a-foreign-element>Insert a foreign element</a> for the token, in the
    same namespace as the <a href=#current-node>current node</a>.</p>

    <p>If the token has its <i>self-closing flag</i> set, pop the
    <a href=#current-node>current node</a> off the <a href=#stack-of-open-elements>stack of open
    elements</a> and <a href=#acknowledge-self-closing-flag title="acknowledge self-closing
    flag">acknowledge the token's <i>self-closing flag</i></a>.</p>

   </dd>

  </dl><h5 id=parsing-main-afterbody><span class=secno>8.2.5.21 </span>The "<dfn title="insertion mode: after body">after body</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-afterbody title="insertion
  mode: after body">after body</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the first element in
    the <a href=#stack-of-open-elements>stack of open elements</a> (the <code><a href=#the-html-element>html</a></code>
    element), with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end tag whose tag name is "html"</dt>
   <dd>

    <p>If the parser was originally created as part of the <a href=#html-fragment-parsing-algorithm>HTML
    fragment parsing algorithm</a>, this is a <a href=#parse-error>parse
    error</a>; ignore the token.  (<a href=#fragment-case>fragment case</a>)</p>

    <p>Otherwise, switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-after-after-body-insertion-mode title="insertion mode: after after body">after after
    body</a>".</p>

   </dd>

   <dt>An end-of-file token</dt>
   <dd>
    <p><a href=#stop-parsing>Stop parsing</a>.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>

    <p><a href=#parse-error>Parse error</a>. Switch the <a href=#insertion-mode>insertion
    mode</a> to "<a href=#parsing-main-inbody title="insertion mode: in body">in
    body</a>" and reprocess the token.</p>

   </dd>

  </dl><h5 id=parsing-main-inframeset><span class=secno>8.2.5.22 </span>The "<dfn title="insertion mode: in frameset">in frameset</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-inframeset title="insertion
  mode: in frameset">in frameset</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p><a href=#insert-a-character title="insert a character">Insert the character</a> into
    the <a href=#current-node>current node</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "frameset"</dt>
   <dd>
    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.</p>
   </dd>

   <dt>An end tag whose tag name is "frameset"</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is the root
    <code><a href=#the-html-element>html</a></code> element, then this is a <a href=#parse-error>parse
    error</a>; ignore the token. (<a href=#fragment-case>fragment
    case</a>)</p>

    <p>Otherwise, pop the <a href=#current-node>current node</a> from the
    <a href=#stack-of-open-elements>stack of open elements</a>.</p>

    <p>If the parser was <em>not</em> originally created as part
    of the <a href=#html-fragment-parsing-algorithm>HTML fragment parsing algorithm</a>
    (<a href=#fragment-case>fragment case</a>), and the <a href=#current-node>current
    node</a> is no longer a <code>frameset</code> element, then
    switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#parsing-main-afterframeset title="insertion mode: after frameset">after
    frameset</a>".</p>

   </dd>

   <dt>A start tag whose tag name is "frame"</dt>
   <dd>

    <p><a href=#insert-an-html-element>Insert an HTML element</a> for the token.
    Immediately pop the <a href=#current-node>current node</a> off the
    <a href=#stack-of-open-elements>stack of open elements</a>.</p>

    <p><a href=#acknowledge-self-closing-flag title="acknowledge self-closing flag">Acknowledge the
    token's <i>self-closing flag</i></a>, if it is set.</p>

   </dd>

   <dt>A start tag whose tag name is "noframes"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end-of-file token</dt>
   <dd>

    <p>If the <a href=#current-node>current node</a> is not the root
    <code><a href=#the-html-element>html</a></code> element, then this is a <a href=#parse-error>parse
    error</a>.</p>

    <p class=note>It can only be the <a href=#current-node>current node</a> in
    the <a href=#fragment-case>fragment case</a>.</p>

    <p><a href=#stop-parsing>Stop parsing</a>.</p>

   </dd>

   <dt>Anything else</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

  </dl><h5 id=parsing-main-afterframeset><span class=secno>8.2.5.23 </span>The "<dfn title="insertion mode: after frameset">after frameset</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#parsing-main-afterframeset title="insertion
  mode: after frameset">after frameset</a>", tokens must be handled as follows:</p>

  <!-- due to rules in the "in frameset" mode, this can't be entered in the fragment case -->
  <dl class=switch><dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dd>
    <p><a href=#insert-a-character title="insert a character">Insert the character</a> into
    the <a href=#current-node>current node</a>.</p>
   </dd>

   <dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <a href=#current-node>current
    node</a> with the <code title="">data</code> attribute set to
    the data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end tag whose tag name is "html"</dt>
   <dd>
    <p>Switch the <a href=#insertion-mode>insertion mode</a> to "<a href=#the-after-after-frameset-insertion-mode title="insertion mode: after after frameset">after after
    frameset</a>".</p>
   </dd>

   <dt>A start tag whose tag name is "noframes"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end-of-file token</dt>
   <dd>
    <p><a href=#stop-parsing>Stop parsing</a>.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

  </dl><p class=XXX>This doesn't handle UAs that don't support
  frames, or that do support frames but want to show the NOFRAMES
  content. Supporting the former is easy; supporting the latter is
  harder.</p>


  <h5 id=the-after-after-body-insertion-mode><span class=secno>8.2.5.24 </span>The "<dfn title="insertion mode: after after body">after after body</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#the-after-after-body-insertion-mode title="insertion
  mode: after after body">after after body</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <code>Document</code>
    object with the <code title="">data</code> attribute set to the
    data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end-of-file token</dt>
   <dd>
    <p><a href=#stop-parsing>Stop parsing</a>.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Switch the <a href=#insertion-mode>insertion mode</a>
    to "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" and
    reprocess the token.</p>
   </dd>

  </dl><h5 id=the-after-after-frameset-insertion-mode><span class=secno>8.2.5.25 </span>The "<dfn title="insertion mode: after after frameset">after after frameset</dfn>" insertion mode</h5>

  <p>When the <a href=#insertion-mode>insertion mode</a> is "<a href=#the-after-after-frameset-insertion-mode title="insertion
  mode: after after frameset">after after frameset</a>", tokens must be handled as follows:</p>

  <dl class=switch><dt>A comment token</dt>
   <dd>
    <p>Append a <code>Comment</code> node to the <code>Document</code>
    object with the <code title="">data</code> attribute set to the
    data given in the comment token.</p>
   </dd>

   <dt>A DOCTYPE token</dt>
   <dt>A character token that is one of U+0009 CHARACTER
   TABULATION, U+000A LINE FEED (LF), U+000C FORM FEED (FF),
   <!--U+000D CARRIAGE RETURN (CR),--> or U+0020 SPACE</dt>
   <dt>A start tag whose tag name is "html"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inbody title="insertion mode: in body">in body</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>An end-of-file token</dt>
   <dd>
    <p><a href=#stop-parsing>Stop parsing</a>.</p>
   </dd>

   <dt>A start tag whose tag name is "noframes"</dt>
   <dd>
    <p>Process the token <a href=#using-the-rules-for>using the rules for</a> the "<a href=#parsing-main-inhead title="insertion mode: in head">in head</a>" <a href=#insertion-mode>insertion
    mode</a>.</p>
   </dd>

   <dt>Anything else</dt>
   <dd>
    <p><a href=#parse-error>Parse error</a>. Ignore the token.</p>
   </dd>

  </dl><h4 id=the-end><span class=secno>8.2.6 </span>The end</h4>

  <p>Once the user agent <dfn id=stop-parsing title="stop parsing">stops parsing</dfn>
  the document, the user agent must follow the steps in this
  section.</p>

  <p>First, the <a href=#current-document-readiness>current document readiness</a> must be set to
  "interactive".</p>

  <p>Then, the rules for <a href=#when-a-script-completes-loading>when a script completes loading</a>
  start applying (script execution is no longer managed by the
  parser).</p>

  <p>If any of the scripts in the <a href=#list-of-scripts-that-will-execute-as-soon-as-possible>list of scripts that will
  execute as soon as possible</a> have <a href=#completed-loading>completed
  loading</a>, or if the <a href=#list-of-scripts-that-will-execute-asynchronously>list of scripts that will execute
  asynchronously</a> is not empty and the first script in that list
  has <a href=#completed-loading>completed loading</a>, then the user agent must act as
  if those scripts just completed loading, following the rules given
  for that in the <code><a href=#script>script</a></code> element definition.</p>

  <p>Then, if the <a href=#list-of-scripts-that-will-execute-when-the-document-has-finished-parsing>list of scripts that will execute when the
  document has finished parsing</a> is not empty, and the first
  item in this list has already <a href=#completed-loading>completed loading</a>, then
  the user agent must act as if that script just finished loading.</p>

  <p>By this point, there will be no scripts that have loaded but have
  not yet been executed.</p>

  <p>The user agent must then <a href=#fire-a-simple-event>fire a simple event</a> called
  <code title=event-DOMContentLoaded>DOMContentLoaded</code> at the
  <code>Document</code>.</p>

  <p>Once everything that <dfn id=delay-the-load-event title="delay the load event">delays the
  load event</dfn> has completed, the user agent must run the
  following steps:</p>

  <ol><li><a href=#queue-a-task>Queue a task</a> to set the <a href=#current-document-readiness>current document
   readiness</a> to "complete".</li>

   <li>If the <code>Document</code> is in a <a href=#browsing-context>browsing
   context</a>, then <a href=#queue-a-task>queue a task</a> to <a href=#fire-a-load-event title="fire
   a load event">fire a <code title=event-load>load</code>
   event</a> at the <code>Document</code>'s <code><a href=#window>Window</a></code>
   object.</li>

   <li>If the <code>Document</code> has a <a href=#pending-state-object>pending state
   object</a>, then <a href=#queue-a-task>queue a task</a> to fire a <code title=event-popstate><a href=#event-popstate>popstate</a></code> event in no namespace on the
   <code>Document</code>'s <code><a href=#window>Window</a></code> object using the
   <code><a href=#popstateevent>PopStateEvent</a></code> interface, with the <code title=dom-PopStateEvent-state><a href=#dom-popstateevent-state>state</a></code> attribute set to the
   current value of the <a href=#pending-state-object>pending state object</a>. This event
   must bubble but not be cancelable and has no default action.</li>

  </ol><p>The <a href=#task-source>task source</a> for these tasks is the <a href=#dom-manipulation-task-source>DOM
  manipulation task source</a>.</p>

  <!-- XXX make sure things "delay the load event" -->

  <p class=XXX>delaying the load event for things like image
  loads allows for intranet port scans (even without
  javascript!). Should we really encode that into the spec?</p>


<!--XXX need to handle
http://lxr.mozilla.org/mozilla/source/parser/htmlparser/src/CNavDTD.cpp#2354
2354           // Don't open transient styles if it makes the stack deep, bug 58917.
-->

<!--XXX
http://lxr.mozilla.org/mozilla/source/parser/htmlparser/src/nsHTMLTokenizer.cpp#749
-->

<!--
see also  CTextToken::ConsumeCharacterData()  for CDATA parsing?

1212                      1  Here's a tricky case from bug 22596:  <h5><li><h5>
1213                         How do we know that the 2nd <h5> should close the <LI> rather than nest inside the <LI>?
1214                         (Afterall, the <h5> is a legal child of the <LI>).
1215               
1216                         The way you know is that there is no root between the two, so the <h5> binds more
1217                         tightly to the 1st <h5> than to the <LI>.
1218                      2.  Also, bug 6148 shows this case: <SPAN><DIV><SPAN>
1219                         From this case we learned not to execute this logic if the parent is a block.
1220                     
1221                      3. Fix for 26583
1222                         Ex. <A href=foo.html><B>foo<A href-bar.html>bar</A></B></A>  <- A legal HTML
1223                         In the above example clicking on "foo" or "bar" should link to
1224                         foo.html or bar.html respectively. That is, the inner <A> should be informed
1225                         about the presence of an open <A> above <B>..so that the inner <A> can close out
1226                         the outer <A>. The following code does it for us.
1227                      
1228                      4. Fix for 27865 [ similer to 22596 ]. Ex: <DL><DD><LI>one<DD><LI>two
 - http://lxr.mozilla.org/mozilla/source/parser/htmlparser/src/CNavDTD.cpp#1211

815             // Here's a problem.  If theTag is legal in here, we don't move it
816             // out.  So if we're moving stuff out of here, the parent of theTag
817             // gets closed at this point.  But some things are legal
818             // _everywhere_ and hence would effectively close out misplaced
819             // content in tables.  This is undesirable, so treat them as
820             // illegal here so they'll be shipped out with their parents and
821             // siblings.  See bug 40855 for an explanation (that bug was for
822             // comments, but the same issues arise with whitespace, newlines,
823             // noscript, etc).  Script is special, though.  Shipping it out
824             // breaks document.write stuff.  See bug 243064.
 - http://lxr.mozilla.org/mozilla/source/parser/htmlparser/src/CNavDTD.cpp#825


1326     /**************************************************************************************
1327      *
1328      * Now a little code to deal with bug #49687 (crash when layout stack gets too deep)
1329      * I've also opened this up to any container (not just inlines): re bug 55095
1330      * Improved to handle bug 55980 (infinite loop caused when DEPTH is exceeded and
1331      * </P> is encountered by itself (<P>) is continuously produced.
1332      *
1333      **************************************************************************************/

1912               // Oh boy!! we found a "stray" tag. Nav4.x and IE introduce line break in
1913               // such cases. So, let's simulate that effect for compatibility.
1914               // Ex. <html><body>Hello</P>There</body></html>
http://lxr.mozilla.org/mozilla/source/parser/htmlparser/src/CNavDTD.cpp#1912

http://lxr.mozilla.org/seamonkey/search?string=nested
/parser/htmlparser/src/CNavDTD.cpp, line 791 - * 2. <CENTER><DL><DT><A><CENTER> allow nested <CENTER>
/parser/htmlparser/src/CNavDTD.cpp, line 792 - * 3. <TABLE><TR><TD><TABLE>... allow nested <TABLE>
/parser/htmlparser/src/CNavDTD.cpp, line 2562 - // Discard nested forms - bug 72639
/parser/htmlparser/src/nsElementTable.cpp, line 1453 - * 2. <CENTER><DL><DT><A><CENTER> allow nested <CENTER>
/parser/htmlparser/src/nsElementTable.cpp, line 1454 - * 3. <TABLE><TR><TD><TABLE>... allow nested <TABLE>
/parser/htmlparser/src/nsElementTable.cpp, line 1901 - // Ex: <H1><LI><H1><LI>. Inner LI has the potential of getting nested
-->


  <h4 id=coercing-an-html-dom-into-an-infoset><span class=secno>8.2.7 </span>Coercing an HTML DOM into an infoset</h4>

  <p>When an application uses an <a href=#html-parser>HTML parser</a> in
  conjunction with an XML pipeline, it is possible that the
  constructed DOM is not compatible with the XML tool chain in certain
  subtle ways. For example, an XML toolchain might not be able to
  represent attributes with the name <code title="">xmlns</code>,
  since they conflict with the Namespaces in XML syntax. There is also
  some data that the <a href=#html-parser>HTML parser</a> generates that isn't
  included in the DOM itself. This section specifies some rules for
  handling these issues.</p>

  <p>If the XML API being used doesn't support DOCTYPEs, the tool may
  drop DOCTYPEs altogether.</p>

  <p>If the XML API doesn't support attributes in no namespace that
  are named "<code title="">xmlns</code>", attributes whose names
  start with "<code title="">xmlns:</code>", or attributes in the
  <a href=#xmlns-namespace>XMLNS namespace</a>, then the tool may drop such
  attributes.</p>

  <p>The tool may annotate the output with any namespace declarations
  required for proper operation.</p>

  <p>If the XML API being used restricts the allowable characters in
  the local names of elements and attributes, then the tool may map
  all element and attribute local names that the API wouldn't support
  to a set of names that <em>are</em> allowed, by replacing any
  character that isn't supported with the uppercase letter U and the
  six digits of the character's Unicode codepoint when expressed in
  hexadecimal, using digits 0-9 and capital letters A-F as the
  symbols, in increasing numeric order.</p>

  <p class=example>For example, the element name <code title="">foo&lt;bar</code>, which can be output by the <a href=#html-parser>HTML
  parser</a>, though it is neither a legal HTML element name nor a
  well-formed XML element name, would be converted into <code title="">fooU00003Cbar</code>, which <em>is</em> a well-formed XML
  element name (though it's still not legal in HTML by any means).</p>

  <p class=example>As another example, consider the attribute
  <code>xlink:href</code>. Used on a MathML element, it becomes, after
  being <a href=#adjust-foreign-attributes title="adjust foreign attributes">adjusted</a>, an
  attribute with a prefix "<code title="">xlink</code>" and a local
  name "<code title="">href</code>". However, used on an HTML element,
  it becomes an attribute with no prefix and the local name "<code title="">xlink:href</code>", which is not a valid NCName, and thus
  might not be accepted by an XML API. It could thus get converted,
  becoming "<code title="">xlinkU00003Ahref</code>".</p>

  <p class=note>The resulting names from this conversion
  conveniently can't clash with any attribute generated by the
  <a href=#html-parser>HTML parser</a>, since those are all either lowercase or
  those listed in the <a href=#adjust-foreign-attributes>adjust foreign attributes</a>
  algorithm's table.</p>

  <p>If the XML API restricts comments from having two consecutive
  U+002D HYPHEN-MINUS characters (--), the tool may insert a single
  U+0020 SPACE character between any such offending characters.</p>

  <p>If the XML API restricts comments from ending in a
  U+002D HYPHEN-MINUS character (-), the tool may insert a single
  U+0020 SPACE character at the end of such comments.</p>

  <p>If the XML API restricts allowed characters in character data,
  the tool may replace any U+000C FORM FEED (FF) character with a
  U+0020 SPACE character, and any other literal non-XML character with
  a U+FFFD REPLACEMENT CHARACTER.</p>

  <p>If the tool has no way to convey out-of-band information, then
  the tool may drop the following information:</p>

  <ul><li>Whether the document is set to <i><a href=#no-quirks-mode>no quirks mode</a></i>,
   <i><a href=#limited-quirks-mode>limited quirks mode</a></i>, or <i><a href=#quirks-mode>quirks mode</a></i></li>

   <li>The association between form controls and forms that aren't
   their nearest <code><a href=#the-form-element>form</a></code> element ancestor (use of the
   <a href=#form-element-pointer><code>form</code> element pointer</a> in the parser)</li>

  </ul><p class=note>The mutations allowed by this section apply
  <em>after</em> the <a href=#html-parser>HTML parser</a>'s rules have been
  applied. For example, a <code title="">&lt;a::&gt;</code> start tag
  will be closed by a <code title="">&lt;/a::&gt;</code> end tag, and
  never by a <code title="">&lt;/aU00003AU00003A&gt;</code> end tag, even
  if the user agent is using the rules above to then generate an
  actual element in the DOM with the name <code title="">aU00003AU00003A</code> for that start tag.</p>



  <h3 id=namespaces><span class=secno>8.3 </span>Namespaces</h3>

  <p>The <dfn id=html-namespace-0>HTML namespace</dfn> is: <code>http://www.w3.org/1999/xhtml</code></p>

  <p>The <dfn id=mathml-namespace>MathML namespace</dfn> is: <code>http://www.w3.org/1998/Math/MathML</code></p>

  <p>The <dfn id=svg-namespace>SVG namespace</dfn> is: <code>http://www.w3.org/2000/svg</code></p>

  <p>The <dfn id=xlink-namespace>XLink namespace</dfn> is: <code>http://www.w3.org/1999/xlink</code></p>

  <p>The <dfn id=xml-namespace>XML namespace</dfn> is: <code>http://www.w3.org/XML/1998/namespace</code></p>

  <p>The <dfn id=xmlns-namespace>XMLNS namespace</dfn> is: <code>http://www.w3.org/2000/xmlns/</code></p>



  <h3 id=serializing-html-fragments><span class=secno>8.4 </span>Serializing HTML fragments</h3>

  <p>The following steps form the <dfn id=html-fragment-serialization-algorithm>HTML fragment serialization
  algorithm</dfn>. The algorithm takes as input a DOM
  <code>Element</code> or <code>Document</code>, referred to as <var title="">the node</var>, and either returns a string or raises an
  exception.</p>

  <p class=note>This algorithm serializes the <em>children</em> of
  the node being serialized, not the node itself.</p>

  <ol><li><p>Let <var title="">s</var> be a string, and initialize it to
   the empty string.</li>

   <li>

    <p>For each child node of <var title="">the node</var>, in
    <a href=#tree-order>tree order</a>, run the following steps:

    <ol><li><p>Let <var title="">current node</var> be the child node
     being processed.</li>

     <li>

      <p>Append the appropriate string from the following list to
      <var title="">s</var>:</p>

      <dl class=switch><dt>If <var title="">current node</var> is an <code title="">Element</code></dt>

       <dd>

        <p>Append a U+003C LESS-THAN SIGN (<code title="">&lt;</code>)
        character, followed by the element's tag name. (For nodes
        created by the <a href=#html-parser>HTML parser</a>, <code title="">Document.createElement()</code>, or <code title="">Document.renameNode()</code>, the tag name will be
        lowercase.)</p>

        <p>For each attribute that the element has, append a U+0020
        SPACE character, the attribute's name (which, for attributes
        set by the <a href=#html-parser>HTML parser</a> or by <code title="">Element.setAttributeNode()</code> or <code title="">Element.setAttribute()</code>, will be lowercase), a
        U+003D EQUALS SIGN (<code title="">=</code>) character, a
        U+0022 QUOTATION MARK (<code title="">"</code>)
        character, the attribute's value, <a href=#escapingString title="escaping a
        string">escaped as described below</a> in <i>attribute
        mode</i>, and a second U+0022 QUOTATION MARK (<code title="">"</code>) character.</p>

        <p>While the exact order of attributes is UA-defined, and may
        depend on factors such as the order that the attributes were
        given in the original markup, the sort order must be stable,
        such that consecutive invocations of this algorithm serialize an
        element's attributes in the same order.</p>

        <p>Append a U+003E GREATER-THAN SIGN (<code title="">&gt;</code>)
        character.</p>

        <p>If <var title="">current node</var> is an
        <code><a href=#the-area-element>area</a></code>, <code><a href=#the-base-element>base</a></code>, <code>basefont</code>,
        <code>bgsound</code>, <code><a href=#the-br-element>br</a></code>, <code><a href=#the-col-element>col</a></code>,
        <code><a href=#the-embed-element>embed</a></code>, <code>frame</code>, <code><a href=#the-hr-element>hr</a></code>,
        <code><a href=#the-img-element>img</a></code>, <code><a href=#the-input-element>input</a></code>, <code><a href=#the-link-element>link</a></code>,
        <code><a href=#meta>meta</a></code>, <code><a href=#the-param-element>param</a></code>, <code>spacer</code>, or
        <code>wbr</code> element, then continue on to the next child
        node at this point.</p> <!-- also, i guess: image, isindex,
        and keygen, but we don't list those because we don't consider
        those "elements", more "macros", and thus we should never
        serialize them --> <!-- XXX when we get around to it, add
        eventsource -->

        <p>If <var title="">current node</var> is a <code><a href=#the-pre-element>pre</a></code>,
        <code><a href=#the-textarea-element>textarea</a></code>, or <code>listing</code> element, append
        a U+000A LINE FEED (LF) character.</p>

        <p>Append the value of running the <a href=#html-fragment-serialization-algorithm>HTML fragment
        serialization algorithm</a> on the <var title="">current
        node</var> element (thus recursing into this algorithm for
        that element), followed by a U+003C LESS-THAN SIGN (<code title="">&lt;</code>) character, a U+002F SOLIDUS (<code title="">/</code>) character, the element's tag name again,
        and finally a U+003E GREATER-THAN SIGN (<code title="">&gt;</code>) character.</p>

       </dd>


       <dt>If <var title="">current node</var> is a <code title="">Text</code> or <code title="">CDATASection</code>
       node</dt>

       <dd>

        <p>If one of the ancestors of <var title="">current node</var>
        is a <code><a href=#the-style-element>style</a></code>, <code><a href=#script>script</a></code>,
        <code>xmp</code>, <code><a href=#the-iframe-element>iframe</a></code>, <code>noembed</code>,
        <code>noframes</code>, <code><a href=#the-noscript-element>noscript</a></code>, or
        <code>plaintext</code> element, then append the value of <var title="">current node</var>'s <code title="">data</code> DOM
        attribute literally.</p> <!-- note about noscript: we're
        assuming here that scripting is enabled. If this algorithm is
        used with scripting disabled, this won't work right. XXX This
        might affect calling innerHTML on nodes in a document that is
        being designMode'd -->

        <p>Otherwise, append the value of <var title="">current
        node</var>'s <code title="">data</code> DOM attribute, <a href=#escapingString title="escaping a string">escaped as described
        below</a>.</p>

       </dd>


       <dt>If <var title="">current node</var> is a <code title="">Comment</code></dt>

       <dd>

        <p>Append the literal string <code>&lt;!--</code> (U+003C
        LESS-THAN SIGN, U+0021 EXCLAMATION MARK, U+002D HYPHEN-MINUS,
        U+002D HYPHEN-MINUS), followed by the value of <var title="">current node</var>'s <code title="">data</code> DOM
        attribute, followed by the literal string <code>--&gt;</code>
        (U+002D HYPHEN-MINUS, U+002D HYPHEN-MINUS, U+003E GREATER-THAN
        SIGN).</p>

       </dd>


       <dt>If <var title="">current node</var> is a <code title="">ProcessingInstruction</code></dt>

       <dd>

        <p>Append the literal string <code>&lt;?</code> (U+003C
        LESS-THAN SIGN, U+003F QUESTION MARK), followed by the value
        of <var title="">current node</var>'s <code title="">target</code> DOM attribute, followed by a single
        U+0020 SPACE character, followed by the value of <var title="">current node</var>'s <code title="">data</code> DOM
        attribute, followed by a single U+003E GREATER-THAN SIGN
        character ('&gt;').</p>

       </dd>


       <dt>If <var title="">current node</var> is a <code title="">DocumentType</code></dt>

       <dd>

        <p>Append the literal string <code>&lt;!DOCTYPE</code> (U+003C
        LESS-THAN SIGN, U+0021 EXCLAMATION MARK, U+0044 LATIN CAPITAL
        LETTER D, U+004F LATIN CAPITAL LETTER O, U+0043 LATIN CAPITAL
        LETTER C, U+0054 LATIN CAPITAL LETTER T, U+0059 LATIN CAPITAL
        LETTER Y, U+0050 LATIN CAPITAL LETTER P, U+0045 LATIN CAPITAL
        LETTER E), followed by a space (U+0020 SPACE), followed by the
        value of <var title="">current node</var>'s <code title="">name</code> DOM attribute, followed by the literal
        string <code>&gt;</code> (U+003E GREATER-THAN SIGN).</p>

       </dd>


      </dl><p>Other node types (e.g. <code title="">Attr</code>) cannot
      occur as children of elements. If, despite this, they somehow do
      occur, this algorithm must raise an
      <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception.</p>

     </li>

    </ol></li>

   <li><p>The result of the algorithm is the string <var title="">s</var>.</li>

  </ol><p><dfn id=escapingString>Escaping a string</dfn> (for the
  purposes of the algorithm above) consists of replacing any
  occurrences of the "<code title="">&amp;</code>" character by the
  string "<code title="">&amp;amp;</code>", any occurrences of the
  U+00A0 NO-BREAK SPACE character by the string "<code title="">&amp;nbsp;</code>", and, if the algorithm was invoked in
  the <i>attribute mode</i>, any occurrences of the "<code title="">"</code>" character by the string "<code title="">&amp;quot;</code>", or if it was not, any occurrences of
  the "<code title="">&lt;</code>" character by the string "<code title="">&amp;lt;</code>", any occurrences of the "<code title="">&gt;</code>" character by the string "<code title="">&amp;gt;</code>".</p>

  <p class=note>Entity reference nodes are <a href=#entity-references>assumed to be expanded</a> by the user
  agent, and are therefore not covered in the algorithm above.</p>

  <p class=note>It is possible that the output of this algorithm, if
  parsed with an <a href=#html-parser>HTML parser</a>, will not return the
  original tree structure. For instance, if a <code><a href=#the-textarea-element>textarea</a></code>
  element to which a <code title="">Comment</code> node has been
  appended is serialized and the output is then reparsed, the comment
  will end up being displayed in the text field. Similarly, if, as a
  result of DOM manipulation, an element contains a comment that
  contains the literal string "<code title="">--&gt;</code>", then
  when the result of serializing the element is parsed, the comment
  will be truncated at that point and the rest of the comment will be
  interpreted as markup. More examples would be making a
  <code><a href=#script>script</a></code> element contain a text node with the text string
  "<code>&lt;/script&gt;</code>", or having a <code><a href=#the-p-element>p</a></code> element that
  contains a <code><a href=#the-ul-element>ul</a></code> element (as the <code><a href=#the-ul-element>ul</a></code> element's
  <a href=#syntax-start-tag title=syntax-start-tag>start tag</a> would imply the end
  tag for the <code><a href=#the-p-element>p</a></code>).</p>


  <h3 id=parsing-html-fragments><span class=secno>8.5 </span>Parsing HTML fragments</h3>

  <p>The following steps form the <dfn id=html-fragment-parsing-algorithm>HTML fragment parsing
  algorithm</dfn>. The algorithm optionally takes as input an
  <code>Element</code> node, referred to as the <var title="">context</var> element, which gives the context for the
  parser, as well as <var title="">input</var>, a string to parse, and
  returns a list of zero or more nodes.</p>

  <p class=note>Parts marked <dfn id=fragment-case>fragment case</dfn> in algorithms
  in the parser section are parts that only occur if the parser was
  created for the purposes of this algorithm (and with a <var title="">context</var> element). The algorithms have been annotated
  with such markings for informational purposes only; such markings
  have no normative weight. If it is possible for a condition
  described as a <a href=#fragment-case>fragment case</a> to occur even when the
  parser wasn't created for the purposes of handling this algorithm,
  then that is an error in the specification.</p>

  <ol><li>

    <p>Create a new <code>Document</code> node, and mark it as being
    an <a href=#html-documents title="HTML documents">HTML document</a>.</p>

   </li>

   <li>

    <p>Create a new <a href=#html-parser>HTML parser</a>, and associate it with
    the just created <code>Document</code> node.</p>

   </li>

   <li>

    <p>If there is a <var title="">context</var> element, run these
    substeps:</p>

    <ol><li>

      <p>Set the <a href=#html-parser>HTML parser</a>'s <a href=#tokenization>tokenization</a>
      stage's <a href=#content-model-flag>content model flag</a> according to the <var title="">context</var> element, as follows:</p>

      <dl class=switch><dt>If it is a <code><a href=#the-title-element>title</a></code> or <code><a href=#the-textarea-element>textarea</a></code>
       element</dt>

       <dd>Set the <a href=#content-model-flag>content model flag</a> to
       the RCDATA state.</dd>


       <dt>If it is a <code><a href=#the-style-element>style</a></code>, <code><a href=#script>script</a></code>,
       <code>xmp</code>, <code><a href=#the-iframe-element>iframe</a></code>, <code>noembed</code>, or
       <code>noframes</code> element</dt>

       <dd>Set the <a href=#content-model-flag>content model flag</a> to
       the CDATA state.</dd>


       <dt>If it is a <code><a href=#the-noscript-element>noscript</a></code> element</dt>

       <dd>If the <a href=#scripting-flag>scripting flag</a> is enabled, set the
       <a href=#content-model-flag>content model flag</a> to the CDATA
       state. Otherwise, set the <a href=#content-model-flag>content model flag</a> to the
       PCDATA state.</dd>


       <dt>If it is a <code>plaintext</code> element</dt>

       <dd>Set the <a href=#content-model-flag>content model flag</a> to
       PLAINTEXT.</dd>


       <dt>Otherwise</dt>

       <dd>Leave the <a href=#content-model-flag>content model flag</a> in the PCDATA
       state.</dd>

      </dl></li>

     <li>

      <p>Let <var title="">root</var> be a new <code><a href=#the-html-element>html</a></code> element
      with no attributes.</p>

     </li>

     <li>

      <p>Append the element <var title="">root</var> to the
      <code>Document</code> node created above.</p>

     </li>

     <li>

      <p>Set up the parser's <a href=#stack-of-open-elements>stack of open elements</a> so that
      it contains just the single element <var title="">root</var>.</p>

     </li>

     <li>

      <p><a href=#reset-the-insertion-mode-appropriately title="reset the insertion mode appropriately">Reset the
      parser's insertion mode appropriately</a>.</p>

      <p class=note>The parser will reference the <var title="">context</var> element as part of that algorithm.</p>

     </li>

     <li>

      <p>Set the parser's <a href=#form-element-pointer><code>form</code> element pointer</a>
      to the nearest node to the <var title="">context</var> element
      that is a <code><a href=#the-form-element>form</a></code> element (going straight up the
      ancestor chain, and including the element itself, if it is a
      <code><a href=#the-form-element>form</a></code> element), or, if there is no such
      <code><a href=#the-form-element>form</a></code> element, to null.</p>

     </li>

    </ol></li>

   <li>

    <p>Place into the <a href=#the-input-stream>input stream</a> for the <a href=#html-parser>HTML
    parser</a> just created the <var title="">input</var>. The
    encoding <a href=#concept-encoding-confidence title=concept-encoding-confidence>confidence</a> is
    <i>irrelevant</i>.</p>

   </li>

   <li>

    <p>Start the parser and let it run until it has consumed all the
    characters just inserted into the input stream.</p>

   </li>

   <li>

    <p>If there is a <var title="">context</var> element, return the
    child nodes of <var title="">root</var>, in <a href=#tree-order>tree
    order</a>.</p>

    <p>Otherwise, return the children of the <code>Document</code>
    object, in <a href=#tree-order>tree order</a>.</p>

   </li>

  </ol><h3 id=named-character-references><span class=secno>8.6 </span><dfn>Named character references</dfn></h3>

  <p>This table lists the character reference names that are supported
  by HTML, and the code points to which they refer. It is referenced
  by the previous sections.</p>

  <div class=tall-and-narrow>
   <table><thead><tr><th> Name </th> <th> Character </th> </thead><tbody>
     <tr> <td> <code title="">AElig;</code> </td> <td> U+000C6 </td> </tr>
     <tr> <td> <code title="">AElig</code> </td> <td> U+000C6 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">AMP;</code> </td> <td> U+00026 </td> </tr>
     <tr> <td> <code title="">AMP</code> </td> <td> U+00026 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Aacute;</code> </td> <td> U+000C1 </td> </tr>
     <tr> <td> <code title="">Aacute</code> </td> <td> U+000C1 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Abreve;</code> </td> <td> U+00102 </td> </tr>
     <tr> <td> <code title="">Acirc;</code> </td> <td> U+000C2 </td> </tr>
     <tr> <td> <code title="">Acirc</code> </td> <td> U+000C2 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Acy;</code> </td> <td> U+00410 </td> </tr>
     <tr> <td> <code title="">Afr;</code> </td> <td> U+1D504 </td> </tr>
     <tr> <td> <code title="">Agrave;</code> </td> <td> U+000C0 </td> </tr>
     <tr> <td> <code title="">Agrave</code> </td> <td> U+000C0 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Alpha;</code> </td> <td> U+00391 </td> </tr>
     <tr> <td> <code title="">Amacr;</code> </td> <td> U+00100 </td> </tr>
     <tr> <td> <code title="">And;</code> </td> <td> U+02A53 </td> </tr>
     <tr> <td> <code title="">Aogon;</code> </td> <td> U+00104 </td> </tr>
     <tr> <td> <code title="">Aopf;</code> </td> <td> U+1D538 </td> </tr>
     <tr> <td> <code title="">ApplyFunction;</code> </td> <td> U+02061 </td> </tr>
     <tr> <td> <code title="">Aring;</code> </td> <td> U+000C5 </td> </tr>
     <tr> <td> <code title="">Aring</code> </td> <td> U+000C5 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ascr;</code> </td> <td> U+1D49C </td> </tr>
     <tr> <td> <code title="">Assign;</code> </td> <td> U+02254 </td> </tr>
     <tr> <td> <code title="">Atilde;</code> </td> <td> U+000C3 </td> </tr>
     <tr> <td> <code title="">Atilde</code> </td> <td> U+000C3 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Auml;</code> </td> <td> U+000C4 </td> </tr>
     <tr> <td> <code title="">Auml</code> </td> <td> U+000C4 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Backslash;</code> </td> <td> U+02216 </td> </tr>
     <tr> <td> <code title="">Barv;</code> </td> <td> U+02AE7 </td> </tr>
     <tr> <td> <code title="">Barwed;</code> </td> <td> U+02306 </td> </tr>
     <tr> <td> <code title="">Bcy;</code> </td> <td> U+00411 </td> </tr>
     <tr> <td> <code title="">Because;</code> </td> <td> U+02235 </td> </tr>
     <tr> <td> <code title="">Bernoullis;</code> </td> <td> U+0212C </td> </tr>
     <tr> <td> <code title="">Beta;</code> </td> <td> U+00392 </td> </tr>
     <tr> <td> <code title="">Bfr;</code> </td> <td> U+1D505 </td> </tr>
     <tr> <td> <code title="">Bopf;</code> </td> <td> U+1D539 </td> </tr>
     <tr> <td> <code title="">Breve;</code> </td> <td> U+002D8 </td> </tr>
     <tr> <td> <code title="">Bscr;</code> </td> <td> U+0212C </td> </tr>
     <tr> <td> <code title="">Bumpeq;</code> </td> <td> U+0224E </td> </tr>
     <tr> <td> <code title="">CHcy;</code> </td> <td> U+00427 </td> </tr>
     <tr> <td> <code title="">COPY;</code> </td> <td> U+000A9 </td> </tr>
     <tr> <td> <code title="">COPY</code> </td> <td> U+000A9 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Cacute;</code> </td> <td> U+00106 </td> </tr>
     <tr> <td> <code title="">Cap;</code> </td> <td> U+022D2 </td> </tr>
     <tr> <td> <code title="">CapitalDifferentialD;</code> </td> <td> U+02145 </td> </tr>
     <tr> <td> <code title="">Cayleys;</code> </td> <td> U+0212D </td> </tr>
     <tr> <td> <code title="">Ccaron;</code> </td> <td> U+0010C </td> </tr>
     <tr> <td> <code title="">Ccedil;</code> </td> <td> U+000C7 </td> </tr>
     <tr> <td> <code title="">Ccedil</code> </td> <td> U+000C7 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ccirc;</code> </td> <td> U+00108 </td> </tr>
     <tr> <td> <code title="">Cconint;</code> </td> <td> U+02230 </td> </tr>
     <tr> <td> <code title="">Cdot;</code> </td> <td> U+0010A </td> </tr>
     <tr> <td> <code title="">Cedilla;</code> </td> <td> U+000B8 </td> </tr>
     <tr> <td> <code title="">CenterDot;</code> </td> <td> U+000B7 </td> </tr>
     <tr> <td> <code title="">Cfr;</code> </td> <td> U+0212D </td> </tr>
     <tr> <td> <code title="">Chi;</code> </td> <td> U+003A7 </td> </tr>
     <tr> <td> <code title="">CircleDot;</code> </td> <td> U+02299 </td> </tr>
     <tr> <td> <code title="">CircleMinus;</code> </td> <td> U+02296 </td> </tr>
     <tr> <td> <code title="">CirclePlus;</code> </td> <td> U+02295 </td> </tr>
     <tr> <td> <code title="">CircleTimes;</code> </td> <td> U+02297 </td> </tr>
     <tr> <td> <code title="">ClockwiseContourIntegral;</code> </td> <td> U+02232 </td> </tr>
     <tr> <td> <code title="">CloseCurlyDoubleQuote;</code> </td> <td> U+0201D </td> </tr>
     <tr> <td> <code title="">CloseCurlyQuote;</code> </td> <td> U+02019 </td> </tr>
     <tr> <td> <code title="">Colon;</code> </td> <td> U+02237 </td> </tr>
     <tr> <td> <code title="">Colone;</code> </td> <td> U+02A74 </td> </tr>
     <tr> <td> <code title="">Congruent;</code> </td> <td> U+02261 </td> </tr>
     <tr> <td> <code title="">Conint;</code> </td> <td> U+0222F </td> </tr>
     <tr> <td> <code title="">ContourIntegral;</code> </td> <td> U+0222E </td> </tr>
     <tr> <td> <code title="">Copf;</code> </td> <td> U+02102 </td> </tr>
     <tr> <td> <code title="">Coproduct;</code> </td> <td> U+02210 </td> </tr>
     <tr> <td> <code title="">CounterClockwiseContourIntegral;</code> </td> <td> U+02233 </td> </tr>
     <tr> <td> <code title="">Cross;</code> </td> <td> U+02A2F </td> </tr>
     <tr> <td> <code title="">Cscr;</code> </td> <td> U+1D49E </td> </tr>
     <tr> <td> <code title="">Cup;</code> </td> <td> U+022D3 </td> </tr>
     <tr> <td> <code title="">CupCap;</code> </td> <td> U+0224D </td> </tr>
     <tr> <td> <code title="">DD;</code> </td> <td> U+02145 </td> </tr>
     <tr> <td> <code title="">DDotrahd;</code> </td> <td> U+02911 </td> </tr>
     <tr> <td> <code title="">DJcy;</code> </td> <td> U+00402 </td> </tr>
     <tr> <td> <code title="">DScy;</code> </td> <td> U+00405 </td> </tr>
     <tr> <td> <code title="">DZcy;</code> </td> <td> U+0040F </td> </tr>
     <tr> <td> <code title="">Dagger;</code> </td> <td> U+02021 </td> </tr>
     <tr> <td> <code title="">Darr;</code> </td> <td> U+021A1 </td> </tr>
     <tr> <td> <code title="">Dashv;</code> </td> <td> U+02AE4 </td> </tr>
     <tr> <td> <code title="">Dcaron;</code> </td> <td> U+0010E </td> </tr>
     <tr> <td> <code title="">Dcy;</code> </td> <td> U+00414 </td> </tr>
     <tr> <td> <code title="">Del;</code> </td> <td> U+02207 </td> </tr>
     <tr> <td> <code title="">Delta;</code> </td> <td> U+00394 </td> </tr>
     <tr> <td> <code title="">Dfr;</code> </td> <td> U+1D507 </td> </tr>
     <tr> <td> <code title="">DiacriticalAcute;</code> </td> <td> U+000B4 </td> </tr>
     <tr> <td> <code title="">DiacriticalDot;</code> </td> <td> U+002D9 </td> </tr>
     <tr> <td> <code title="">DiacriticalDoubleAcute;</code> </td> <td> U+002DD </td> </tr>
     <tr> <td> <code title="">DiacriticalGrave;</code> </td> <td> U+00060 </td> </tr>
     <tr> <td> <code title="">DiacriticalTilde;</code> </td> <td> U+002DC </td> </tr>
     <tr> <td> <code title="">Diamond;</code> </td> <td> U+022C4 </td> </tr>
     <tr> <td> <code title="">DifferentialD;</code> </td> <td> U+02146 </td> </tr>
     <tr> <td> <code title="">Dopf;</code> </td> <td> U+1D53B </td> </tr>
     <tr> <td> <code title="">Dot;</code> </td> <td> U+000A8 </td> </tr>
     <tr> <td> <code title="">DotDot;</code> </td> <td> U+020DC </td> </tr>
     <tr> <td> <code title="">DotEqual;</code> </td> <td> U+02250 </td> </tr>
     <tr> <td> <code title="">DoubleContourIntegral;</code> </td> <td> U+0222F </td> </tr>
     <tr> <td> <code title="">DoubleDot;</code> </td> <td> U+000A8 </td> </tr>
     <tr> <td> <code title="">DoubleDownArrow;</code> </td> <td> U+021D3 </td> </tr>
     <tr> <td> <code title="">DoubleLeftArrow;</code> </td> <td> U+021D0 </td> </tr>
     <tr> <td> <code title="">DoubleLeftRightArrow;</code> </td> <td> U+021D4 </td> </tr>
     <tr> <td> <code title="">DoubleLeftTee;</code> </td> <td> U+02AE4 </td> </tr>
     <tr> <td> <code title="">DoubleLongLeftArrow;</code> </td> <td> U+027F8 </td> </tr>
     <tr> <td> <code title="">DoubleLongLeftRightArrow;</code> </td> <td> U+027FA </td> </tr>
     <tr> <td> <code title="">DoubleLongRightArrow;</code> </td> <td> U+027F9 </td> </tr>
     <tr> <td> <code title="">DoubleRightArrow;</code> </td> <td> U+021D2 </td> </tr>
     <tr> <td> <code title="">DoubleRightTee;</code> </td> <td> U+022A8 </td> </tr>
     <tr> <td> <code title="">DoubleUpArrow;</code> </td> <td> U+021D1 </td> </tr>
     <tr> <td> <code title="">DoubleUpDownArrow;</code> </td> <td> U+021D5 </td> </tr>
     <tr> <td> <code title="">DoubleVerticalBar;</code> </td> <td> U+02225 </td> </tr>
     <tr> <td> <code title="">DownArrow;</code> </td> <td> U+02193 </td> </tr>
     <tr> <td> <code title="">DownArrowBar;</code> </td> <td> U+02913 </td> </tr>
     <tr> <td> <code title="">DownArrowUpArrow;</code> </td> <td> U+021F5 </td> </tr>
     <tr> <td> <code title="">DownBreve;</code> </td> <td> U+00311 </td> </tr>
     <tr> <td> <code title="">DownLeftRightVector;</code> </td> <td> U+02950 </td> </tr>
     <tr> <td> <code title="">DownLeftTeeVector;</code> </td> <td> U+0295E </td> </tr>
     <tr> <td> <code title="">DownLeftVector;</code> </td> <td> U+021BD </td> </tr>
     <tr> <td> <code title="">DownLeftVectorBar;</code> </td> <td> U+02956 </td> </tr>
     <tr> <td> <code title="">DownRightTeeVector;</code> </td> <td> U+0295F </td> </tr>
     <tr> <td> <code title="">DownRightVector;</code> </td> <td> U+021C1 </td> </tr>
     <tr> <td> <code title="">DownRightVectorBar;</code> </td> <td> U+02957 </td> </tr>
     <tr> <td> <code title="">DownTee;</code> </td> <td> U+022A4 </td> </tr>
     <tr> <td> <code title="">DownTeeArrow;</code> </td> <td> U+021A7 </td> </tr>
     <tr> <td> <code title="">Downarrow;</code> </td> <td> U+021D3 </td> </tr>
     <tr> <td> <code title="">Dscr;</code> </td> <td> U+1D49F </td> </tr>
     <tr> <td> <code title="">Dstrok;</code> </td> <td> U+00110 </td> </tr>
     <tr> <td> <code title="">ENG;</code> </td> <td> U+0014A </td> </tr>
     <tr> <td> <code title="">ETH;</code> </td> <td> U+000D0 </td> </tr>
     <tr> <td> <code title="">ETH</code> </td> <td> U+000D0 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Eacute;</code> </td> <td> U+000C9 </td> </tr>
     <tr> <td> <code title="">Eacute</code> </td> <td> U+000C9 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ecaron;</code> </td> <td> U+0011A </td> </tr>
     <tr> <td> <code title="">Ecirc;</code> </td> <td> U+000CA </td> </tr>
     <tr> <td> <code title="">Ecirc</code> </td> <td> U+000CA </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ecy;</code> </td> <td> U+0042D </td> </tr>
     <tr> <td> <code title="">Edot;</code> </td> <td> U+00116 </td> </tr>
     <tr> <td> <code title="">Efr;</code> </td> <td> U+1D508 </td> </tr>
     <tr> <td> <code title="">Egrave;</code> </td> <td> U+000C8 </td> </tr>
     <tr> <td> <code title="">Egrave</code> </td> <td> U+000C8 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Element;</code> </td> <td> U+02208 </td> </tr>
     <tr> <td> <code title="">Emacr;</code> </td> <td> U+00112 </td> </tr>
     <tr> <td> <code title="">EmptySmallSquare;</code> </td> <td> U+025FB </td> </tr>
     <tr> <td> <code title="">EmptyVerySmallSquare;</code> </td> <td> U+025AB </td> </tr>
     <tr> <td> <code title="">Eogon;</code> </td> <td> U+00118 </td> </tr>
     <tr> <td> <code title="">Eopf;</code> </td> <td> U+1D53C </td> </tr>
     <tr> <td> <code title="">Epsilon;</code> </td> <td> U+00395 </td> </tr>
     <tr> <td> <code title="">Equal;</code> </td> <td> U+02A75 </td> </tr>
     <tr> <td> <code title="">EqualTilde;</code> </td> <td> U+02242 </td> </tr>
     <tr> <td> <code title="">Equilibrium;</code> </td> <td> U+021CC </td> </tr>
     <tr> <td> <code title="">Escr;</code> </td> <td> U+02130 </td> </tr>
     <tr> <td> <code title="">Esim;</code> </td> <td> U+02A73 </td> </tr>
     <tr> <td> <code title="">Eta;</code> </td> <td> U+00397 </td> </tr>
     <tr> <td> <code title="">Euml;</code> </td> <td> U+000CB </td> </tr>
     <tr> <td> <code title="">Euml</code> </td> <td> U+000CB </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Exists;</code> </td> <td> U+02203 </td> </tr>
     <tr> <td> <code title="">ExponentialE;</code> </td> <td> U+02147 </td> </tr>
     <tr> <td> <code title="">Fcy;</code> </td> <td> U+00424 </td> </tr>
     <tr> <td> <code title="">Ffr;</code> </td> <td> U+1D509 </td> </tr>
     <tr> <td> <code title="">FilledSmallSquare;</code> </td> <td> U+025FC </td> </tr>
     <tr> <td> <code title="">FilledVerySmallSquare;</code> </td> <td> U+025AA </td> </tr>
     <tr> <td> <code title="">Fopf;</code> </td> <td> U+1D53D </td> </tr>
     <tr> <td> <code title="">ForAll;</code> </td> <td> U+02200 </td> </tr>
     <tr> <td> <code title="">Fouriertrf;</code> </td> <td> U+02131 </td> </tr>
     <tr> <td> <code title="">Fscr;</code> </td> <td> U+02131 </td> </tr>
     <tr> <td> <code title="">GJcy;</code> </td> <td> U+00403 </td> </tr>
     <tr> <td> <code title="">GT;</code> </td> <td> U+0003E </td> </tr>
     <tr> <td> <code title="">GT</code> </td> <td> U+0003E </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Gamma;</code> </td> <td> U+00393 </td> </tr>
     <tr> <td> <code title="">Gammad;</code> </td> <td> U+003DC </td> </tr>
     <tr> <td> <code title="">Gbreve;</code> </td> <td> U+0011E </td> </tr>
     <tr> <td> <code title="">Gcedil;</code> </td> <td> U+00122 </td> </tr>
     <tr> <td> <code title="">Gcirc;</code> </td> <td> U+0011C </td> </tr>
     <tr> <td> <code title="">Gcy;</code> </td> <td> U+00413 </td> </tr>
     <tr> <td> <code title="">Gdot;</code> </td> <td> U+00120 </td> </tr>
     <tr> <td> <code title="">Gfr;</code> </td> <td> U+1D50A </td> </tr>
     <tr> <td> <code title="">Gg;</code> </td> <td> U+022D9 </td> </tr>
     <tr> <td> <code title="">Gopf;</code> </td> <td> U+1D53E </td> </tr>
     <tr> <td> <code title="">GreaterEqual;</code> </td> <td> U+02265 </td> </tr>
     <tr> <td> <code title="">GreaterEqualLess;</code> </td> <td> U+022DB </td> </tr>
     <tr> <td> <code title="">GreaterFullEqual;</code> </td> <td> U+02267 </td> </tr>
     <tr> <td> <code title="">GreaterGreater;</code> </td> <td> U+02AA2 </td> </tr>
     <tr> <td> <code title="">GreaterLess;</code> </td> <td> U+02277 </td> </tr>
     <tr> <td> <code title="">GreaterSlantEqual;</code> </td> <td> U+02A7E </td> </tr>
     <tr> <td> <code title="">GreaterTilde;</code> </td> <td> U+02273 </td> </tr>
     <tr> <td> <code title="">Gscr;</code> </td> <td> U+1D4A2 </td> </tr>
     <tr> <td> <code title="">Gt;</code> </td> <td> U+0226B </td> </tr>
     <tr> <td> <code title="">HARDcy;</code> </td> <td> U+0042A </td> </tr>
     <tr> <td> <code title="">Hacek;</code> </td> <td> U+002C7 </td> </tr>
     <tr> <td> <code title="">Hat;</code> </td> <td> U+0005E </td> </tr>
     <tr> <td> <code title="">Hcirc;</code> </td> <td> U+00124 </td> </tr>
     <tr> <td> <code title="">Hfr;</code> </td> <td> U+0210C </td> </tr>
     <tr> <td> <code title="">HilbertSpace;</code> </td> <td> U+0210B </td> </tr>
     <tr> <td> <code title="">Hopf;</code> </td> <td> U+0210D </td> </tr>
     <tr> <td> <code title="">HorizontalLine;</code> </td> <td> U+02500 </td> </tr>
     <tr> <td> <code title="">Hscr;</code> </td> <td> U+0210B </td> </tr>
     <tr> <td> <code title="">Hstrok;</code> </td> <td> U+00126 </td> </tr>
     <tr> <td> <code title="">HumpDownHump;</code> </td> <td> U+0224E </td> </tr>
     <tr> <td> <code title="">HumpEqual;</code> </td> <td> U+0224F </td> </tr>
     <tr> <td> <code title="">IEcy;</code> </td> <td> U+00415 </td> </tr>
     <tr> <td> <code title="">IJlig;</code> </td> <td> U+00132 </td> </tr>
     <tr> <td> <code title="">IOcy;</code> </td> <td> U+00401 </td> </tr>
     <tr> <td> <code title="">Iacute;</code> </td> <td> U+000CD </td> </tr>
     <tr> <td> <code title="">Iacute</code> </td> <td> U+000CD </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Icirc;</code> </td> <td> U+000CE </td> </tr>
     <tr> <td> <code title="">Icirc</code> </td> <td> U+000CE </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Icy;</code> </td> <td> U+00418 </td> </tr>
     <tr> <td> <code title="">Idot;</code> </td> <td> U+00130 </td> </tr>
     <tr> <td> <code title="">Ifr;</code> </td> <td> U+02111 </td> </tr>
     <tr> <td> <code title="">Igrave;</code> </td> <td> U+000CC </td> </tr>
     <tr> <td> <code title="">Igrave</code> </td> <td> U+000CC </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Im;</code> </td> <td> U+02111 </td> </tr>
     <tr> <td> <code title="">Imacr;</code> </td> <td> U+0012A </td> </tr>
     <tr> <td> <code title="">ImaginaryI;</code> </td> <td> U+02148 </td> </tr>
     <tr> <td> <code title="">Implies;</code> </td> <td> U+021D2 </td> </tr>
     <tr> <td> <code title="">Int;</code> </td> <td> U+0222C </td> </tr>
     <tr> <td> <code title="">Integral;</code> </td> <td> U+0222B </td> </tr>
     <tr> <td> <code title="">Intersection;</code> </td> <td> U+022C2 </td> </tr>
     <tr> <td> <code title="">InvisibleComma;</code> </td> <td> U+02063 </td> </tr>
     <tr> <td> <code title="">InvisibleTimes;</code> </td> <td> U+02062 </td> </tr>
     <tr> <td> <code title="">Iogon;</code> </td> <td> U+0012E </td> </tr>
     <tr> <td> <code title="">Iopf;</code> </td> <td> U+1D540 </td> </tr>
     <tr> <td> <code title="">Iota;</code> </td> <td> U+00399 </td> </tr>
     <tr> <td> <code title="">Iscr;</code> </td> <td> U+02110 </td> </tr>
     <tr> <td> <code title="">Itilde;</code> </td> <td> U+00128 </td> </tr>
     <tr> <td> <code title="">Iukcy;</code> </td> <td> U+00406 </td> </tr>
     <tr> <td> <code title="">Iuml;</code> </td> <td> U+000CF </td> </tr>
     <tr> <td> <code title="">Iuml</code> </td> <td> U+000CF </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Jcirc;</code> </td> <td> U+00134 </td> </tr>
     <tr> <td> <code title="">Jcy;</code> </td> <td> U+00419 </td> </tr>
     <tr> <td> <code title="">Jfr;</code> </td> <td> U+1D50D </td> </tr>
     <tr> <td> <code title="">Jopf;</code> </td> <td> U+1D541 </td> </tr>
     <tr> <td> <code title="">Jscr;</code> </td> <td> U+1D4A5 </td> </tr>
     <tr> <td> <code title="">Jsercy;</code> </td> <td> U+00408 </td> </tr>
     <tr> <td> <code title="">Jukcy;</code> </td> <td> U+00404 </td> </tr>
     <tr> <td> <code title="">KHcy;</code> </td> <td> U+00425 </td> </tr>
     <tr> <td> <code title="">KJcy;</code> </td> <td> U+0040C </td> </tr>
     <tr> <td> <code title="">Kappa;</code> </td> <td> U+0039A </td> </tr>
     <tr> <td> <code title="">Kcedil;</code> </td> <td> U+00136 </td> </tr>
     <tr> <td> <code title="">Kcy;</code> </td> <td> U+0041A </td> </tr>
     <tr> <td> <code title="">Kfr;</code> </td> <td> U+1D50E </td> </tr>
     <tr> <td> <code title="">Kopf;</code> </td> <td> U+1D542 </td> </tr>
     <tr> <td> <code title="">Kscr;</code> </td> <td> U+1D4A6 </td> </tr>
     <tr> <td> <code title="">LJcy;</code> </td> <td> U+00409 </td> </tr>
     <tr> <td> <code title="">LT;</code> </td> <td> U+0003C </td> </tr>
     <tr> <td> <code title="">LT</code> </td> <td> U+0003C </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Lacute;</code> </td> <td> U+00139 </td> </tr>
     <tr> <td> <code title="">Lambda;</code> </td> <td> U+0039B </td> </tr>
     <tr> <td> <code title="">Lang;</code> </td> <td> U+027EA </td> </tr>
     <tr> <td> <code title="">Laplacetrf;</code> </td> <td> U+02112 </td> </tr>
     <tr> <td> <code title="">Larr;</code> </td> <td> U+0219E </td> </tr>
     <tr> <td> <code title="">Lcaron;</code> </td> <td> U+0013D </td> </tr>
     <tr> <td> <code title="">Lcedil;</code> </td> <td> U+0013B </td> </tr>
     <tr> <td> <code title="">Lcy;</code> </td> <td> U+0041B </td> </tr>
     <tr> <td> <code title="">LeftAngleBracket;</code> </td> <td> U+027E8 </td> </tr>
     <tr> <td> <code title="">LeftArrow;</code> </td> <td> U+02190 </td> </tr>
     <tr> <td> <code title="">LeftArrowBar;</code> </td> <td> U+021E4 </td> </tr>
     <tr> <td> <code title="">LeftArrowRightArrow;</code> </td> <td> U+021C6 </td> </tr>
     <tr> <td> <code title="">LeftCeiling;</code> </td> <td> U+02308 </td> </tr>
     <tr> <td> <code title="">LeftDoubleBracket;</code> </td> <td> U+027E6 </td> </tr>
     <tr> <td> <code title="">LeftDownTeeVector;</code> </td> <td> U+02961 </td> </tr>
     <tr> <td> <code title="">LeftDownVector;</code> </td> <td> U+021C3 </td> </tr>
     <tr> <td> <code title="">LeftDownVectorBar;</code> </td> <td> U+02959 </td> </tr>
     <tr> <td> <code title="">LeftFloor;</code> </td> <td> U+0230A </td> </tr>
     <tr> <td> <code title="">LeftRightArrow;</code> </td> <td> U+02194 </td> </tr>
     <tr> <td> <code title="">LeftRightVector;</code> </td> <td> U+0294E </td> </tr>
     <tr> <td> <code title="">LeftTee;</code> </td> <td> U+022A3 </td> </tr>
     <tr> <td> <code title="">LeftTeeArrow;</code> </td> <td> U+021A4 </td> </tr>
     <tr> <td> <code title="">LeftTeeVector;</code> </td> <td> U+0295A </td> </tr>
     <tr> <td> <code title="">LeftTriangle;</code> </td> <td> U+022B2 </td> </tr>
     <tr> <td> <code title="">LeftTriangleBar;</code> </td> <td> U+029CF </td> </tr>
     <tr> <td> <code title="">LeftTriangleEqual;</code> </td> <td> U+022B4 </td> </tr>
     <tr> <td> <code title="">LeftUpDownVector;</code> </td> <td> U+02951 </td> </tr>
     <tr> <td> <code title="">LeftUpTeeVector;</code> </td> <td> U+02960 </td> </tr>
     <tr> <td> <code title="">LeftUpVector;</code> </td> <td> U+021BF </td> </tr>
     <tr> <td> <code title="">LeftUpVectorBar;</code> </td> <td> U+02958 </td> </tr>
     <tr> <td> <code title="">LeftVector;</code> </td> <td> U+021BC </td> </tr>
     <tr> <td> <code title="">LeftVectorBar;</code> </td> <td> U+02952 </td> </tr>
     <tr> <td> <code title="">Leftarrow;</code> </td> <td> U+021D0 </td> </tr>
     <tr> <td> <code title="">Leftrightarrow;</code> </td> <td> U+021D4 </td> </tr>
     <tr> <td> <code title="">LessEqualGreater;</code> </td> <td> U+022DA </td> </tr>
     <tr> <td> <code title="">LessFullEqual;</code> </td> <td> U+02266 </td> </tr>
     <tr> <td> <code title="">LessGreater;</code> </td> <td> U+02276 </td> </tr>
     <tr> <td> <code title="">LessLess;</code> </td> <td> U+02AA1 </td> </tr>
     <tr> <td> <code title="">LessSlantEqual;</code> </td> <td> U+02A7D </td> </tr>
     <tr> <td> <code title="">LessTilde;</code> </td> <td> U+02272 </td> </tr>
     <tr> <td> <code title="">Lfr;</code> </td> <td> U+1D50F </td> </tr>
     <tr> <td> <code title="">Ll;</code> </td> <td> U+022D8 </td> </tr>
     <tr> <td> <code title="">Lleftarrow;</code> </td> <td> U+021DA </td> </tr>
     <tr> <td> <code title="">Lmidot;</code> </td> <td> U+0013F </td> </tr>
     <tr> <td> <code title="">LongLeftArrow;</code> </td> <td> U+027F5 </td> </tr>
     <tr> <td> <code title="">LongLeftRightArrow;</code> </td> <td> U+027F7 </td> </tr>
     <tr> <td> <code title="">LongRightArrow;</code> </td> <td> U+027F6 </td> </tr>
     <tr> <td> <code title="">Longleftarrow;</code> </td> <td> U+027F8 </td> </tr>
     <tr> <td> <code title="">Longleftrightarrow;</code> </td> <td> U+027FA </td> </tr>
     <tr> <td> <code title="">Longrightarrow;</code> </td> <td> U+027F9 </td> </tr>
     <tr> <td> <code title="">Lopf;</code> </td> <td> U+1D543 </td> </tr>
     <tr> <td> <code title="">LowerLeftArrow;</code> </td> <td> U+02199 </td> </tr>
     <tr> <td> <code title="">LowerRightArrow;</code> </td> <td> U+02198 </td> </tr>
     <tr> <td> <code title="">Lscr;</code> </td> <td> U+02112 </td> </tr>
     <tr> <td> <code title="">Lsh;</code> </td> <td> U+021B0 </td> </tr>
     <tr> <td> <code title="">Lstrok;</code> </td> <td> U+00141 </td> </tr>
     <tr> <td> <code title="">Lt;</code> </td> <td> U+0226A </td> </tr>
     <tr> <td> <code title="">Map;</code> </td> <td> U+02905 </td> </tr>
     <tr> <td> <code title="">Mcy;</code> </td> <td> U+0041C </td> </tr>
     <tr> <td> <code title="">MediumSpace;</code> </td> <td> U+0205F </td> </tr>
     <tr> <td> <code title="">Mellintrf;</code> </td> <td> U+02133 </td> </tr>
     <tr> <td> <code title="">Mfr;</code> </td> <td> U+1D510 </td> </tr>
     <tr> <td> <code title="">MinusPlus;</code> </td> <td> U+02213 </td> </tr>
     <tr> <td> <code title="">Mopf;</code> </td> <td> U+1D544 </td> </tr>
     <tr> <td> <code title="">Mscr;</code> </td> <td> U+02133 </td> </tr>
     <tr> <td> <code title="">Mu;</code> </td> <td> U+0039C </td> </tr>
     <tr> <td> <code title="">NJcy;</code> </td> <td> U+0040A </td> </tr>
     <tr> <td> <code title="">Nacute;</code> </td> <td> U+00143 </td> </tr>
     <tr> <td> <code title="">Ncaron;</code> </td> <td> U+00147 </td> </tr>
     <tr> <td> <code title="">Ncedil;</code> </td> <td> U+00145 </td> </tr>
     <tr> <td> <code title="">Ncy;</code> </td> <td> U+0041D </td> </tr>
     <tr> <td> <code title="">NegativeMediumSpace;</code> </td> <td> U+0200B </td> </tr>
     <tr> <td> <code title="">NegativeThickSpace;</code> </td> <td> U+0200B </td> </tr>
     <tr> <td> <code title="">NegativeThinSpace;</code> </td> <td> U+0200B </td> </tr>
     <tr> <td> <code title="">NegativeVeryThinSpace;</code> </td> <td> U+0200B </td> </tr>
     <tr> <td> <code title="">NestedGreaterGreater;</code> </td> <td> U+0226B </td> </tr>
     <tr> <td> <code title="">NestedLessLess;</code> </td> <td> U+0226A </td> </tr>
     <tr> <td> <code title="">NewLine;</code> </td> <td> U+0000A </td> </tr>
     <tr> <td> <code title="">Nfr;</code> </td> <td> U+1D511 </td> </tr>
     <tr> <td> <code title="">NoBreak;</code> </td> <td> U+02060 </td> </tr>
     <tr> <td> <code title="">NonBreakingSpace;</code> </td> <td> U+000A0 </td> </tr>
     <tr> <td> <code title="">Nopf;</code> </td> <td> U+02115 </td> </tr>
     <tr> <td> <code title="">Not;</code> </td> <td> U+02AEC </td> </tr>
     <tr> <td> <code title="">NotCongruent;</code> </td> <td> U+02262 </td> </tr>
     <tr> <td> <code title="">NotCupCap;</code> </td> <td> U+0226D </td> </tr>
     <tr> <td> <code title="">NotDoubleVerticalBar;</code> </td> <td> U+02226 </td> </tr>
     <tr> <td> <code title="">NotElement;</code> </td> <td> U+02209 </td> </tr>
     <tr> <td> <code title="">NotEqual;</code> </td> <td> U+02260 </td> </tr>
     <tr> <td> <code title="">NotExists;</code> </td> <td> U+02204 </td> </tr>
     <tr> <td> <code title="">NotGreater;</code> </td> <td> U+0226F </td> </tr>
     <tr> <td> <code title="">NotGreaterEqual;</code> </td> <td> U+02271 </td> </tr>
     <tr> <td> <code title="">NotGreaterLess;</code> </td> <td> U+02279 </td> </tr>
     <tr> <td> <code title="">NotGreaterTilde;</code> </td> <td> U+02275 </td> </tr>
     <tr> <td> <code title="">NotLeftTriangle;</code> </td> <td> U+022EA </td> </tr>
     <tr> <td> <code title="">NotLeftTriangleEqual;</code> </td> <td> U+022EC </td> </tr>
     <tr> <td> <code title="">NotLess;</code> </td> <td> U+0226E </td> </tr>
     <tr> <td> <code title="">NotLessEqual;</code> </td> <td> U+02270 </td> </tr>
     <tr> <td> <code title="">NotLessGreater;</code> </td> <td> U+02278 </td> </tr>
     <tr> <td> <code title="">NotLessTilde;</code> </td> <td> U+02274 </td> </tr>
     <tr> <td> <code title="">NotPrecedes;</code> </td> <td> U+02280 </td> </tr>
     <tr> <td> <code title="">NotPrecedesSlantEqual;</code> </td> <td> U+022E0 </td> </tr>
     <tr> <td> <code title="">NotReverseElement;</code> </td> <td> U+0220C </td> </tr>
     <tr> <td> <code title="">NotRightTriangle;</code> </td> <td> U+022EB </td> </tr>
     <tr> <td> <code title="">NotRightTriangleEqual;</code> </td> <td> U+022ED </td> </tr>
     <tr> <td> <code title="">NotSquareSubsetEqual;</code> </td> <td> U+022E2 </td> </tr>
     <tr> <td> <code title="">NotSquareSupersetEqual;</code> </td> <td> U+022E3 </td> </tr>
     <tr> <td> <code title="">NotSubsetEqual;</code> </td> <td> U+02288 </td> </tr>
     <tr> <td> <code title="">NotSucceeds;</code> </td> <td> U+02281 </td> </tr>
     <tr> <td> <code title="">NotSucceedsSlantEqual;</code> </td> <td> U+022E1 </td> </tr>
     <tr> <td> <code title="">NotSupersetEqual;</code> </td> <td> U+02289 </td> </tr>
     <tr> <td> <code title="">NotTilde;</code> </td> <td> U+02241 </td> </tr>
     <tr> <td> <code title="">NotTildeEqual;</code> </td> <td> U+02244 </td> </tr>
     <tr> <td> <code title="">NotTildeFullEqual;</code> </td> <td> U+02247 </td> </tr>
     <tr> <td> <code title="">NotTildeTilde;</code> </td> <td> U+02249 </td> </tr>
     <tr> <td> <code title="">NotVerticalBar;</code> </td> <td> U+02224 </td> </tr>
     <tr> <td> <code title="">Nscr;</code> </td> <td> U+1D4A9 </td> </tr>
     <tr> <td> <code title="">Ntilde;</code> </td> <td> U+000D1 </td> </tr>
     <tr> <td> <code title="">Ntilde</code> </td> <td> U+000D1 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Nu;</code> </td> <td> U+0039D </td> </tr>
     <tr> <td> <code title="">OElig;</code> </td> <td> U+00152 </td> </tr>
     <tr> <td> <code title="">Oacute;</code> </td> <td> U+000D3 </td> </tr>
     <tr> <td> <code title="">Oacute</code> </td> <td> U+000D3 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ocirc;</code> </td> <td> U+000D4 </td> </tr>
     <tr> <td> <code title="">Ocirc</code> </td> <td> U+000D4 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ocy;</code> </td> <td> U+0041E </td> </tr>
     <tr> <td> <code title="">Odblac;</code> </td> <td> U+00150 </td> </tr>
     <tr> <td> <code title="">Ofr;</code> </td> <td> U+1D512 </td> </tr>
     <tr> <td> <code title="">Ograve;</code> </td> <td> U+000D2 </td> </tr>
     <tr> <td> <code title="">Ograve</code> </td> <td> U+000D2 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Omacr;</code> </td> <td> U+0014C </td> </tr>
     <tr> <td> <code title="">Omega;</code> </td> <td> U+003A9 </td> </tr>
     <tr> <td> <code title="">Omicron;</code> </td> <td> U+0039F </td> </tr>
     <tr> <td> <code title="">Oopf;</code> </td> <td> U+1D546 </td> </tr>
     <tr> <td> <code title="">OpenCurlyDoubleQuote;</code> </td> <td> U+0201C </td> </tr>
     <tr> <td> <code title="">OpenCurlyQuote;</code> </td> <td> U+02018 </td> </tr>
     <tr> <td> <code title="">Or;</code> </td> <td> U+02A54 </td> </tr>
     <tr> <td> <code title="">Oscr;</code> </td> <td> U+1D4AA </td> </tr>
     <tr> <td> <code title="">Oslash;</code> </td> <td> U+000D8 </td> </tr>
     <tr> <td> <code title="">Oslash</code> </td> <td> U+000D8 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Otilde;</code> </td> <td> U+000D5 </td> </tr>
     <tr> <td> <code title="">Otilde</code> </td> <td> U+000D5 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Otimes;</code> </td> <td> U+02A37 </td> </tr>
     <tr> <td> <code title="">Ouml;</code> </td> <td> U+000D6 </td> </tr>
     <tr> <td> <code title="">Ouml</code> </td> <td> U+000D6 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">OverBar;</code> </td> <td> U+000AF </td> </tr>
     <tr> <td> <code title="">OverBrace;</code> </td> <td> U+023DE </td> </tr>
     <tr> <td> <code title="">OverBracket;</code> </td> <td> U+023B4 </td> </tr>
     <tr> <td> <code title="">OverParenthesis;</code> </td> <td> U+023DC </td> </tr>
     <tr> <td> <code title="">PartialD;</code> </td> <td> U+02202 </td> </tr>
     <tr> <td> <code title="">Pcy;</code> </td> <td> U+0041F </td> </tr>
     <tr> <td> <code title="">Pfr;</code> </td> <td> U+1D513 </td> </tr>
     <tr> <td> <code title="">Phi;</code> </td> <td> U+003A6 </td> </tr>
     <tr> <td> <code title="">Pi;</code> </td> <td> U+003A0 </td> </tr>
     <tr> <td> <code title="">PlusMinus;</code> </td> <td> U+000B1 </td> </tr>
     <tr> <td> <code title="">Poincareplane;</code> </td> <td> U+0210C </td> </tr>
     <tr> <td> <code title="">Popf;</code> </td> <td> U+02119 </td> </tr>
     <tr> <td> <code title="">Pr;</code> </td> <td> U+02ABB </td> </tr>
     <tr> <td> <code title="">Precedes;</code> </td> <td> U+0227A </td> </tr>
     <tr> <td> <code title="">PrecedesEqual;</code> </td> <td> U+02AAF </td> </tr>
     <tr> <td> <code title="">PrecedesSlantEqual;</code> </td> <td> U+0227C </td> </tr>
     <tr> <td> <code title="">PrecedesTilde;</code> </td> <td> U+0227E </td> </tr>
     <tr> <td> <code title="">Prime;</code> </td> <td> U+02033 </td> </tr>
     <tr> <td> <code title="">Product;</code> </td> <td> U+0220F </td> </tr>
     <tr> <td> <code title="">Proportion;</code> </td> <td> U+02237 </td> </tr>
     <tr> <td> <code title="">Proportional;</code> </td> <td> U+0221D </td> </tr>
     <tr> <td> <code title="">Pscr;</code> </td> <td> U+1D4AB </td> </tr>
     <tr> <td> <code title="">Psi;</code> </td> <td> U+003A8 </td> </tr>
     <tr> <td> <code title="">QUOT;</code> </td> <td> U+00022 </td> </tr>
     <tr> <td> <code title="">QUOT</code> </td> <td> U+00022 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Qfr;</code> </td> <td> U+1D514 </td> </tr>
     <tr> <td> <code title="">Qopf;</code> </td> <td> U+0211A </td> </tr>
     <tr> <td> <code title="">Qscr;</code> </td> <td> U+1D4AC </td> </tr>
     <tr> <td> <code title="">RBarr;</code> </td> <td> U+02910 </td> </tr>
     <tr> <td> <code title="">REG;</code> </td> <td> U+000AE </td> </tr>
     <tr> <td> <code title="">REG</code> </td> <td> U+000AE </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Racute;</code> </td> <td> U+00154 </td> </tr>
     <tr> <td> <code title="">Rang;</code> </td> <td> U+027EB </td> </tr>
     <tr> <td> <code title="">Rarr;</code> </td> <td> U+021A0 </td> </tr>
     <tr> <td> <code title="">Rarrtl;</code> </td> <td> U+02916 </td> </tr>
     <tr> <td> <code title="">Rcaron;</code> </td> <td> U+00158 </td> </tr>
     <tr> <td> <code title="">Rcedil;</code> </td> <td> U+00156 </td> </tr>
     <tr> <td> <code title="">Rcy;</code> </td> <td> U+00420 </td> </tr>
     <tr> <td> <code title="">Re;</code> </td> <td> U+0211C </td> </tr>
     <tr> <td> <code title="">ReverseElement;</code> </td> <td> U+0220B </td> </tr>
     <tr> <td> <code title="">ReverseEquilibrium;</code> </td> <td> U+021CB </td> </tr>
     <tr> <td> <code title="">ReverseUpEquilibrium;</code> </td> <td> U+0296F </td> </tr>
     <tr> <td> <code title="">Rfr;</code> </td> <td> U+0211C </td> </tr>
     <tr> <td> <code title="">Rho;</code> </td> <td> U+003A1 </td> </tr>
     <tr> <td> <code title="">RightAngleBracket;</code> </td> <td> U+027E9 </td> </tr>
     <tr> <td> <code title="">RightArrow;</code> </td> <td> U+02192 </td> </tr>
     <tr> <td> <code title="">RightArrowBar;</code> </td> <td> U+021E5 </td> </tr>
     <tr> <td> <code title="">RightArrowLeftArrow;</code> </td> <td> U+021C4 </td> </tr>
     <tr> <td> <code title="">RightCeiling;</code> </td> <td> U+02309 </td> </tr>
     <tr> <td> <code title="">RightDoubleBracket;</code> </td> <td> U+027E7 </td> </tr>
     <tr> <td> <code title="">RightDownTeeVector;</code> </td> <td> U+0295D </td> </tr>
     <tr> <td> <code title="">RightDownVector;</code> </td> <td> U+021C2 </td> </tr>
     <tr> <td> <code title="">RightDownVectorBar;</code> </td> <td> U+02955 </td> </tr>
     <tr> <td> <code title="">RightFloor;</code> </td> <td> U+0230B </td> </tr>
     <tr> <td> <code title="">RightTee;</code> </td> <td> U+022A2 </td> </tr>
     <tr> <td> <code title="">RightTeeArrow;</code> </td> <td> U+021A6 </td> </tr>
     <tr> <td> <code title="">RightTeeVector;</code> </td> <td> U+0295B </td> </tr>
     <tr> <td> <code title="">RightTriangle;</code> </td> <td> U+022B3 </td> </tr>
     <tr> <td> <code title="">RightTriangleBar;</code> </td> <td> U+029D0 </td> </tr>
     <tr> <td> <code title="">RightTriangleEqual;</code> </td> <td> U+022B5 </td> </tr>
     <tr> <td> <code title="">RightUpDownVector;</code> </td> <td> U+0294F </td> </tr>
     <tr> <td> <code title="">RightUpTeeVector;</code> </td> <td> U+0295C </td> </tr>
     <tr> <td> <code title="">RightUpVector;</code> </td> <td> U+021BE </td> </tr>
     <tr> <td> <code title="">RightUpVectorBar;</code> </td> <td> U+02954 </td> </tr>
     <tr> <td> <code title="">RightVector;</code> </td> <td> U+021C0 </td> </tr>
     <tr> <td> <code title="">RightVectorBar;</code> </td> <td> U+02953 </td> </tr>
     <tr> <td> <code title="">Rightarrow;</code> </td> <td> U+021D2 </td> </tr>
     <tr> <td> <code title="">Ropf;</code> </td> <td> U+0211D </td> </tr>
     <tr> <td> <code title="">RoundImplies;</code> </td> <td> U+02970 </td> </tr>
     <tr> <td> <code title="">Rrightarrow;</code> </td> <td> U+021DB </td> </tr>
     <tr> <td> <code title="">Rscr;</code> </td> <td> U+0211B </td> </tr>
     <tr> <td> <code title="">Rsh;</code> </td> <td> U+021B1 </td> </tr>
     <tr> <td> <code title="">RuleDelayed;</code> </td> <td> U+029F4 </td> </tr>
     <tr> <td> <code title="">SHCHcy;</code> </td> <td> U+00429 </td> </tr>
     <tr> <td> <code title="">SHcy;</code> </td> <td> U+00428 </td> </tr>
     <tr> <td> <code title="">SOFTcy;</code> </td> <td> U+0042C </td> </tr>
     <tr> <td> <code title="">Sacute;</code> </td> <td> U+0015A </td> </tr>
     <tr> <td> <code title="">Sc;</code> </td> <td> U+02ABC </td> </tr>
     <tr> <td> <code title="">Scaron;</code> </td> <td> U+00160 </td> </tr>
     <tr> <td> <code title="">Scedil;</code> </td> <td> U+0015E </td> </tr>
     <tr> <td> <code title="">Scirc;</code> </td> <td> U+0015C </td> </tr>
     <tr> <td> <code title="">Scy;</code> </td> <td> U+00421 </td> </tr>
     <tr> <td> <code title="">Sfr;</code> </td> <td> U+1D516 </td> </tr>
     <tr> <td> <code title="">ShortDownArrow;</code> </td> <td> U+02193 </td> </tr>
     <tr> <td> <code title="">ShortLeftArrow;</code> </td> <td> U+02190 </td> </tr>
     <tr> <td> <code title="">ShortRightArrow;</code> </td> <td> U+02192 </td> </tr>
     <tr> <td> <code title="">ShortUpArrow;</code> </td> <td> U+02191 </td> </tr>
     <tr> <td> <code title="">Sigma;</code> </td> <td> U+003A3 </td> </tr>
     <tr> <td> <code title="">SmallCircle;</code> </td> <td> U+02218 </td> </tr>
     <tr> <td> <code title="">Sopf;</code> </td> <td> U+1D54A </td> </tr>
     <tr> <td> <code title="">Sqrt;</code> </td> <td> U+0221A </td> </tr>
     <tr> <td> <code title="">Square;</code> </td> <td> U+025A1 </td> </tr>
     <tr> <td> <code title="">SquareIntersection;</code> </td> <td> U+02293 </td> </tr>
     <tr> <td> <code title="">SquareSubset;</code> </td> <td> U+0228F </td> </tr>
     <tr> <td> <code title="">SquareSubsetEqual;</code> </td> <td> U+02291 </td> </tr>
     <tr> <td> <code title="">SquareSuperset;</code> </td> <td> U+02290 </td> </tr>
     <tr> <td> <code title="">SquareSupersetEqual;</code> </td> <td> U+02292 </td> </tr>
     <tr> <td> <code title="">SquareUnion;</code> </td> <td> U+02294 </td> </tr>
     <tr> <td> <code title="">Sscr;</code> </td> <td> U+1D4AE </td> </tr>
     <tr> <td> <code title="">Star;</code> </td> <td> U+022C6 </td> </tr>
     <tr> <td> <code title="">Sub;</code> </td> <td> U+022D0 </td> </tr>
     <tr> <td> <code title="">Subset;</code> </td> <td> U+022D0 </td> </tr>
     <tr> <td> <code title="">SubsetEqual;</code> </td> <td> U+02286 </td> </tr>
     <tr> <td> <code title="">Succeeds;</code> </td> <td> U+0227B </td> </tr>
     <tr> <td> <code title="">SucceedsEqual;</code> </td> <td> U+02AB0 </td> </tr>
     <tr> <td> <code title="">SucceedsSlantEqual;</code> </td> <td> U+0227D </td> </tr>
     <tr> <td> <code title="">SucceedsTilde;</code> </td> <td> U+0227F </td> </tr>
     <tr> <td> <code title="">SuchThat;</code> </td> <td> U+0220B </td> </tr>
     <tr> <td> <code title="">Sum;</code> </td> <td> U+02211 </td> </tr>
     <tr> <td> <code title="">Sup;</code> </td> <td> U+022D1 </td> </tr>
     <tr> <td> <code title="">Superset;</code> </td> <td> U+02283 </td> </tr>
     <tr> <td> <code title="">SupersetEqual;</code> </td> <td> U+02287 </td> </tr>
     <tr> <td> <code title="">Supset;</code> </td> <td> U+022D1 </td> </tr>
     <tr> <td> <code title="">THORN;</code> </td> <td> U+000DE </td> </tr>
     <tr> <td> <code title="">THORN</code> </td> <td> U+000DE </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">TRADE;</code> </td> <td> U+02122 </td> </tr>
     <tr> <td> <code title="">TSHcy;</code> </td> <td> U+0040B </td> </tr>
     <tr> <td> <code title="">TScy;</code> </td> <td> U+00426 </td> </tr>
     <tr> <td> <code title="">Tab;</code> </td> <td> U+00009 </td> </tr>
     <tr> <td> <code title="">Tau;</code> </td> <td> U+003A4 </td> </tr>
     <tr> <td> <code title="">Tcaron;</code> </td> <td> U+00164 </td> </tr>
     <tr> <td> <code title="">Tcedil;</code> </td> <td> U+00162 </td> </tr>
     <tr> <td> <code title="">Tcy;</code> </td> <td> U+00422 </td> </tr>
     <tr> <td> <code title="">Tfr;</code> </td> <td> U+1D517 </td> </tr>
     <tr> <td> <code title="">Therefore;</code> </td> <td> U+02234 </td> </tr>
     <tr> <td> <code title="">Theta;</code> </td> <td> U+00398 </td> </tr>
     <tr> <td> <code title="">ThinSpace;</code> </td> <td> U+02009 </td> </tr>
     <tr> <td> <code title="">Tilde;</code> </td> <td> U+0223C </td> </tr>
     <tr> <td> <code title="">TildeEqual;</code> </td> <td> U+02243 </td> </tr>
     <tr> <td> <code title="">TildeFullEqual;</code> </td> <td> U+02245 </td> </tr>
     <tr> <td> <code title="">TildeTilde;</code> </td> <td> U+02248 </td> </tr>
     <tr> <td> <code title="">Topf;</code> </td> <td> U+1D54B </td> </tr>
     <tr> <td> <code title="">TripleDot;</code> </td> <td> U+020DB </td> </tr>
     <tr> <td> <code title="">Tscr;</code> </td> <td> U+1D4AF </td> </tr>
     <tr> <td> <code title="">Tstrok;</code> </td> <td> U+00166 </td> </tr>
     <tr> <td> <code title="">Uacute;</code> </td> <td> U+000DA </td> </tr>
     <tr> <td> <code title="">Uacute</code> </td> <td> U+000DA </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Uarr;</code> </td> <td> U+0219F </td> </tr>
     <tr> <td> <code title="">Uarrocir;</code> </td> <td> U+02949 </td> </tr>
     <tr> <td> <code title="">Ubrcy;</code> </td> <td> U+0040E </td> </tr>
     <tr> <td> <code title="">Ubreve;</code> </td> <td> U+0016C </td> </tr>
     <tr> <td> <code title="">Ucirc;</code> </td> <td> U+000DB </td> </tr>
     <tr> <td> <code title="">Ucirc</code> </td> <td> U+000DB </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ucy;</code> </td> <td> U+00423 </td> </tr>
     <tr> <td> <code title="">Udblac;</code> </td> <td> U+00170 </td> </tr>
     <tr> <td> <code title="">Ufr;</code> </td> <td> U+1D518 </td> </tr>
     <tr> <td> <code title="">Ugrave;</code> </td> <td> U+000D9 </td> </tr>
     <tr> <td> <code title="">Ugrave</code> </td> <td> U+000D9 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Umacr;</code> </td> <td> U+0016A </td> </tr>
     <tr> <td> <code title="">UnderBar;</code> </td> <td> U+00332 </td> </tr>
     <tr> <td> <code title="">UnderBrace;</code> </td> <td> U+023DF </td> </tr>
     <tr> <td> <code title="">UnderBracket;</code> </td> <td> U+023B5 </td> </tr>
     <tr> <td> <code title="">UnderParenthesis;</code> </td> <td> U+023DD </td> </tr>
     <tr> <td> <code title="">Union;</code> </td> <td> U+022C3 </td> </tr>
     <tr> <td> <code title="">UnionPlus;</code> </td> <td> U+0228E </td> </tr>
     <tr> <td> <code title="">Uogon;</code> </td> <td> U+00172 </td> </tr>
     <tr> <td> <code title="">Uopf;</code> </td> <td> U+1D54C </td> </tr>
     <tr> <td> <code title="">UpArrow;</code> </td> <td> U+02191 </td> </tr>
     <tr> <td> <code title="">UpArrowBar;</code> </td> <td> U+02912 </td> </tr>
     <tr> <td> <code title="">UpArrowDownArrow;</code> </td> <td> U+021C5 </td> </tr>
     <tr> <td> <code title="">UpDownArrow;</code> </td> <td> U+02195 </td> </tr>
     <tr> <td> <code title="">UpEquilibrium;</code> </td> <td> U+0296E </td> </tr>
     <tr> <td> <code title="">UpTee;</code> </td> <td> U+022A5 </td> </tr>
     <tr> <td> <code title="">UpTeeArrow;</code> </td> <td> U+021A5 </td> </tr>
     <tr> <td> <code title="">Uparrow;</code> </td> <td> U+021D1 </td> </tr>
     <tr> <td> <code title="">Updownarrow;</code> </td> <td> U+021D5 </td> </tr>
     <tr> <td> <code title="">UpperLeftArrow;</code> </td> <td> U+02196 </td> </tr>
     <tr> <td> <code title="">UpperRightArrow;</code> </td> <td> U+02197 </td> </tr>
     <tr> <td> <code title="">Upsi;</code> </td> <td> U+003D2 </td> </tr>
     <tr> <td> <code title="">Upsilon;</code> </td> <td> U+003A5 </td> </tr>
     <tr> <td> <code title="">Uring;</code> </td> <td> U+0016E </td> </tr>
     <tr> <td> <code title="">Uscr;</code> </td> <td> U+1D4B0 </td> </tr>
     <tr> <td> <code title="">Utilde;</code> </td> <td> U+00168 </td> </tr>
     <tr> <td> <code title="">Uuml;</code> </td> <td> U+000DC </td> </tr>
     <tr> <td> <code title="">Uuml</code> </td> <td> U+000DC </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">VDash;</code> </td> <td> U+022AB </td> </tr>
     <tr> <td> <code title="">Vbar;</code> </td> <td> U+02AEB </td> </tr>
     <tr> <td> <code title="">Vcy;</code> </td> <td> U+00412 </td> </tr>
     <tr> <td> <code title="">Vdash;</code> </td> <td> U+022A9 </td> </tr>
     <tr> <td> <code title="">Vdashl;</code> </td> <td> U+02AE6 </td> </tr>
     <tr> <td> <code title="">Vee;</code> </td> <td> U+022C1 </td> </tr>
     <tr> <td> <code title="">Verbar;</code> </td> <td> U+02016 </td> </tr>
     <tr> <td> <code title="">Vert;</code> </td> <td> U+02016 </td> </tr>
     <tr> <td> <code title="">VerticalBar;</code> </td> <td> U+02223 </td> </tr>
     <tr> <td> <code title="">VerticalLine;</code> </td> <td> U+0007C </td> </tr>
     <tr> <td> <code title="">VerticalSeparator;</code> </td> <td> U+02758 </td> </tr>
     <tr> <td> <code title="">VerticalTilde;</code> </td> <td> U+02240 </td> </tr>
     <tr> <td> <code title="">VeryThinSpace;</code> </td> <td> U+0200A </td> </tr>
     <tr> <td> <code title="">Vfr;</code> </td> <td> U+1D519 </td> </tr>
     <tr> <td> <code title="">Vopf;</code> </td> <td> U+1D54D </td> </tr>
     <tr> <td> <code title="">Vscr;</code> </td> <td> U+1D4B1 </td> </tr>
     <tr> <td> <code title="">Vvdash;</code> </td> <td> U+022AA </td> </tr>
     <tr> <td> <code title="">Wcirc;</code> </td> <td> U+00174 </td> </tr>
     <tr> <td> <code title="">Wedge;</code> </td> <td> U+022C0 </td> </tr>
     <tr> <td> <code title="">Wfr;</code> </td> <td> U+1D51A </td> </tr>
     <tr> <td> <code title="">Wopf;</code> </td> <td> U+1D54E </td> </tr>
     <tr> <td> <code title="">Wscr;</code> </td> <td> U+1D4B2 </td> </tr>
     <tr> <td> <code title="">Xfr;</code> </td> <td> U+1D51B </td> </tr>
     <tr> <td> <code title="">Xi;</code> </td> <td> U+0039E </td> </tr>
     <tr> <td> <code title="">Xopf;</code> </td> <td> U+1D54F </td> </tr>
     <tr> <td> <code title="">Xscr;</code> </td> <td> U+1D4B3 </td> </tr>
     <tr> <td> <code title="">YAcy;</code> </td> <td> U+0042F </td> </tr>
     <tr> <td> <code title="">YIcy;</code> </td> <td> U+00407 </td> </tr>
     <tr> <td> <code title="">YUcy;</code> </td> <td> U+0042E </td> </tr>
     <tr> <td> <code title="">Yacute;</code> </td> <td> U+000DD </td> </tr>
     <tr> <td> <code title="">Yacute</code> </td> <td> U+000DD </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">Ycirc;</code> </td> <td> U+00176 </td> </tr>
     <tr> <td> <code title="">Ycy;</code> </td> <td> U+0042B </td> </tr>
     <tr> <td> <code title="">Yfr;</code> </td> <td> U+1D51C </td> </tr>
     <tr> <td> <code title="">Yopf;</code> </td> <td> U+1D550 </td> </tr>
     <tr> <td> <code title="">Yscr;</code> </td> <td> U+1D4B4 </td> </tr>
     <tr> <td> <code title="">Yuml;</code> </td> <td> U+00178 </td> </tr>
     <tr> <td> <code title="">ZHcy;</code> </td> <td> U+00416 </td> </tr>
     <tr> <td> <code title="">Zacute;</code> </td> <td> U+00179 </td> </tr>
     <tr> <td> <code title="">Zcaron;</code> </td> <td> U+0017D </td> </tr>
     <tr> <td> <code title="">Zcy;</code> </td> <td> U+00417 </td> </tr>
     <tr> <td> <code title="">Zdot;</code> </td> <td> U+0017B </td> </tr>
     <tr> <td> <code title="">ZeroWidthSpace;</code> </td> <td> U+0200B </td> </tr>
     <tr> <td> <code title="">Zeta;</code> </td> <td> U+00396 </td> </tr>
     <tr> <td> <code title="">Zfr;</code> </td> <td> U+02128 </td> </tr>
     <tr> <td> <code title="">Zopf;</code> </td> <td> U+02124 </td> </tr>
     <tr> <td> <code title="">Zscr;</code> </td> <td> U+1D4B5 </td> </tr>
     <tr> <td> <code title="">aacute;</code> </td> <td> U+000E1 </td> </tr>
     <tr> <td> <code title="">aacute</code> </td> <td> U+000E1 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">abreve;</code> </td> <td> U+00103 </td> </tr>
     <tr> <td> <code title="">ac;</code> </td> <td> U+0223E </td> </tr>
     <tr> <td> <code title="">acd;</code> </td> <td> U+0223F </td> </tr>
     <tr> <td> <code title="">acirc;</code> </td> <td> U+000E2 </td> </tr>
     <tr> <td> <code title="">acirc</code> </td> <td> U+000E2 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">acute;</code> </td> <td> U+000B4 </td> </tr>
     <tr> <td> <code title="">acute</code> </td> <td> U+000B4 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">acy;</code> </td> <td> U+00430 </td> </tr>
     <tr> <td> <code title="">aelig;</code> </td> <td> U+000E6 </td> </tr>
     <tr> <td> <code title="">aelig</code> </td> <td> U+000E6 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">af;</code> </td> <td> U+02061 </td> </tr>
     <tr> <td> <code title="">afr;</code> </td> <td> U+1D51E </td> </tr>
     <tr> <td> <code title="">agrave;</code> </td> <td> U+000E0 </td> </tr>
     <tr> <td> <code title="">agrave</code> </td> <td> U+000E0 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">alefsym;</code> </td> <td> U+02135 </td> </tr>
     <tr> <td> <code title="">aleph;</code> </td> <td> U+02135 </td> </tr>
     <tr> <td> <code title="">alpha;</code> </td> <td> U+003B1 </td> </tr>
     <tr> <td> <code title="">amacr;</code> </td> <td> U+00101 </td> </tr>
     <tr> <td> <code title="">amalg;</code> </td> <td> U+02A3F </td> </tr>
     <tr> <td> <code title="">amp;</code> </td> <td> U+00026 </td> </tr>
     <tr> <td> <code title="">amp</code> </td> <td> U+00026 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">and;</code> </td> <td> U+02227 </td> </tr>
     <tr> <td> <code title="">andand;</code> </td> <td> U+02A55 </td> </tr>
     <tr> <td> <code title="">andd;</code> </td> <td> U+02A5C </td> </tr>
     <tr> <td> <code title="">andslope;</code> </td> <td> U+02A58 </td> </tr>
     <tr> <td> <code title="">andv;</code> </td> <td> U+02A5A </td> </tr>
     <tr> <td> <code title="">ang;</code> </td> <td> U+02220 </td> </tr>
     <tr> <td> <code title="">ange;</code> </td> <td> U+029A4 </td> </tr>
     <tr> <td> <code title="">angle;</code> </td> <td> U+02220 </td> </tr>
     <tr> <td> <code title="">angmsd;</code> </td> <td> U+02221 </td> </tr>
     <tr> <td> <code title="">angmsdaa;</code> </td> <td> U+029A8 </td> </tr>
     <tr> <td> <code title="">angmsdab;</code> </td> <td> U+029A9 </td> </tr>
     <tr> <td> <code title="">angmsdac;</code> </td> <td> U+029AA </td> </tr>
     <tr> <td> <code title="">angmsdad;</code> </td> <td> U+029AB </td> </tr>
     <tr> <td> <code title="">angmsdae;</code> </td> <td> U+029AC </td> </tr>
     <tr> <td> <code title="">angmsdaf;</code> </td> <td> U+029AD </td> </tr>
     <tr> <td> <code title="">angmsdag;</code> </td> <td> U+029AE </td> </tr>
     <tr> <td> <code title="">angmsdah;</code> </td> <td> U+029AF </td> </tr>
     <tr> <td> <code title="">angrt;</code> </td> <td> U+0221F </td> </tr>
     <tr> <td> <code title="">angrtvb;</code> </td> <td> U+022BE </td> </tr>
     <tr> <td> <code title="">angrtvbd;</code> </td> <td> U+0299D </td> </tr>
     <tr> <td> <code title="">angsph;</code> </td> <td> U+02222 </td> </tr>
     <tr> <td> <code title="">angst;</code> </td> <td> U+0212B </td> </tr>
     <tr> <td> <code title="">angzarr;</code> </td> <td> U+0237C </td> </tr>
     <tr> <td> <code title="">aogon;</code> </td> <td> U+00105 </td> </tr>
     <tr> <td> <code title="">aopf;</code> </td> <td> U+1D552 </td> </tr>
     <tr> <td> <code title="">ap;</code> </td> <td> U+02248 </td> </tr>
     <tr> <td> <code title="">apE;</code> </td> <td> U+02A70 </td> </tr>
     <tr> <td> <code title="">apacir;</code> </td> <td> U+02A6F </td> </tr>
     <tr> <td> <code title="">ape;</code> </td> <td> U+0224A </td> </tr>
     <tr> <td> <code title="">apid;</code> </td> <td> U+0224B </td> </tr>
     <tr> <td> <code title="">apos;</code> </td> <td> U+00027 </td> </tr>
     <tr> <td> <code title="">approx;</code> </td> <td> U+02248 </td> </tr>
     <tr> <td> <code title="">approxeq;</code> </td> <td> U+0224A </td> </tr>
     <tr> <td> <code title="">aring;</code> </td> <td> U+000E5 </td> </tr>
     <tr> <td> <code title="">aring</code> </td> <td> U+000E5 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ascr;</code> </td> <td> U+1D4B6 </td> </tr>
     <tr> <td> <code title="">ast;</code> </td> <td> U+0002A </td> </tr>
     <tr> <td> <code title="">asymp;</code> </td> <td> U+02248 </td> </tr>
     <tr> <td> <code title="">asympeq;</code> </td> <td> U+0224D </td> </tr>
     <tr> <td> <code title="">atilde;</code> </td> <td> U+000E3 </td> </tr>
     <tr> <td> <code title="">atilde</code> </td> <td> U+000E3 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">auml;</code> </td> <td> U+000E4 </td> </tr>
     <tr> <td> <code title="">auml</code> </td> <td> U+000E4 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">awconint;</code> </td> <td> U+02233 </td> </tr>
     <tr> <td> <code title="">awint;</code> </td> <td> U+02A11 </td> </tr>
     <tr> <td> <code title="">bNot;</code> </td> <td> U+02AED </td> </tr>
     <tr> <td> <code title="">backcong;</code> </td> <td> U+0224C </td> </tr>
     <tr> <td> <code title="">backepsilon;</code> </td> <td> U+003F6 </td> </tr>
     <tr> <td> <code title="">backprime;</code> </td> <td> U+02035 </td> </tr>
     <tr> <td> <code title="">backsim;</code> </td> <td> U+0223D </td> </tr>
     <tr> <td> <code title="">backsimeq;</code> </td> <td> U+022CD </td> </tr>
     <tr> <td> <code title="">barvee;</code> </td> <td> U+022BD </td> </tr>
     <tr> <td> <code title="">barwed;</code> </td> <td> U+02305 </td> </tr>
     <tr> <td> <code title="">barwedge;</code> </td> <td> U+02305 </td> </tr>
     <tr> <td> <code title="">bbrk;</code> </td> <td> U+023B5 </td> </tr>
     <tr> <td> <code title="">bbrktbrk;</code> </td> <td> U+023B6 </td> </tr>
     <tr> <td> <code title="">bcong;</code> </td> <td> U+0224C </td> </tr>
     <tr> <td> <code title="">bcy;</code> </td> <td> U+00431 </td> </tr>
     <tr> <td> <code title="">bdquo;</code> </td> <td> U+0201E </td> </tr>
     <tr> <td> <code title="">becaus;</code> </td> <td> U+02235 </td> </tr>
     <tr> <td> <code title="">because;</code> </td> <td> U+02235 </td> </tr>
     <tr> <td> <code title="">bemptyv;</code> </td> <td> U+029B0 </td> </tr>
     <tr> <td> <code title="">bepsi;</code> </td> <td> U+003F6 </td> </tr>
     <tr> <td> <code title="">bernou;</code> </td> <td> U+0212C </td> </tr>
     <tr> <td> <code title="">beta;</code> </td> <td> U+003B2 </td> </tr>
     <tr> <td> <code title="">beth;</code> </td> <td> U+02136 </td> </tr>
     <tr> <td> <code title="">between;</code> </td> <td> U+0226C </td> </tr>
     <tr> <td> <code title="">bfr;</code> </td> <td> U+1D51F </td> </tr>
     <tr> <td> <code title="">bigcap;</code> </td> <td> U+022C2 </td> </tr>
     <tr> <td> <code title="">bigcirc;</code> </td> <td> U+025EF </td> </tr>
     <tr> <td> <code title="">bigcup;</code> </td> <td> U+022C3 </td> </tr>
     <tr> <td> <code title="">bigodot;</code> </td> <td> U+02A00 </td> </tr>
     <tr> <td> <code title="">bigoplus;</code> </td> <td> U+02A01 </td> </tr>
     <tr> <td> <code title="">bigotimes;</code> </td> <td> U+02A02 </td> </tr>
     <tr> <td> <code title="">bigsqcup;</code> </td> <td> U+02A06 </td> </tr>
     <tr> <td> <code title="">bigstar;</code> </td> <td> U+02605 </td> </tr>
     <tr> <td> <code title="">bigtriangledown;</code> </td> <td> U+025BD </td> </tr>
     <tr> <td> <code title="">bigtriangleup;</code> </td> <td> U+025B3 </td> </tr>
     <tr> <td> <code title="">biguplus;</code> </td> <td> U+02A04 </td> </tr>
     <tr> <td> <code title="">bigvee;</code> </td> <td> U+022C1 </td> </tr>
     <tr> <td> <code title="">bigwedge;</code> </td> <td> U+022C0 </td> </tr>
     <tr> <td> <code title="">bkarow;</code> </td> <td> U+0290D </td> </tr>
     <tr> <td> <code title="">blacklozenge;</code> </td> <td> U+029EB </td> </tr>
     <tr> <td> <code title="">blacksquare;</code> </td> <td> U+025AA </td> </tr>
     <tr> <td> <code title="">blacktriangle;</code> </td> <td> U+025B4 </td> </tr>
     <tr> <td> <code title="">blacktriangledown;</code> </td> <td> U+025BE </td> </tr>
     <tr> <td> <code title="">blacktriangleleft;</code> </td> <td> U+025C2 </td> </tr>
     <tr> <td> <code title="">blacktriangleright;</code> </td> <td> U+025B8 </td> </tr>
     <tr> <td> <code title="">blank;</code> </td> <td> U+02423 </td> </tr>
     <tr> <td> <code title="">blk12;</code> </td> <td> U+02592 </td> </tr>
     <tr> <td> <code title="">blk14;</code> </td> <td> U+02591 </td> </tr>
     <tr> <td> <code title="">blk34;</code> </td> <td> U+02593 </td> </tr>
     <tr> <td> <code title="">block;</code> </td> <td> U+02588 </td> </tr>
     <tr> <td> <code title="">bnot;</code> </td> <td> U+02310 </td> </tr>
     <tr> <td> <code title="">bopf;</code> </td> <td> U+1D553 </td> </tr>
     <tr> <td> <code title="">bot;</code> </td> <td> U+022A5 </td> </tr>
     <tr> <td> <code title="">bottom;</code> </td> <td> U+022A5 </td> </tr>
     <tr> <td> <code title="">bowtie;</code> </td> <td> U+022C8 </td> </tr>
     <tr> <td> <code title="">boxDL;</code> </td> <td> U+02557 </td> </tr>
     <tr> <td> <code title="">boxDR;</code> </td> <td> U+02554 </td> </tr>
     <tr> <td> <code title="">boxDl;</code> </td> <td> U+02556 </td> </tr>
     <tr> <td> <code title="">boxDr;</code> </td> <td> U+02553 </td> </tr>
     <tr> <td> <code title="">boxH;</code> </td> <td> U+02550 </td> </tr>
     <tr> <td> <code title="">boxHD;</code> </td> <td> U+02566 </td> </tr>
     <tr> <td> <code title="">boxHU;</code> </td> <td> U+02569 </td> </tr>
     <tr> <td> <code title="">boxHd;</code> </td> <td> U+02564 </td> </tr>
     <tr> <td> <code title="">boxHu;</code> </td> <td> U+02567 </td> </tr>
     <tr> <td> <code title="">boxUL;</code> </td> <td> U+0255D </td> </tr>
     <tr> <td> <code title="">boxUR;</code> </td> <td> U+0255A </td> </tr>
     <tr> <td> <code title="">boxUl;</code> </td> <td> U+0255C </td> </tr>
     <tr> <td> <code title="">boxUr;</code> </td> <td> U+02559 </td> </tr>
     <tr> <td> <code title="">boxV;</code> </td> <td> U+02551 </td> </tr>
     <tr> <td> <code title="">boxVH;</code> </td> <td> U+0256C </td> </tr>
     <tr> <td> <code title="">boxVL;</code> </td> <td> U+02563 </td> </tr>
     <tr> <td> <code title="">boxVR;</code> </td> <td> U+02560 </td> </tr>
     <tr> <td> <code title="">boxVh;</code> </td> <td> U+0256B </td> </tr>
     <tr> <td> <code title="">boxVl;</code> </td> <td> U+02562 </td> </tr>
     <tr> <td> <code title="">boxVr;</code> </td> <td> U+0255F </td> </tr>
     <tr> <td> <code title="">boxbox;</code> </td> <td> U+029C9 </td> </tr>
     <tr> <td> <code title="">boxdL;</code> </td> <td> U+02555 </td> </tr>
     <tr> <td> <code title="">boxdR;</code> </td> <td> U+02552 </td> </tr>
     <tr> <td> <code title="">boxdl;</code> </td> <td> U+02510 </td> </tr>
     <tr> <td> <code title="">boxdr;</code> </td> <td> U+0250C </td> </tr>
     <tr> <td> <code title="">boxh;</code> </td> <td> U+02500 </td> </tr>
     <tr> <td> <code title="">boxhD;</code> </td> <td> U+02565 </td> </tr>
     <tr> <td> <code title="">boxhU;</code> </td> <td> U+02568 </td> </tr>
     <tr> <td> <code title="">boxhd;</code> </td> <td> U+0252C </td> </tr>
     <tr> <td> <code title="">boxhu;</code> </td> <td> U+02534 </td> </tr>
     <tr> <td> <code title="">boxminus;</code> </td> <td> U+0229F </td> </tr>
     <tr> <td> <code title="">boxplus;</code> </td> <td> U+0229E </td> </tr>
     <tr> <td> <code title="">boxtimes;</code> </td> <td> U+022A0 </td> </tr>
     <tr> <td> <code title="">boxuL;</code> </td> <td> U+0255B </td> </tr>
     <tr> <td> <code title="">boxuR;</code> </td> <td> U+02558 </td> </tr>
     <tr> <td> <code title="">boxul;</code> </td> <td> U+02518 </td> </tr>
     <tr> <td> <code title="">boxur;</code> </td> <td> U+02514 </td> </tr>
     <tr> <td> <code title="">boxv;</code> </td> <td> U+02502 </td> </tr>
     <tr> <td> <code title="">boxvH;</code> </td> <td> U+0256A </td> </tr>
     <tr> <td> <code title="">boxvL;</code> </td> <td> U+02561 </td> </tr>
     <tr> <td> <code title="">boxvR;</code> </td> <td> U+0255E </td> </tr>
     <tr> <td> <code title="">boxvh;</code> </td> <td> U+0253C </td> </tr>
     <tr> <td> <code title="">boxvl;</code> </td> <td> U+02524 </td> </tr>
     <tr> <td> <code title="">boxvr;</code> </td> <td> U+0251C </td> </tr>
     <tr> <td> <code title="">bprime;</code> </td> <td> U+02035 </td> </tr>
     <tr> <td> <code title="">breve;</code> </td> <td> U+002D8 </td> </tr>
     <tr> <td> <code title="">brvbar;</code> </td> <td> U+000A6 </td> </tr>
     <tr> <td> <code title="">brvbar</code> </td> <td> U+000A6 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">bscr;</code> </td> <td> U+1D4B7 </td> </tr>
     <tr> <td> <code title="">bsemi;</code> </td> <td> U+0204F </td> </tr>
     <tr> <td> <code title="">bsim;</code> </td> <td> U+0223D </td> </tr>
     <tr> <td> <code title="">bsime;</code> </td> <td> U+022CD </td> </tr>
     <tr> <td> <code title="">bsol;</code> </td> <td> U+0005C </td> </tr>
     <tr> <td> <code title="">bsolb;</code> </td> <td> U+029C5 </td> </tr>
     <tr> <td> <code title="">bull;</code> </td> <td> U+02022 </td> </tr>
     <tr> <td> <code title="">bullet;</code> </td> <td> U+02022 </td> </tr>
     <tr> <td> <code title="">bump;</code> </td> <td> U+0224E </td> </tr>
     <tr> <td> <code title="">bumpE;</code> </td> <td> U+02AAE </td> </tr>
     <tr> <td> <code title="">bumpe;</code> </td> <td> U+0224F </td> </tr>
     <tr> <td> <code title="">bumpeq;</code> </td> <td> U+0224F </td> </tr>
     <tr> <td> <code title="">cacute;</code> </td> <td> U+00107 </td> </tr>
     <tr> <td> <code title="">cap;</code> </td> <td> U+02229 </td> </tr>
     <tr> <td> <code title="">capand;</code> </td> <td> U+02A44 </td> </tr>
     <tr> <td> <code title="">capbrcup;</code> </td> <td> U+02A49 </td> </tr>
     <tr> <td> <code title="">capcap;</code> </td> <td> U+02A4B </td> </tr>
     <tr> <td> <code title="">capcup;</code> </td> <td> U+02A47 </td> </tr>
     <tr> <td> <code title="">capdot;</code> </td> <td> U+02A40 </td> </tr>
     <tr> <td> <code title="">caret;</code> </td> <td> U+02041 </td> </tr>
     <tr> <td> <code title="">caron;</code> </td> <td> U+002C7 </td> </tr>
     <tr> <td> <code title="">ccaps;</code> </td> <td> U+02A4D </td> </tr>
     <tr> <td> <code title="">ccaron;</code> </td> <td> U+0010D </td> </tr>
     <tr> <td> <code title="">ccedil;</code> </td> <td> U+000E7 </td> </tr>
     <tr> <td> <code title="">ccedil</code> </td> <td> U+000E7 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ccirc;</code> </td> <td> U+00109 </td> </tr>
     <tr> <td> <code title="">ccups;</code> </td> <td> U+02A4C </td> </tr>
     <tr> <td> <code title="">ccupssm;</code> </td> <td> U+02A50 </td> </tr>
     <tr> <td> <code title="">cdot;</code> </td> <td> U+0010B </td> </tr>
     <tr> <td> <code title="">cedil;</code> </td> <td> U+000B8 </td> </tr>
     <tr> <td> <code title="">cedil</code> </td> <td> U+000B8 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">cemptyv;</code> </td> <td> U+029B2 </td> </tr>
     <tr> <td> <code title="">cent;</code> </td> <td> U+000A2 </td> </tr>
     <tr> <td> <code title="">cent</code> </td> <td> U+000A2 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">centerdot;</code> </td> <td> U+000B7 </td> </tr>
     <tr> <td> <code title="">cfr;</code> </td> <td> U+1D520 </td> </tr>
     <tr> <td> <code title="">chcy;</code> </td> <td> U+00447 </td> </tr>
     <tr> <td> <code title="">check;</code> </td> <td> U+02713 </td> </tr>
     <tr> <td> <code title="">checkmark;</code> </td> <td> U+02713 </td> </tr>
     <tr> <td> <code title="">chi;</code> </td> <td> U+003C7 </td> </tr>
     <tr> <td> <code title="">cir;</code> </td> <td> U+025CB </td> </tr>
     <tr> <td> <code title="">cirE;</code> </td> <td> U+029C3 </td> </tr>
     <tr> <td> <code title="">circ;</code> </td> <td> U+002C6 </td> </tr>
     <tr> <td> <code title="">circeq;</code> </td> <td> U+02257 </td> </tr>
     <tr> <td> <code title="">circlearrowleft;</code> </td> <td> U+021BA </td> </tr>
     <tr> <td> <code title="">circlearrowright;</code> </td> <td> U+021BB </td> </tr>
     <tr> <td> <code title="">circledR;</code> </td> <td> U+000AE </td> </tr>
     <tr> <td> <code title="">circledS;</code> </td> <td> U+024C8 </td> </tr>
     <tr> <td> <code title="">circledast;</code> </td> <td> U+0229B </td> </tr>
     <tr> <td> <code title="">circledcirc;</code> </td> <td> U+0229A </td> </tr>
     <tr> <td> <code title="">circleddash;</code> </td> <td> U+0229D </td> </tr>
     <tr> <td> <code title="">cire;</code> </td> <td> U+02257 </td> </tr>
     <tr> <td> <code title="">cirfnint;</code> </td> <td> U+02A10 </td> </tr>
     <tr> <td> <code title="">cirmid;</code> </td> <td> U+02AEF </td> </tr>
     <tr> <td> <code title="">cirscir;</code> </td> <td> U+029C2 </td> </tr>
     <tr> <td> <code title="">clubs;</code> </td> <td> U+02663 </td> </tr>
     <tr> <td> <code title="">clubsuit;</code> </td> <td> U+02663 </td> </tr>
     <tr> <td> <code title="">colon;</code> </td> <td> U+0003A </td> </tr>
     <tr> <td> <code title="">colone;</code> </td> <td> U+02254 </td> </tr>
     <tr> <td> <code title="">coloneq;</code> </td> <td> U+02254 </td> </tr>
     <tr> <td> <code title="">comma;</code> </td> <td> U+0002C </td> </tr>
     <tr> <td> <code title="">commat;</code> </td> <td> U+00040 </td> </tr>
     <tr> <td> <code title="">comp;</code> </td> <td> U+02201 </td> </tr>
     <tr> <td> <code title="">compfn;</code> </td> <td> U+02218 </td> </tr>
     <tr> <td> <code title="">complement;</code> </td> <td> U+02201 </td> </tr>
     <tr> <td> <code title="">complexes;</code> </td> <td> U+02102 </td> </tr>
     <tr> <td> <code title="">cong;</code> </td> <td> U+02245 </td> </tr>
     <tr> <td> <code title="">congdot;</code> </td> <td> U+02A6D </td> </tr>
     <tr> <td> <code title="">conint;</code> </td> <td> U+0222E </td> </tr>
     <tr> <td> <code title="">copf;</code> </td> <td> U+1D554 </td> </tr>
     <tr> <td> <code title="">coprod;</code> </td> <td> U+02210 </td> </tr>
     <tr> <td> <code title="">copy;</code> </td> <td> U+000A9 </td> </tr>
     <tr> <td> <code title="">copy</code> </td> <td> U+000A9 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">copysr;</code> </td> <td> U+02117 </td> </tr>
     <tr> <td> <code title="">crarr;</code> </td> <td> U+021B5 </td> </tr>
     <tr> <td> <code title="">cross;</code> </td> <td> U+02717 </td> </tr>
     <tr> <td> <code title="">cscr;</code> </td> <td> U+1D4B8 </td> </tr>
     <tr> <td> <code title="">csub;</code> </td> <td> U+02ACF </td> </tr>
     <tr> <td> <code title="">csube;</code> </td> <td> U+02AD1 </td> </tr>
     <tr> <td> <code title="">csup;</code> </td> <td> U+02AD0 </td> </tr>
     <tr> <td> <code title="">csupe;</code> </td> <td> U+02AD2 </td> </tr>
     <tr> <td> <code title="">ctdot;</code> </td> <td> U+022EF </td> </tr>
     <tr> <td> <code title="">cudarrl;</code> </td> <td> U+02938 </td> </tr>
     <tr> <td> <code title="">cudarrr;</code> </td> <td> U+02935 </td> </tr>
     <tr> <td> <code title="">cuepr;</code> </td> <td> U+022DE </td> </tr>
     <tr> <td> <code title="">cuesc;</code> </td> <td> U+022DF </td> </tr>
     <tr> <td> <code title="">cularr;</code> </td> <td> U+021B6 </td> </tr>
     <tr> <td> <code title="">cularrp;</code> </td> <td> U+0293D </td> </tr>
     <tr> <td> <code title="">cup;</code> </td> <td> U+0222A </td> </tr>
     <tr> <td> <code title="">cupbrcap;</code> </td> <td> U+02A48 </td> </tr>
     <tr> <td> <code title="">cupcap;</code> </td> <td> U+02A46 </td> </tr>
     <tr> <td> <code title="">cupcup;</code> </td> <td> U+02A4A </td> </tr>
     <tr> <td> <code title="">cupdot;</code> </td> <td> U+0228D </td> </tr>
     <tr> <td> <code title="">cupor;</code> </td> <td> U+02A45 </td> </tr>
     <tr> <td> <code title="">curarr;</code> </td> <td> U+021B7 </td> </tr>
     <tr> <td> <code title="">curarrm;</code> </td> <td> U+0293C </td> </tr>
     <tr> <td> <code title="">curlyeqprec;</code> </td> <td> U+022DE </td> </tr>
     <tr> <td> <code title="">curlyeqsucc;</code> </td> <td> U+022DF </td> </tr>
     <tr> <td> <code title="">curlyvee;</code> </td> <td> U+022CE </td> </tr>
     <tr> <td> <code title="">curlywedge;</code> </td> <td> U+022CF </td> </tr>
     <tr> <td> <code title="">curren;</code> </td> <td> U+000A4 </td> </tr>
     <tr> <td> <code title="">curren</code> </td> <td> U+000A4 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">curvearrowleft;</code> </td> <td> U+021B6 </td> </tr>
     <tr> <td> <code title="">curvearrowright;</code> </td> <td> U+021B7 </td> </tr>
     <tr> <td> <code title="">cuvee;</code> </td> <td> U+022CE </td> </tr>
     <tr> <td> <code title="">cuwed;</code> </td> <td> U+022CF </td> </tr>
     <tr> <td> <code title="">cwconint;</code> </td> <td> U+02232 </td> </tr>
     <tr> <td> <code title="">cwint;</code> </td> <td> U+02231 </td> </tr>
     <tr> <td> <code title="">cylcty;</code> </td> <td> U+0232D </td> </tr>
     <tr> <td> <code title="">dArr;</code> </td> <td> U+021D3 </td> </tr>
     <tr> <td> <code title="">dHar;</code> </td> <td> U+02965 </td> </tr>
     <tr> <td> <code title="">dagger;</code> </td> <td> U+02020 </td> </tr>
     <tr> <td> <code title="">daleth;</code> </td> <td> U+02138 </td> </tr>
     <tr> <td> <code title="">darr;</code> </td> <td> U+02193 </td> </tr>
     <tr> <td> <code title="">dash;</code> </td> <td> U+02010 </td> </tr>
     <tr> <td> <code title="">dashv;</code> </td> <td> U+022A3 </td> </tr>
     <tr> <td> <code title="">dbkarow;</code> </td> <td> U+0290F </td> </tr>
     <tr> <td> <code title="">dblac;</code> </td> <td> U+002DD </td> </tr>
     <tr> <td> <code title="">dcaron;</code> </td> <td> U+0010F </td> </tr>
     <tr> <td> <code title="">dcy;</code> </td> <td> U+00434 </td> </tr>
     <tr> <td> <code title="">dd;</code> </td> <td> U+02146 </td> </tr>
     <tr> <td> <code title="">ddagger;</code> </td> <td> U+02021 </td> </tr>
     <tr> <td> <code title="">ddarr;</code> </td> <td> U+021CA </td> </tr>
     <tr> <td> <code title="">ddotseq;</code> </td> <td> U+02A77 </td> </tr>
     <tr> <td> <code title="">deg;</code> </td> <td> U+000B0 </td> </tr>
     <tr> <td> <code title="">deg</code> </td> <td> U+000B0 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">delta;</code> </td> <td> U+003B4 </td> </tr>
     <tr> <td> <code title="">demptyv;</code> </td> <td> U+029B1 </td> </tr>
     <tr> <td> <code title="">dfisht;</code> </td> <td> U+0297F </td> </tr>
     <tr> <td> <code title="">dfr;</code> </td> <td> U+1D521 </td> </tr>
     <tr> <td> <code title="">dharl;</code> </td> <td> U+021C3 </td> </tr>
     <tr> <td> <code title="">dharr;</code> </td> <td> U+021C2 </td> </tr>
     <tr> <td> <code title="">diam;</code> </td> <td> U+022C4 </td> </tr>
     <tr> <td> <code title="">diamond;</code> </td> <td> U+022C4 </td> </tr>
     <tr> <td> <code title="">diamondsuit;</code> </td> <td> U+02666 </td> </tr>
     <tr> <td> <code title="">diams;</code> </td> <td> U+02666 </td> </tr>
     <tr> <td> <code title="">die;</code> </td> <td> U+000A8 </td> </tr>
     <tr> <td> <code title="">digamma;</code> </td> <td> U+003DD </td> </tr>
     <tr> <td> <code title="">disin;</code> </td> <td> U+022F2 </td> </tr>
     <tr> <td> <code title="">div;</code> </td> <td> U+000F7 </td> </tr>
     <tr> <td> <code title="">divide;</code> </td> <td> U+000F7 </td> </tr>
     <tr> <td> <code title="">divide</code> </td> <td> U+000F7 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">divideontimes;</code> </td> <td> U+022C7 </td> </tr>
     <tr> <td> <code title="">divonx;</code> </td> <td> U+022C7 </td> </tr>
     <tr> <td> <code title="">djcy;</code> </td> <td> U+00452 </td> </tr>
     <tr> <td> <code title="">dlcorn;</code> </td> <td> U+0231E </td> </tr>
     <tr> <td> <code title="">dlcrop;</code> </td> <td> U+0230D </td> </tr>
     <tr> <td> <code title="">dollar;</code> </td> <td> U+00024 </td> </tr>
     <tr> <td> <code title="">dopf;</code> </td> <td> U+1D555 </td> </tr>
     <tr> <td> <code title="">dot;</code> </td> <td> U+002D9 </td> </tr>
     <tr> <td> <code title="">doteq;</code> </td> <td> U+02250 </td> </tr>
     <tr> <td> <code title="">doteqdot;</code> </td> <td> U+02251 </td> </tr>
     <tr> <td> <code title="">dotminus;</code> </td> <td> U+02238 </td> </tr>
     <tr> <td> <code title="">dotplus;</code> </td> <td> U+02214 </td> </tr>
     <tr> <td> <code title="">dotsquare;</code> </td> <td> U+022A1 </td> </tr>
     <tr> <td> <code title="">doublebarwedge;</code> </td> <td> U+02306 </td> </tr>
     <tr> <td> <code title="">downarrow;</code> </td> <td> U+02193 </td> </tr>
     <tr> <td> <code title="">downdownarrows;</code> </td> <td> U+021CA </td> </tr>
     <tr> <td> <code title="">downharpoonleft;</code> </td> <td> U+021C3 </td> </tr>
     <tr> <td> <code title="">downharpoonright;</code> </td> <td> U+021C2 </td> </tr>
     <tr> <td> <code title="">drbkarow;</code> </td> <td> U+02910 </td> </tr>
     <tr> <td> <code title="">drcorn;</code> </td> <td> U+0231F </td> </tr>
     <tr> <td> <code title="">drcrop;</code> </td> <td> U+0230C </td> </tr>
     <tr> <td> <code title="">dscr;</code> </td> <td> U+1D4B9 </td> </tr>
     <tr> <td> <code title="">dscy;</code> </td> <td> U+00455 </td> </tr>
     <tr> <td> <code title="">dsol;</code> </td> <td> U+029F6 </td> </tr>
     <tr> <td> <code title="">dstrok;</code> </td> <td> U+00111 </td> </tr>
     <tr> <td> <code title="">dtdot;</code> </td> <td> U+022F1 </td> </tr>
     <tr> <td> <code title="">dtri;</code> </td> <td> U+025BF </td> </tr>
     <tr> <td> <code title="">dtrif;</code> </td> <td> U+025BE </td> </tr>
     <tr> <td> <code title="">duarr;</code> </td> <td> U+021F5 </td> </tr>
     <tr> <td> <code title="">duhar;</code> </td> <td> U+0296F </td> </tr>
     <tr> <td> <code title="">dwangle;</code> </td> <td> U+029A6 </td> </tr>
     <tr> <td> <code title="">dzcy;</code> </td> <td> U+0045F </td> </tr>
     <tr> <td> <code title="">dzigrarr;</code> </td> <td> U+027FF </td> </tr>
     <tr> <td> <code title="">eDDot;</code> </td> <td> U+02A77 </td> </tr>
     <tr> <td> <code title="">eDot;</code> </td> <td> U+02251 </td> </tr>
     <tr> <td> <code title="">eacute;</code> </td> <td> U+000E9 </td> </tr>
     <tr> <td> <code title="">eacute</code> </td> <td> U+000E9 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">easter;</code> </td> <td> U+02A6E </td> </tr>
     <tr> <td> <code title="">ecaron;</code> </td> <td> U+0011B </td> </tr>
     <tr> <td> <code title="">ecir;</code> </td> <td> U+02256 </td> </tr>
     <tr> <td> <code title="">ecirc;</code> </td> <td> U+000EA </td> </tr>
     <tr> <td> <code title="">ecirc</code> </td> <td> U+000EA </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ecolon;</code> </td> <td> U+02255 </td> </tr>
     <tr> <td> <code title="">ecy;</code> </td> <td> U+0044D </td> </tr>
     <tr> <td> <code title="">edot;</code> </td> <td> U+00117 </td> </tr>
     <tr> <td> <code title="">ee;</code> </td> <td> U+02147 </td> </tr>
     <tr> <td> <code title="">efDot;</code> </td> <td> U+02252 </td> </tr>
     <tr> <td> <code title="">efr;</code> </td> <td> U+1D522 </td> </tr>
     <tr> <td> <code title="">eg;</code> </td> <td> U+02A9A </td> </tr>
     <tr> <td> <code title="">egrave;</code> </td> <td> U+000E8 </td> </tr>
     <tr> <td> <code title="">egrave</code> </td> <td> U+000E8 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">egs;</code> </td> <td> U+02A96 </td> </tr>
     <tr> <td> <code title="">egsdot;</code> </td> <td> U+02A98 </td> </tr>
     <tr> <td> <code title="">el;</code> </td> <td> U+02A99 </td> </tr>
     <tr> <td> <code title="">elinters;</code> </td> <td> U+023E7 </td> </tr>
     <tr> <td> <code title="">ell;</code> </td> <td> U+02113 </td> </tr>
     <tr> <td> <code title="">els;</code> </td> <td> U+02A95 </td> </tr>
     <tr> <td> <code title="">elsdot;</code> </td> <td> U+02A97 </td> </tr>
     <tr> <td> <code title="">emacr;</code> </td> <td> U+00113 </td> </tr>
     <tr> <td> <code title="">empty;</code> </td> <td> U+02205 </td> </tr>
     <tr> <td> <code title="">emptyset;</code> </td> <td> U+02205 </td> </tr>
     <tr> <td> <code title="">emptyv;</code> </td> <td> U+02205 </td> </tr>
     <tr> <td> <code title="">emsp13;</code> </td> <td> U+02004 </td> </tr>
     <tr> <td> <code title="">emsp14;</code> </td> <td> U+02005 </td> </tr>
     <tr> <td> <code title="">emsp;</code> </td> <td> U+02003 </td> </tr>
     <tr> <td> <code title="">eng;</code> </td> <td> U+0014B </td> </tr>
     <tr> <td> <code title="">ensp;</code> </td> <td> U+02002 </td> </tr>
     <tr> <td> <code title="">eogon;</code> </td> <td> U+00119 </td> </tr>
     <tr> <td> <code title="">eopf;</code> </td> <td> U+1D556 </td> </tr>
     <tr> <td> <code title="">epar;</code> </td> <td> U+022D5 </td> </tr>
     <tr> <td> <code title="">eparsl;</code> </td> <td> U+029E3 </td> </tr>
     <tr> <td> <code title="">eplus;</code> </td> <td> U+02A71 </td> </tr>
     <tr> <td> <code title="">epsi;</code> </td> <td> U+003F5 </td> </tr>
     <tr> <td> <code title="">epsilon;</code> </td> <td> U+003B5 </td> </tr>
     <tr> <td> <code title="">epsiv;</code> </td> <td> U+003B5 </td> </tr>
     <tr> <td> <code title="">eqcirc;</code> </td> <td> U+02256 </td> </tr>
     <tr> <td> <code title="">eqcolon;</code> </td> <td> U+02255 </td> </tr>
     <tr> <td> <code title="">eqsim;</code> </td> <td> U+02242 </td> </tr>
     <tr> <td> <code title="">eqslantgtr;</code> </td> <td> U+02A96 </td> </tr>
     <tr> <td> <code title="">eqslantless;</code> </td> <td> U+02A95 </td> </tr>
     <tr> <td> <code title="">equals;</code> </td> <td> U+0003D </td> </tr>
     <tr> <td> <code title="">equest;</code> </td> <td> U+0225F </td> </tr>
     <tr> <td> <code title="">equiv;</code> </td> <td> U+02261 </td> </tr>
     <tr> <td> <code title="">equivDD;</code> </td> <td> U+02A78 </td> </tr>
     <tr> <td> <code title="">eqvparsl;</code> </td> <td> U+029E5 </td> </tr>
     <tr> <td> <code title="">erDot;</code> </td> <td> U+02253 </td> </tr>
     <tr> <td> <code title="">erarr;</code> </td> <td> U+02971 </td> </tr>
     <tr> <td> <code title="">escr;</code> </td> <td> U+0212F </td> </tr>
     <tr> <td> <code title="">esdot;</code> </td> <td> U+02250 </td> </tr>
     <tr> <td> <code title="">esim;</code> </td> <td> U+02242 </td> </tr>
     <tr> <td> <code title="">eta;</code> </td> <td> U+003B7 </td> </tr>
     <tr> <td> <code title="">eth;</code> </td> <td> U+000F0 </td> </tr>
     <tr> <td> <code title="">eth</code> </td> <td> U+000F0 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">euml;</code> </td> <td> U+000EB </td> </tr>
     <tr> <td> <code title="">euml</code> </td> <td> U+000EB </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">euro;</code> </td> <td> U+020AC </td> </tr>
     <tr> <td> <code title="">excl;</code> </td> <td> U+00021 </td> </tr>
     <tr> <td> <code title="">exist;</code> </td> <td> U+02203 </td> </tr>
     <tr> <td> <code title="">expectation;</code> </td> <td> U+02130 </td> </tr>
     <tr> <td> <code title="">exponentiale;</code> </td> <td> U+02147 </td> </tr>
     <tr> <td> <code title="">fallingdotseq;</code> </td> <td> U+02252 </td> </tr>
     <tr> <td> <code title="">fcy;</code> </td> <td> U+00444 </td> </tr>
     <tr> <td> <code title="">female;</code> </td> <td> U+02640 </td> </tr>
     <tr> <td> <code title="">ffilig;</code> </td> <td> U+0FB03 </td> </tr>
     <tr> <td> <code title="">fflig;</code> </td> <td> U+0FB00 </td> </tr>
     <tr> <td> <code title="">ffllig;</code> </td> <td> U+0FB04 </td> </tr>
     <tr> <td> <code title="">ffr;</code> </td> <td> U+1D523 </td> </tr>
     <tr> <td> <code title="">filig;</code> </td> <td> U+0FB01 </td> </tr>
     <tr> <td> <code title="">flat;</code> </td> <td> U+0266D </td> </tr>
     <tr> <td> <code title="">fllig;</code> </td> <td> U+0FB02 </td> </tr>
     <tr> <td> <code title="">fltns;</code> </td> <td> U+025B1 </td> </tr>
     <tr> <td> <code title="">fnof;</code> </td> <td> U+00192 </td> </tr>
     <tr> <td> <code title="">fopf;</code> </td> <td> U+1D557 </td> </tr>
     <tr> <td> <code title="">forall;</code> </td> <td> U+02200 </td> </tr>
     <tr> <td> <code title="">fork;</code> </td> <td> U+022D4 </td> </tr>
     <tr> <td> <code title="">forkv;</code> </td> <td> U+02AD9 </td> </tr>
     <tr> <td> <code title="">fpartint;</code> </td> <td> U+02A0D </td> </tr>
     <tr> <td> <code title="">frac12;</code> </td> <td> U+000BD </td> </tr>
     <tr> <td> <code title="">frac12</code> </td> <td> U+000BD </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">frac13;</code> </td> <td> U+02153 </td> </tr>
     <tr> <td> <code title="">frac14;</code> </td> <td> U+000BC </td> </tr>
     <tr> <td> <code title="">frac14</code> </td> <td> U+000BC </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">frac15;</code> </td> <td> U+02155 </td> </tr>
     <tr> <td> <code title="">frac16;</code> </td> <td> U+02159 </td> </tr>
     <tr> <td> <code title="">frac18;</code> </td> <td> U+0215B </td> </tr>
     <tr> <td> <code title="">frac23;</code> </td> <td> U+02154 </td> </tr>
     <tr> <td> <code title="">frac25;</code> </td> <td> U+02156 </td> </tr>
     <tr> <td> <code title="">frac34;</code> </td> <td> U+000BE </td> </tr>
     <tr> <td> <code title="">frac34</code> </td> <td> U+000BE </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">frac35;</code> </td> <td> U+02157 </td> </tr>
     <tr> <td> <code title="">frac38;</code> </td> <td> U+0215C </td> </tr>
     <tr> <td> <code title="">frac45;</code> </td> <td> U+02158 </td> </tr>
     <tr> <td> <code title="">frac56;</code> </td> <td> U+0215A </td> </tr>
     <tr> <td> <code title="">frac58;</code> </td> <td> U+0215D </td> </tr>
     <tr> <td> <code title="">frac78;</code> </td> <td> U+0215E </td> </tr>
     <tr> <td> <code title="">frasl;</code> </td> <td> U+02044 </td> </tr>
     <tr> <td> <code title="">frown;</code> </td> <td> U+02322 </td> </tr>
     <tr> <td> <code title="">fscr;</code> </td> <td> U+1D4BB </td> </tr>
     <tr> <td> <code title="">gE;</code> </td> <td> U+02267 </td> </tr>
     <tr> <td> <code title="">gEl;</code> </td> <td> U+02A8C </td> </tr>
     <tr> <td> <code title="">gacute;</code> </td> <td> U+001F5 </td> </tr>
     <tr> <td> <code title="">gamma;</code> </td> <td> U+003B3 </td> </tr>
     <tr> <td> <code title="">gammad;</code> </td> <td> U+003DD </td> </tr>
     <tr> <td> <code title="">gap;</code> </td> <td> U+02A86 </td> </tr>
     <tr> <td> <code title="">gbreve;</code> </td> <td> U+0011F </td> </tr>
     <tr> <td> <code title="">gcirc;</code> </td> <td> U+0011D </td> </tr>
     <tr> <td> <code title="">gcy;</code> </td> <td> U+00433 </td> </tr>
     <tr> <td> <code title="">gdot;</code> </td> <td> U+00121 </td> </tr>
     <tr> <td> <code title="">ge;</code> </td> <td> U+02265 </td> </tr>
     <tr> <td> <code title="">gel;</code> </td> <td> U+022DB </td> </tr>
     <tr> <td> <code title="">geq;</code> </td> <td> U+02265 </td> </tr>
     <tr> <td> <code title="">geqq;</code> </td> <td> U+02267 </td> </tr>
     <tr> <td> <code title="">geqslant;</code> </td> <td> U+02A7E </td> </tr>
     <tr> <td> <code title="">ges;</code> </td> <td> U+02A7E </td> </tr>
     <tr> <td> <code title="">gescc;</code> </td> <td> U+02AA9 </td> </tr>
     <tr> <td> <code title="">gesdot;</code> </td> <td> U+02A80 </td> </tr>
     <tr> <td> <code title="">gesdoto;</code> </td> <td> U+02A82 </td> </tr>
     <tr> <td> <code title="">gesdotol;</code> </td> <td> U+02A84 </td> </tr>
     <tr> <td> <code title="">gesles;</code> </td> <td> U+02A94 </td> </tr>
     <tr> <td> <code title="">gfr;</code> </td> <td> U+1D524 </td> </tr>
     <tr> <td> <code title="">gg;</code> </td> <td> U+0226B </td> </tr>
     <tr> <td> <code title="">ggg;</code> </td> <td> U+022D9 </td> </tr>
     <tr> <td> <code title="">gimel;</code> </td> <td> U+02137 </td> </tr>
     <tr> <td> <code title="">gjcy;</code> </td> <td> U+00453 </td> </tr>
     <tr> <td> <code title="">gl;</code> </td> <td> U+02277 </td> </tr>
     <tr> <td> <code title="">glE;</code> </td> <td> U+02A92 </td> </tr>
     <tr> <td> <code title="">gla;</code> </td> <td> U+02AA5 </td> </tr>
     <tr> <td> <code title="">glj;</code> </td> <td> U+02AA4 </td> </tr>
     <tr> <td> <code title="">gnE;</code> </td> <td> U+02269 </td> </tr>
     <tr> <td> <code title="">gnap;</code> </td> <td> U+02A8A </td> </tr>
     <tr> <td> <code title="">gnapprox;</code> </td> <td> U+02A8A </td> </tr>
     <tr> <td> <code title="">gne;</code> </td> <td> U+02A88 </td> </tr>
     <tr> <td> <code title="">gneq;</code> </td> <td> U+02A88 </td> </tr>
     <tr> <td> <code title="">gneqq;</code> </td> <td> U+02269 </td> </tr>
     <tr> <td> <code title="">gnsim;</code> </td> <td> U+022E7 </td> </tr>
     <tr> <td> <code title="">gopf;</code> </td> <td> U+1D558 </td> </tr>
     <tr> <td> <code title="">grave;</code> </td> <td> U+00060 </td> </tr>
     <tr> <td> <code title="">gscr;</code> </td> <td> U+0210A </td> </tr>
     <tr> <td> <code title="">gsim;</code> </td> <td> U+02273 </td> </tr>
     <tr> <td> <code title="">gsime;</code> </td> <td> U+02A8E </td> </tr>
     <tr> <td> <code title="">gsiml;</code> </td> <td> U+02A90 </td> </tr>
     <tr> <td> <code title="">gt;</code> </td> <td> U+0003E </td> </tr>
     <tr> <td> <code title="">gt</code> </td> <td> U+0003E </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">gtcc;</code> </td> <td> U+02AA7 </td> </tr>
     <tr> <td> <code title="">gtcir;</code> </td> <td> U+02A7A </td> </tr>
     <tr> <td> <code title="">gtdot;</code> </td> <td> U+022D7 </td> </tr>
     <tr> <td> <code title="">gtlPar;</code> </td> <td> U+02995 </td> </tr>
     <tr> <td> <code title="">gtquest;</code> </td> <td> U+02A7C </td> </tr>
     <tr> <td> <code title="">gtrapprox;</code> </td> <td> U+02A86 </td> </tr>
     <tr> <td> <code title="">gtrarr;</code> </td> <td> U+02978 </td> </tr>
     <tr> <td> <code title="">gtrdot;</code> </td> <td> U+022D7 </td> </tr>
     <tr> <td> <code title="">gtreqless;</code> </td> <td> U+022DB </td> </tr>
     <tr> <td> <code title="">gtreqqless;</code> </td> <td> U+02A8C </td> </tr>
     <tr> <td> <code title="">gtrless;</code> </td> <td> U+02277 </td> </tr>
     <tr> <td> <code title="">gtrsim;</code> </td> <td> U+02273 </td> </tr>
     <tr> <td> <code title="">hArr;</code> </td> <td> U+021D4 </td> </tr>
     <tr> <td> <code title="">hairsp;</code> </td> <td> U+0200A </td> </tr>
     <tr> <td> <code title="">half;</code> </td> <td> U+000BD </td> </tr>
     <tr> <td> <code title="">hamilt;</code> </td> <td> U+0210B </td> </tr>
     <tr> <td> <code title="">hardcy;</code> </td> <td> U+0044A </td> </tr>
     <tr> <td> <code title="">harr;</code> </td> <td> U+02194 </td> </tr>
     <tr> <td> <code title="">harrcir;</code> </td> <td> U+02948 </td> </tr>
     <tr> <td> <code title="">harrw;</code> </td> <td> U+021AD </td> </tr>
     <tr> <td> <code title="">hbar;</code> </td> <td> U+0210F </td> </tr>
     <tr> <td> <code title="">hcirc;</code> </td> <td> U+00125 </td> </tr>
     <tr> <td> <code title="">hearts;</code> </td> <td> U+02665 </td> </tr>
     <tr> <td> <code title="">heartsuit;</code> </td> <td> U+02665 </td> </tr>
     <tr> <td> <code title="">hellip;</code> </td> <td> U+02026 </td> </tr>
     <tr> <td> <code title="">hercon;</code> </td> <td> U+022B9 </td> </tr>
     <tr> <td> <code title="">hfr;</code> </td> <td> U+1D525 </td> </tr>
     <tr> <td> <code title="">hksearow;</code> </td> <td> U+02925 </td> </tr>
     <tr> <td> <code title="">hkswarow;</code> </td> <td> U+02926 </td> </tr>
     <tr> <td> <code title="">hoarr;</code> </td> <td> U+021FF </td> </tr>
     <tr> <td> <code title="">homtht;</code> </td> <td> U+0223B </td> </tr>
     <tr> <td> <code title="">hookleftarrow;</code> </td> <td> U+021A9 </td> </tr>
     <tr> <td> <code title="">hookrightarrow;</code> </td> <td> U+021AA </td> </tr>
     <tr> <td> <code title="">hopf;</code> </td> <td> U+1D559 </td> </tr>
     <tr> <td> <code title="">horbar;</code> </td> <td> U+02015 </td> </tr>
     <tr> <td> <code title="">hscr;</code> </td> <td> U+1D4BD </td> </tr>
     <tr> <td> <code title="">hslash;</code> </td> <td> U+0210F </td> </tr>
     <tr> <td> <code title="">hstrok;</code> </td> <td> U+00127 </td> </tr>
     <tr> <td> <code title="">hybull;</code> </td> <td> U+02043 </td> </tr>
     <tr> <td> <code title="">hyphen;</code> </td> <td> U+02010 </td> </tr>
     <tr> <td> <code title="">iacute;</code> </td> <td> U+000ED </td> </tr>
     <tr> <td> <code title="">iacute</code> </td> <td> U+000ED </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ic;</code> </td> <td> U+02063 </td> </tr>
     <tr> <td> <code title="">icirc;</code> </td> <td> U+000EE </td> </tr>
     <tr> <td> <code title="">icirc</code> </td> <td> U+000EE </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">icy;</code> </td> <td> U+00438 </td> </tr>
     <tr> <td> <code title="">iecy;</code> </td> <td> U+00435 </td> </tr>
     <tr> <td> <code title="">iexcl;</code> </td> <td> U+000A1 </td> </tr>
     <tr> <td> <code title="">iexcl</code> </td> <td> U+000A1 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">iff;</code> </td> <td> U+021D4 </td> </tr>
     <tr> <td> <code title="">ifr;</code> </td> <td> U+1D526 </td> </tr>
     <tr> <td> <code title="">igrave;</code> </td> <td> U+000EC </td> </tr>
     <tr> <td> <code title="">igrave</code> </td> <td> U+000EC </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ii;</code> </td> <td> U+02148 </td> </tr>
     <tr> <td> <code title="">iiiint;</code> </td> <td> U+02A0C </td> </tr>
     <tr> <td> <code title="">iiint;</code> </td> <td> U+0222D </td> </tr>
     <tr> <td> <code title="">iinfin;</code> </td> <td> U+029DC </td> </tr>
     <tr> <td> <code title="">iiota;</code> </td> <td> U+02129 </td> </tr>
     <tr> <td> <code title="">ijlig;</code> </td> <td> U+00133 </td> </tr>
     <tr> <td> <code title="">imacr;</code> </td> <td> U+0012B </td> </tr>
     <tr> <td> <code title="">image;</code> </td> <td> U+02111 </td> </tr>
     <tr> <td> <code title="">imagline;</code> </td> <td> U+02110 </td> </tr>
     <tr> <td> <code title="">imagpart;</code> </td> <td> U+02111 </td> </tr>
     <tr> <td> <code title="">imath;</code> </td> <td> U+00131 </td> </tr>
     <tr> <td> <code title="">imof;</code> </td> <td> U+022B7 </td> </tr>
     <tr> <td> <code title="">imped;</code> </td> <td> U+001B5 </td> </tr>
     <tr> <td> <code title="">in;</code> </td> <td> U+02208 </td> </tr>
     <tr> <td> <code title="">incare;</code> </td> <td> U+02105 </td> </tr>
     <tr> <td> <code title="">infin;</code> </td> <td> U+0221E </td> </tr>
     <tr> <td> <code title="">infintie;</code> </td> <td> U+029DD </td> </tr>
     <tr> <td> <code title="">inodot;</code> </td> <td> U+00131 </td> </tr>
     <tr> <td> <code title="">int;</code> </td> <td> U+0222B </td> </tr>
     <tr> <td> <code title="">intcal;</code> </td> <td> U+022BA </td> </tr>
     <tr> <td> <code title="">integers;</code> </td> <td> U+02124 </td> </tr>
     <tr> <td> <code title="">intercal;</code> </td> <td> U+022BA </td> </tr>
     <tr> <td> <code title="">intlarhk;</code> </td> <td> U+02A17 </td> </tr>
     <tr> <td> <code title="">intprod;</code> </td> <td> U+02A3C </td> </tr>
     <tr> <td> <code title="">iocy;</code> </td> <td> U+00451 </td> </tr>
     <tr> <td> <code title="">iogon;</code> </td> <td> U+0012F </td> </tr>
     <tr> <td> <code title="">iopf;</code> </td> <td> U+1D55A </td> </tr>
     <tr> <td> <code title="">iota;</code> </td> <td> U+003B9 </td> </tr>
     <tr> <td> <code title="">iprod;</code> </td> <td> U+02A3C </td> </tr>
     <tr> <td> <code title="">iquest;</code> </td> <td> U+000BF </td> </tr>
     <tr> <td> <code title="">iquest</code> </td> <td> U+000BF </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">iscr;</code> </td> <td> U+1D4BE </td> </tr>
     <tr> <td> <code title="">isin;</code> </td> <td> U+02208 </td> </tr>
     <tr> <td> <code title="">isinE;</code> </td> <td> U+022F9 </td> </tr>
     <tr> <td> <code title="">isindot;</code> </td> <td> U+022F5 </td> </tr>
     <tr> <td> <code title="">isins;</code> </td> <td> U+022F4 </td> </tr>
     <tr> <td> <code title="">isinsv;</code> </td> <td> U+022F3 </td> </tr>
     <tr> <td> <code title="">isinv;</code> </td> <td> U+02208 </td> </tr>
     <tr> <td> <code title="">it;</code> </td> <td> U+02062 </td> </tr>
     <tr> <td> <code title="">itilde;</code> </td> <td> U+00129 </td> </tr>
     <tr> <td> <code title="">iukcy;</code> </td> <td> U+00456 </td> </tr>
     <tr> <td> <code title="">iuml;</code> </td> <td> U+000EF </td> </tr>
     <tr> <td> <code title="">iuml</code> </td> <td> U+000EF </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">jcirc;</code> </td> <td> U+00135 </td> </tr>
     <tr> <td> <code title="">jcy;</code> </td> <td> U+00439 </td> </tr>
     <tr> <td> <code title="">jfr;</code> </td> <td> U+1D527 </td> </tr>
     <tr> <td> <code title="">jmath;</code> </td> <td> U+00237 </td> </tr>
     <tr> <td> <code title="">jopf;</code> </td> <td> U+1D55B </td> </tr>
     <tr> <td> <code title="">jscr;</code> </td> <td> U+1D4BF </td> </tr>
     <tr> <td> <code title="">jsercy;</code> </td> <td> U+00458 </td> </tr>
     <tr> <td> <code title="">jukcy;</code> </td> <td> U+00454 </td> </tr>
     <tr> <td> <code title="">kappa;</code> </td> <td> U+003BA </td> </tr>
     <tr> <td> <code title="">kappav;</code> </td> <td> U+003F0 </td> </tr>
     <tr> <td> <code title="">kcedil;</code> </td> <td> U+00137 </td> </tr>
     <tr> <td> <code title="">kcy;</code> </td> <td> U+0043A </td> </tr>
     <tr> <td> <code title="">kfr;</code> </td> <td> U+1D528 </td> </tr>
     <tr> <td> <code title="">kgreen;</code> </td> <td> U+00138 </td> </tr>
     <tr> <td> <code title="">khcy;</code> </td> <td> U+00445 </td> </tr>
     <tr> <td> <code title="">kjcy;</code> </td> <td> U+0045C </td> </tr>
     <tr> <td> <code title="">kopf;</code> </td> <td> U+1D55C </td> </tr>
     <tr> <td> <code title="">kscr;</code> </td> <td> U+1D4C0 </td> </tr>
     <tr> <td> <code title="">lAarr;</code> </td> <td> U+021DA </td> </tr>
     <tr> <td> <code title="">lArr;</code> </td> <td> U+021D0 </td> </tr>
     <tr> <td> <code title="">lAtail;</code> </td> <td> U+0291B </td> </tr>
     <tr> <td> <code title="">lBarr;</code> </td> <td> U+0290E </td> </tr>
     <tr> <td> <code title="">lE;</code> </td> <td> U+02266 </td> </tr>
     <tr> <td> <code title="">lEg;</code> </td> <td> U+02A8B </td> </tr>
     <tr> <td> <code title="">lHar;</code> </td> <td> U+02962 </td> </tr>
     <tr> <td> <code title="">lacute;</code> </td> <td> U+0013A </td> </tr>
     <tr> <td> <code title="">laemptyv;</code> </td> <td> U+029B4 </td> </tr>
     <tr> <td> <code title="">lagran;</code> </td> <td> U+02112 </td> </tr>
     <tr> <td> <code title="">lambda;</code> </td> <td> U+003BB </td> </tr>
     <tr> <td> <code title="">lang;</code> </td> <td> U+027E8 </td> </tr>
     <tr> <td> <code title="">langd;</code> </td> <td> U+02991 </td> </tr>
     <tr> <td> <code title="">langle;</code> </td> <td> U+027E8 </td> </tr>
     <tr> <td> <code title="">lap;</code> </td> <td> U+02A85 </td> </tr>
     <tr> <td> <code title="">laquo;</code> </td> <td> U+000AB </td> </tr>
     <tr> <td> <code title="">laquo</code> </td> <td> U+000AB </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">larr;</code> </td> <td> U+02190 </td> </tr>
     <tr> <td> <code title="">larrb;</code> </td> <td> U+021E4 </td> </tr>
     <tr> <td> <code title="">larrbfs;</code> </td> <td> U+0291F </td> </tr>
     <tr> <td> <code title="">larrfs;</code> </td> <td> U+0291D </td> </tr>
     <tr> <td> <code title="">larrhk;</code> </td> <td> U+021A9 </td> </tr>
     <tr> <td> <code title="">larrlp;</code> </td> <td> U+021AB </td> </tr>
     <tr> <td> <code title="">larrpl;</code> </td> <td> U+02939 </td> </tr>
     <tr> <td> <code title="">larrsim;</code> </td> <td> U+02973 </td> </tr>
     <tr> <td> <code title="">larrtl;</code> </td> <td> U+021A2 </td> </tr>
     <tr> <td> <code title="">lat;</code> </td> <td> U+02AAB </td> </tr>
     <tr> <td> <code title="">latail;</code> </td> <td> U+02919 </td> </tr>
     <tr> <td> <code title="">late;</code> </td> <td> U+02AAD </td> </tr>
     <tr> <td> <code title="">lbarr;</code> </td> <td> U+0290C </td> </tr>
     <tr> <td> <code title="">lbbrk;</code> </td> <td> U+02772 </td> </tr>
     <tr> <td> <code title="">lbrace;</code> </td> <td> U+0007B </td> </tr>
     <tr> <td> <code title="">lbrack;</code> </td> <td> U+0005B </td> </tr>
     <tr> <td> <code title="">lbrke;</code> </td> <td> U+0298B </td> </tr>
     <tr> <td> <code title="">lbrksld;</code> </td> <td> U+0298F </td> </tr>
     <tr> <td> <code title="">lbrkslu;</code> </td> <td> U+0298D </td> </tr>
     <tr> <td> <code title="">lcaron;</code> </td> <td> U+0013E </td> </tr>
     <tr> <td> <code title="">lcedil;</code> </td> <td> U+0013C </td> </tr>
     <tr> <td> <code title="">lceil;</code> </td> <td> U+02308 </td> </tr>
     <tr> <td> <code title="">lcub;</code> </td> <td> U+0007B </td> </tr>
     <tr> <td> <code title="">lcy;</code> </td> <td> U+0043B </td> </tr>
     <tr> <td> <code title="">ldca;</code> </td> <td> U+02936 </td> </tr>
     <tr> <td> <code title="">ldquo;</code> </td> <td> U+0201C </td> </tr>
     <tr> <td> <code title="">ldquor;</code> </td> <td> U+0201E </td> </tr>
     <tr> <td> <code title="">ldrdhar;</code> </td> <td> U+02967 </td> </tr>
     <tr> <td> <code title="">ldrushar;</code> </td> <td> U+0294B </td> </tr>
     <tr> <td> <code title="">ldsh;</code> </td> <td> U+021B2 </td> </tr>
     <tr> <td> <code title="">le;</code> </td> <td> U+02264 </td> </tr>
     <tr> <td> <code title="">leftarrow;</code> </td> <td> U+02190 </td> </tr>
     <tr> <td> <code title="">leftarrowtail;</code> </td> <td> U+021A2 </td> </tr>
     <tr> <td> <code title="">leftharpoondown;</code> </td> <td> U+021BD </td> </tr>
     <tr> <td> <code title="">leftharpoonup;</code> </td> <td> U+021BC </td> </tr>
     <tr> <td> <code title="">leftleftarrows;</code> </td> <td> U+021C7 </td> </tr>
     <tr> <td> <code title="">leftrightarrow;</code> </td> <td> U+02194 </td> </tr>
     <tr> <td> <code title="">leftrightarrows;</code> </td> <td> U+021C6 </td> </tr>
     <tr> <td> <code title="">leftrightharpoons;</code> </td> <td> U+021CB </td> </tr>
     <tr> <td> <code title="">leftrightsquigarrow;</code> </td> <td> U+021AD </td> </tr>
     <tr> <td> <code title="">leftthreetimes;</code> </td> <td> U+022CB </td> </tr>
     <tr> <td> <code title="">leg;</code> </td> <td> U+022DA </td> </tr>
     <tr> <td> <code title="">leq;</code> </td> <td> U+02264 </td> </tr>
     <tr> <td> <code title="">leqq;</code> </td> <td> U+02266 </td> </tr>
     <tr> <td> <code title="">leqslant;</code> </td> <td> U+02A7D </td> </tr>
     <tr> <td> <code title="">les;</code> </td> <td> U+02A7D </td> </tr>
     <tr> <td> <code title="">lescc;</code> </td> <td> U+02AA8 </td> </tr>
     <tr> <td> <code title="">lesdot;</code> </td> <td> U+02A7F </td> </tr>
     <tr> <td> <code title="">lesdoto;</code> </td> <td> U+02A81 </td> </tr>
     <tr> <td> <code title="">lesdotor;</code> </td> <td> U+02A83 </td> </tr>
     <tr> <td> <code title="">lesges;</code> </td> <td> U+02A93 </td> </tr>
     <tr> <td> <code title="">lessapprox;</code> </td> <td> U+02A85 </td> </tr>
     <tr> <td> <code title="">lessdot;</code> </td> <td> U+022D6 </td> </tr>
     <tr> <td> <code title="">lesseqgtr;</code> </td> <td> U+022DA </td> </tr>
     <tr> <td> <code title="">lesseqqgtr;</code> </td> <td> U+02A8B </td> </tr>
     <tr> <td> <code title="">lessgtr;</code> </td> <td> U+02276 </td> </tr>
     <tr> <td> <code title="">lesssim;</code> </td> <td> U+02272 </td> </tr>
     <tr> <td> <code title="">lfisht;</code> </td> <td> U+0297C </td> </tr>
     <tr> <td> <code title="">lfloor;</code> </td> <td> U+0230A </td> </tr>
     <tr> <td> <code title="">lfr;</code> </td> <td> U+1D529 </td> </tr>
     <tr> <td> <code title="">lg;</code> </td> <td> U+02276 </td> </tr>
     <tr> <td> <code title="">lgE;</code> </td> <td> U+02A91 </td> </tr>
     <tr> <td> <code title="">lhard;</code> </td> <td> U+021BD </td> </tr>
     <tr> <td> <code title="">lharu;</code> </td> <td> U+021BC </td> </tr>
     <tr> <td> <code title="">lharul;</code> </td> <td> U+0296A </td> </tr>
     <tr> <td> <code title="">lhblk;</code> </td> <td> U+02584 </td> </tr>
     <tr> <td> <code title="">ljcy;</code> </td> <td> U+00459 </td> </tr>
     <tr> <td> <code title="">ll;</code> </td> <td> U+0226A </td> </tr>
     <tr> <td> <code title="">llarr;</code> </td> <td> U+021C7 </td> </tr>
     <tr> <td> <code title="">llcorner;</code> </td> <td> U+0231E </td> </tr>
     <tr> <td> <code title="">llhard;</code> </td> <td> U+0296B </td> </tr>
     <tr> <td> <code title="">lltri;</code> </td> <td> U+025FA </td> </tr>
     <tr> <td> <code title="">lmidot;</code> </td> <td> U+00140 </td> </tr>
     <tr> <td> <code title="">lmoust;</code> </td> <td> U+023B0 </td> </tr>
     <tr> <td> <code title="">lmoustache;</code> </td> <td> U+023B0 </td> </tr>
     <tr> <td> <code title="">lnE;</code> </td> <td> U+02268 </td> </tr>
     <tr> <td> <code title="">lnap;</code> </td> <td> U+02A89 </td> </tr>
     <tr> <td> <code title="">lnapprox;</code> </td> <td> U+02A89 </td> </tr>
     <tr> <td> <code title="">lne;</code> </td> <td> U+02A87 </td> </tr>
     <tr> <td> <code title="">lneq;</code> </td> <td> U+02A87 </td> </tr>
     <tr> <td> <code title="">lneqq;</code> </td> <td> U+02268 </td> </tr>
     <tr> <td> <code title="">lnsim;</code> </td> <td> U+022E6 </td> </tr>
     <tr> <td> <code title="">loang;</code> </td> <td> U+027EC </td> </tr>
     <tr> <td> <code title="">loarr;</code> </td> <td> U+021FD </td> </tr>
     <tr> <td> <code title="">lobrk;</code> </td> <td> U+027E6 </td> </tr>
     <tr> <td> <code title="">longleftarrow;</code> </td> <td> U+027F5 </td> </tr>
     <tr> <td> <code title="">longleftrightarrow;</code> </td> <td> U+027F7 </td> </tr>
     <tr> <td> <code title="">longmapsto;</code> </td> <td> U+027FC </td> </tr>
     <tr> <td> <code title="">longrightarrow;</code> </td> <td> U+027F6 </td> </tr>
     <tr> <td> <code title="">looparrowleft;</code> </td> <td> U+021AB </td> </tr>
     <tr> <td> <code title="">looparrowright;</code> </td> <td> U+021AC </td> </tr>
     <tr> <td> <code title="">lopar;</code> </td> <td> U+02985 </td> </tr>
     <tr> <td> <code title="">lopf;</code> </td> <td> U+1D55D </td> </tr>
     <tr> <td> <code title="">loplus;</code> </td> <td> U+02A2D </td> </tr>
     <tr> <td> <code title="">lotimes;</code> </td> <td> U+02A34 </td> </tr>
     <tr> <td> <code title="">lowast;</code> </td> <td> U+02217 </td> </tr>
     <tr> <td> <code title="">lowbar;</code> </td> <td> U+0005F </td> </tr>
     <tr> <td> <code title="">loz;</code> </td> <td> U+025CA </td> </tr>
     <tr> <td> <code title="">lozenge;</code> </td> <td> U+025CA </td> </tr>
     <tr> <td> <code title="">lozf;</code> </td> <td> U+029EB </td> </tr>
     <tr> <td> <code title="">lpar;</code> </td> <td> U+00028 </td> </tr>
     <tr> <td> <code title="">lparlt;</code> </td> <td> U+02993 </td> </tr>
     <tr> <td> <code title="">lrarr;</code> </td> <td> U+021C6 </td> </tr>
     <tr> <td> <code title="">lrcorner;</code> </td> <td> U+0231F </td> </tr>
     <tr> <td> <code title="">lrhar;</code> </td> <td> U+021CB </td> </tr>
     <tr> <td> <code title="">lrhard;</code> </td> <td> U+0296D </td> </tr>
     <tr> <td> <code title="">lrm;</code> </td> <td> U+0200E </td> </tr>
     <tr> <td> <code title="">lrtri;</code> </td> <td> U+022BF </td> </tr>
     <tr> <td> <code title="">lsaquo;</code> </td> <td> U+02039 </td> </tr>
     <tr> <td> <code title="">lscr;</code> </td> <td> U+1D4C1 </td> </tr>
     <tr> <td> <code title="">lsh;</code> </td> <td> U+021B0 </td> </tr>
     <tr> <td> <code title="">lsim;</code> </td> <td> U+02272 </td> </tr>
     <tr> <td> <code title="">lsime;</code> </td> <td> U+02A8D </td> </tr>
     <tr> <td> <code title="">lsimg;</code> </td> <td> U+02A8F </td> </tr>
     <tr> <td> <code title="">lsqb;</code> </td> <td> U+0005B </td> </tr>
     <tr> <td> <code title="">lsquo;</code> </td> <td> U+02018 </td> </tr>
     <tr> <td> <code title="">lsquor;</code> </td> <td> U+0201A </td> </tr>
     <tr> <td> <code title="">lstrok;</code> </td> <td> U+00142 </td> </tr>
     <tr> <td> <code title="">lt;</code> </td> <td> U+0003C </td> </tr>
     <tr> <td> <code title="">lt</code> </td> <td> U+0003C </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ltcc;</code> </td> <td> U+02AA6 </td> </tr>
     <tr> <td> <code title="">ltcir;</code> </td> <td> U+02A79 </td> </tr>
     <tr> <td> <code title="">ltdot;</code> </td> <td> U+022D6 </td> </tr>
     <tr> <td> <code title="">lthree;</code> </td> <td> U+022CB </td> </tr>
     <tr> <td> <code title="">ltimes;</code> </td> <td> U+022C9 </td> </tr>
     <tr> <td> <code title="">ltlarr;</code> </td> <td> U+02976 </td> </tr>
     <tr> <td> <code title="">ltquest;</code> </td> <td> U+02A7B </td> </tr>
     <tr> <td> <code title="">ltrPar;</code> </td> <td> U+02996 </td> </tr>
     <tr> <td> <code title="">ltri;</code> </td> <td> U+025C3 </td> </tr>
     <tr> <td> <code title="">ltrie;</code> </td> <td> U+022B4 </td> </tr>
     <tr> <td> <code title="">ltrif;</code> </td> <td> U+025C2 </td> </tr>
     <tr> <td> <code title="">lurdshar;</code> </td> <td> U+0294A </td> </tr>
     <tr> <td> <code title="">luruhar;</code> </td> <td> U+02966 </td> </tr>
     <tr> <td> <code title="">mDDot;</code> </td> <td> U+0223A </td> </tr>
     <tr> <td> <code title="">macr;</code> </td> <td> U+000AF </td> </tr>
     <tr> <td> <code title="">macr</code> </td> <td> U+000AF </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">male;</code> </td> <td> U+02642 </td> </tr>
     <tr> <td> <code title="">malt;</code> </td> <td> U+02720 </td> </tr>
     <tr> <td> <code title="">maltese;</code> </td> <td> U+02720 </td> </tr>
     <tr> <td> <code title="">map;</code> </td> <td> U+021A6 </td> </tr>
     <tr> <td> <code title="">mapsto;</code> </td> <td> U+021A6 </td> </tr>
     <tr> <td> <code title="">mapstodown;</code> </td> <td> U+021A7 </td> </tr>
     <tr> <td> <code title="">mapstoleft;</code> </td> <td> U+021A4 </td> </tr>
     <tr> <td> <code title="">mapstoup;</code> </td> <td> U+021A5 </td> </tr>
     <tr> <td> <code title="">marker;</code> </td> <td> U+025AE </td> </tr>
     <tr> <td> <code title="">mcomma;</code> </td> <td> U+02A29 </td> </tr>
     <tr> <td> <code title="">mcy;</code> </td> <td> U+0043C </td> </tr>
     <tr> <td> <code title="">mdash;</code> </td> <td> U+02014 </td> </tr>
     <tr> <td> <code title="">measuredangle;</code> </td> <td> U+02221 </td> </tr>
     <tr> <td> <code title="">mfr;</code> </td> <td> U+1D52A </td> </tr>
     <tr> <td> <code title="">mho;</code> </td> <td> U+02127 </td> </tr>
     <tr> <td> <code title="">micro;</code> </td> <td> U+000B5 </td> </tr>
     <tr> <td> <code title="">micro</code> </td> <td> U+000B5 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">mid;</code> </td> <td> U+02223 </td> </tr>
     <tr> <td> <code title="">midast;</code> </td> <td> U+0002A </td> </tr>
     <tr> <td> <code title="">midcir;</code> </td> <td> U+02AF0 </td> </tr>
     <tr> <td> <code title="">middot;</code> </td> <td> U+000B7 </td> </tr>
     <tr> <td> <code title="">middot</code> </td> <td> U+000B7 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">minus;</code> </td> <td> U+02212 </td> </tr>
     <tr> <td> <code title="">minusb;</code> </td> <td> U+0229F </td> </tr>
     <tr> <td> <code title="">minusd;</code> </td> <td> U+02238 </td> </tr>
     <tr> <td> <code title="">minusdu;</code> </td> <td> U+02A2A </td> </tr>
     <tr> <td> <code title="">mlcp;</code> </td> <td> U+02ADB </td> </tr>
     <tr> <td> <code title="">mldr;</code> </td> <td> U+02026 </td> </tr>
     <tr> <td> <code title="">mnplus;</code> </td> <td> U+02213 </td> </tr>
     <tr> <td> <code title="">models;</code> </td> <td> U+022A7 </td> </tr>
     <tr> <td> <code title="">mopf;</code> </td> <td> U+1D55E </td> </tr>
     <tr> <td> <code title="">mp;</code> </td> <td> U+02213 </td> </tr>
     <tr> <td> <code title="">mscr;</code> </td> <td> U+1D4C2 </td> </tr>
     <tr> <td> <code title="">mstpos;</code> </td> <td> U+0223E </td> </tr>
     <tr> <td> <code title="">mu;</code> </td> <td> U+003BC </td> </tr>
     <tr> <td> <code title="">multimap;</code> </td> <td> U+022B8 </td> </tr>
     <tr> <td> <code title="">mumap;</code> </td> <td> U+022B8 </td> </tr>
     <tr> <td> <code title="">nLeftarrow;</code> </td> <td> U+021CD </td> </tr>
     <tr> <td> <code title="">nLeftrightarrow;</code> </td> <td> U+021CE </td> </tr>
     <tr> <td> <code title="">nRightarrow;</code> </td> <td> U+021CF </td> </tr>
     <tr> <td> <code title="">nVDash;</code> </td> <td> U+022AF </td> </tr>
     <tr> <td> <code title="">nVdash;</code> </td> <td> U+022AE </td> </tr>
     <tr> <td> <code title="">nabla;</code> </td> <td> U+02207 </td> </tr>
     <tr> <td> <code title="">nacute;</code> </td> <td> U+00144 </td> </tr>
     <tr> <td> <code title="">nap;</code> </td> <td> U+02249 </td> </tr>
     <tr> <td> <code title="">napos;</code> </td> <td> U+00149 </td> </tr>
     <tr> <td> <code title="">napprox;</code> </td> <td> U+02249 </td> </tr>
     <tr> <td> <code title="">natur;</code> </td> <td> U+0266E </td> </tr>
     <tr> <td> <code title="">natural;</code> </td> <td> U+0266E </td> </tr>
     <tr> <td> <code title="">naturals;</code> </td> <td> U+02115 </td> </tr>
     <tr> <td> <code title="">nbsp;</code> </td> <td> U+000A0 </td> </tr>
     <tr> <td> <code title="">nbsp</code> </td> <td> U+000A0 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ncap;</code> </td> <td> U+02A43 </td> </tr>
     <tr> <td> <code title="">ncaron;</code> </td> <td> U+00148 </td> </tr>
     <tr> <td> <code title="">ncedil;</code> </td> <td> U+00146 </td> </tr>
     <tr> <td> <code title="">ncong;</code> </td> <td> U+02247 </td> </tr>
     <tr> <td> <code title="">ncup;</code> </td> <td> U+02A42 </td> </tr>
     <tr> <td> <code title="">ncy;</code> </td> <td> U+0043D </td> </tr>
     <tr> <td> <code title="">ndash;</code> </td> <td> U+02013 </td> </tr>
     <tr> <td> <code title="">ne;</code> </td> <td> U+02260 </td> </tr>
     <tr> <td> <code title="">neArr;</code> </td> <td> U+021D7 </td> </tr>
     <tr> <td> <code title="">nearhk;</code> </td> <td> U+02924 </td> </tr>
     <tr> <td> <code title="">nearr;</code> </td> <td> U+02197 </td> </tr>
     <tr> <td> <code title="">nearrow;</code> </td> <td> U+02197 </td> </tr>
     <tr> <td> <code title="">nequiv;</code> </td> <td> U+02262 </td> </tr>
     <tr> <td> <code title="">nesear;</code> </td> <td> U+02928 </td> </tr>
     <tr> <td> <code title="">nexist;</code> </td> <td> U+02204 </td> </tr>
     <tr> <td> <code title="">nexists;</code> </td> <td> U+02204 </td> </tr>
     <tr> <td> <code title="">nfr;</code> </td> <td> U+1D52B </td> </tr>
     <tr> <td> <code title="">nge;</code> </td> <td> U+02271 </td> </tr>
     <tr> <td> <code title="">ngeq;</code> </td> <td> U+02271 </td> </tr>
     <tr> <td> <code title="">ngsim;</code> </td> <td> U+02275 </td> </tr>
     <tr> <td> <code title="">ngt;</code> </td> <td> U+0226F </td> </tr>
     <tr> <td> <code title="">ngtr;</code> </td> <td> U+0226F </td> </tr>
     <tr> <td> <code title="">nhArr;</code> </td> <td> U+021CE </td> </tr>
     <tr> <td> <code title="">nharr;</code> </td> <td> U+021AE </td> </tr>
     <tr> <td> <code title="">nhpar;</code> </td> <td> U+02AF2 </td> </tr>
     <tr> <td> <code title="">ni;</code> </td> <td> U+0220B </td> </tr>
     <tr> <td> <code title="">nis;</code> </td> <td> U+022FC </td> </tr>
     <tr> <td> <code title="">nisd;</code> </td> <td> U+022FA </td> </tr>
     <tr> <td> <code title="">niv;</code> </td> <td> U+0220B </td> </tr>
     <tr> <td> <code title="">njcy;</code> </td> <td> U+0045A </td> </tr>
     <tr> <td> <code title="">nlArr;</code> </td> <td> U+021CD </td> </tr>
     <tr> <td> <code title="">nlarr;</code> </td> <td> U+0219A </td> </tr>
     <tr> <td> <code title="">nldr;</code> </td> <td> U+02025 </td> </tr>
     <tr> <td> <code title="">nle;</code> </td> <td> U+02270 </td> </tr>
     <tr> <td> <code title="">nleftarrow;</code> </td> <td> U+0219A </td> </tr>
     <tr> <td> <code title="">nleftrightarrow;</code> </td> <td> U+021AE </td> </tr>
     <tr> <td> <code title="">nleq;</code> </td> <td> U+02270 </td> </tr>
     <tr> <td> <code title="">nless;</code> </td> <td> U+0226E </td> </tr>
     <tr> <td> <code title="">nlsim;</code> </td> <td> U+02274 </td> </tr>
     <tr> <td> <code title="">nlt;</code> </td> <td> U+0226E </td> </tr>
     <tr> <td> <code title="">nltri;</code> </td> <td> U+022EA </td> </tr>
     <tr> <td> <code title="">nltrie;</code> </td> <td> U+022EC </td> </tr>
     <tr> <td> <code title="">nmid;</code> </td> <td> U+02224 </td> </tr>
     <tr> <td> <code title="">nopf;</code> </td> <td> U+1D55F </td> </tr>
     <tr> <td> <code title="">not;</code> </td> <td> U+000AC </td> </tr>
     <tr> <td> <code title="">not</code> </td> <td> U+000AC </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">notin;</code> </td> <td> U+02209 </td> </tr>
     <tr> <td> <code title="">notinva;</code> </td> <td> U+02209 </td> </tr>
     <tr> <td> <code title="">notinvb;</code> </td> <td> U+022F7 </td> </tr>
     <tr> <td> <code title="">notinvc;</code> </td> <td> U+022F6 </td> </tr>
     <tr> <td> <code title="">notni;</code> </td> <td> U+0220C </td> </tr>
     <tr> <td> <code title="">notniva;</code> </td> <td> U+0220C </td> </tr>
     <tr> <td> <code title="">notnivb;</code> </td> <td> U+022FE </td> </tr>
     <tr> <td> <code title="">notnivc;</code> </td> <td> U+022FD </td> </tr>
     <tr> <td> <code title="">npar;</code> </td> <td> U+02226 </td> </tr>
     <tr> <td> <code title="">nparallel;</code> </td> <td> U+02226 </td> </tr>
     <tr> <td> <code title="">npolint;</code> </td> <td> U+02A14 </td> </tr>
     <tr> <td> <code title="">npr;</code> </td> <td> U+02280 </td> </tr>
     <tr> <td> <code title="">nprcue;</code> </td> <td> U+022E0 </td> </tr>
     <tr> <td> <code title="">nprec;</code> </td> <td> U+02280 </td> </tr>
     <tr> <td> <code title="">nrArr;</code> </td> <td> U+021CF </td> </tr>
     <tr> <td> <code title="">nrarr;</code> </td> <td> U+0219B </td> </tr>
     <tr> <td> <code title="">nrightarrow;</code> </td> <td> U+0219B </td> </tr>
     <tr> <td> <code title="">nrtri;</code> </td> <td> U+022EB </td> </tr>
     <tr> <td> <code title="">nrtrie;</code> </td> <td> U+022ED </td> </tr>
     <tr> <td> <code title="">nsc;</code> </td> <td> U+02281 </td> </tr>
     <tr> <td> <code title="">nsccue;</code> </td> <td> U+022E1 </td> </tr>
     <tr> <td> <code title="">nscr;</code> </td> <td> U+1D4C3 </td> </tr>
     <tr> <td> <code title="">nshortmid;</code> </td> <td> U+02224 </td> </tr>
     <tr> <td> <code title="">nshortparallel;</code> </td> <td> U+02226 </td> </tr>
     <tr> <td> <code title="">nsim;</code> </td> <td> U+02241 </td> </tr>
     <tr> <td> <code title="">nsime;</code> </td> <td> U+02244 </td> </tr>
     <tr> <td> <code title="">nsimeq;</code> </td> <td> U+02244 </td> </tr>
     <tr> <td> <code title="">nsmid;</code> </td> <td> U+02224 </td> </tr>
     <tr> <td> <code title="">nspar;</code> </td> <td> U+02226 </td> </tr>
     <tr> <td> <code title="">nsqsube;</code> </td> <td> U+022E2 </td> </tr>
     <tr> <td> <code title="">nsqsupe;</code> </td> <td> U+022E3 </td> </tr>
     <tr> <td> <code title="">nsub;</code> </td> <td> U+02284 </td> </tr>
     <tr> <td> <code title="">nsube;</code> </td> <td> U+02288 </td> </tr>
     <tr> <td> <code title="">nsubseteq;</code> </td> <td> U+02288 </td> </tr>
     <tr> <td> <code title="">nsucc;</code> </td> <td> U+02281 </td> </tr>
     <tr> <td> <code title="">nsup;</code> </td> <td> U+02285 </td> </tr>
     <tr> <td> <code title="">nsupe;</code> </td> <td> U+02289 </td> </tr>
     <tr> <td> <code title="">nsupseteq;</code> </td> <td> U+02289 </td> </tr>
     <tr> <td> <code title="">ntgl;</code> </td> <td> U+02279 </td> </tr>
     <tr> <td> <code title="">ntilde;</code> </td> <td> U+000F1 </td> </tr>
     <tr> <td> <code title="">ntilde</code> </td> <td> U+000F1 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ntlg;</code> </td> <td> U+02278 </td> </tr>
     <tr> <td> <code title="">ntriangleleft;</code> </td> <td> U+022EA </td> </tr>
     <tr> <td> <code title="">ntrianglelefteq;</code> </td> <td> U+022EC </td> </tr>
     <tr> <td> <code title="">ntriangleright;</code> </td> <td> U+022EB </td> </tr>
     <tr> <td> <code title="">ntrianglerighteq;</code> </td> <td> U+022ED </td> </tr>
     <tr> <td> <code title="">nu;</code> </td> <td> U+003BD </td> </tr>
     <tr> <td> <code title="">num;</code> </td> <td> U+00023 </td> </tr>
     <tr> <td> <code title="">numero;</code> </td> <td> U+02116 </td> </tr>
     <tr> <td> <code title="">numsp;</code> </td> <td> U+02007 </td> </tr>
     <tr> <td> <code title="">nvDash;</code> </td> <td> U+022AD </td> </tr>
     <tr> <td> <code title="">nvHarr;</code> </td> <td> U+02904 </td> </tr>
     <tr> <td> <code title="">nvdash;</code> </td> <td> U+022AC </td> </tr>
     <tr> <td> <code title="">nvinfin;</code> </td> <td> U+029DE </td> </tr>
     <tr> <td> <code title="">nvlArr;</code> </td> <td> U+02902 </td> </tr>
     <tr> <td> <code title="">nvrArr;</code> </td> <td> U+02903 </td> </tr>
     <tr> <td> <code title="">nwArr;</code> </td> <td> U+021D6 </td> </tr>
     <tr> <td> <code title="">nwarhk;</code> </td> <td> U+02923 </td> </tr>
     <tr> <td> <code title="">nwarr;</code> </td> <td> U+02196 </td> </tr>
     <tr> <td> <code title="">nwarrow;</code> </td> <td> U+02196 </td> </tr>
     <tr> <td> <code title="">nwnear;</code> </td> <td> U+02927 </td> </tr>
     <tr> <td> <code title="">oS;</code> </td> <td> U+024C8 </td> </tr>
     <tr> <td> <code title="">oacute;</code> </td> <td> U+000F3 </td> </tr>
     <tr> <td> <code title="">oacute</code> </td> <td> U+000F3 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">oast;</code> </td> <td> U+0229B </td> </tr>
     <tr> <td> <code title="">ocir;</code> </td> <td> U+0229A </td> </tr>
     <tr> <td> <code title="">ocirc;</code> </td> <td> U+000F4 </td> </tr>
     <tr> <td> <code title="">ocirc</code> </td> <td> U+000F4 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ocy;</code> </td> <td> U+0043E </td> </tr>
     <tr> <td> <code title="">odash;</code> </td> <td> U+0229D </td> </tr>
     <tr> <td> <code title="">odblac;</code> </td> <td> U+00151 </td> </tr>
     <tr> <td> <code title="">odiv;</code> </td> <td> U+02A38 </td> </tr>
     <tr> <td> <code title="">odot;</code> </td> <td> U+02299 </td> </tr>
     <tr> <td> <code title="">odsold;</code> </td> <td> U+029BC </td> </tr>
     <tr> <td> <code title="">oelig;</code> </td> <td> U+00153 </td> </tr>
     <tr> <td> <code title="">ofcir;</code> </td> <td> U+029BF </td> </tr>
     <tr> <td> <code title="">ofr;</code> </td> <td> U+1D52C </td> </tr>
     <tr> <td> <code title="">ogon;</code> </td> <td> U+002DB </td> </tr>
     <tr> <td> <code title="">ograve;</code> </td> <td> U+000F2 </td> </tr>
     <tr> <td> <code title="">ograve</code> </td> <td> U+000F2 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ogt;</code> </td> <td> U+029C1 </td> </tr>
     <tr> <td> <code title="">ohbar;</code> </td> <td> U+029B5 </td> </tr>
     <tr> <td> <code title="">ohm;</code> </td> <td> U+02126 </td> </tr>
     <tr> <td> <code title="">oint;</code> </td> <td> U+0222E </td> </tr>
     <tr> <td> <code title="">olarr;</code> </td> <td> U+021BA </td> </tr>
     <tr> <td> <code title="">olcir;</code> </td> <td> U+029BE </td> </tr>
     <tr> <td> <code title="">olcross;</code> </td> <td> U+029BB </td> </tr>
     <tr> <td> <code title="">oline;</code> </td> <td> U+0203E </td> </tr>
     <tr> <td> <code title="">olt;</code> </td> <td> U+029C0 </td> </tr>
     <tr> <td> <code title="">omacr;</code> </td> <td> U+0014D </td> </tr>
     <tr> <td> <code title="">omega;</code> </td> <td> U+003C9 </td> </tr>
     <tr> <td> <code title="">omicron;</code> </td> <td> U+003BF </td> </tr>
     <tr> <td> <code title="">omid;</code> </td> <td> U+029B6 </td> </tr>
     <tr> <td> <code title="">ominus;</code> </td> <td> U+02296 </td> </tr>
     <tr> <td> <code title="">oopf;</code> </td> <td> U+1D560 </td> </tr>
     <tr> <td> <code title="">opar;</code> </td> <td> U+029B7 </td> </tr>
     <tr> <td> <code title="">operp;</code> </td> <td> U+029B9 </td> </tr>
     <tr> <td> <code title="">oplus;</code> </td> <td> U+02295 </td> </tr>
     <tr> <td> <code title="">or;</code> </td> <td> U+02228 </td> </tr>
     <tr> <td> <code title="">orarr;</code> </td> <td> U+021BB </td> </tr>
     <tr> <td> <code title="">ord;</code> </td> <td> U+02A5D </td> </tr>
     <tr> <td> <code title="">order;</code> </td> <td> U+02134 </td> </tr>
     <tr> <td> <code title="">orderof;</code> </td> <td> U+02134 </td> </tr>
     <tr> <td> <code title="">ordf;</code> </td> <td> U+000AA </td> </tr>
     <tr> <td> <code title="">ordf</code> </td> <td> U+000AA </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ordm;</code> </td> <td> U+000BA </td> </tr>
     <tr> <td> <code title="">ordm</code> </td> <td> U+000BA </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">origof;</code> </td> <td> U+022B6 </td> </tr>
     <tr> <td> <code title="">oror;</code> </td> <td> U+02A56 </td> </tr>
     <tr> <td> <code title="">orslope;</code> </td> <td> U+02A57 </td> </tr>
     <tr> <td> <code title="">orv;</code> </td> <td> U+02A5B </td> </tr>
     <tr> <td> <code title="">oscr;</code> </td> <td> U+02134 </td> </tr>
     <tr> <td> <code title="">oslash;</code> </td> <td> U+000F8 </td> </tr>
     <tr> <td> <code title="">oslash</code> </td> <td> U+000F8 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">osol;</code> </td> <td> U+02298 </td> </tr>
     <tr> <td> <code title="">otilde;</code> </td> <td> U+000F5 </td> </tr>
     <tr> <td> <code title="">otilde</code> </td> <td> U+000F5 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">otimes;</code> </td> <td> U+02297 </td> </tr>
     <tr> <td> <code title="">otimesas;</code> </td> <td> U+02A36 </td> </tr>
     <tr> <td> <code title="">ouml;</code> </td> <td> U+000F6 </td> </tr>
     <tr> <td> <code title="">ouml</code> </td> <td> U+000F6 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ovbar;</code> </td> <td> U+0233D </td> </tr>
     <tr> <td> <code title="">par;</code> </td> <td> U+02225 </td> </tr>
     <tr> <td> <code title="">para;</code> </td> <td> U+000B6 </td> </tr>
     <tr> <td> <code title="">para</code> </td> <td> U+000B6 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">parallel;</code> </td> <td> U+02225 </td> </tr>
     <tr> <td> <code title="">parsim;</code> </td> <td> U+02AF3 </td> </tr>
     <tr> <td> <code title="">parsl;</code> </td> <td> U+02AFD </td> </tr>
     <tr> <td> <code title="">part;</code> </td> <td> U+02202 </td> </tr>
     <tr> <td> <code title="">pcy;</code> </td> <td> U+0043F </td> </tr>
     <tr> <td> <code title="">percnt;</code> </td> <td> U+00025 </td> </tr>
     <tr> <td> <code title="">period;</code> </td> <td> U+0002E </td> </tr>
     <tr> <td> <code title="">permil;</code> </td> <td> U+02030 </td> </tr>
     <tr> <td> <code title="">perp;</code> </td> <td> U+022A5 </td> </tr>
     <tr> <td> <code title="">pertenk;</code> </td> <td> U+02031 </td> </tr>
     <tr> <td> <code title="">pfr;</code> </td> <td> U+1D52D </td> </tr>
     <tr> <td> <code title="">phi;</code> </td> <td> U+003C6 </td> </tr>
     <tr> <td> <code title="">phiv;</code> </td> <td> U+003C6 </td> </tr>
     <tr> <td> <code title="">phmmat;</code> </td> <td> U+02133 </td> </tr>
     <tr> <td> <code title="">phone;</code> </td> <td> U+0260E </td> </tr>
     <tr> <td> <code title="">pi;</code> </td> <td> U+003C0 </td> </tr>
     <tr> <td> <code title="">pitchfork;</code> </td> <td> U+022D4 </td> </tr>
     <tr> <td> <code title="">piv;</code> </td> <td> U+003D6 </td> </tr>
     <tr> <td> <code title="">planck;</code> </td> <td> U+0210F </td> </tr>
     <tr> <td> <code title="">planckh;</code> </td> <td> U+0210E </td> </tr>
     <tr> <td> <code title="">plankv;</code> </td> <td> U+0210F </td> </tr>
     <tr> <td> <code title="">plus;</code> </td> <td> U+0002B </td> </tr>
     <tr> <td> <code title="">plusacir;</code> </td> <td> U+02A23 </td> </tr>
     <tr> <td> <code title="">plusb;</code> </td> <td> U+0229E </td> </tr>
     <tr> <td> <code title="">pluscir;</code> </td> <td> U+02A22 </td> </tr>
     <tr> <td> <code title="">plusdo;</code> </td> <td> U+02214 </td> </tr>
     <tr> <td> <code title="">plusdu;</code> </td> <td> U+02A25 </td> </tr>
     <tr> <td> <code title="">pluse;</code> </td> <td> U+02A72 </td> </tr>
     <tr> <td> <code title="">plusmn;</code> </td> <td> U+000B1 </td> </tr>
     <tr> <td> <code title="">plusmn</code> </td> <td> U+000B1 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">plussim;</code> </td> <td> U+02A26 </td> </tr>
     <tr> <td> <code title="">plustwo;</code> </td> <td> U+02A27 </td> </tr>
     <tr> <td> <code title="">pm;</code> </td> <td> U+000B1 </td> </tr>
     <tr> <td> <code title="">pointint;</code> </td> <td> U+02A15 </td> </tr>
     <tr> <td> <code title="">popf;</code> </td> <td> U+1D561 </td> </tr>
     <tr> <td> <code title="">pound;</code> </td> <td> U+000A3 </td> </tr>
     <tr> <td> <code title="">pound</code> </td> <td> U+000A3 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">pr;</code> </td> <td> U+0227A </td> </tr>
     <tr> <td> <code title="">prE;</code> </td> <td> U+02AB3 </td> </tr>
     <tr> <td> <code title="">prap;</code> </td> <td> U+02AB7 </td> </tr>
     <tr> <td> <code title="">prcue;</code> </td> <td> U+0227C </td> </tr>
     <tr> <td> <code title="">pre;</code> </td> <td> U+02AAF </td> </tr>
     <tr> <td> <code title="">prec;</code> </td> <td> U+0227A </td> </tr>
     <tr> <td> <code title="">precapprox;</code> </td> <td> U+02AB7 </td> </tr>
     <tr> <td> <code title="">preccurlyeq;</code> </td> <td> U+0227C </td> </tr>
     <tr> <td> <code title="">preceq;</code> </td> <td> U+02AAF </td> </tr>
     <tr> <td> <code title="">precnapprox;</code> </td> <td> U+02AB9 </td> </tr>
     <tr> <td> <code title="">precneqq;</code> </td> <td> U+02AB5 </td> </tr>
     <tr> <td> <code title="">precnsim;</code> </td> <td> U+022E8 </td> </tr>
     <tr> <td> <code title="">precsim;</code> </td> <td> U+0227E </td> </tr>
     <tr> <td> <code title="">prime;</code> </td> <td> U+02032 </td> </tr>
     <tr> <td> <code title="">primes;</code> </td> <td> U+02119 </td> </tr>
     <tr> <td> <code title="">prnE;</code> </td> <td> U+02AB5 </td> </tr>
     <tr> <td> <code title="">prnap;</code> </td> <td> U+02AB9 </td> </tr>
     <tr> <td> <code title="">prnsim;</code> </td> <td> U+022E8 </td> </tr>
     <tr> <td> <code title="">prod;</code> </td> <td> U+0220F </td> </tr>
     <tr> <td> <code title="">profalar;</code> </td> <td> U+0232E </td> </tr>
     <tr> <td> <code title="">profline;</code> </td> <td> U+02312 </td> </tr>
     <tr> <td> <code title="">profsurf;</code> </td> <td> U+02313 </td> </tr>
     <tr> <td> <code title="">prop;</code> </td> <td> U+0221D </td> </tr>
     <tr> <td> <code title="">propto;</code> </td> <td> U+0221D </td> </tr>
     <tr> <td> <code title="">prsim;</code> </td> <td> U+0227E </td> </tr>
     <tr> <td> <code title="">prurel;</code> </td> <td> U+022B0 </td> </tr>
     <tr> <td> <code title="">pscr;</code> </td> <td> U+1D4C5 </td> </tr>
     <tr> <td> <code title="">psi;</code> </td> <td> U+003C8 </td> </tr>
     <tr> <td> <code title="">puncsp;</code> </td> <td> U+02008 </td> </tr>
     <tr> <td> <code title="">qfr;</code> </td> <td> U+1D52E </td> </tr>
     <tr> <td> <code title="">qint;</code> </td> <td> U+02A0C </td> </tr>
     <tr> <td> <code title="">qopf;</code> </td> <td> U+1D562 </td> </tr>
     <tr> <td> <code title="">qprime;</code> </td> <td> U+02057 </td> </tr>
     <tr> <td> <code title="">qscr;</code> </td> <td> U+1D4C6 </td> </tr>
     <tr> <td> <code title="">quaternions;</code> </td> <td> U+0210D </td> </tr>
     <tr> <td> <code title="">quatint;</code> </td> <td> U+02A16 </td> </tr>
     <tr> <td> <code title="">quest;</code> </td> <td> U+0003F </td> </tr>
     <tr> <td> <code title="">questeq;</code> </td> <td> U+0225F </td> </tr>
     <tr> <td> <code title="">quot;</code> </td> <td> U+00022 </td> </tr>
     <tr> <td> <code title="">quot</code> </td> <td> U+00022 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">rAarr;</code> </td> <td> U+021DB </td> </tr>
     <tr> <td> <code title="">rArr;</code> </td> <td> U+021D2 </td> </tr>
     <tr> <td> <code title="">rAtail;</code> </td> <td> U+0291C </td> </tr>
     <tr> <td> <code title="">rBarr;</code> </td> <td> U+0290F </td> </tr>
     <tr> <td> <code title="">rHar;</code> </td> <td> U+02964 </td> </tr>
     <tr> <td> <code title="">race;</code> </td> <td> U+029DA </td> </tr>
     <tr> <td> <code title="">racute;</code> </td> <td> U+00155 </td> </tr>
     <tr> <td> <code title="">radic;</code> </td> <td> U+0221A </td> </tr>
     <tr> <td> <code title="">raemptyv;</code> </td> <td> U+029B3 </td> </tr>
     <tr> <td> <code title="">rang;</code> </td> <td> U+027E9 </td> </tr>
     <tr> <td> <code title="">rangd;</code> </td> <td> U+02992 </td> </tr>
     <tr> <td> <code title="">range;</code> </td> <td> U+029A5 </td> </tr>
     <tr> <td> <code title="">rangle;</code> </td> <td> U+027E9 </td> </tr>
     <tr> <td> <code title="">raquo;</code> </td> <td> U+000BB </td> </tr>
     <tr> <td> <code title="">raquo</code> </td> <td> U+000BB </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">rarr;</code> </td> <td> U+02192 </td> </tr>
     <tr> <td> <code title="">rarrap;</code> </td> <td> U+02975 </td> </tr>
     <tr> <td> <code title="">rarrb;</code> </td> <td> U+021E5 </td> </tr>
     <tr> <td> <code title="">rarrbfs;</code> </td> <td> U+02920 </td> </tr>
     <tr> <td> <code title="">rarrc;</code> </td> <td> U+02933 </td> </tr>
     <tr> <td> <code title="">rarrfs;</code> </td> <td> U+0291E </td> </tr>
     <tr> <td> <code title="">rarrhk;</code> </td> <td> U+021AA </td> </tr>
     <tr> <td> <code title="">rarrlp;</code> </td> <td> U+021AC </td> </tr>
     <tr> <td> <code title="">rarrpl;</code> </td> <td> U+02945 </td> </tr>
     <tr> <td> <code title="">rarrsim;</code> </td> <td> U+02974 </td> </tr>
     <tr> <td> <code title="">rarrtl;</code> </td> <td> U+021A3 </td> </tr>
     <tr> <td> <code title="">rarrw;</code> </td> <td> U+0219D </td> </tr>
     <tr> <td> <code title="">ratail;</code> </td> <td> U+0291A </td> </tr>
     <tr> <td> <code title="">ratio;</code> </td> <td> U+02236 </td> </tr>
     <tr> <td> <code title="">rationals;</code> </td> <td> U+0211A </td> </tr>
     <tr> <td> <code title="">rbarr;</code> </td> <td> U+0290D </td> </tr>
     <tr> <td> <code title="">rbbrk;</code> </td> <td> U+02773 </td> </tr>
     <tr> <td> <code title="">rbrace;</code> </td> <td> U+0007D </td> </tr>
     <tr> <td> <code title="">rbrack;</code> </td> <td> U+0005D </td> </tr>
     <tr> <td> <code title="">rbrke;</code> </td> <td> U+0298C </td> </tr>
     <tr> <td> <code title="">rbrksld;</code> </td> <td> U+0298E </td> </tr>
     <tr> <td> <code title="">rbrkslu;</code> </td> <td> U+02990 </td> </tr>
     <tr> <td> <code title="">rcaron;</code> </td> <td> U+00159 </td> </tr>
     <tr> <td> <code title="">rcedil;</code> </td> <td> U+00157 </td> </tr>
     <tr> <td> <code title="">rceil;</code> </td> <td> U+02309 </td> </tr>
     <tr> <td> <code title="">rcub;</code> </td> <td> U+0007D </td> </tr>
     <tr> <td> <code title="">rcy;</code> </td> <td> U+00440 </td> </tr>
     <tr> <td> <code title="">rdca;</code> </td> <td> U+02937 </td> </tr>
     <tr> <td> <code title="">rdldhar;</code> </td> <td> U+02969 </td> </tr>
     <tr> <td> <code title="">rdquo;</code> </td> <td> U+0201D </td> </tr>
     <tr> <td> <code title="">rdquor;</code> </td> <td> U+0201D </td> </tr>
     <tr> <td> <code title="">rdsh;</code> </td> <td> U+021B3 </td> </tr>
     <tr> <td> <code title="">real;</code> </td> <td> U+0211C </td> </tr>
     <tr> <td> <code title="">realine;</code> </td> <td> U+0211B </td> </tr>
     <tr> <td> <code title="">realpart;</code> </td> <td> U+0211C </td> </tr>
     <tr> <td> <code title="">reals;</code> </td> <td> U+0211D </td> </tr>
     <tr> <td> <code title="">rect;</code> </td> <td> U+025AD </td> </tr>
     <tr> <td> <code title="">reg;</code> </td> <td> U+000AE </td> </tr>
     <tr> <td> <code title="">reg</code> </td> <td> U+000AE </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">rfisht;</code> </td> <td> U+0297D </td> </tr>
     <tr> <td> <code title="">rfloor;</code> </td> <td> U+0230B </td> </tr>
     <tr> <td> <code title="">rfr;</code> </td> <td> U+1D52F </td> </tr>
     <tr> <td> <code title="">rhard;</code> </td> <td> U+021C1 </td> </tr>
     <tr> <td> <code title="">rharu;</code> </td> <td> U+021C0 </td> </tr>
     <tr> <td> <code title="">rharul;</code> </td> <td> U+0296C </td> </tr>
     <tr> <td> <code title="">rho;</code> </td> <td> U+003C1 </td> </tr>
     <tr> <td> <code title="">rhov;</code> </td> <td> U+003F1 </td> </tr>
     <tr> <td> <code title="">rightarrow;</code> </td> <td> U+02192 </td> </tr>
     <tr> <td> <code title="">rightarrowtail;</code> </td> <td> U+021A3 </td> </tr>
     <tr> <td> <code title="">rightharpoondown;</code> </td> <td> U+021C1 </td> </tr>
     <tr> <td> <code title="">rightharpoonup;</code> </td> <td> U+021C0 </td> </tr>
     <tr> <td> <code title="">rightleftarrows;</code> </td> <td> U+021C4 </td> </tr>
     <tr> <td> <code title="">rightleftharpoons;</code> </td> <td> U+021CC </td> </tr>
     <tr> <td> <code title="">rightrightarrows;</code> </td> <td> U+021C9 </td> </tr>
     <tr> <td> <code title="">rightsquigarrow;</code> </td> <td> U+0219D </td> </tr>
     <tr> <td> <code title="">rightthreetimes;</code> </td> <td> U+022CC </td> </tr>
     <tr> <td> <code title="">ring;</code> </td> <td> U+002DA </td> </tr>
     <tr> <td> <code title="">risingdotseq;</code> </td> <td> U+02253 </td> </tr>
     <tr> <td> <code title="">rlarr;</code> </td> <td> U+021C4 </td> </tr>
     <tr> <td> <code title="">rlhar;</code> </td> <td> U+021CC </td> </tr>
     <tr> <td> <code title="">rlm;</code> </td> <td> U+0200F </td> </tr>
     <tr> <td> <code title="">rmoust;</code> </td> <td> U+023B1 </td> </tr>
     <tr> <td> <code title="">rmoustache;</code> </td> <td> U+023B1 </td> </tr>
     <tr> <td> <code title="">rnmid;</code> </td> <td> U+02AEE </td> </tr>
     <tr> <td> <code title="">roang;</code> </td> <td> U+027ED </td> </tr>
     <tr> <td> <code title="">roarr;</code> </td> <td> U+021FE </td> </tr>
     <tr> <td> <code title="">robrk;</code> </td> <td> U+027E7 </td> </tr>
     <tr> <td> <code title="">ropar;</code> </td> <td> U+02986 </td> </tr>
     <tr> <td> <code title="">ropf;</code> </td> <td> U+1D563 </td> </tr>
     <tr> <td> <code title="">roplus;</code> </td> <td> U+02A2E </td> </tr>
     <tr> <td> <code title="">rotimes;</code> </td> <td> U+02A35 </td> </tr>
     <tr> <td> <code title="">rpar;</code> </td> <td> U+00029 </td> </tr>
     <tr> <td> <code title="">rpargt;</code> </td> <td> U+02994 </td> </tr>
     <tr> <td> <code title="">rppolint;</code> </td> <td> U+02A12 </td> </tr>
     <tr> <td> <code title="">rrarr;</code> </td> <td> U+021C9 </td> </tr>
     <tr> <td> <code title="">rsaquo;</code> </td> <td> U+0203A </td> </tr>
     <tr> <td> <code title="">rscr;</code> </td> <td> U+1D4C7 </td> </tr>
     <tr> <td> <code title="">rsh;</code> </td> <td> U+021B1 </td> </tr>
     <tr> <td> <code title="">rsqb;</code> </td> <td> U+0005D </td> </tr>
     <tr> <td> <code title="">rsquo;</code> </td> <td> U+02019 </td> </tr>
     <tr> <td> <code title="">rsquor;</code> </td> <td> U+02019 </td> </tr>
     <tr> <td> <code title="">rthree;</code> </td> <td> U+022CC </td> </tr>
     <tr> <td> <code title="">rtimes;</code> </td> <td> U+022CA </td> </tr>
     <tr> <td> <code title="">rtri;</code> </td> <td> U+025B9 </td> </tr>
     <tr> <td> <code title="">rtrie;</code> </td> <td> U+022B5 </td> </tr>
     <tr> <td> <code title="">rtrif;</code> </td> <td> U+025B8 </td> </tr>
     <tr> <td> <code title="">rtriltri;</code> </td> <td> U+029CE </td> </tr>
     <tr> <td> <code title="">ruluhar;</code> </td> <td> U+02968 </td> </tr>
     <tr> <td> <code title="">rx;</code> </td> <td> U+0211E </td> </tr>
     <tr> <td> <code title="">sacute;</code> </td> <td> U+0015B </td> </tr>
     <tr> <td> <code title="">sbquo;</code> </td> <td> U+0201A </td> </tr>
     <tr> <td> <code title="">sc;</code> </td> <td> U+0227B </td> </tr>
     <tr> <td> <code title="">scE;</code> </td> <td> U+02AB4 </td> </tr>
     <tr> <td> <code title="">scap;</code> </td> <td> U+02AB8 </td> </tr>
     <tr> <td> <code title="">scaron;</code> </td> <td> U+00161 </td> </tr>
     <tr> <td> <code title="">sccue;</code> </td> <td> U+0227D </td> </tr>
     <tr> <td> <code title="">sce;</code> </td> <td> U+02AB0 </td> </tr>
     <tr> <td> <code title="">scedil;</code> </td> <td> U+0015F </td> </tr>
     <tr> <td> <code title="">scirc;</code> </td> <td> U+0015D </td> </tr>
     <tr> <td> <code title="">scnE;</code> </td> <td> U+02AB6 </td> </tr>
     <tr> <td> <code title="">scnap;</code> </td> <td> U+02ABA </td> </tr>
     <tr> <td> <code title="">scnsim;</code> </td> <td> U+022E9 </td> </tr>
     <tr> <td> <code title="">scpolint;</code> </td> <td> U+02A13 </td> </tr>
     <tr> <td> <code title="">scsim;</code> </td> <td> U+0227F </td> </tr>
     <tr> <td> <code title="">scy;</code> </td> <td> U+00441 </td> </tr>
     <tr> <td> <code title="">sdot;</code> </td> <td> U+022C5 </td> </tr>
     <tr> <td> <code title="">sdotb;</code> </td> <td> U+022A1 </td> </tr>
     <tr> <td> <code title="">sdote;</code> </td> <td> U+02A66 </td> </tr>
     <tr> <td> <code title="">seArr;</code> </td> <td> U+021D8 </td> </tr>
     <tr> <td> <code title="">searhk;</code> </td> <td> U+02925 </td> </tr>
     <tr> <td> <code title="">searr;</code> </td> <td> U+02198 </td> </tr>
     <tr> <td> <code title="">searrow;</code> </td> <td> U+02198 </td> </tr>
     <tr> <td> <code title="">sect;</code> </td> <td> U+000A7 </td> </tr>
     <tr> <td> <code title="">sect</code> </td> <td> U+000A7 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">semi;</code> </td> <td> U+0003B </td> </tr>
     <tr> <td> <code title="">seswar;</code> </td> <td> U+02929 </td> </tr>
     <tr> <td> <code title="">setminus;</code> </td> <td> U+02216 </td> </tr>
     <tr> <td> <code title="">setmn;</code> </td> <td> U+02216 </td> </tr>
     <tr> <td> <code title="">sext;</code> </td> <td> U+02736 </td> </tr>
     <tr> <td> <code title="">sfr;</code> </td> <td> U+1D530 </td> </tr>
     <tr> <td> <code title="">sfrown;</code> </td> <td> U+02322 </td> </tr>
     <tr> <td> <code title="">sharp;</code> </td> <td> U+0266F </td> </tr>
     <tr> <td> <code title="">shchcy;</code> </td> <td> U+00449 </td> </tr>
     <tr> <td> <code title="">shcy;</code> </td> <td> U+00448 </td> </tr>
     <tr> <td> <code title="">shortmid;</code> </td> <td> U+02223 </td> </tr>
     <tr> <td> <code title="">shortparallel;</code> </td> <td> U+02225 </td> </tr>
     <tr> <td> <code title="">shy;</code> </td> <td> U+000AD </td> </tr>
     <tr> <td> <code title="">shy</code> </td> <td> U+000AD </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">sigma;</code> </td> <td> U+003C3 </td> </tr>
     <tr> <td> <code title="">sigmaf;</code> </td> <td> U+003C2 </td> </tr>
     <tr> <td> <code title="">sigmav;</code> </td> <td> U+003C2 </td> </tr>
     <tr> <td> <code title="">sim;</code> </td> <td> U+0223C </td> </tr>
     <tr> <td> <code title="">simdot;</code> </td> <td> U+02A6A </td> </tr>
     <tr> <td> <code title="">sime;</code> </td> <td> U+02243 </td> </tr>
     <tr> <td> <code title="">simeq;</code> </td> <td> U+02243 </td> </tr>
     <tr> <td> <code title="">simg;</code> </td> <td> U+02A9E </td> </tr>
     <tr> <td> <code title="">simgE;</code> </td> <td> U+02AA0 </td> </tr>
     <tr> <td> <code title="">siml;</code> </td> <td> U+02A9D </td> </tr>
     <tr> <td> <code title="">simlE;</code> </td> <td> U+02A9F </td> </tr>
     <tr> <td> <code title="">simne;</code> </td> <td> U+02246 </td> </tr>
     <tr> <td> <code title="">simplus;</code> </td> <td> U+02A24 </td> </tr>
     <tr> <td> <code title="">simrarr;</code> </td> <td> U+02972 </td> </tr>
     <tr> <td> <code title="">slarr;</code> </td> <td> U+02190 </td> </tr>
     <tr> <td> <code title="">smallsetminus;</code> </td> <td> U+02216 </td> </tr>
     <tr> <td> <code title="">smashp;</code> </td> <td> U+02A33 </td> </tr>
     <tr> <td> <code title="">smeparsl;</code> </td> <td> U+029E4 </td> </tr>
     <tr> <td> <code title="">smid;</code> </td> <td> U+02223 </td> </tr>
     <tr> <td> <code title="">smile;</code> </td> <td> U+02323 </td> </tr>
     <tr> <td> <code title="">smt;</code> </td> <td> U+02AAA </td> </tr>
     <tr> <td> <code title="">smte;</code> </td> <td> U+02AAC </td> </tr>
     <tr> <td> <code title="">softcy;</code> </td> <td> U+0044C </td> </tr>
     <tr> <td> <code title="">sol;</code> </td> <td> U+0002F </td> </tr>
     <tr> <td> <code title="">solb;</code> </td> <td> U+029C4 </td> </tr>
     <tr> <td> <code title="">solbar;</code> </td> <td> U+0233F </td> </tr>
     <tr> <td> <code title="">sopf;</code> </td> <td> U+1D564 </td> </tr>
     <tr> <td> <code title="">spades;</code> </td> <td> U+02660 </td> </tr>
     <tr> <td> <code title="">spadesuit;</code> </td> <td> U+02660 </td> </tr>
     <tr> <td> <code title="">spar;</code> </td> <td> U+02225 </td> </tr>
     <tr> <td> <code title="">sqcap;</code> </td> <td> U+02293 </td> </tr>
     <tr> <td> <code title="">sqcup;</code> </td> <td> U+02294 </td> </tr>
     <tr> <td> <code title="">sqsub;</code> </td> <td> U+0228F </td> </tr>
     <tr> <td> <code title="">sqsube;</code> </td> <td> U+02291 </td> </tr>
     <tr> <td> <code title="">sqsubset;</code> </td> <td> U+0228F </td> </tr>
     <tr> <td> <code title="">sqsubseteq;</code> </td> <td> U+02291 </td> </tr>
     <tr> <td> <code title="">sqsup;</code> </td> <td> U+02290 </td> </tr>
     <tr> <td> <code title="">sqsupe;</code> </td> <td> U+02292 </td> </tr>
     <tr> <td> <code title="">sqsupset;</code> </td> <td> U+02290 </td> </tr>
     <tr> <td> <code title="">sqsupseteq;</code> </td> <td> U+02292 </td> </tr>
     <tr> <td> <code title="">squ;</code> </td> <td> U+025A1 </td> </tr>
     <tr> <td> <code title="">square;</code> </td> <td> U+025A1 </td> </tr>
     <tr> <td> <code title="">squarf;</code> </td> <td> U+025AA </td> </tr>
     <tr> <td> <code title="">squf;</code> </td> <td> U+025AA </td> </tr>
     <tr> <td> <code title="">srarr;</code> </td> <td> U+02192 </td> </tr>
     <tr> <td> <code title="">sscr;</code> </td> <td> U+1D4C8 </td> </tr>
     <tr> <td> <code title="">ssetmn;</code> </td> <td> U+02216 </td> </tr>
     <tr> <td> <code title="">ssmile;</code> </td> <td> U+02323 </td> </tr>
     <tr> <td> <code title="">sstarf;</code> </td> <td> U+022C6 </td> </tr>
     <tr> <td> <code title="">star;</code> </td> <td> U+02606 </td> </tr>
     <tr> <td> <code title="">starf;</code> </td> <td> U+02605 </td> </tr>
     <tr> <td> <code title="">straightepsilon;</code> </td> <td> U+003F5 </td> </tr>
     <tr> <td> <code title="">straightphi;</code> </td> <td> U+003D5 </td> </tr>
     <tr> <td> <code title="">strns;</code> </td> <td> U+000AF </td> </tr>
     <tr> <td> <code title="">sub;</code> </td> <td> U+02282 </td> </tr>
     <tr> <td> <code title="">subE;</code> </td> <td> U+02AC5 </td> </tr>
     <tr> <td> <code title="">subdot;</code> </td> <td> U+02ABD </td> </tr>
     <tr> <td> <code title="">sube;</code> </td> <td> U+02286 </td> </tr>
     <tr> <td> <code title="">subedot;</code> </td> <td> U+02AC3 </td> </tr>
     <tr> <td> <code title="">submult;</code> </td> <td> U+02AC1 </td> </tr>
     <tr> <td> <code title="">subnE;</code> </td> <td> U+02ACB </td> </tr>
     <tr> <td> <code title="">subne;</code> </td> <td> U+0228A </td> </tr>
     <tr> <td> <code title="">subplus;</code> </td> <td> U+02ABF </td> </tr>
     <tr> <td> <code title="">subrarr;</code> </td> <td> U+02979 </td> </tr>
     <tr> <td> <code title="">subset;</code> </td> <td> U+02282 </td> </tr>
     <tr> <td> <code title="">subseteq;</code> </td> <td> U+02286 </td> </tr>
     <tr> <td> <code title="">subseteqq;</code> </td> <td> U+02AC5 </td> </tr>
     <tr> <td> <code title="">subsetneq;</code> </td> <td> U+0228A </td> </tr>
     <tr> <td> <code title="">subsetneqq;</code> </td> <td> U+02ACB </td> </tr>
     <tr> <td> <code title="">subsim;</code> </td> <td> U+02AC7 </td> </tr>
     <tr> <td> <code title="">subsub;</code> </td> <td> U+02AD5 </td> </tr>
     <tr> <td> <code title="">subsup;</code> </td> <td> U+02AD3 </td> </tr>
     <tr> <td> <code title="">succ;</code> </td> <td> U+0227B </td> </tr>
     <tr> <td> <code title="">succapprox;</code> </td> <td> U+02AB8 </td> </tr>
     <tr> <td> <code title="">succcurlyeq;</code> </td> <td> U+0227D </td> </tr>
     <tr> <td> <code title="">succeq;</code> </td> <td> U+02AB0 </td> </tr>
     <tr> <td> <code title="">succnapprox;</code> </td> <td> U+02ABA </td> </tr>
     <tr> <td> <code title="">succneqq;</code> </td> <td> U+02AB6 </td> </tr>
     <tr> <td> <code title="">succnsim;</code> </td> <td> U+022E9 </td> </tr>
     <tr> <td> <code title="">succsim;</code> </td> <td> U+0227F </td> </tr>
     <tr> <td> <code title="">sum;</code> </td> <td> U+02211 </td> </tr>
     <tr> <td> <code title="">sung;</code> </td> <td> U+0266A </td> </tr>
     <tr> <td> <code title="">sup1;</code> </td> <td> U+000B9 </td> </tr>
     <tr> <td> <code title="">sup1</code> </td> <td> U+000B9 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">sup2;</code> </td> <td> U+000B2 </td> </tr>
     <tr> <td> <code title="">sup2</code> </td> <td> U+000B2 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">sup3;</code> </td> <td> U+000B3 </td> </tr>
     <tr> <td> <code title="">sup3</code> </td> <td> U+000B3 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">sup;</code> </td> <td> U+02283 </td> </tr>
     <tr> <td> <code title="">supE;</code> </td> <td> U+02AC6 </td> </tr>
     <tr> <td> <code title="">supdot;</code> </td> <td> U+02ABE </td> </tr>
     <tr> <td> <code title="">supdsub;</code> </td> <td> U+02AD8 </td> </tr>
     <tr> <td> <code title="">supe;</code> </td> <td> U+02287 </td> </tr>
     <tr> <td> <code title="">supedot;</code> </td> <td> U+02AC4 </td> </tr>
     <tr> <td> <code title="">suphsub;</code> </td> <td> U+02AD7 </td> </tr>
     <tr> <td> <code title="">suplarr;</code> </td> <td> U+0297B </td> </tr>
     <tr> <td> <code title="">supmult;</code> </td> <td> U+02AC2 </td> </tr>
     <tr> <td> <code title="">supnE;</code> </td> <td> U+02ACC </td> </tr>
     <tr> <td> <code title="">supne;</code> </td> <td> U+0228B </td> </tr>
     <tr> <td> <code title="">supplus;</code> </td> <td> U+02AC0 </td> </tr>
     <tr> <td> <code title="">supset;</code> </td> <td> U+02283 </td> </tr>
     <tr> <td> <code title="">supseteq;</code> </td> <td> U+02287 </td> </tr>
     <tr> <td> <code title="">supseteqq;</code> </td> <td> U+02AC6 </td> </tr>
     <tr> <td> <code title="">supsetneq;</code> </td> <td> U+0228B </td> </tr>
     <tr> <td> <code title="">supsetneqq;</code> </td> <td> U+02ACC </td> </tr>
     <tr> <td> <code title="">supsim;</code> </td> <td> U+02AC8 </td> </tr>
     <tr> <td> <code title="">supsub;</code> </td> <td> U+02AD4 </td> </tr>
     <tr> <td> <code title="">supsup;</code> </td> <td> U+02AD6 </td> </tr>
     <tr> <td> <code title="">swArr;</code> </td> <td> U+021D9 </td> </tr>
     <tr> <td> <code title="">swarhk;</code> </td> <td> U+02926 </td> </tr>
     <tr> <td> <code title="">swarr;</code> </td> <td> U+02199 </td> </tr>
     <tr> <td> <code title="">swarrow;</code> </td> <td> U+02199 </td> </tr>
     <tr> <td> <code title="">swnwar;</code> </td> <td> U+0292A </td> </tr>
     <tr> <td> <code title="">szlig;</code> </td> <td> U+000DF </td> </tr>
     <tr> <td> <code title="">szlig</code> </td> <td> U+000DF </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">target;</code> </td> <td> U+02316 </td> </tr>
     <tr> <td> <code title="">tau;</code> </td> <td> U+003C4 </td> </tr>
     <tr> <td> <code title="">tbrk;</code> </td> <td> U+023B4 </td> </tr>
     <tr> <td> <code title="">tcaron;</code> </td> <td> U+00165 </td> </tr>
     <tr> <td> <code title="">tcedil;</code> </td> <td> U+00163 </td> </tr>
     <tr> <td> <code title="">tcy;</code> </td> <td> U+00442 </td> </tr>
     <tr> <td> <code title="">tdot;</code> </td> <td> U+020DB </td> </tr>
     <tr> <td> <code title="">telrec;</code> </td> <td> U+02315 </td> </tr>
     <tr> <td> <code title="">tfr;</code> </td> <td> U+1D531 </td> </tr>
     <tr> <td> <code title="">there4;</code> </td> <td> U+02234 </td> </tr>
     <tr> <td> <code title="">therefore;</code> </td> <td> U+02234 </td> </tr>
     <tr> <td> <code title="">theta;</code> </td> <td> U+003B8 </td> </tr>
     <tr> <td> <code title="">thetasym;</code> </td> <td> U+003D1 </td> </tr>
     <tr> <td> <code title="">thetav;</code> </td> <td> U+003D1 </td> </tr>
     <tr> <td> <code title="">thickapprox;</code> </td> <td> U+02248 </td> </tr>
     <tr> <td> <code title="">thicksim;</code> </td> <td> U+0223C </td> </tr>
     <tr> <td> <code title="">thinsp;</code> </td> <td> U+02009 </td> </tr>
     <tr> <td> <code title="">thkap;</code> </td> <td> U+02248 </td> </tr>
     <tr> <td> <code title="">thksim;</code> </td> <td> U+0223C </td> </tr>
     <tr> <td> <code title="">thorn;</code> </td> <td> U+000FE </td> </tr>
     <tr> <td> <code title="">thorn</code> </td> <td> U+000FE </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">tilde;</code> </td> <td> U+002DC </td> </tr>
     <tr> <td> <code title="">times;</code> </td> <td> U+000D7 </td> </tr>
     <tr> <td> <code title="">times</code> </td> <td> U+000D7 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">timesb;</code> </td> <td> U+022A0 </td> </tr>
     <tr> <td> <code title="">timesbar;</code> </td> <td> U+02A31 </td> </tr>
     <tr> <td> <code title="">timesd;</code> </td> <td> U+02A30 </td> </tr>
     <tr> <td> <code title="">tint;</code> </td> <td> U+0222D </td> </tr>
     <tr> <td> <code title="">toea;</code> </td> <td> U+02928 </td> </tr>
     <tr> <td> <code title="">top;</code> </td> <td> U+022A4 </td> </tr>
     <tr> <td> <code title="">topbot;</code> </td> <td> U+02336 </td> </tr>
     <tr> <td> <code title="">topcir;</code> </td> <td> U+02AF1 </td> </tr>
     <tr> <td> <code title="">topf;</code> </td> <td> U+1D565 </td> </tr>
     <tr> <td> <code title="">topfork;</code> </td> <td> U+02ADA </td> </tr>
     <tr> <td> <code title="">tosa;</code> </td> <td> U+02929 </td> </tr>
     <tr> <td> <code title="">tprime;</code> </td> <td> U+02034 </td> </tr>
     <tr> <td> <code title="">trade;</code> </td> <td> U+02122 </td> </tr>
     <tr> <td> <code title="">triangle;</code> </td> <td> U+025B5 </td> </tr>
     <tr> <td> <code title="">triangledown;</code> </td> <td> U+025BF </td> </tr>
     <tr> <td> <code title="">triangleleft;</code> </td> <td> U+025C3 </td> </tr>
     <tr> <td> <code title="">trianglelefteq;</code> </td> <td> U+022B4 </td> </tr>
     <tr> <td> <code title="">triangleq;</code> </td> <td> U+0225C </td> </tr>
     <tr> <td> <code title="">triangleright;</code> </td> <td> U+025B9 </td> </tr>
     <tr> <td> <code title="">trianglerighteq;</code> </td> <td> U+022B5 </td> </tr>
     <tr> <td> <code title="">tridot;</code> </td> <td> U+025EC </td> </tr>
     <tr> <td> <code title="">trie;</code> </td> <td> U+0225C </td> </tr>
     <tr> <td> <code title="">triminus;</code> </td> <td> U+02A3A </td> </tr>
     <tr> <td> <code title="">triplus;</code> </td> <td> U+02A39 </td> </tr>
     <tr> <td> <code title="">trisb;</code> </td> <td> U+029CD </td> </tr>
     <tr> <td> <code title="">tritime;</code> </td> <td> U+02A3B </td> </tr>
     <tr> <td> <code title="">trpezium;</code> </td> <td> U+023E2 </td> </tr>
     <tr> <td> <code title="">tscr;</code> </td> <td> U+1D4C9 </td> </tr>
     <tr> <td> <code title="">tscy;</code> </td> <td> U+00446 </td> </tr>
     <tr> <td> <code title="">tshcy;</code> </td> <td> U+0045B </td> </tr>
     <tr> <td> <code title="">tstrok;</code> </td> <td> U+00167 </td> </tr>
     <tr> <td> <code title="">twixt;</code> </td> <td> U+0226C </td> </tr>
     <tr> <td> <code title="">twoheadleftarrow;</code> </td> <td> U+0219E </td> </tr>
     <tr> <td> <code title="">twoheadrightarrow;</code> </td> <td> U+021A0 </td> </tr>
     <tr> <td> <code title="">uArr;</code> </td> <td> U+021D1 </td> </tr>
     <tr> <td> <code title="">uHar;</code> </td> <td> U+02963 </td> </tr>
     <tr> <td> <code title="">uacute;</code> </td> <td> U+000FA </td> </tr>
     <tr> <td> <code title="">uacute</code> </td> <td> U+000FA </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">uarr;</code> </td> <td> U+02191 </td> </tr>
     <tr> <td> <code title="">ubrcy;</code> </td> <td> U+0045E </td> </tr>
     <tr> <td> <code title="">ubreve;</code> </td> <td> U+0016D </td> </tr>
     <tr> <td> <code title="">ucirc;</code> </td> <td> U+000FB </td> </tr>
     <tr> <td> <code title="">ucirc</code> </td> <td> U+000FB </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">ucy;</code> </td> <td> U+00443 </td> </tr>
     <tr> <td> <code title="">udarr;</code> </td> <td> U+021C5 </td> </tr>
     <tr> <td> <code title="">udblac;</code> </td> <td> U+00171 </td> </tr>
     <tr> <td> <code title="">udhar;</code> </td> <td> U+0296E </td> </tr>
     <tr> <td> <code title="">ufisht;</code> </td> <td> U+0297E </td> </tr>
     <tr> <td> <code title="">ufr;</code> </td> <td> U+1D532 </td> </tr>
     <tr> <td> <code title="">ugrave;</code> </td> <td> U+000F9 </td> </tr>
     <tr> <td> <code title="">ugrave</code> </td> <td> U+000F9 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">uharl;</code> </td> <td> U+021BF </td> </tr>
     <tr> <td> <code title="">uharr;</code> </td> <td> U+021BE </td> </tr>
     <tr> <td> <code title="">uhblk;</code> </td> <td> U+02580 </td> </tr>
     <tr> <td> <code title="">ulcorn;</code> </td> <td> U+0231C </td> </tr>
     <tr> <td> <code title="">ulcorner;</code> </td> <td> U+0231C </td> </tr>
     <tr> <td> <code title="">ulcrop;</code> </td> <td> U+0230F </td> </tr>
     <tr> <td> <code title="">ultri;</code> </td> <td> U+025F8 </td> </tr>
     <tr> <td> <code title="">umacr;</code> </td> <td> U+0016B </td> </tr>
     <tr> <td> <code title="">uml;</code> </td> <td> U+000A8 </td> </tr>
     <tr> <td> <code title="">uml</code> </td> <td> U+000A8 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">uogon;</code> </td> <td> U+00173 </td> </tr>
     <tr> <td> <code title="">uopf;</code> </td> <td> U+1D566 </td> </tr>
     <tr> <td> <code title="">uparrow;</code> </td> <td> U+02191 </td> </tr>
     <tr> <td> <code title="">updownarrow;</code> </td> <td> U+02195 </td> </tr>
     <tr> <td> <code title="">upharpoonleft;</code> </td> <td> U+021BF </td> </tr>
     <tr> <td> <code title="">upharpoonright;</code> </td> <td> U+021BE </td> </tr>
     <tr> <td> <code title="">uplus;</code> </td> <td> U+0228E </td> </tr>
     <tr> <td> <code title="">upsi;</code> </td> <td> U+003C5 </td> </tr>
     <tr> <td> <code title="">upsih;</code> </td> <td> U+003D2 </td> </tr>
     <tr> <td> <code title="">upsilon;</code> </td> <td> U+003C5 </td> </tr>
     <tr> <td> <code title="">upuparrows;</code> </td> <td> U+021C8 </td> </tr>
     <tr> <td> <code title="">urcorn;</code> </td> <td> U+0231D </td> </tr>
     <tr> <td> <code title="">urcorner;</code> </td> <td> U+0231D </td> </tr>
     <tr> <td> <code title="">urcrop;</code> </td> <td> U+0230E </td> </tr>
     <tr> <td> <code title="">uring;</code> </td> <td> U+0016F </td> </tr>
     <tr> <td> <code title="">urtri;</code> </td> <td> U+025F9 </td> </tr>
     <tr> <td> <code title="">uscr;</code> </td> <td> U+1D4CA </td> </tr>
     <tr> <td> <code title="">utdot;</code> </td> <td> U+022F0 </td> </tr>
     <tr> <td> <code title="">utilde;</code> </td> <td> U+00169 </td> </tr>
     <tr> <td> <code title="">utri;</code> </td> <td> U+025B5 </td> </tr>
     <tr> <td> <code title="">utrif;</code> </td> <td> U+025B4 </td> </tr>
     <tr> <td> <code title="">uuarr;</code> </td> <td> U+021C8 </td> </tr>
     <tr> <td> <code title="">uuml;</code> </td> <td> U+000FC </td> </tr>
     <tr> <td> <code title="">uuml</code> </td> <td> U+000FC </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">uwangle;</code> </td> <td> U+029A7 </td> </tr>
     <tr> <td> <code title="">vArr;</code> </td> <td> U+021D5 </td> </tr>
     <tr> <td> <code title="">vBar;</code> </td> <td> U+02AE8 </td> </tr>
     <tr> <td> <code title="">vBarv;</code> </td> <td> U+02AE9 </td> </tr>
     <tr> <td> <code title="">vDash;</code> </td> <td> U+022A8 </td> </tr>
     <tr> <td> <code title="">vangrt;</code> </td> <td> U+0299C </td> </tr>
     <tr> <td> <code title="">varepsilon;</code> </td> <td> U+003B5 </td> </tr>
     <tr> <td> <code title="">varkappa;</code> </td> <td> U+003F0 </td> </tr>
     <tr> <td> <code title="">varnothing;</code> </td> <td> U+02205 </td> </tr>
     <tr> <td> <code title="">varphi;</code> </td> <td> U+003C6 </td> </tr>
     <tr> <td> <code title="">varpi;</code> </td> <td> U+003D6 </td> </tr>
     <tr> <td> <code title="">varpropto;</code> </td> <td> U+0221D </td> </tr>
     <tr> <td> <code title="">varr;</code> </td> <td> U+02195 </td> </tr>
     <tr> <td> <code title="">varrho;</code> </td> <td> U+003F1 </td> </tr>
     <tr> <td> <code title="">varsigma;</code> </td> <td> U+003C2 </td> </tr>
     <tr> <td> <code title="">vartheta;</code> </td> <td> U+003D1 </td> </tr>
     <tr> <td> <code title="">vartriangleleft;</code> </td> <td> U+022B2 </td> </tr>
     <tr> <td> <code title="">vartriangleright;</code> </td> <td> U+022B3 </td> </tr>
     <tr> <td> <code title="">vcy;</code> </td> <td> U+00432 </td> </tr>
     <tr> <td> <code title="">vdash;</code> </td> <td> U+022A2 </td> </tr>
     <tr> <td> <code title="">vee;</code> </td> <td> U+02228 </td> </tr>
     <tr> <td> <code title="">veebar;</code> </td> <td> U+022BB </td> </tr>
     <tr> <td> <code title="">veeeq;</code> </td> <td> U+0225A </td> </tr>
     <tr> <td> <code title="">vellip;</code> </td> <td> U+022EE </td> </tr>
     <tr> <td> <code title="">verbar;</code> </td> <td> U+0007C </td> </tr>
     <tr> <td> <code title="">vert;</code> </td> <td> U+0007C </td> </tr>
     <tr> <td> <code title="">vfr;</code> </td> <td> U+1D533 </td> </tr>
     <tr> <td> <code title="">vltri;</code> </td> <td> U+022B2 </td> </tr>
     <tr> <td> <code title="">vopf;</code> </td> <td> U+1D567 </td> </tr>
     <tr> <td> <code title="">vprop;</code> </td> <td> U+0221D </td> </tr>
     <tr> <td> <code title="">vrtri;</code> </td> <td> U+022B3 </td> </tr>
     <tr> <td> <code title="">vscr;</code> </td> <td> U+1D4CB </td> </tr>
     <tr> <td> <code title="">vzigzag;</code> </td> <td> U+0299A </td> </tr>
     <tr> <td> <code title="">wcirc;</code> </td> <td> U+00175 </td> </tr>
     <tr> <td> <code title="">wedbar;</code> </td> <td> U+02A5F </td> </tr>
     <tr> <td> <code title="">wedge;</code> </td> <td> U+02227 </td> </tr>
     <tr> <td> <code title="">wedgeq;</code> </td> <td> U+02259 </td> </tr>
     <tr> <td> <code title="">weierp;</code> </td> <td> U+02118 </td> </tr>
     <tr> <td> <code title="">wfr;</code> </td> <td> U+1D534 </td> </tr>
     <tr> <td> <code title="">wopf;</code> </td> <td> U+1D568 </td> </tr>
     <tr> <td> <code title="">wp;</code> </td> <td> U+02118 </td> </tr>
     <tr> <td> <code title="">wr;</code> </td> <td> U+02240 </td> </tr>
     <tr> <td> <code title="">wreath;</code> </td> <td> U+02240 </td> </tr>
     <tr> <td> <code title="">wscr;</code> </td> <td> U+1D4CC </td> </tr>
     <tr> <td> <code title="">xcap;</code> </td> <td> U+022C2 </td> </tr>
     <tr> <td> <code title="">xcirc;</code> </td> <td> U+025EF </td> </tr>
     <tr> <td> <code title="">xcup;</code> </td> <td> U+022C3 </td> </tr>
     <tr> <td> <code title="">xdtri;</code> </td> <td> U+025BD </td> </tr>
     <tr> <td> <code title="">xfr;</code> </td> <td> U+1D535 </td> </tr>
     <tr> <td> <code title="">xhArr;</code> </td> <td> U+027FA </td> </tr>
     <tr> <td> <code title="">xharr;</code> </td> <td> U+027F7 </td> </tr>
     <tr> <td> <code title="">xi;</code> </td> <td> U+003BE </td> </tr>
     <tr> <td> <code title="">xlArr;</code> </td> <td> U+027F8 </td> </tr>
     <tr> <td> <code title="">xlarr;</code> </td> <td> U+027F5 </td> </tr>
     <tr> <td> <code title="">xmap;</code> </td> <td> U+027FC </td> </tr>
     <tr> <td> <code title="">xnis;</code> </td> <td> U+022FB </td> </tr>
     <tr> <td> <code title="">xodot;</code> </td> <td> U+02A00 </td> </tr>
     <tr> <td> <code title="">xopf;</code> </td> <td> U+1D569 </td> </tr>
     <tr> <td> <code title="">xoplus;</code> </td> <td> U+02A01 </td> </tr>
     <tr> <td> <code title="">xotime;</code> </td> <td> U+02A02 </td> </tr>
     <tr> <td> <code title="">xrArr;</code> </td> <td> U+027F9 </td> </tr>
     <tr> <td> <code title="">xrarr;</code> </td> <td> U+027F6 </td> </tr>
     <tr> <td> <code title="">xscr;</code> </td> <td> U+1D4CD </td> </tr>
     <tr> <td> <code title="">xsqcup;</code> </td> <td> U+02A06 </td> </tr>
     <tr> <td> <code title="">xuplus;</code> </td> <td> U+02A04 </td> </tr>
     <tr> <td> <code title="">xutri;</code> </td> <td> U+025B3 </td> </tr>
     <tr> <td> <code title="">xvee;</code> </td> <td> U+022C1 </td> </tr>
     <tr> <td> <code title="">xwedge;</code> </td> <td> U+022C0 </td> </tr>
     <tr> <td> <code title="">yacute;</code> </td> <td> U+000FD </td> </tr>
     <tr> <td> <code title="">yacute</code> </td> <td> U+000FD </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">yacy;</code> </td> <td> U+0044F </td> </tr>
     <tr> <td> <code title="">ycirc;</code> </td> <td> U+00177 </td> </tr>
     <tr> <td> <code title="">ycy;</code> </td> <td> U+0044B </td> </tr>
     <tr> <td> <code title="">yen;</code> </td> <td> U+000A5 </td> </tr>
     <tr> <td> <code title="">yen</code> </td> <td> U+000A5 </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">yfr;</code> </td> <td> U+1D536 </td> </tr>
     <tr> <td> <code title="">yicy;</code> </td> <td> U+00457 </td> </tr>
     <tr> <td> <code title="">yopf;</code> </td> <td> U+1D56A </td> </tr>
     <tr> <td> <code title="">yscr;</code> </td> <td> U+1D4CE </td> </tr>
     <tr> <td> <code title="">yucy;</code> </td> <td> U+0044E </td> </tr>
     <tr> <td> <code title="">yuml;</code> </td> <td> U+000FF </td> </tr>
     <tr> <td> <code title="">yuml</code> </td> <td> U+000FF </td> </tr> <!-- (invalid entity with missing semicolon for legacy support only) -->
     <tr> <td> <code title="">zacute;</code> </td> <td> U+0017A </td> </tr>
     <tr> <td> <code title="">zcaron;</code> </td> <td> U+0017E </td> </tr>
     <tr> <td> <code title="">zcy;</code> </td> <td> U+00437 </td> </tr>
     <tr> <td> <code title="">zdot;</code> </td> <td> U+0017C </td> </tr>
     <tr> <td> <code title="">zeetrf;</code> </td> <td> U+02128 </td> </tr>
     <tr> <td> <code title="">zeta;</code> </td> <td> U+003B6 </td> </tr>
     <tr> <td> <code title="">zfr;</code> </td> <td> U+1D537 </td> </tr>
     <tr> <td> <code title="">zhcy;</code> </td> <td> U+00436 </td> </tr>
     <tr> <td> <code title="">zigrarr;</code> </td> <td> U+021DD </td> </tr>
     <tr> <td> <code title="">zopf;</code> </td> <td> U+1D56B </td> </tr>
     <tr> <td> <code title="">zscr;</code> </td> <td> U+1D4CF </td> </tr>
     <tr> <td> <code title="">zwj;</code> </td> <td> U+0200D </td> </tr>
     <tr> <td> <code title="">zwnj;</code> </td> <td> U+0200C </td> </tr>
</table><!--
   If we want to add character references, Almorca suggests:
   > I would add &sub1; (character U+2081), &sub2;
   > (character U+2082) and &sub3; (character U+2083). They
   > would are the equivalent to &sup1;, &sup2;, and &sup3;.
   See also: http://www.w3.org/2003/entities/
  --></div>




  <h2 id=the-xhtml-syntax><span class=secno>9 </span><dfn>The XHTML syntax</dfn></h2>

  <p class=note>This section only describes the rules for XML
  resources. Rules for <code title="">text/html</code> resources are
  discussed in the section above entitled "<a href=#syntax>The HTML
  syntax</a>".</p>


  <h3 id=writing-xhtml-documents><span class=secno>9.1 </span>Writing XHTML documents</h3>

  <p>The syntax for using HTML with XML, whether in XHTML documents or
  embedded in other XML documents, is defined in the XML and
  Namespaces in XML specifications. <a href=#refsXML>[XML]</a> <a href=#refsXMLNS>[XMLNS]</a></p>

  <p>This specification does not define any syntax-level requirements
  beyond those defined for XML proper.</p>

  <p>XML documents may contain a <code>DOCTYPE</code> if desired, but
  this is not required to conform to this specification. This
  specification does not define a public or system identifier, nor
  provide a format DTD.</p>

  <p class=note>According to the XML specification, XML processors
  are not guaranteed to process the external DTD subset referenced in
  the DOCTYPE. This means, for example, that using entity references
  for characters in XHTML documents is unsafe if they are defined in
  an external file (except for <code title="">&amp;lt;</code>, <code title="">&amp;gt;</code>, <code title="">&amp;amp;</code>, <code title="">&amp;quot;</code> and <code title="">&amp;apos;</code>).</p>


  <h3 id=parsing-xhtml-documents><span class=secno>9.2 </span>Parsing XHTML documents</h3>

  <p>This section describes the relationship between XML and the DOM,
  with a particular emphasis on how this interacts with HTML.</p>

  <p>An <dfn id=xml-parser>XML parser</dfn>, for the purposes of this specification,
  is a construct that follows the rules given in the XML specification
  to map a string of bytes or characters into a <code>Document</code>
  object.</p>

  <p>An <a href=#xml-parser>XML parser</a> is either associated with a
  <code>Document</code> object when it is created, or creates one
  implicitly.</p>

  <p>This <code>Document</code> must then be populated with DOM nodes
  that represent the tree structure of the input passed to the parser,
  as defined by the XML specification, the Namespaces in XML
  specification, and the DOM Core specification. DOM mutation events
  must not fire for the operations that the <a href=#xml-parser>XML parser</a>
  performs on the <code>Document</code>'s tree, but the user agent
  must act as if elements and attributes were individually appended
  and set respectively so as to trigger rules in this specification
  regarding what happens when an element in inserted into a document
  or has its attributes set. <a href=#refsXML>[XML]</a> <a href=#refsXMLNS>[XMLNS]</a> <a href=#refsDOMCORE>[DOMCORE]</a>
  <a href=#refsDOMEVENTS>[DOMEVENTS]</a></p>

  <p>Certain algorithms in this specification <dfn id=feed-the-parser title="feed the
  parser">spoon-feed the parser</dfn> characters one string at a
  time. In such cases, the <a href=#xml-parser>XML parser</a> must act as it
  would have if faced with a single string consisting of the
  concatenation of all those characters.</p>

  <p>When an <a href=#xml-parser>XML parser</a> creates a <code><a href=#script>script</a></code>
  element, it must be marked as being <a href=#parser-inserted>"parser-inserted"</a>.
  If the parser was originally created for the <a href=#xml-fragment-parsing-algorithm>XML fragment
  parsing algorithm</a>, then the element must be marked as
  <a href=#already-executed>"already executed"</a> also. When the element's end tag is
  parsed, the user agent must <a href=#running-a-script title="running a
  script">run</a> the <code><a href=#script>script</a></code> element. If this causes
  there to be a <a href=#pending-external-script>pending external script</a>, then the user
  agent must <a href=#pause>pause</a> until that script has <a href=#completed-loading>completed
  loading</a>, and then <a href=#executing-a-script-block title="executing a script
  block">execute it</a>.</p>

  <p class=note>Since the <code title=dom-document-write><a href=#dom-document-write>document.write()</a></code> API is not
  available for <a href=#xml-documents>XML documents</a>, much of the complexity in
  the <a href=#html-parser>HTML parser</a> is not needed in the <a href=#xml-parser>XML
  parser</a>.</p>

  <p>When an <a href=#xml-parser>XML parser</a> reaches the end of its input, it
  must <a href=#stop-parsing>stop parsing</a>, following the same rules as the
  <a href=#html-parser>HTML parser</a>.</p>



  <h3 id=serializing-xhtml-fragments><span class=secno>9.3 </span>Serializing XHTML fragments</h3>

  <p>The <dfn id=xml-fragment-serialization-algorithm>XML fragment serialization algorithm</dfn> for a
  <code>Document</code> or <code>Element</code> node either returns a
  fragment of XML that represents that node or raises an
  exception.</p>

  <p>For <code>Document</code>s, the algorithm must return a string in
  the form of a <a href=http://www.w3.org/TR/xml/#sec-well-formed>document
  entity</a>, if none of the error cases below apply.</p>

  <p>For <code>Element</code>s, the algorithm must return a string in
  the form of an <a href=http://www.w3.org/TR/xml/#wf-entities>internal general parsed
  entity</a>, if none of the error cases below apply.</p>

  <p>In both cases, the string returned must be XML
  namespace-well-formed and must be an isomorphic serialization of all
  of that node's child nodes, in <a href=#tree-order>tree order</a>. User agents
  may adjust prefixes and namespace declarations in the serialization
  (and indeed might be forced to do so in some cases to obtain
  namespace-well-formed XML).</p>

  <p>For <code>Element</code>s, if any of the elements in the
  serialization are in no namespace, the default namespace in scope
  for those elements must be explicitly declared as the empty
  string.<!-- because otherwise round-tripping might break since it'll
  pick up the surrounding default ns when setting --> (This doesn't
  apply in the <code>Document</code> case.) <a href=#refsXML>[XML]</a> <a href=#refsXMLNS>[XMLNS]</a></p>

  <p>If any of the following error cases are found in the DOM subtree
  being serialized, then the algorithm raises an
  <code><a href=#invalid_state_err>INVALID_STATE_ERR</a></code> exception instead of returning a
  string:</p>

  <ul><li>A <code>Document</code> node with no child element nodes.</li>

   <li>A <code>DocumentType</code> node that has an external subset
   public identifier that contains characters that are not matched by
   the XML <code title="">PubidChar</code> production. <a href=#refsXML>[XML]</a></li>

   <li>A <code>DocumentType</code> node that has an external subset
   system identifier that contains both a U+0022 QUOTATION MARK ('"')
   and a U+0027 APOSTROPHE ("'").</li>

   <li>A node with a prefix or local name containing a U+003A COLON
   (":").</li>

   <li>An <code>Attr</code> node, <code>Text</code> node,
   <code>CDATASection</code> node, <code>Comment</code> node, or
   <code>ProcessingInstruction</code> node whose data contains
   characters that are not matched by the XML <code title="">Char</code> production. <a href=#refsXML>[XML]</a></li>

   <li>A <code>CDATASection</code> node whose data contains the string
   "<code title="">]]&gt;</code>".</li>

   <li>A <code>Comment</code> node whose data contains two adjacent
   U+002D HYPHEN-MINUS (-) characters or ends with such a
   character.</li>

   <li>A <code>ProcessingInstruction</code> node whose target name is
   an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">xml</code>".</li>

   <li>A <code>ProcessingInstruction</code> node whose target name
   contains a U+003A COLON (":").</li>

   <li>A <code>ProcessingInstruction</code> node whose data contains
   the string "<code title="">?&gt;</code>".</li>

  </ul><p class=note>These are the only ways to make a DOM
  unserializable. The DOM enforces all the other XML constraints; for
  example, trying to set an attribute with a name that contains an
  equals sign (=) will raised an <code><a href=#invalid_character_err>INVALID_CHARACTER_ERR</a></code>
  exception.</p>



  <h3 id=parsing-xhtml-fragments><span class=secno>9.4 </span>Parsing XHTML fragments</h3>

  <p>The <dfn id=xml-fragment-parsing-algorithm>XML fragment parsing algorithm</dfn> for either returns
  a <code>Document</code> or raises a <code><a href=#syntax_err>SYNTAX_ERR</a></code>
  exception. Given a string <var title="">input</var> and an optional
  context element <var title="">context</var>, the algorithm is as
  follows:</p>

  <ol><li>

    <p>Create a new <a href=#xml-parser>XML parser</a>.</p>

   </li>

   <li>

    <p>If there is a <var title="">context</var> element, <a href=#feed-the-parser>feed
    the parser</a> just created the string corresponding to the
    start tag of that element, declaring all the namespace prefixes
    that are in scope on that element in the DOM, as well as declaring
    the default namespace (if any) that is in scope on that element in
    the DOM.</p>

    <p>A namespace prefix is in scope if the DOM Core <code title="">lookupNamespaceURI()</code> method on the element would
    return a non-null value for that prefix.</p>

    <p>The default namespace is the namespace for which the DOM Core
    <code title="">isDefaultNamespace()</code> method on the element
    would return true.</p>

   </li>

   <li>

    <p><a href=#feed-the-parser>Feed the parser</a> just created the string <var title="">input</var>.</p>

   </li>

   <li>

    <p>If there is a <var title="">context</var> element, <a href=#feed-the-parser>feed
    the parser</a> just created the string corresponding to the
    end tag of that element.</p>

   </li>

   <li>

    <p>If there is an XML well-formedness or XML namespace
    well-formedness error, then raise a <code><a href=#syntax_err>SYNTAX_ERR</a></code>
    exception and abort these steps.</p>

   </li>

   <li>

    <p>If there is a <var title="">context</var> element, then return
    the child nodes of the root element of the resulting
    <code>Document</code>, in <a href=#tree-order>tree order</a>.</p>

    <p>Otherwise, return the children of the <code>Document</code>
    object, in <a href=#tree-order>tree order</a>.</p>

   </li>

  </ol><h2 id=rendering><span class=secno>10 </span>Rendering</h2>

  <p><em>User agents are not required present HTML documents in any
  particular way. However, this section provides a set of suggestions
  for rendering HTML documents that, if followed, are likely to lead
  to a user experience that closely resembles the experience intended
  by the documents' authors. So as to avoid confusion regarding the
  normativity of this section, RFC2119 terms have not been used.
  Instead, the term "expected" is used to indicate behavior that will
  lead to this experience.</em></p>


  <h3 id=introduction-8><span class=secno>10.1 </span>Introduction</h3>

  <p>In general, user agents are expected to support CSS, and many of
  the suggestions in this section are expressed in CSS terms. User
  agents that use other presentation mechanisms can derive their
  expected behavior by translating from the CSS rules given in this
  section.</p>

  <p>In the absence of style-layer rules to the contrary (e.g. author
  style sheets), user agents are expected to render an element so that
  it conveys to the user the meaning that the element
  <dfn id=represents>represents</dfn>, as described by this specification.</p>

  <p>The suggestions in this section generally assume a visual output
  medium with a resolution of 96dpi or greater, but HTML is intended
  to apply to multiple media (it is a <i>media-independent</i>
  language). User agents are encouraged to adapt the suggestions in
  this section to their target media.</p>


  <h3 id=the-css-user-agent-style-sheet-and-presentational-hints><span class=secno>10.2 </span>The CSS user agent style sheet and presentational hints</h3>

  <h4 id=introduction-9><span class=secno>10.2.1 </span>Introduction</h4>

  <p>The CSS rules given in these subsections are, unless otherwise
  specified, expected to be used as part of the user-agent level style
  sheet defaults for all documents that contain <a href=#html-elements>HTML
  elements</a>.</p>

  <p>Some rules are intended for the author-level zero-specificity
  presentational hints part of the CSS cascade; these are explicitly
  called out as <dfn id=presentational-hints>presentational hints</dfn>.</p>

  <p>Some of the rules regarding left and right margins are given here
  as appropriate for elements whose 'direction' property is 'ltr', and
  are expected to be flipped around on elements whose 'direction'
  property is 'rtl'. These are marked "<dfn id=ltr-specific>LTR-specific</dfn>".</p>

  <hr><p>When the text below says that an attribute <var title="">attribute</var> on an element <var title="">element</var>
  <dfn id=maps-to-the-pixel-length-property>maps to the pixel length property</dfn> (or properties) <var title="">properties</var>, it means that if <var title="">element</var> has an attribute <var title="">attribute</var> set, and parsing that attribute's value
  using the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative integers</a>
  doesn't generate an error, then the user agent is expected to use
  the parsed value as a pixel length for a <a href=#presentational-hints title="presentational
  hints">presentational hint</a> for <var title="">properties</var>.</p>

  <p>When the text below says that an attribute <var title="">attribute</var> on an element <var title="">element</var>
  <dfn id=maps-to-the-dimension-property>maps to the dimension property</dfn> (or properties) <var title="">properties</var>, it means that if <var title="">element</var> has an attribute <var title="">attribute</var> set, and parsing that attribute's value
  using the <a href=#rules-for-parsing-dimension-values>rules for parsing dimension values</a> doesn't
  generate an error, then the user agent is expected to use the parsed
  dimension as the value for a <a href=#presentational-hints title="presentational
  hints">presentational hint</a> for <var title="">properties</var>, with the value given as a pixel length if
  the dimension was an integer, and with the value given as a
  percentage if the dimension was a percentage.</p>



  <h4 id=display-types><span class=secno>10.2.2 </span>Display types</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

[hidden], area, audio:not([controls]), base, basefont, command,
datalist, eventsource, head, input[type=hidden], link,
menu[type=context], meta, noembed, noframes, param, script, source,
style, title { display: none; }

address, article, aside, blockquote, body, center, dd, dialog, dir,
div, dl, dt, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hr,
html, layer, legend, listing, menu, nav, ol, p, plaintext, pre, rp,
section, ul, xmp { display: block; }

table { display: table; }
caption { display: table-caption; }
colgroup { display: table-column-group; }
col { display: table-column; }
thead { display: table-header-group; }
tbody { display: table-row-group; }
tfoot { display: table-footer-group; }
tr { display: table-row; }
td, th { display: table-cell; }

li { display: list-item; }

ruby { display: ruby; }
rt { display: ruby-text; }
</pre>

  <!-- del, ins, and map are inline. -->

  <p>For the purposes of the CSS table model, the <code><a href=#the-col-element>col</a></code>
  element is to be treated as if it was present as many times as its
  <code title=attr-col-span><a href=#attr-col-span>span</a></code> attribute <a href=#rules-for-parsing-non-negative-integers title="rules
  for parsing non-negative integers">specifies</a>.</p>

  <p>For the purposes of the CSS table model, the
  <code><a href=#the-colgroup-element>colgroup</a></code> element, if it contains no <code><a href=#the-col-element>col</a></code>
  element, is to be treated as if it had as many such children as its
  <code title=attr-colgroup-span><a href=#attr-colgroup-span>span</a></code> attribute <a href=#rules-for-parsing-non-negative-integers title="rules for parsing non-negative
  integers">specifies</a>.</p>

  <p>For the purposes of the CSS table model, the <code title=attr-tdth-colspan><a href=#attr-tdth-colspan>colspan</a></code> and <code title=attr-tdth-rowspan><a href=#attr-tdth-rowspan>rowspan</a></code> attributes on
  <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> elements are expected to <a href=#rules-for-parsing-non-negative-integers title="rules for parsing non-negative integers">provide</a> the
  <i>special knowledge</i> regarding cells spanning rows and
  columns.</p>

  <p>For the purposes of the CSS ruby model, runs of descendants of
  <code><a href=#the-ruby-element>ruby</a></code> elements that are not <code><a href=#the-rt-element>rt</a></code> or
  <code><a href=#the-rp-element>rp</a></code> elements are expected to be wrapped in anonymous
  boxes whose 'display' property has the value 'ruby-base'.</p>

  <p>User agents that do not support correct ruby rendering are
  expected to render parentheses around the text of <code><a href=#the-rt-element>rt</a></code>
  elements in the absence of <code><a href=#the-rp-element>rp</a></code> elements.</p>

  <p>The <code><a href=#the-br-element>br</a></code> element is expected to render as if its
  contents were a single U+000A LINE FEED (LF) character and its
  'white-space' property was 'pre'.</p>

  <p>The user agent is expected to hide <code><a href=#the-noscript-element>noscript</a></code> elements
  for whom <a href=#concept-n-noscript title=concept-n-noscript>scripting is
  disabled</a>, irrespective of CSS rules.</p>


  <h4 id=margins-and-padding><span class=secno>10.2.3 </span>Margins and padding</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

article, aside, blockquote, dir, dl, figure, listing, menu, nav, ol,
p, plaintext, pre, section, ul, xmp {
  margin-top: 1em; margin-bottom: 1em;
}

dir dir, dir dl, dir menu, dir ol, dir ul,
dl dir, dl dl, dl menu, dl ol, dl ul,
menu dir, menu dl, menu menu, menu ol, menu ul,
ol dir, ol dl, ol menu, ol ol, ol ul,
ul dir, ul dl, ul menu, ul ol, ul ul {
  margin-top: 0; margin-bottom: 0;
}

h1 { margin-top: 0.67em; margin-bottom; 0.67em; }
h2 { margin-top: 0.83em; margin-bottom; 0.83em; }
h3 { margin-top: 1.00em; margin-bottom; 1.00em; }
h4 { margin-top: 1.33em; margin-bottom; 1.33em; }
h5 { margin-top: 1.67em; margin-bottom; 1.67em; }
h6 { margin-top: 2.33em; margin-bottom; 2.33em; }

dd { margin-left: 40px; } /* <a href=#ltr-specific>LTR-specific</a>: use 'margin-right' for rtl elements */
dir, menu, ol, ul { padding-left: 40px; } /* <a href=#ltr-specific>LTR-specific</a>: use 'padding-right' for rtl elements */
blockquote, figure { margin-left: 40px; margin-right: 40px; }

table { border-spacing: 2px; border-collapse: separate; }
td, th { padding: 1px; }</pre>

  <p>For each property in the table below, given a <code><a href=#the-body-element>body</a></code>
  element, the first attribute that exists <a href=#maps-to-the-pixel-length-property>maps to the pixel
  length property</a> on the <code><a href=#the-body-element>body</a></code> element. If none of
  the attributes for a property are found, or if the value of the
  attribute that was found cannot be parsed successfully, then a
  default value of 8px is expected to be used for that property
  instead.</p>

  <!-- XXX so, uh, about the cross-site-styling hole below... -->

  <table><thead><tr><th>Property
     <th>Source
   <tbody><tr><td rowspan=3>'margin-top'
     <td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-marginheight>marginheight</code> attribute
    <tr><td>The <code><a href=#the-body-element>body</a></code> element's <a href=#container-frame-element>container frame element</a>'s <code title=attr-frame-marginheight>marginheight</code> attribute
    <tr><td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-topmargin>topmargin</code> attribute
   <tbody><tr><td rowspan=3>'margin-right'
     <td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-marginwidth>marginwidth</code> attribute
    <tr><td>The <code><a href=#the-body-element>body</a></code> element's <a href=#container-frame-element>container frame element</a>'s <code title=attr-frame-marginwidth>marginwidth</code> attribute
    <tr><td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-rightmargin>rightmargin</code> attribute
   <tbody><tr><td rowspan=3>'margin-bottom'
     <td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-marginheight>marginheight</code> attribute
    <tr><td>The <code><a href=#the-body-element>body</a></code> element's <a href=#container-frame-element>container frame element</a>'s <code title=attr-frame-marginheight>marginheight</code> attribute
    <tr><td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-bottommargin>topmargin</code> attribute
   <tbody><tr><td rowspan=3>'margin-left'
     <td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-marginwidth>marginwidth</code> attribute
    <tr><td>The <code><a href=#the-body-element>body</a></code> element's <a href=#container-frame-element>container frame element</a>'s <code title=attr-frame-marginwidth>marginwidth</code> attribute
    <tr><td><code><a href=#the-body-element>body</a></code> element's <code title=attr-body-leftmargin>rightmargin</code> attribute
  </table><p>If the <code><a href=#the-body-element>body</a></code> element's <code>Document</code>'s
  <a href=#browsing-context>browsing context</a> is a <a href=#nested-browsing-context>nested browsing
  context</a>, and the <a href=#browsing-context-container>browsing context container</a> of
  that <a href=#nested-browsing-context>nested browsing context</a> is a <code>frame</code> or
  <code><a href=#the-iframe-element>iframe</a></code> element, then the the <dfn id=container-frame-element>container frame
  element</dfn> of the <code><a href=#the-body-element>body</a></code> element is that
  <code>frame</code> or <code><a href=#the-iframe-element>iframe</a></code> element. Otherwise, there
  is no <a href=#container-frame-element>container frame element</a>.</p>

  <hr><p>If the <code>Document</code> has a <a href=#root-element>root element</a>, and
  the <code>Document</code>'s <a href=#browsing-context>browsing context</a> is a
  <a href=#nested-browsing-context>nested browsing context</a>, and the <a href=#browsing-context-container>browsing context
  container</a> of that <a href=#nested-browsing-context>nested browsing context</a> is a
  <code>frame</code> or <code><a href=#the-iframe-element>iframe</a></code> element, and that element
  has a <code title=attr-frames-scrolling>scrolling</code>
  attribute, then the user agent is expected to compare the value of
  the attribute in an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> manner to
  the values in the first column of the following table, and if one of
  them matches, then the user agent is expected to treat that
  attribute as a <a href=#presentational-hints title="presentational hints">presentational
  hint</a> for the aforementioned root element's 'overflow'
  property, setting it to the value given in the corresponding cell on
  the same row in the second column:</p>

  <table><thead><tr><th> Attribute value
     <th> 'overflow' value
   <tbody><tr><td><code title="">on</code>
     <td>'scroll'
    <tr><td><code title="">scroll</code>
     <td>'scroll'
    <tr><td><code title="">yes</code>
     <td>'scroll'
    <tr><td><code title="">off</code>
     <td>'hidden'
    <tr><td><code title="">noscroll</code>
     <td>'hidden'
    <tr><td><code title="">no</code>
     <td>'hidden'
    <tr><td><code title="">auto</code>
     <td>'auto'
  </table><hr><p>The <code><a href=#the-table-element>table</a></code> element's <code title=attr-table-cellspacing>cellspacing</code> attribute
  <a href=#maps-to-the-pixel-length-property>maps to the pixel length property</a> 'border-spacing' on the
  element.</p>

  <p>The <code><a href=#the-table-element>table</a></code> element's <code title=attr-table-cellpadding>cellpadding</code> attribute <a href=#maps-to-the-pixel-length-property title="maps to the pixel length property">maps to the pixel length
  properties</a> 'padding-top', 'padding-right', 'padding-bottom',
  and 'padding-left' of any <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code>
  elements that have corresponding <a href=#concept-cell title=concept-cell>cells</a> in the <a href=#concept-table title=concept-table>table</a> corresponding to the
  <code><a href=#the-table-element>table</a></code> element.</p>

  <p>The <code><a href=#the-table-element>table</a></code> element's <code title=attr-table-hspace>hspace</code> attribute <a href=#maps-to-the-dimension-property title="maps
  to the dimension property">maps to the dimension properties</a>
  'margin-left' and 'margin-right' on the <code><a href=#the-table-element>table</a></code>
  element.</p>

  <p>The <code><a href=#the-table-element>table</a></code> element's <code title=attr-table-vspace>vspace</code> attribute <a href=#maps-to-the-dimension-property title="maps
  to the dimension property">maps to the dimension properties</a>
  'margin-top' and 'margin-bottom' on the <code><a href=#the-table-element>table</a></code>
  element.</p>

  <p>The <code><a href=#the-table-element>table</a></code> element's <code title=attr-table-height>height</code> attribute <a href=#maps-to-the-dimension-property>maps to the
  dimension property</a> 'height' on the <code><a href=#the-table-element>table</a></code>
  element.</p>

  <p>The <code><a href=#the-table-element>table</a></code> element's <code title=attr-table-width>width</code> attribute <a href=#maps-to-the-dimension-property>maps to the
  dimension property</a> 'width' on the <code><a href=#the-table-element>table</a></code>
  element.</p>

  <p>The <code><a href=#the-col-element>col</a></code> element's <code title=attr-col-width>width</code> attribute <a href=#maps-to-the-dimension-property>maps to the
  dimension property</a> 'width' on the <code><a href=#the-col-element>col</a></code>
  element.</p>

  <p>The <code><a href=#the-tr-element>tr</a></code> element's <code title=attr-tr-height>height</code> attribute <a href=#maps-to-the-dimension-property>maps to the
  dimension property</a> 'height' on the <code><a href=#the-tr-element>tr</a></code>
  element.</p>

  <p>The <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> elements' <code title=attr-tdth-height>height</code> attributes <a href=#maps-to-the-dimension-property title="maps
  to the dimension property">map to the dimension property</a> 'height'
  on the element.</p>

  <p>The <code><a href=#the-td-element>td</a></code> and <code><a href=#the-th-element>th</a></code> elements' <code title=attr-tdth-width>width</code> attributes <a href=#maps-to-the-dimension-property title="maps
  to the dimension property">map to the dimension property</a> 'width'
  on the element.</p>

  <hr><p>In <a href=#quirks-mode>quirks mode</a>, the following rules are also
  expected to apply:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

form { margin-bottom: 1em; }</pre>

  <p>When a <code>Document</code> is in <a href=#quirks-mode>quirks mode</a>,
  margins on <a href=#html-elements>HTML elements</a> that collapse with the top or
  bottom of the initial containing block are expected to be collapsed
  to zero.</p>


  <h4 id=alignment><span class=secno>10.2.4 </span>Alignment</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

thead, tbody, tfoot, table &gt; tr { vertical-align: middle; }
tr, td, th { vertical-align: inherit; }
sub { vertical-align: sub; }
sup { vertical-align: super; }
th { text-align: center; }</pre>

  <hr><p>The following rules are also expected to apply, as
  <a href=#presentational-hints>presentational hints</a>:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

table[align=left] { float: left; }
table[align=right] { float: right; }
table[align=center], table[align=abscenter],
table[align=abdmiddle], table[align=middle] {
  margin-left: auto; margin-right: auto;
}

caption[align=bottom] { caption-side: bottom; }
p[align=left], h1[align=left], h2[align=left], h3[align=left],
h4[align=left], h5[align=left], h6[align=left] {
  text-align: left;
}
p[align=right], h1[align=right], h2[align=right], h3[align=right],
h4[align=right], h5[align=right], h6[align=right] {
  text-align: right;
}
p[align=center], h1[align=center], h2[align=center], h3[align=center],
h4[align=center], h5[align=center], h6[align=center] {
  text-align: center;
}
p[align=justify], h1[align=justify], h2[align=justify], h3[align=justify],
h4[align=justify], h5[align=justify], h6[align=justify] {
  text-align: justify;
}
col[valign=top], thead[valign=top], tbody[valign=top],
tfoot[valign=top], tr[valign=top], td[valign=top], th[valign=top] {
  vertial-align: top;
}
col[valign=middle], thead[valign=middle], tbody[valign=middle],
tfoot[valign=middle], tr[valign=middle], td[valign=middle], th[valign=middle] {
  vertial-align: middle;
}
col[valign=bottom], thead[valign=bottom], tbody[valign=bottom],
tfoot[valign=bottom], tr[valign=bottom], td[valign=bottom], th[valign=bottom] {
  vertial-align: bottom;
}
col[valign=baseline], thead[valign=baseline], tbody[valign=baseline],
tfoot[valign=baseline], tr[valign=baseline], td[valign=baseline], th[valign=baseline] {
  vertial-align: baseline;
}</pre>

  <p>The <code><a href=#center>center</a></code> element, the <code><a href=#the-caption-element>caption</a></code> element
  unless specified otherwise below, and the <code><a href=#the-div-element>div</a></code> element
  when its <code title=attr-div-align>align</code> attribute's value
  is an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string
  "<code title="">center</code>", are expected to center text within
  themselves, as if they had their 'text-align' property set to
  'center' in a <a href=#presentational-hints title="presentational hints">presentational
  hint</a>, and to <a href=#align-descendents>align descendents</a> to the center.</p>

  <p>The <code><a href=#the-div-element>div</a></code>, <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-thead-element>thead</a></code>,
  <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, <code><a href=#the-tr-element>tr</a></code>,
  <code><a href=#the-td-element>td</a></code>, and <code><a href=#the-th-element>th</a></code> elements, when they have an
  <code title=attr-align>align</code> attribute whose value is an
  <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">left</code>", are expected to left-align text within
  themselves, as if they had their 'text-align' property set to 'left'
  in a <a href=#presentational-hints title="presentational hints">presentational hint</a>,
  and to <a href=#align-descendents>align descendents</a> to the left.</p>

  <p>The <code><a href=#the-div-element>div</a></code>, <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-thead-element>thead</a></code>,
  <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, <code><a href=#the-tr-element>tr</a></code>,
  <code><a href=#the-td-element>td</a></code>, and <code><a href=#the-th-element>th</a></code> elements, when they have an
  <code title=attr-align>align</code> attribute whose value is an
  <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">right</code>", are expected to right-align text within
  themselves, as if they had their 'text-align' property set to
  'right' in a <a href=#presentational-hints title="presentational hints">presentational
  hint</a>, and to <a href=#align-descendents>align descendents</a> to the right.</p>

  <p>The <code><a href=#the-div-element>div</a></code>, <code><a href=#the-caption-element>caption</a></code>, <code><a href=#the-thead-element>thead</a></code>,
  <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, <code><a href=#the-tr-element>tr</a></code>,
  <code><a href=#the-td-element>td</a></code>, and <code><a href=#the-th-element>th</a></code> elements, when they have an
  <code title=attr-align>align</code> attribute whose value is an
  <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">justify</code>", are expected to full-justify text within
  themselves, as if they had their 'text-align' property set to
  'justify' in a <a href=#presentational-hints title="presentational hints">presentational
  hint</a>, and to <a href=#align-descendents>align descendents</a> to the left.</p>

  <p>When a user agent is to <dfn id=align-descendents>align descendents</dfn> of a node,
  the user agent is expected to align only those descendents that have
  both their 'margin-left' and 'margin-right' properties computing to
  a value other than 'auto', that are over-constrained and that have
  one of those two margins with a used value forced to a greater
  value, and that do not themselves have an applicable <code title=attr-align>align</code> attribute.</p>


  <h4 id=fonts-and-colors><span class=secno>10.2.5 </span>Fonts and colors</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

address, cite, dfn, em, i, var { font-style: italic; }
b, strong, th { font-weight: bold; }
code, kbd, listing, plaintext, pre, samp, tt, xmp { font-family: monospace; }
h1 { font-size: 2.00em; font-weight: bold; }
h2 { font-size: 1.50em; font-weight: bold; }
h3 { font-size: 1.17em; font-weight: bold; }
h4 { font-size: 1.00em; font-weight: bold; }
h5 { font-size: 0.83em; font-weight: bold; }
h6 { font-size: 0.67em; font-weight: bold; }
big { font-size: larger; }
small, sub, sup { font-size: smaller; }
sub, sup { line-height: normal; }

:link { color: blue; }
:visited { color: purple; }
mark { background: yellow; color: black; }

table, td, th { border-color: gray; }
thead, tbody, tfoot, tr { border-color: inherit; }
table[rules=none], table[rules=groups], table[rules=rows],
table[rules=cols], table[rules=all], table[frames=void],
table[frames=above], table[frames=below], table[frames=hsides],
table[frames=lhs], table[frames=rhs], table[frames=vsides],
table[frames=box], table[frames=border],
table[rules=none] &gt; tr &gt; td, table[rules=none] &gt; tr &gt; th,
table[rules=groups] &gt; tr &gt; td, table[rules=groups] &gt; tr &gt; th,
table[rules=rows] &gt; tr &gt; td, table[rules=rows] &gt; tr &gt; th,
table[rules=cols] &gt; tr &gt; td, table[rules=cols] &gt; tr &gt; th,
table[rules=all] &gt; tr &gt; td, table[rules=all] &gt; tr &gt; th,
table[frames=void] &gt; tr &gt; td, table[frames=void] &gt; tr &gt; th,
table[frames=above] &gt; tr &gt; td, table[frames=above] &gt; tr &gt; th,
table[frames=below] td, table[frames=below] &gt; tr &gt; th,
table[frames=hsides] &gt; tr &gt; td, table[frames=hsides] &gt; tr &gt; th,
table[frames=lhs] &gt; tr &gt; td, table[frames=lhs] &gt; tr &gt; th,
table[frames=rhs] &gt; tr &gt; td, table[frames=rhs] &gt; tr &gt; th,
table[frames=vsides] &gt; tr &gt; td, table[frames=vsides] &gt; tr &gt; th,
table[frames=box] &gt; tr &gt; td, table[frames=box] &gt; tr &gt; th,
table[frames=border] &gt; tr &gt; td, table[frames=border] &gt; tr &gt; th,
table[rules=none] &gt; thead &gt; tr &gt; td, table[rules=none] &gt; thead &gt; tr &gt; th,
table[rules=groups] &gt; thead &gt; tr &gt; td, table[rules=groups] &gt; thead &gt; tr &gt; th,
table[rules=rows] &gt; thead &gt; tr &gt; td, table[rules=rows] &gt; thead &gt; tr &gt; th,
table[rules=cols] &gt; thead &gt; tr &gt; td, table[rules=cols] &gt; thead &gt; tr &gt; th,
table[rules=all] &gt; thead &gt; tr &gt; td, table[rules=all] &gt; thead &gt; tr &gt; th,
table[frames=void] &gt; thead &gt; tr &gt; td, table[frames=void] &gt; thead &gt; tr &gt; th,
table[frames=above] &gt; thead &gt; tr &gt; td, table[frames=above] &gt; thead &gt; tr &gt; th,
table[frames=below] td, table[frames=below] &gt; thead &gt; tr &gt; th,
table[frames=hsides] &gt; thead &gt; tr &gt; td, table[frames=hsides] &gt; thead &gt; tr &gt; th,
table[frames=lhs] &gt; thead &gt; tr &gt; td, table[frames=lhs] &gt; thead &gt; tr &gt; th,
table[frames=rhs] &gt; thead &gt; tr &gt; td, table[frames=rhs] &gt; thead &gt; tr &gt; th,
table[frames=vsides] &gt; thead &gt; tr &gt; td, table[frames=vsides] &gt; thead &gt; tr &gt; th,
table[frames=box] &gt; thead &gt; tr &gt; td, table[frames=box] &gt; thead &gt; tr &gt; th,
table[frames=border] &gt; thead &gt; tr &gt; td, table[frames=border] &gt; thead &gt; tr &gt; th,
table[rules=none] &gt; tbody &gt; tr &gt; td, table[rules=none] &gt; tbody &gt; tr &gt; th,
table[rules=groups] &gt; tbody &gt; tr &gt; td, table[rules=groups] &gt; tbody &gt; tr &gt; th,
table[rules=rows] &gt; tbody &gt; tr &gt; td, table[rules=rows] &gt; tbody &gt; tr &gt; th,
table[rules=cols] &gt; tbody &gt; tr &gt; td, table[rules=cols] &gt; tbody &gt; tr &gt; th,
table[rules=all] &gt; tbody &gt; tr &gt; td, table[rules=all] &gt; tbody &gt; tr &gt; th,
table[frames=void] &gt; tbody &gt; tr &gt; td, table[frames=void] &gt; tbody &gt; tr &gt; th,
table[frames=above] &gt; tbody &gt; tr &gt; td, table[frames=above] &gt; tbody &gt; tr &gt; th,
table[frames=below] td, table[frames=below] &gt; tbody &gt; tr &gt; th,
table[frames=hsides] &gt; tbody &gt; tr &gt; td, table[frames=hsides] &gt; tbody &gt; tr &gt; th,
table[frames=lhs] &gt; tbody &gt; tr &gt; td, table[frames=lhs] &gt; tbody &gt; tr &gt; th,
table[frames=rhs] &gt; tbody &gt; tr &gt; td, table[frames=rhs] &gt; tbody &gt; tr &gt; th,
table[frames=vsides] &gt; tbody &gt; tr &gt; td, table[frames=vsides] &gt; tbody &gt; tr &gt; th,
table[frames=box] &gt; tbody &gt; tr &gt; td, table[frames=box] &gt; tbody &gt; tr &gt; th,
table[frames=border] &gt; tbody &gt; tr &gt; td, table[frames=border] &gt; tbody &gt; tr &gt; th,
table[rules=none] &gt; tfoot &gt; tr &gt; td, table[rules=none] &gt; tfoot &gt; tr &gt; th,
table[rules=groups] &gt; tfoot &gt; tr &gt; td, table[rules=groups] &gt; tfoot &gt; tr &gt; th,
table[rules=rows] &gt; tfoot &gt; tr &gt; td, table[rules=rows] &gt; tfoot &gt; tr &gt; th,
table[rules=cols] &gt; tfoot &gt; tr &gt; td, table[rules=cols] &gt; tfoot &gt; tr &gt; th,
table[rules=all] &gt; tfoot &gt; tr &gt; td, table[rules=all] &gt; tfoot &gt; tr &gt; th,
table[frames=void] &gt; tfoot &gt; tr &gt; td, table[frames=void] &gt; tfoot &gt; tr &gt; th,
table[frames=above] &gt; tfoot &gt; tr &gt; td, table[frames=above] &gt; tfoot &gt; tr &gt; th,
table[frames=below] td, table[frames=below] &gt; tfoot &gt; tr &gt; th,
table[frames=hsides] &gt; tfoot &gt; tr &gt; td, table[frames=hsides] &gt; tfoot &gt; tr &gt; th,
table[frames=lhs] &gt; tfoot &gt; tr &gt; td, table[frames=lhs] &gt; tfoot &gt; tr &gt; th,
table[frames=rhs] &gt; tfoot &gt; tr &gt; td, table[frames=rhs] &gt; tfoot &gt; tr &gt; th,
table[frames=vsides] &gt; tfoot &gt; tr &gt; td, table[frames=vsides] &gt; tfoot &gt; tr &gt; th,
table[frames=box] &gt; tfoot &gt; tr &gt; td, table[frames=box] &gt; tfoot &gt; tr &gt; th,
table[frames=border] &gt; tfoot &gt; tr &gt; td, table[frames=border] &gt; tfoot &gt; tr &gt; th {
  border-color: black;
}

</pre>

  <hr><p>The initial value for the 'color' property is expected to be
  black. The initial value for the 'background-color' property is
  expected to be white.</p>

  <hr><p>The <code><a href=#the-article-element>article</a></code>, <code><a href=#the-aside-element>aside</a></code>, <code><a href=#the-nav-element>nav</a></code>,
  and <code><a href=#the-section-element>section</a></code> elements are expected to affect the styling
  of <code><a href=#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements>h1</a></code> elements, based on the nesting depth. If <var title="">x</var> is a selector that matches elements that are either
  <code><a href=#the-article-element>article</a></code>, <code><a href=#the-aside-element>aside</a></code>, <code><a href=#the-nav-element>nav</a></code>, or
  <code><a href=#the-section-element>section</a></code> elements, then the following rules capture what
  is expected:</p>

  <!-- XXX this is better than http://damowmow.com/temp/sectioning.css
           but it's still not optimal... -->
  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

<var title="">x</var> h1 { font-size: 1.50em; }
<var title="">x</var> <var title="">x</var> h1 { font-size: 1.17em; }
<var title="">x</var> <var title="">x</var> <var title="">x</var> h1 { font-size: 1.00em; }
<var title="">x</var> <var title="">x</var> <var title="">x</var> <var title="">x</var> h1 { font-size: 0.83em; }
<var title="">x</var> <var title="">x</var> <var title="">x</var> <var title="">x</var> <var title="">x</var> h1 { font-size: 0.67em; }</pre>

  <hr><p>When a <code><a href=#the-body-element>body</a></code>, <code><a href=#the-table-element>table</a></code>, <code><a href=#the-thead-element>thead</a></code>,
  <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, <code><a href=#the-tr-element>tr</a></code>,
  <code><a href=#the-td-element>td</a></code>, or <code><a href=#the-th-element>th</a></code> element has a <code title=attr-background>background</code> attribute set to a
  non-empty value, the new value is expected to be <a href=#resolve-a-url title="resolve a url">resolved</a> relative to the element, and
  if this is successful, the user agent is expected to treat the
  attribute as a <a href=#presentational-hints title="presentational hints">presentational
  hint</a> setting the element's 'background-image' property to the
  resulting <a href=#absolute-url>absolute URL</a>.</p>

  <p>When a <code><a href=#the-body-element>body</a></code>, <code><a href=#the-table-element>table</a></code>, <code><a href=#the-thead-element>thead</a></code>,
  <code><a href=#the-tbody-element>tbody</a></code>, <code><a href=#the-tfoot-element>tfoot</a></code>, <code><a href=#the-tr-element>tr</a></code>,
  <code><a href=#the-td-element>td</a></code>, or <code><a href=#the-th-element>th</a></code> element has a <code title=attr-bgcolor>bgcolor</code> attribute set, the new value is
  expected to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a legacy
  color value</a>, and the user agent is expected to treat the
  attribute as a <a href=#presentational-hints title="presentational hints">presentational
  hint</a> setting the element's 'background-color' property to the
  resulting color.</p>

  <p>When a <code><a href=#the-body-element>body</a></code> element has a <code title=attr-body-text><a href=#attr-body-text>text</a></code> attribute, its value is expected
  to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a legacy color
  value</a>, and the user agent is expected to treat the attribute
  as a <a href=#presentational-hints title="presentational hints">presentational hint</a>
  setting the element's 'color' property to the resulting color.</p>

  <p>When a <code><a href=#the-body-element>body</a></code> element has a <code title=attr-body-link><a href=#attr-body-link>link</a></code> attribute, its value is expected
  to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a legacy color
  value</a>, and the user agent is expected to treat the attribute
  as a <a href=#presentational-hints title="presentational hints">presentational hint</a>
  setting the 'color' property of any element in the
  <code>Document</code> matching the ':link' pseudo-class to the
  resulting color.</p>

  <p>When a <code><a href=#the-body-element>body</a></code> element has a <code title=attr-body-vlink><a href=#attr-body-vlink>vlink</a></code> attribute, its value is
  expected to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a legacy
  color value</a>, and the user agent is expected to treat the
  attribute as a <a href=#presentational-hints title="presentational hints">presentational
  hint</a> setting the 'color' property of any element in the
  <code>Document</code> matching the ':visited' pseudo-class to the
  resulting color.</p>

  <p>When a <code><a href=#the-body-element>body</a></code> element has a <code title=attr-body-alink><a href=#attr-body-alink>alink</a></code> attribute, its value is
  expected to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a legacy
  color value</a>, and the user agent is expected to treat the
  attribute as a <a href=#presentational-hints title="presentational hints">presentational
  hint</a> setting the 'color' property of any element in the
  <code>Document</code> matching the ':active' pseudo-class and either
  the ':link' pseudo-class or the ':visited' pseudo-class to the
  resulting color.</p>

  <p>When a <code><a href=#the-table-element>table</a></code> element has a <code title=attr-table-bordercolor>bordercolor</code> attribute, its
  value is expected to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a
  legacy color value</a>, and the user agent is expected to treat
  the attribute as a <a href=#presentational-hints title="presentational hints">presentational
  hint</a> setting the element's 'border-top-color',
  'border-right-color', 'border-bottom-color', and
  'border-right-color' properties to the resulting color.</p>

  <hr><p>When a <code>font</code> element has a <code title=attr-font-color>color</code> attribute, its value is
  expected to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a legacy
  color value</a>, and the user agent is expected to treat the
  attribute as a <a href=#presentational-hints title="presentational hints">presentational
  hint</a> setting the element's 'color' property to the resulting
  color.</p>

  <p>When a <code>font</code> element has a <code title=attr-font-face>face</code> attribute, the user agent is
  expected to treat the attribute as a <a href=#presentational-hints title="presentational
  hints">presentational hint</a> setting the element's
  'font-family' property to the attribute's value.</p>

  <p>When a <code>font</code> element has a <code title=attr-font-pointsize>pointsize</code> attribute, the user
  agent is expected to parse that attribute's value using the
  <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative integers</a>, and if this
  doesn't generate an error, then the user agent is expected to use
  the parsed value as a <em>point</em> length for a <a href=#presentational-hints title="presentational hints">presentational hint</a> for the
  'font-size' property on the element.</p>

  <p>When a <code>font</code> element has a <code title=attr-font-size>size</code> attribute, the user agent is
  expected to use the following steps to treat the attribute as a
  <a href=#presentational-hints title="presentational hints">presentational hint</a>
  setting the element's 'font-size' property:</p>

  <ol><li><p>Let <var title="">input</var> be the attribute's
   value.</li>

   <li><p>Let <var title="">position</var> be a pointer into <var title="">input</var>, initially pointing at the start of the
   string.</li>

   <li><p><a href=#skip-whitespace>Skip whitespace</a>.</li>

   <li><p>If <var title="">position</var> is past the end of <var title="">input</var>, there is no <a href=#presentational-hints title="presentational
   hints">presentational hint</a>. Abort these steps.</li>

   <li><p>If the character at <var title="">position</var> is a U+002B
   PLUS SIGN character (+), then let <var title="">mode</var> be
   <i>relative-plus</i>, and advance <var title="">position</var> to
   the next character. Otherwise, if the character at <var title="">position</var> is a U+002D HYPHEN-MINUS character (-),
   then let <var title="">mode</var> be <i>relative-minus</i>, and
   advance <var title="">position</var> to the next
   character. Otherwise, let <var title="">mode</var> be
   <i>absolute</i>.</li>

   <li><p><a href=#collect-a-sequence-of-characters>Collect a sequence of characters</a> in the range
   U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), and let the
   resulting sequence be <var title="">digits</var>.</li>

   <li><p>If <var title="">digits</var> is the empty string, there is
   no <a href=#presentational-hints title="presentational hints">presentational
   hint</a>. Abort these steps.</li>

   <li><p>Interpret <var title="">digits</var> as a base-ten
   integer. Let <var title="">size</var> be the resulting
   number.</li>

   <li> 

    <!-- basefont support would go here, but we removed it -->

    <p>If <var title="">mode</var> is is <i>relative-plus</i>, then
    increment <var title="">value</var> by 3. If <var title="">mode</var> is is <i>relative-minus</i>, then decrement
    <var title="">value</var> by 3.</p>

   </li>

   <li><p>If <var title="">value</var> is greater than 7, let it be
   7.</li>

   <li><p>If <var title="">value</var> is less than 1, let it be
   1.</li>

   <li>

    <p>Set 'font-size' to the keyword corresponding to the value of
    <var title="">value</var> according to the following table:</p>

    <table><thead><tr><th><var title="">value</var>
       <th>'font-size' keyword
       <th>Notes
     <tbody><tr><td>1
       <td>xx-small
       <td>
      <tr><td>2
       <td>small
       <td>
      <tr><td>3
       <td>medium
       <td>
      <tr><td>4
       <td>large
       <td>
      <tr><td>5
       <td>x-large
       <td>
      <tr><td>6
       <td>xx-large
       <td>
      <tr><td>7
       <td>x<!---->xx-large
       <td><i>see below</i>
    </table><p>The 'x<!---->xx-large' value is a non-CSS value used here to
    indicate a font size one "step" larger than 'xx-large'.</p>

   </li>

  </ol><h4 id=punctuation-and-decorations><span class=secno>10.2.6 </span>Punctuation and decorations</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

:link, :visited, ins, u { text-decoration: underline; }
abbr[title], acronym[title] { text-decoration: dotted underline; }<!-- XXX CSS3 http://dev.w3.org/csswg/css3-text/#text-decoration-style -->
del, s, strike { text-decoration: line-through; }
blink { text-decoration: blink; }

q:before { content: open-quote; }
q:after { content: close-quote; }

nobr { white-space: nowrap; }
listing, plaintext, pre, xmp { white-space: pre; }

ol { list-style-type: decimal; }

dir, menu, ul {
  list-style-type: disc;
}

dir dl, dir menu, dir ul,
menu dl, menu menu, menu ul,
ol dl, ol menu, ol ul,
ul dl, ul menu, ul ul {
  list-style-type: circle;
}

dir dir dl, dir dir menu, dir dir ul, 
dir menu dl, dir menu menu, dir menu ul, 
dir ol dl, dir ol menu, dir ol ul, 
dir ul dl, dir ul menu, dir ul ul, 
menu dir dl, menu dir menu, menu dir ul, 
menu menu dl, menu menu menu, menu menu ul, 
menu ol dl, menu ol menu, menu ol ul, 
menu ul dl, menu ul menu, menu ul ul, 
ol dir dl, ol dir menu, ol dir ul, 
ol menu dl, ol menu menu, ol menu ul, 
ol ol dl, ol ol menu, ol ol ul, 
ol ul dl, ol ul menu, ol ul ul, 
ul dir dl, ul dir menu, ul dir ul, 
ul menu dl, ul menu menu, ul menu ul, 
ul ol dl, ul ol menu, ul ol ul, 
ul ul dl, ul ul menu, ul ul ul {
  list-style-type: square;
}

table { border-style: outset; }
td, th { border-style: inset; }

[dir=ltr] { direction: lrt; unicode-bidi: embed; }
[dir=rtl] { direction: rtl; unicode-bidi: embed; }
bdo[dir=ltr], bdo[dir=rtl] { unicode-bidi: bidi-override; }</pre>

  <p>In addition, rules setting the 'quotes' property appropriately
  for the locales and languages understood by the user are expected to
  be present.</p>

  <hr><p>The following rules are also expected to apply, as
  <a href=#presentational-hints>presentational hints</a>:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

td[nowrap], th[nowrap] { white-space: nowrap; }
pre[wrap] { white-space: pre-wrap; }

br[clear=left] { clear: left; }
br[clear=right] { clear: right; }
br[clear=all], br[clear=both] { clear: both; }

ol[type=1], li[type=1] { list-style-type: decimal; }
ol[type=a], li[type=a] { list-style-type: lower-alpha; }
ol[type=A], li[type=A] { list-style-type: upper-alpha; }
ol[type=i], li[type=i] { list-style-type: lower-roman; }
ol[type=I], li[type=I] { list-style-type: upper-roman; }
ul[type=disc], li[type=disc] { list-style-type: disc; }
ul[type=circle], li[type=circle] { list-style-type: circle; }
ul[type=square], li[type=square] { list-style-type: square; }

table[rules=none], table[rules=groups], table[rules=rows],
table[rules=cols], table[rules=all] {
  border-style: none;
  border-collapse: collapse;
}

table[frames=void] { border-style: hidden hidden hidden hidden; }
table[frames=above] { border-style: solid hidden hidden hidden; }
table[frames=below] { border-style: hidden hidden solid hidden; }
table[frames=hsides] { border-style: solid hidden solid hidden; }
table[frames=lhs] { border-style: hidden hidden hidden solid; }
table[frames=rhs] { border-style: hidden solid hidden hidden; }
table[frames=vsides] { border-style: hidden solid hidden solid; }
table[frames=box],
table[frames=border] { border-style: solid solid solid solid; }

table[frames=void] &gt; tr &gt; td, table[frames=void] &gt; tr &gt; th,
table[frames=above] &gt; tr &gt; td, table[frames=above] &gt; tr &gt; th,
table[frames=below] &gt; tr &gt; td, table[frames=below] &gt; tr &gt; th,
table[frames=hsides] &gt; tr &gt; td, table[frames=hsides] &gt; tr &gt; th,
table[frames=lhs] &gt; tr &gt; td, table[frames=lhs] &gt; tr &gt; th,
table[frames=rhs] &gt; tr &gt; td, table[frames=rhs] &gt; tr &gt; th,
table[frames=vsides] &gt; tr &gt; td, table[frames=vsides] &gt; tr &gt; th,
table[frames=box] &gt; tr &gt; td, table[frames=box] &gt; tr &gt; th,
table[frames=border] &gt; tr &gt; td, table[frames=border] &gt; tr &gt; th,
table[frames=void] &gt; thead &gt; tr &gt; td, table[frames=void] &gt; thead &gt; tr &gt; th,
table[frames=above] &gt; thead &gt; tr &gt; td, table[frames=above] &gt; thead &gt; tr &gt; th,
table[frames=below] &gt; thead &gt; tr &gt; td, table[frames=below] &gt; thead &gt; tr &gt; th,
table[frames=hsides] &gt; thead &gt; tr &gt; td, table[frames=hsides] &gt; thead &gt; tr &gt; th,
table[frames=lhs] &gt; thead &gt; tr &gt; td, table[frames=lhs] &gt; thead &gt; tr &gt; th,
table[frames=rhs] &gt; thead &gt; tr &gt; td, table[frames=rhs] &gt; thead &gt; tr &gt; th,
table[frames=vsides] &gt; thead &gt; tr &gt; td, table[frames=vsides] &gt; thead &gt; tr &gt; th,
table[frames=box] &gt; thead &gt; tr &gt; td, table[frames=box] &gt; thead &gt; tr &gt; th,
table[frames=border] &gt; thead &gt; tr &gt; td, table[frames=border] &gt; thead &gt; tr &gt; th,
table[frames=void] &gt; tbody &gt; tr &gt; td, table[frames=void] &gt; tbody &gt; tr &gt; th,
table[frames=above] &gt; tbody &gt; tr &gt; td, table[frames=above] &gt; tbody &gt; tr &gt; th,
table[frames=below] &gt; tbody &gt; tr &gt; td, table[frames=below] &gt; tbody &gt; tr &gt; th,
table[frames=hsides] &gt; tbody &gt; tr &gt; td, table[frames=hsides] &gt; tbody &gt; tr &gt; th,
table[frames=lhs] &gt; tbody &gt; tr &gt; td, table[frames=lhs] &gt; tbody &gt; tr &gt; th,
table[frames=rhs] &gt; tbody &gt; tr &gt; td, table[frames=rhs] &gt; tbody &gt; tr &gt; th,
table[frames=vsides] &gt; tbody &gt; tr &gt; td, table[frames=vsides] &gt; tbody &gt; tr &gt; th,
table[frames=box] &gt; tbody &gt; tr &gt; td, table[frames=box] &gt; tbody &gt; tr &gt; th,
table[frames=border] &gt; tbody &gt; tr &gt; td, table[frames=border] &gt; tbody &gt; tr &gt; th,
table[frames=void] &gt; tfoot &gt; tr &gt; td, table[frames=void] &gt; tfoot &gt; tr &gt; th,
table[frames=above] &gt; tfoot &gt; tr &gt; td, table[frames=above] &gt; tfoot &gt; tr &gt; th,
table[frames=below] &gt; tfoot &gt; tr &gt; td, table[frames=below] &gt; tfoot &gt; tr &gt; th,
table[frames=hsides] &gt; tfoot &gt; tr &gt; td, table[frames=hsides] &gt; tfoot &gt; tr &gt; th,
table[frames=lhs] &gt; tfoot &gt; tr &gt; td, table[frames=lhs] &gt; tfoot &gt; tr &gt; th,
table[frames=rhs] &gt; tfoot &gt; tr &gt; td, table[frames=rhs] &gt; tfoot &gt; tr &gt; th,
table[frames=vsides] &gt; tfoot &gt; tr &gt; td, table[frames=vsides] &gt; tfoot &gt; tr &gt; th,
table[frames=box] &gt; tfoot &gt; tr &gt; td, table[frames=box] &gt; tfoot &gt; tr &gt; th,
table[frames=border] &gt; tfoot &gt; tr &gt; td, table[frames=border] &gt; tfoot &gt; tr &gt; th {
  border-style: solid;
}

table[rules=none] &gt; tr &gt; td, table[rules=none] &gt; tr &gt; th,
table[rules=none] &gt; thead &gt; tr &gt; td, table[rules=none] &gt; thead &gt; tr &gt; th,
table[rules=none] &gt; tbody &gt; tr &gt; td, table[rules=none] &gt; tbody &gt; tr &gt; th,
table[rules=none] &gt; tfoot &gt; tr &gt; td, table[rules=none] &gt; tfoot &gt; tr &gt; th,
table[rules=groups] &gt; tr &gt; td, table[rules=groups] &gt; tr &gt; th,
table[rules=groups] &gt; thead &gt; tr &gt; td, table[rules=groups] &gt; thead &gt; tr &gt; th,
table[rules=groups] &gt; tbody &gt; tr &gt; td, table[rules=groups] &gt; tbody &gt; tr &gt; th,
table[rules=groups] &gt; tfoot &gt; tr &gt; td, table[rules=groups] &gt; tfoot &gt; tr &gt; th,
table[rules=rows] &gt; tr &gt; td, table[rules=rows] &gt; tr &gt; th,
table[rules=rows] &gt; thead &gt; tr &gt; td, table[rules=rows] &gt; thead &gt; tr &gt; th,
table[rules=rows] &gt; tbody &gt; tr &gt; td, table[rules=rows] &gt; tbody &gt; tr &gt; th,
table[rules=rows] &gt; tfoot &gt; tr &gt; td, table[rules=rows] &gt; tfoot &gt; tr &gt; th {
  border-style: none;
}

table[rules=groups] &gt; colgroup, table[rules=groups] &gt; thead,
table[rules=groups] &gt; tbody, table[rules=groups] &gt; tfoot {
  border-style: solid;
}

table[rules=rows] &gt; tr, table[rules=rows] &gt; thead &gt; tr,
table[rules=rows] &gt; tbody &gt; tr, table[rules=rows] &gt; tfoot &gt; tr {
  border-style: solid;
}

table[rules=cols] &gt; tr &gt; td, table[rules=cols] &gt; tr &gt; th,
table[rules=cols] &gt; thead &gt; tr &gt; td, table[rules=cols] &gt; thead &gt; tr &gt; th,
table[rules=cols] &gt; tbody &gt; tr &gt; td, table[rules=cols] &gt; tbody &gt; tr &gt; th,
table[rules=cols] &gt; tfoot &gt; tr &gt; td, table[rules=cols] &gt; tfoot &gt; tr &gt; th {
  border-style: none solid none solid;
}

table[rules=all] &gt; tr &gt; td, table[rules=all] &gt; tr &gt; th,
table[rules=all] &gt; thead &gt; tr &gt; td, table[rules=all] &gt; thead &gt; tr &gt; th,
table[rules=all] &gt; tbody &gt; tr &gt; td, table[rules=all] &gt; tbody &gt; tr &gt; th,
table[rules=all] &gt; tfoot &gt; tr &gt; td, table[rules=all] &gt; tfoot &gt; tr &gt; th {
  border-style: solid;
}</pre>

  <p>When rendering <code><a href=#the-li-element>li</a></code> elements, user agents are expected
  to use the ordinal value of the <code><a href=#the-li-element>li</a></code> element to render
  the counter in the list item marker.</p>

  <p>The <code><a href=#the-table-element>table</a></code> element's <code title=attr-table-border>border</code> attribute <a href=#maps-to-the-pixel-length-property title="maps
  to the pixel length property">maps to the pixel length
  properties</a> 'border-top-width', 'border-right-width',
  'border-bottom-width', 'border-left-width' on the element. If the
  attribute is present but its value cannot be parsed successfully, a
  default value of 1px is expected to be used for that property
  instead.</p>


  <h4 id=resetting-rules-for-inherited-properties><span class=secno>10.2.7 </span>Resetting rules for inherited properties</h4>

  <p>The following rules are also expected to be in play, resetting
  certain properties to block inheritance by default.</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

table, input, select, option, optgroup, button {
  text-indent: initial;
}</pre>

  <!-- arguably, the form controls' 'text-indent' lines should be in
  the sections below instead of here, but that would be far more
  complicated than this -->

  <p>In <a href=#quirks-mode>quirks mode</a>, the following rules are also
  expected to apply:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

table {
  font-weight: initial;
  font-style: initial;
  font-variant: initial;
  font-size: initial;
  line-height: initial;
  white-space: initial;
  text-align: initial;
}

input { box-sizing: border-box; }</pre>


  <h4 id=the-hr-element-0><span class=secno>10.2.8 </span>The <code><a href=#the-hr-element>hr</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

hr { color: gray; border-style: inset; border-width: 1px; }</pre>

  <p>The following rules are also expected to apply, as
  <a href=#presentational-hints>presentational hints</a>:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

hr[align=left] { margin-left: 0; margin-right: auto; }
hr[align=right] { margin-left: auto; margin-right: 0; }
hr[align=center] { margin-left: auto; margin-right: auto; }
hr[color], hr[noshade] { border-style: solid; }</pre>

  <p>If an <code><a href=#the-hr-element>hr</a></code> element has either a <code title=attr-hr-color>color</code> attribute or a <code title=attr-hr-noshade>noshade</code> attribute, and furthermore
  also has a <code title=attr-hr-size>size</code> attribute, and
  parsing that attribute's value using the <a href=#rules-for-parsing-non-negative-integers>rules for parsing
  non-negative integers</a> doesn't generate an error, then the
  user agent is expected to use the parsed value divided by two as a
  pixel length for <a href=#presentational-hints>presentational hints</a> for the properties
  'border-top-width', 'border-right-width', 'border-bottom-width', and
  'border-left-width' on the element.</p>

  <p>Otherwise, if an <code><a href=#the-hr-element>hr</a></code> element has neither a <code title=attr-hr-color>color</code> attribute nor a <code title=attr-hr-noshade>noshade</code> attribute, but does have a
  <code title=attr-hr-size>size</code> attribute, and parsing that
  attribute's value using the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
  integers</a> doesn't generate an error, then: if the parsed value
  is one, then the user agent is expected to use the attribute as a
  <a href=#presentational-hints title="presentational hints">presentational hint</a>
  setting the element's 'border-bottom-width' to 0; otherwise, if the
  parsed value is greater than one, then the user agent is expected to
  use the parsed value minus two as a pixel length for
  <a href=#presentational-hints>presentational hints</a> for the 'height' property on the
  element.</p>

  <p>The <code title=attr-hr-width>width</code> attribute on an
  <code><a href=#the-hr-element>hr</a></code> element <a href=#maps-to-the-dimension-property>maps to the dimension property</a>
  'width' on the element.</p>

  <p>When an <code><a href=#the-hr-element>hr</a></code> element has a <code title=attr-hr-color>color</code> attribute, its value is expected
  to be parsed using the <a href=#rules-for-parsing-a-legacy-color-value>rules for parsing a legacy color
  value</a>, and the user agent is expected to treat the attribute
  as a <a href=#presentational-hints title="presentational hints">presentational hint</a>
  setting the element's 'color' property to the resulting color.</p>



  <h4 id=the-fieldset-element-0><span class=secno>10.2.9 </span>The <code><a href=#the-fieldset-element>fieldset</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

fieldset {
  margin-left: 2px; margin-right: 2px;
  border: groove 2px ThreeDFace;
  padding: 0.35em 0.625em 0.75em;
}</pre>

  <p>The first <code><a href=#the-legend-element>legend</a></code> element child of a
  <code><a href=#the-fieldset-element>fieldset</a></code> element, if any, is expected to be rendered
  over the top border edge of the <code><a href=#the-fieldset-element>fieldset</a></code> element. If
  the <code><a href=#the-legend-element>legend</a></code> element in question has an <code title=attr-legend-align>align</code> attribute, and its value is
  an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for one of the strings
  in the first column of the following table, then the
  <code><a href=#the-legend-element>legend</a></code> is expected to be rendered horizontally aligned
  over the border edge in the position given in the corresponding cell
  on the same row in the second column. If the attribute is absent or
  has a value that doesn't match any of the cases in the table, then
  the position is expected to be on the right if the 'direction'
  property on this element has a computed value of 'rtl', and on the
  left otherwise.</p>

  <table><thead><tr><th>Attribute value
     <th>Alignment position
   <tbody><tr><td><code title="">left</code>
     <td>On the left
    <tr><td><code title="">right</code>
     <td>On the right
    <tr><td><code title="">center</code>
     <td>In the middle
  </table><h3 id=replaced-elements><span class=secno>10.3 </span>Replaced elements</h3>

  <h4 id=embedded-content-1><span class=secno>10.3.1 </span>Embedded content</h4>

  <p>The <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-canvas-element>canvas</a></code>, <code><a href=#the-embed-element>embed</a></code>,
  <code><a href=#the-iframe-element>iframe</a></code>, and <code><a href=#video>video</a></code> elements are expected to
  be treated as replaced elements.</p>

  <p>An <code><a href=#the-object-element>object</a></code> element that <a href=#represents>represents</a> an
  image, plugin, or <a href=#nested-browsing-context>nested browsing context</a> is expected
  to be treated as a replaced element. Other <code><a href=#the-object-element>object</a></code>
  elements are expected to be treated as ordinary elements in the
  rendering model.</p>

  <p>The <code><a href=#audio>audio</a></code> element, when it has a <code title=attr-media-controls><a href=#attr-media-controls>controls</a></code> attribute, is expected
  to be treated as a replaced element about one line high, as wide as
  is necessary to expose the user agent's user interface features.</p>

  <hr><p>The following CSS rules are expected to apply:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

iframe { border: 2px inset; }</pre>


  <h4 id=images-0><span class=secno>10.3.2 </span>Images</h4>

  <p>When an <code><a href=#the-img-element>img</a></code> element or an <code><a href=#the-input-element>input</a></code> element
  when its <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in
  the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state
  <a href=#represents>represents</a> an image, it is expected to be treated as a
  replaced element.</p>

  <p>When an <code><a href=#the-img-element>img</a></code> element or an <code><a href=#the-input-element>input</a></code> element
  when its <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in
  the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state
  does not <a href=#represents title=represents>represent</a> an image, but the
  element already has instrinsic dimensions (e.g. from the
  <a href=#dimension-attributes>dimension attributes</a> or CSS rules), and either the user
  agent has reason to believe that the image will become
  <i>available</i> and be rendered in due course or the
  <code>Document</code> is in <a href=#quirks-mode>quirks mode</a>, the element is
  expected to be treated as a replaced element whose content is the
  text that the element represents, if any, optionally alongside an
  icon indicating that the image is being obtained. For
  <code><a href=#the-input-element>input</a></code> elements, the text is expected to appear
  button-like to indicate that the element is a <a href=#concept-button title=concept-button>button</a>.</p>

  <p>When an <code><a href=#the-img-element>img</a></code> element <a href=#represents>represents</a> some
  text and the user agent does not expect this to change, the element
  is expected to be treated as an inline element whose content is the
  text, optionally with an icon indicating that an image is
  missing.</p>

  <p>When an <code><a href=#the-img-element>img</a></code> element <a href=#represents>represents</a> nothing
  and the user agent does not expect this to change, the element is
  expected to not be rendered at all.</p>

  <p>When an <code><a href=#the-img-element>img</a></code> element might be a key part of the
  content, but neither the image nor any kind of alternative text is
  available, and the user agent does not expect this to change, the
  element is expected to be treated as an inline element whose content
  is an icon indicating that an image is missing.</p> <!-- there's
  also a should requirement for this case in the <img> section itself
  -->

  <p>When an <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state does not
  <a href=#represents title=represents>represent</a> an image and the user
  agent does not expect this to change, the element is expected to be
  treated as a replaced element consisting of a button whose content
  is the element's alternative text. The intrinsic dimensions of the
  button are expected to be about one line in height and whatever
  width is necessary to render the text on one line.</p>

  <p>The icons mentioned above are expected to be relatively small so
  as not to disrupt most text but be easily clickable. In a visual
  environment, for instance, icons could be 16 pixels by 16 pixels
  square, or 1em by 1em if the images are scalable. In an audio
  environment, the icon could be a short bleep. The icons are intended
  to indicate to the user that they can be used to get to whatever
  options the UA provides for images, and, where appropriate, are
  expected to provide access to the context menu that would have come
  up if the user interacted with the actual image.</p>

  <hr><p>The following CSS rules are expected to apply when the
  <code>Document</code> is in <a href=#quirks-mode>quirks mode</a>:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

img[align=left] { margin-right: 3px; }
img[align=right] { margin-left: 3px; }</pre>



  <h4 id=attributes-for-embedded-content-and-images><span class=secno>10.3.3 </span>Attributes for embedded content and images</h4>

  <p>The following CSS rules are expected to apply as
  <a href=#presentational-hints>presentational hints</a>:</p>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

iframe[frameborder=0], iframe[frameborder=no] { border: none; }

applet[align=left], embed[align=left], iframe[align=left],
img[align=left], input[type=image][align=left], object[align=left] {
  float: left;
}

applet[align=right], embed[align=right], iframe[align=right],
img[align=right], input[type=image][align=right], object[align=right] {
  float: right;
}

applet[align=top], embed[align=top], iframe[align=top],
img[align=top], input[type=image][align=top], object[align=top] {
  vertical-align: top;
}

applet[align=bottom], embed[align=bottom], iframe[align=bottom],
img[align=bottom], input[type=image][align=bottom], object[align=bottom],
applet[align=baseline], embed[align=baseline], iframe[align=baseline],
img[align=baseline], input[type=image][align=baseline], object[align=baseline] {
  vertical-align: baseline;
}

applet[align=texttop], embed[align=texttop], iframe[align=texttop],
img[align=texttop], input[type=image][align=texttop], object[align=texttop] {
  vertical-align: text-top;
}

applet[align=absmiddle], embed[align=absmiddle], iframe[align=absmiddle],
img[align=absmiddle], input[type=image][align=absmiddle], object[align=absmiddle],
applet[align=abscenter], embed[align=abscenter], iframe[align=abscenter],
img[align=abscenter], input[type=image][align=abscenter], object[align=abscenter] {
  vertical-align: middle;
}

applet[align=bottom], embed[align=bottom], iframe[align=bottom],
img[align=bottom], input[type=image][align=bottom],
object[align=bottom] {
  vertical-align: bottom;
}</pre>

  <p>When an <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-embed-element>embed</a></code>,
  <code><a href=#the-iframe-element>iframe</a></code>, <code><a href=#the-img-element>img</a></code>, or <code><a href=#the-object-element>object</a></code>
  element, or an <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, has an
  <code title=attr-dim-align>align</code> attribute whose value is
  an <a href=#ascii-case-insensitive>ASCII case-insensitive</a> match for the string "<code title="">center</code>" or the string "<code title="">middle</code>", the user agent is expected to act as if the
  element's 'vertical-align' property was set to a value that aligns
  the vertical middle of the element with the parent element's
  baseline.</p>

  <p>The <code title=attr-dim-hspace>hspace</code> attribute of
  <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-iframe-element>iframe</a></code>,
  <code><a href=#the-img-element>img</a></code>, or <code><a href=#the-object-element>object</a></code> elements, and
  <code><a href=#the-input-element>input</a></code> elements with a <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, <a href=#maps-to-the-dimension-property title="maps to the dimension property">maps to the dimension
  properties</a> 'margin-left' and 'margin-right' on the
  element.</p>

  <p>The <code title=attr-dim-vspace>vspace</code> attribute of
  <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-iframe-element>iframe</a></code>,
  <code><a href=#the-img-element>img</a></code>, or <code><a href=#the-object-element>object</a></code> elements, and
  <code><a href=#the-input-element>input</a></code> elements with a <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, <a href=#maps-to-the-dimension-property title="maps to the dimension property">maps to the dimension
  properties</a> 'margin-top' and 'margin-bottom' on the
  element.</p>

  <p>When an <code><a href=#the-img-element>img</a></code> element, <code><a href=#the-object-element>object</a></code> element, or
  <code><a href=#the-input-element>input</a></code> element with a <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state is contained
  within a <a href=#hyperlink>hyperlink</a> and has a <code title=attr-dim-border>border</code> attribute whose value, when
  parsed using the <a href=#rules-for-parsing-non-negative-integers>rules for parsing non-negative
  integers</a>, is found to be a number greater than zero, the user
  agent is expected to use the parsed value for eight
  <a href=#presentational-hints>presentational hints</a>: four setting the parsed value as
  a pixel length for the element's 'border-top-width',
  'border-right-width', 'border-bottom-width', and 'border-left-width'
  properties, and four setting the element's 'border-top-style',
  'border-right-style', 'border-bottom-style', and 'border-left-style'
  properties to the value 'solid'.</p>

  <p>The <code title=attr-dim-width><a href=#attr-dim-width>width</a></code> and <code title=attr-dim-height><a href=#attr-dim-height>height</a></code> attributes on
  <code><a href=#the-applet-element>applet</a></code>, <code><a href=#the-embed-element>embed</a></code>, <code><a href=#the-iframe-element>iframe</a></code>,
  <code><a href=#the-img-element>img</a></code>, <code><a href=#the-object-element>object</a></code> or <code><a href=#video>video</a></code>
  elements, and <code><a href=#the-input-element>input</a></code> elements with a <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute in the <a href=#image-button-state title=attr-input-type-image>Image Button</a> state, <a href=#maps-to-the-pixel-length-property title="maps to the pixel length property">map to the dimension
  properties</a> 'width' and 'height' on the element
  respectively.</p>



  <h4 id=tool-bars-0><span class=secno>10.3.4 </span>Tool bars</h4>

  <p>When a <code><a href=#menus>menu</a></code> element's <code title=attr-menu-type><a href=#attr-menu-type>type</a></code> attribute is in the <a href=#tool-bar-state title="tool bar state">tool bar</a> state, the element is
  expected to be treated as a replaced element with a height about two
  lines high and a width derived from the contents of the element.</p>

  <p>The element is expected to have, by default, the appearance of a
  tool bar on the user agent's platform. It is expected to contain the
  menu that is <a href=#building-menus-and-tool-bars title="building menus and tool bars">built</a>
  from the element.</p>

  <p class="example XXX">...example with screenshot...</p>



  <h3 id=bindings><span class=secno>10.4 </span>Bindings</h3>

  <h4 id=introduction-10><span class=secno>10.4.1 </span>Introduction</h4>

  <p>A number of elements have their rendering defined in terms of the
  'binding' property. <a href=#refsBECSS>[BECSS]</a></p>

  <p>The CSS snippets below set the 'binding' property to a
  user-agent-defined value, represented below by keywords like <code title=""><i title="">bb</i></code>. The rules then described for
  these bindings are only expected to apply if the element's 'binding'
  property has not been overriden (e.g. by the author) to have another
  value.</p>

  <p>Exactly how the bindings are implemented is not specified by this
  specification. User agents are encouraged to make their bindings set
  the 'appearance' CSS property appropriately to achieve
  platform-native appearances for widgets, and are expected to
  implement any relevant animations, etc, that are appropriate for the
  platform. <a href=#refsCSSUI>[CSSUI]</a></p>

  <hr><p>The <dfn id=converting-a-character-width-to-pixels>converting a character width to pixels</dfn> algorithm,
  used by some of the bindings below, returns <span>(<var title="">size-1</var>)&times;<var title="">avg</var>&nbsp;+&nbsp;<var title="">max</var></span>, where
  <var title="">size</var> is the character width to convert, <var title="">avg</var> is the average character width of the primary
  font for the element for which the algorithm is being run, in
  pixels, and <var title="">max</var> is the maximum character width
  of that same font, also in pixels. (The element's 'letter-spacing'
  property does not affect the result.)</p>



  <h4 id=the-bb-element-0><span class=secno>10.4.2 </span>The <code><a href=#the-bb-element>bb</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

bb:empty { binding: <i title="">bb</i>; }</pre>

  <p>When the <i title="">bb</i> binding applies to a <code><a href=#the-bb-element>bb</a></code>
  element, the element is expected to render as an 'inline-block' box
  rendered as a button, about one line high, containing text derived
  from the element's <code title=attr-bb-type><a href=#attr-bb-type>type</a></code> attribute
  in a user-agent-defined (and probably locale-specific) fashion.</p>



  <h4 id=the-button-element-0><span class=secno>10.4.3 </span>The <code><a href=#the-button-element>button</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

button { binding: <i title="">button</i>; }</pre>

  <p>When the <i title="">button</i> binding applies to a
  <code><a href=#the-button-element>button</a></code> element, the element is expected to render as an
  'inline-block' box rendered as a button whose contents are the
  contents of the element.</p>



  <h4 id=the-datagrid-element><span class=secno>10.4.4 </span>The <code><a href=#datagrid>datagrid</a></code> element</h4>

  <p class=XXX>This section will probably include details on how to
  render DATAGRID (including <span id=datagridPseudos>its
  pseudo-elements</span>), drag-and-drop, etc, in a visual medium, in
  concert with CSS. Implementation experience is desired before this
  section is filled in.</p>


  <h4 id=the-details-element-0><span class=secno>10.4.5 </span>The <code><a href=#the-details-element>details</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

details { binding: <i title="">details</i>; }</pre>

  <p>When the <i title="">details</i> binding applies to a
  <code><a href=#the-details-element>details</a></code> element, the element is expected to render as a
  'block' box with its 'padding-left' property set to '40px'. The
  element's shadow tree is expected to take a child element that
  matches the selector <code title="">:bound-element&nbsp;&gt;&nbsp;legend:first-child</code> and
  place it in a first 'block' box container, and then take the
  remaining child nodes and place them in a later 'block' box
  container.</p>

  <p>The first container is expected to contain at least one line box,
  and that line box is expected to contain a triangle widget,
  horizontally positioned within the left padding of the
  <code><a href=#the-details-element>details</a></code> element. That widget is expected to allow the
  user to request that the details be shown or hidden.</p>

  <p>The later container is expected to have its 'overflow' property
  set to 'hidden'. When the <code><a href=#the-details-element>details</a></code> element has an <code title=attr-details-open><a href=#attr-details-open>open</a></code> attribute, the later container
  is expected to have its 'height' set to 'auto'; when it does not,
  the later container is expected to have its 'height' set to 0.

<!--
XXX examples with screenshots
http://mail.gnome.org/archives/usability/2006-June/msg00015.html
-->



  <h4 id=the-input-element-as-a-text-entry-widget><span class=secno>10.4.6 </span>The <code><a href=#the-input-element>input</a></code> element as a text entry widget</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

input { binding: <i title="">input-textfield</i>; }
input[type=password] { binding: <i title="">input-password</i>; }
/* later rules override this for other values of type="" */</pre>

  <p>When the <i title="">input-textfield</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#text-state-and-search-state title=attr-input-type-text>Text</a>, <a href=#text-state-and-search-state title=attr-input-type-search>Search</a>, <a href=#url-state title=attr-input-type-url>URL</a>, or <a href=#e-mail-state title=attr-input-type-email>E-mail</a> state, the element is
  expected to render as an 'inline-block' box rendered as a text
  field.</p>

  <p>When the <i title="">input-password</i> binding applies, to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#password-state title=attr-input-type-password>Password</a> state, the element
  is expected to render as an 'inline-block' box rendered as a text
  field whose contents are obscured.</p>

  <p>If an <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in one of the above
  states has a <code title=attr-input-size><a href=#attr-input-size>size</a></code> attribute,
  and parsing that attribute's value using the <a href=#rules-for-parsing-non-negative-integers>rules for parsing
  non-negative integers</a> doesn't generate an error, then the
  user agent is expected to use the attribute as a <a href=#presentational-hints title="presentational hints">presentational hint</a> for the
  'width' property on the element, with the value obtained from
  applying the <a href=#converting-a-character-width-to-pixels>converting a character width to pixels</a>
  algorithm to the value of the attribute.</p>

  <p>If an <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in one of the above
  states does <em>not</em> have a <code title=attr-input-size><a href=#attr-input-size>size</a></code> attribute, then the user agent
  is expected to act as if it had a user-agent-level style sheet rule
  setting the 'width' property on the element to the value obtained
  from applying the <a href=#converting-a-character-width-to-pixels>converting a character width to
  pixels</a> algorithm to the number 20.</p>



  <h4 id=the-input-element-as-domain-specific-widgets><span class=secno>10.4.7 </span>The <code><a href=#the-input-element>input</a></code> element as domain-specific widgets</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

input[type=datetime] { binding: <i title="">input-datetime</i>; }
input[type=date] { binding: <i title="">input-date</i>; }
input[type=month] { binding: <i title="">input-month</i>; }
input[type=week] { binding: <i title="">input-week</i>; }
input[type=time] { binding: <i title="">input-time</i>; }
input[type=datetime-local] { binding: <i title="">input-datetime-local</i>; }
input[type=number] { binding: <i title="">input-number</i>; }</pre>

  <p>When the <i title="">input-datetime</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#date-and-time-state title=attr-input-type-datetime>Date and Time</a> state, the
  element is expected to render as an 'inline-block' box depicting a
  Date and Time control.</p>

  <p>When the <i title="">input-date</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#date-state title=attr-input-type-date>Date</a> state, the element is
  expected to render as an 'inline-block' box depicting a Date
  control.</p>

  <p>When the <i title="">input-month</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#month-state title=attr-input-type-month>Month</a> state, the element is
  expected to render as an 'inline-block' box depicting a Month
  control.</p>

  <p>When the <i title="">input-week</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#week-state title=attr-input-type-week>Week</a> state, the element is
  expected to render as an 'inline-block' box depicting a Week
  control.</p>

  <p>When the <i title="">input-time</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#time-state title=attr-input-type-time>Time</a> state, the element is
  expected to render as an 'inline-block' box depicting a Time
  control.</p>

  <p>When the <i title="">input-datetime-local</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#local-date-and-time-state title=attr-input-type-datetime-local>Local Date and Time</a>
  state, the element is expected to render as an 'inline-block' box
  depicting a Local Date and Time control.</p>

  <p>When the <i title="">input-number</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#number-state title=attr-input-type-number>Number</a> state, the element is
  expected to render as an 'inline-block' box depicting a Number
  control.</p>

  <p>These controls are all expected to be about one line high, and
  about as wide as necessary to show the widest possible value.</p>



  <h4 id=the-input-element-as-a-range-control><span class=secno>10.4.8 </span>The <code><a href=#the-input-element>input</a></code> element as a range control</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

input[type=range] { binding: <i title="">input-range</i>; }</pre>

  <p>When the <i title="">input-range</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#range-state title=attr-input-type-range>Range</a> state, the element is
  expected to render as an 'inline-block' box depicting a slider
  control.</p>

  <p>When the control is wider than it is tall (or square), the
  control is expected to be a horizontal slider, with the lowest value
  on the right if the 'direction' property on this element has a
  computed value of 'rtl', and on the left otherwise. When the control
  is taller than it is wide, it is expected to be a vertical slider,
  with the lowest value on the bottom.</p>

  <p>Predefined suggested values (provided by the <code title=attr-input-list><a href=#attr-input-list>list</a></code> attribute) are expected to be
  shown as tick marks on the slider, which the slider can snap to.</p>



  <h4 id=the-input-element-as-a-color-well><span class=secno>10.4.9 </span>The <code><a href=#the-input-element>input</a></code> element as a color well</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

input[type=color] { binding: <i title="">input-color</i>; }</pre>

  <p>When the <i title="">input-color</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#color-state title=attr-input-type-color>Color</a> state, the element is
  expected to render as an 'inline-block' box depicting a color well,
  which, when activated, provides the user with a color picker (e.g. a
  color wheel or color palette) from which the color can be
  changed.</p>

  <p>Predefined suggested values (provided by the <code title=attr-input-list><a href=#attr-input-list>list</a></code> attribute) are expected to be
  shown in the color picker interface, not on the color well
  itself.</p>



  <h4 id=the-input-element-as-a-check-box-and-radio-button-widgets><span class=secno>10.4.10 </span>The <code><a href=#the-input-element>input</a></code> element as a check box and radio button widgets</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

input[type=checkbox] { binding: <i title="">input-checkbox</i>; }
input[type=radio] { binding: <i title="">input-radio</i>; }</pre>

  <p>When the <i title="">input-checkbox</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#checkbox-state title=attr-input-type-checkbox>Checkbox</a> state, the element
  is expected to render as an 'inline-block' box containing a single
  check box control, with no label.</p>

  <p>When the <i title="">input-radio</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#radio-button-state title=attr-input-type-radio>Radio Button</a> state, the element
  is expected to render as an 'inline-block' box containing a single
  radio button control, with no label.</p>



  <h4 id=the-input-element-as-a-file-upload-control><span class=secno>10.4.11 </span>The <code><a href=#the-input-element>input</a></code> element as a file upload control</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

input[type=file] { binding: <i title="">input-file</i>; }</pre>

  <p>When the <i title="">input-file</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#file-upload-state title=attr-input-type-file>File Upload</a> state, the element
  is expected to render as an 'inline-block' box containing a span of
  text giving the filename(s) of the <a href=#concept-input-type-file-selected title=concept-input-type-file-selected>selected files</a>, if
  any, followed by a button that, when activated, provides the user
  with a file picker from which the selection can be changed.</p>



  <h4 id=the-input-element-as-a-button><span class=secno>10.4.12 </span>The <code><a href=#the-input-element>input</a></code> element as a button</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

input[type=submit], input[type=reset], input[type=button] {
  binding: <i title="">input-button</i>;
}</pre>

  <p>When the <i title="">input-button</i> binding applies to an
  <code><a href=#the-input-element>input</a></code> element whose <code title=attr-input-type><a href=#attr-input-type>type</a></code> attribute is in the <a href=#submit-button-state title=attr-input-type-submit>Submit Button</a>, <a href=#reset-button-state title=attr-input-type-reset>Reset Button</a>, or <a href=#button-state title=attr-input-type-button>Button</a> state, the element is
  expected to render as an 'inline-block' box rendered as a button,
  about one line high, containing the contents of the element's <code title=attr-input-value><a href=#attr-input-value>value</a></code> attribute, if any, or text
  derived from the element's <code title=attr-input-type><a href=#attr-input-type>type</a></code>
  attribute in a user-agent-defined (and probably locale-specific)
  fashion, if not.</p>



  <h4 id=the-marquee-element><span class=secno>10.4.13 </span>The <code><a href=#the-marquee-element-0>marquee</a></code> element</h4>

  <p class=XXX>...(Waiting til I've specced the DOM side of this)...</p>
  <!-- XXX attributes: height/width; direction is case insensitive; bgcolor; hspace/vspace -->



  <h4 id=the-meter-element-0><span class=secno>10.4.14 </span>The <code><a href=#the-meter-element>meter</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

meter {
  binding: <i title="">meter</i>;
}</pre>

  <p>When the <i title="">meter</i> binding applies to a
  <code><a href=#the-meter-element>meter</a></code> element, the element is expected to render as an
  'inline-block' box with a 'height' of '1em' and a 'width' of '5em',
  a 'vertical-align' of '-0.2em', and with its contents depicting a
  gauge.</p>

  <p>When the element is wider than it is tall (or square), the
  depiction is expected to be of a horizontal gauge, with the minimum
  value on the right if the 'direction' property on this element has a
  computed value of 'rtl', and on the left otherwise. When the element
  is taller than it is wide, it is expected to depict a vertical
  gauge, with the minimum value on the bottom.</p>

  <p>User agents are expected to use a presentation consistent with
  platform conventions for gauges, if any.</p>

  <p class=note>Requirements for what must be depicted in the gauge
  are included in the definition of the <code><a href=#the-meter-element>meter</a></code>
  element.</p>



  <h4 id=the-progress-element-0><span class=secno>10.4.15 </span>The <code><a href=#the-progress-element>progress</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

progress {
  binding: <i title="">progress</i>;
}</pre>

  <p>When the <i title="">progress</i> binding applies to a
  <code><a href=#the-progress-element>progress</a></code> element, the element is expected to render as
  an 'inline-block' box with a 'height' of '1em' and a 'width' of
  '10em', a 'vertical-align' of '-0.2em', and with its contents
  depicting a horizontal progress bar, with the start on the right and
  the end on the left if the 'direction' property on this element has
  a computed value of 'rtl', and with the start on the left and the
  end on the right otherwise.</p>

  <p>User agents are expected to use a presentation consistent with
  platform conventions for progress bars. In particular, user agents
  are expected to use different presentations for determinate and
  indeterminate progress bars. User agents are also expected to vary
  the presentation based on the dimensions of the element.</p>

  <p class=example>For example, on some platforms for showing
  indeterminate progress there is an asychronous progress indicator
  with square dimensions, which could be used when the element is
  square, and an indeterminate progress bar, which could be used when
  the element is wide.</p>

  <p class=note>Requirements for how to determine if the progress
  bar is determinate or indeterminate, and what progress a determinate
  progress bar is to show, are included in the definition of the
  <code><a href=#the-progress-element>progress</a></code> element.</p>



  <h4 id=the-select-element-0><span class=secno>10.4.16 </span>The <code><a href=#the-select-element>select</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

select {
  binding: <i title="">select</i>;
}</pre>

  <p>When the <i title="">select</i> binding applies to a
  <code><a href=#the-select-element>select</a></code> element whose <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute is present,
  the element is expected to render as a multi-select list box.</p>

  <p>When the <i title="">select</i> binding applies to a
  <code><a href=#the-select-element>select</a></code> element whose <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute is absent,
  and the element's <code title=attr-select-size><a href=#attr-select-size>size</a></code>
  attribute <a href=#rules-for-parsing-non-negative-integers title="rules for parsing non-negative
  integers">specifies</a> a value greater than 1, the element is
  expected to render as a single-select list box.</p>

  <p>When the element renders as a list box, it is expected to render
  as an 'inline-block' box whose 'height' is the height necessary to
  contain as many rows for items as <a href=#rules-for-parsing-non-negative-integers title="rules for parsing
  non-negative integers">specified</a> by the element's <code title=attr-select-size><a href=#attr-select-size>size</a></code> attribute, or four rows if the
  attribute is absent, and whose 'width' is the <a href="#width-of-the-select's-labels">width of the
  <code>select</code>'s labels</a> plus the width of a
  scrollbar.</p>

  <p>When the <i title="">select</i> binding applies to a
  <code><a href=#the-select-element>select</a></code> element whose <code title=attr-select-multiple><a href=#attr-select-multiple>multiple</a></code> attribute is absent,
  and the element's <code title=attr-select-size><a href=#attr-select-size>size</a></code>
  attribute is either absent or <a href=#rules-for-parsing-non-negative-integers title="rules for parsing
  non-negative integers">specifies</a> either no value (an error),
  or a value less than or equal to 1, the element is expected to
  render as a one-line drop down box whose width is the <a href="#width-of-the-select's-labels">width of
  the <code>select</code>'s labels</a>.</p>

  <p>In either case (list box or drop-down box), the element's items
  are expected to be the element's <a href=#concept-select-option-list title=concept-select-option-list>list of options</a>, with the
  element's <code><a href=#the-optgroup-element>optgroup</a></code> element children providing headers
  for groups of options where applicable.</p>

  <p>The <dfn id="width-of-the-select's-labels">width of the <code>select</code>'s labels</dfn> is the
  wider of the width necessary to render the widest
  <code><a href=#the-optgroup-element>optgroup</a></code>, and the width necessary to render the widest
  <code><a href=#the-option-element>option</a></code> element in the element's <a href=#concept-select-option-list title=concept-select-option-list>list of options</a> (including
  its indent, if any).</p>

  <p>An <code><a href=#the-optgroup-element>optgroup</a></code> element is expected to be rendered by
  displaying the element's <code title=attr-optgroup-label><a href=#attr-optgroup-label>label</a></code> attribute.</p>

  <p>An <code><a href=#the-option-element>option</a></code> element is expected to be rendered by
  displaying the element's <code title=concept-option-label><a href=#concept-option-label>label</a></code>, indented under its
  <code><a href=#the-optgroup-element>optgroup</a></code> element if it has one.</p>



  <h4 id=the-textarea-element-0><span class=secno>10.4.17 </span>The <code><a href=#the-textarea-element>textarea</a></code> element</h4>

  <pre class=css>@namespace url(http://www.w3.org/1999/xhtml);

textarea { binding: <i title="">textarea</i>; }</pre>

  <p>When the <i title="">textarea</i> binding applies to a
  <code><a href=#the-textarea-element>textarea</a></code> element, the element is expected to render as
  an 'inline-block' box rendered as a multiline text field.</p>

  <p>If the element has a <code title=attr-input-cols>cols</code>
  attribute, and parsing that attribute's value using the <a href=#rules-for-parsing-non-negative-integers>rules
  for parsing non-negative integers</a> doesn't generate an error,
  then the user agent is expected to use the attribute as a <a href=#presentational-hints title="presentational hints">presentational hint</a> for the
  'width' property on the element, with the value obtained from
  applying the <a href=#converting-a-character-width-to-pixels>converting a character width to pixels</a>
  algorithm to the value of the attribute and then adding the width of
  a scroll bar.</p>

  <p>If the element has a <code title=attr-input-rows>rows</code>
  attribute, and parsing that attribute's value using the <a href=#rules-for-parsing-non-negative-integers>rules
  for parsing non-negative integers</a> doesn't generate an error,
  then the user agent is expected to use the attribute as a <a href=#presentational-hints title="presentational hints">presentational hint</a> for the
  'height' property on the element, with the value being the specified
  number of lines, plus the height of a scrollbar.</p>



  <h3 id=frames-and-framesets><span class=secno>10.5 </span>Frames and framesets</h3>

  <p>When an <code><a href=#the-html-element>html</a></code> element's second child element is a
  <code>frameset</code> element, the user agent is expected to render
  the <code>frameset</code> element as described below across the
  surface of the <a href=#view>view</a>, instead of applying the usual CSS
  rendering rules.</p>

  <p>When rendering a <code>frameset</code> on a surface, the user
  agent is expected to use the following layout algorithm:</p>

  <ol><li>

    <p>The <var title="">cols</var> and <var title="">rows</var>
    variables are lists of zero or more pairs consisting of a number
    and a unit, the unit being one of <i>percentage</i>,
    <i>relative</i>, and <i>absolute</i>.</p>

    <p>Use the <a href=#rules-for-parsing-a-list-of-dimensions>rules for parsing a list of dimensions</a> to
    parse the value of the element's <code title=attr-frameset-cols>cols</code> attribute, if there is
    one. Let <var title="">cols</var> be the result, or an empty list
    if there is no such attribute.</p>

    <p>Use the <a href=#rules-for-parsing-a-list-of-dimensions>rules for parsing a list of dimensions</a> to
    parse the value of the element's <code title=attr-frameset-rows>rows</code> attribute, if there is
    one. Let <var title="">rows</var> be the result, or an empty list
    if there is no such attribute.</p>

   </li>

   <li>

    <p>For any of the entries in <var title="">cols</var> or <var title="">rows</var> that have the number zero and the unit
    <i>relative</i>, change the entry's number to one.</p>

   </li>

   <li>

    <p>If <var title="">cols</var> has no entries, then add a single
    entry consisting of the value 1 and the unit <i>relative</i> to
    <var title="">cols</var>.</p>

    <p>If <var title="">rows</var> has no entries, then add a single
    entry consisting of the value 1 and the unit <i>relative</i> to
    <var title="">rows</var>.</p>

   </li>

   <li>

    <p>Invoke the algorithm defined below to <a href=#convert-a-list-of-dimensions-to-a-list-of-pixel-values>convert a list of
    dimensions to a list of pixel values</a> using <var title="">cols</var> as the input list, and the width of the
    surface that the <code>frameset</code> is being rendered into, in
    CSS pixels, as the input dimension. Let <var title="">sized
    cols</var> be the resulting list.</p>

    <p>Invoke the algorithm defined below to <a href=#convert-a-list-of-dimensions-to-a-list-of-pixel-values>convert a list of
    dimensions to a list of pixel values</a> using <var title="">rows</var> as the input list, and the height of the
    surface that the <code>frameset</code> is being rendered into, in
    CSS pixels, as the input dimension. Let <var title="">sized
    rows</var> be the resulting list.</p>

   </li>

   <li>

    <p>Split the surface into a grid of <span title=""><var title="">w</var>&times;<var title="">h</var></span> rectangles,
    where <var title="">w</var> is the number of entries in <var title="">sized cols</var> and <var title="">h</var> is the number
    of entries in <var title="">sized rows</var>.</p>

    <p>Size the columns so that each column in the grid is as many CSS
    pixels wide as the corresponding entry in the <var title="">sized
    cols</var> list.</p>

    <p>Size the rows so that each row in the grid is as many CSS
    pixels high as the corresponding entry in the <var title="">sized
    rows</var> list.</p>

   </li>

   <li>

    <p>Let <var title="">children</var> be the list of
    <code>frame</code> and <code>frameset</code> elements that are
    children of the <code>frameset</code> element for which the
    algorithm was invoked.</p>

   </li>

   <li>

    <p>For each row of the grid of rectangles created in the previous
    step, from top to bottom, run these substeps:</p>

    <ol><li>

      <p>For each rectangle in the row, from left to right, run these
      substeps:</p>

      <ol><li>

        <p>If there are any elements left in <var title="">children</var>, take the first element in the list,
        and assign it to the rectangle.</p>

        <p>If this is a <code>frameset</code> element, then recurse
        the entire <code>frameset</code> layout algorithm for that
        <code>frameset</code> element, with the rectangle as the
        surface.</p>

        <p>Otherwise, it is a <code>frame</code> element; create a
        <a href=#nested-browsing-context>nested browsing context</a> sized to fit the
        rectangle.</p>

       </li>

       <li>

        <p>If there are any elements left in <var title="">children</var>, remove the first element from <var title="">children</var>.</p>

      </ol></li>

    </ol></li>

   <li>

    <p>If the <code>frameset</code> element <a href=#has-a-border>has a border</a>,
    draw an outer set of borders around the rectangles, using the
    element's <a href=#frame-border-color>frame border color</a>.</p>

    <p>For each rectangle, if there is an element assigned to that
    rectangle, and that element <a href=#has-a-border>has a border</a>, draw an
    inner set of borders around that rectangle, using the
    element's <a href=#frame-border-color>frame border color</a>.</p>

    <p>For each (visible) border that does not abut a rectangle that
    is assigned a <code>frame</code> element with a <code title=attr-frame-noresize>noresize</code> attribute (including
    rectangles in further nested <code>frameset</code> elements), the
    user agent is expected to allow the user to move the border,
    resizing the rectangles within, keeping the proportions of any
    nested <code>frameset</code> grids.</p>

    <p>A <code>frameset</code> or <code>frame</code> element <dfn id=has-a-border>has
    a border</dfn> if the following algorithm returns true:</p>

    <ol><li><p>If the element has a <code title=attr-frames-frameborder>frameborder</code> attribute
     whose value is not the empty string and whose first character is
     either a U+0031 DIGIT ONE (1), a U+0079 LATIN SMALL LETTER Y, or
     a U+0059 LATIN CAPITAL LETTER Y, then return true.</li>

     <li><p>Otherwise, if the element has a <code title=attr-frames-frameborder>frameborder</code> attribute,
     return false.</li>

     <li><p>Otherwise, if the element has a parent element that is a
     <code>frameset</code> element, then return true if <em>that</em>
     element <a href=#has-a-border>has a border</a>, and false if it does
     not.</li>

     <li><p>Otherwise, return true.</li>

    </ol><p>The <dfn id=frame-border-color>frame border color</dfn> of a <code>frameset</code> or
    <code>frame</code> element is the color obtained from the
    following algorithm:</p>

    <ol><li><p>If the element has a <code title=attr-frames-bordercolor>bordercolor</code> attribute,
     then return the color obtained from applying the <a href=#rules-for-parsing-a-legacy-color-value>rules for
     parsing a legacy color value</a> to that attribute's
     value.</li>

     <li><p>Otherwise, if the element has a parent element that is a
     <code>frameset</code> element, then the <a href=#frame-border-color>frame border
     color</a> of that element.</p>

     <li><p>Otherwise, return gray.</li>

    </ol></li>

  </ol><p>The algorithm to <dfn id=convert-a-list-of-dimensions-to-a-list-of-pixel-values>convert a list of dimensions to a list of
  pixel values</dfn> consists of the following steps:</p>

  <ol><li>

    <p>Let <var title="">input list</var> be the list of numbers and
    units passed to the algorithm.</p>

    <p>Let <var title="">output list</var> be a list of numbers the
    same length as <var title="">input list</var>, all zero.</p>

    <p>Entries in <var title="">output list</var> correspond to the
    entries in <var title="">input list</var> that have the same
    position.</p>

   </li>

   <li><p>Let <var title="">input dimension</var> be the size passed
   to the algorithm.</p>

   <li>

    <p>Let <var title="">count percentage</var> be the number of
    entries in <var title="">input list</var> whose unit is
    <i>percentage</i>.</p>

    <p>Let <var title="">total percentage</var> be the sum of all the
    numbers in <var title="">input list</var> whose unit is
    <i>percentage</i>.</p>

    <p>Let <var title="">count relative</var> be the number of
    entries in <var title="">input list</var> whose unit is
    <i>relative</i>.</p>

    <p>Let <var title="">total relative</var> be the sum of all the
    numbers in <var title="">input list</var> whose unit is
    <i>relative</i>.</p>

    <p>Let <var title="">count absolute</var> be the number of
    entries in <var title="">input list</var> whose unit is
    <i>absolute</i>.</p>

    <p>Let <var title="">total absolute</var> be the sum of all the
    numbers in <var title="">input list</var> whose unit is
    <i>absolute</i>.</p>

    <p>Let <var title="">remaining space</var> be the value of <var title="">input dimension</var>.</p>

   </li>

   <li>

    <p>If <var title="">total absolute</var> is greater than <var title="">remaining space</var>, then for each entry in <var title="">input list</var> whose unit is <i>absolute</i>, set the
    corresponding value in <var title="">output list</var> to the
    number of the entry in <var title="">input list</var> multiplied
    by <var title="">remaining space</var> and divided by <var title="">total absolute</var>. Then, set <var title="">remaining
    space</var> to zero.</p>

    <p>Otherwise, for each entry in <var title="">input list</var>
    whose unit is <i>absolute</i>, set the corresponding value in <var title="">output list</var> to the number of the entry in <var title="">input list</var>. Then, decrement <var title="">remaining
    space</var> by <var title="">total absolute</var>.</p>

   </li>

   <li>

    <p>If <var title="">total percentage</var> multiplied by the <var title="">input dimension</var> and divided by 100 is greater than
    <var title="">remaining space</var>, then for each entry in <var title="">input list</var> whose unit is <i>percentage</i>, set the
    corresponding value in <var title="">output list</var> to the
    number of the entry in <var title="">input list</var> multiplied
    by <var title="">remaining space</var> and divided by <var title="">total percentage</var>. Then, set <var title="">remaining
    space</var> to zero.</p>

    <p>Otherwise, for each entry in <var title="">input list</var>
    whose unit is <i>percentage</i>, set the corresponding value in
    <var title="">output list</var> to the number of the entry in <var title="">input list</var> multiplied by the <var title="">input
    dimension</var> and divided by 100. Then, decrement <var title="">remaining space</var> by <var title="">total
    percentage</var> multiplied by the <var title="">input
    dimension</var> and divided by 100.</p>

   </li>

   <li>

    <p>For each entry in <var title="">input list</var> whose unit is
    <i>relative</i>, set the corresponding value in <var title="">output list</var> to the number of the entry in <var title="">input list</var> multiplied by <var title="">remaining
    space</var> and divided by <var title="">total relative</var>.</p>

   </li>

   <li><p>Return <var title="">output list</var>.</li>

  </ol><p>User agents working with integer values for frame widths (as
  opposed to user agents that can lay frames out with subpixel
  accuracy) are expected to distribute the remainder first the last
  entry whose unit is <i>relative</i>, then equally (not
  proportionally) to each entry whose unit is <i>percentage</i>, then
  equally (not proportionally) to each entry whose unit is
  <i>absolute</i>, and finally, failing all else, to the last
  entry.</p>



  <h3 id=interactive-media><span class=secno>10.6 </span>Interactive media</h3>


  <h4 id=links,-forms,-and-navigation><span class=secno>10.6.1 </span>Links, forms, and navigation</h4>

  <p>User agents are expected to allow the user to control aspects of
  <a href=#hyperlink>hyperlink</a> activation and <a href=#form-submission-0>form submission</a>,
  such as which <a href=#browsing-context>browsing context</a> is to be used for the
  subsequent <a href=#navigate title=navigate>navigation</a>.</p>

  <p>User agents are expected to allow users to discover the
  destination of <a href=#hyperlink title=hyperlink>hyperlinks</a> and of
  <a href=#the-form-element title=form>forms</a> before triggering their <a href=#navigate title=navigate>navigation</a>.</p>

  <p>User agents are expected to inform the user of whether a
  <a href=#hyperlink>hyperlink</a> includes <a href=#hyperlink-auditing>hyperlink auditing</a>, and
  to let them know at a minimum which domains will be contacted as
  part of such auditing.</p>

  <p>User agents are expected to allow users to <a href=#navigate>navigate</a>
  <a href=#browsing-context title="browsing context">browsing contexts</a> to the
  resources <a href=#resolve-a-url title="resolve a url">indicated</a> by the <code title="">cite</code> attributes on <code><a href=#the-q-element>q</a></code>,
  <code><a href=#the-blockquote-element>blockquote</a></code>, <code><a href=#the-ins-element>ins</a></code>, and <code><a href=#the-del-element>del</a></code>
  elements.</p>

  <p>User agents are expected to surface <a href=#hyperlink title=hyperlink>hyperlinks</a> created by <code><a href=#the-link-element>link</a></code>
  elements in their user interface.</p>

  <p class=note>While <code><a href=#the-link-element>link</a></code> elements that create <a href=#hyperlink title=hyperlink>hyperlinks</a> will match the ':link' or
  ':visited' pseudo-classes, will react to clicks if visible, and so
  forth, this does not extend to any browser interface constructs that
  expose those same links. Activating a link through the browser's
  interface, rather than in the page itself, does not trigger <code title=event-click>click</code> events and the like.</p>



  <h4 id=the-mark-element-0><span class=secno>10.6.2 </span>The <code><a href=#the-mark-element>mark</a></code> element</h4>

  <p>User agents are expected to allow the user to cycle through all
  the <code><a href=#the-mark-element>mark</a></code> elements in a <code>Document</code>. User
  agents are also expected to bring their existence to the user's
  attention, even when they are off-screen, e.g. by highlighting
  portions of the scroll bar that represent portions of the document
  that contain <code><a href=#the-mark-element>mark</a></code> elements.</p>



  <h4 id=the-title-attribute-0><span class=secno>10.6.3 </span>The <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute</h4>

  <p>Given an element (e.g. the element designated by the mouse
  cursor), if the element, or one of its ancestors, has a <code title=attr-title><a href=#the-title-attribute>title</a></code> attribute, and the nearest such
  attribute has a value that is not the empty string, it is expected
  that the user agent will expose the contents of that attribute as a
  tooltip.</p>

  <p>U+000A LINE FEED (LF) characters are expected to cause line
  breaks in the tooltip.</p>




  <h3 id=print-media><span class=secno>10.7 </span>Print media</h3>

  <p>User agents are expected to allow the user to request the
  opportunity to <dfn id=obtain-a-physical-form>obtain a physical form</dfn> (or a
  representation of a physical form) of a <code>Document</code>. For
  example, selecting the option to print a page or convert it to PDF
  format.</p>

  <p>When the user actually <a href=#obtain-a-physical-form title="obtain a physical
  form">obtains a physical form</a> (or a representation of a
  physical form) of a <code>Document</code>, the user agent is
  expected to create a new view with the print media, render the
  result, and the discard the view.</p>


  <h3 id=interaction-with-css><span class=secno>10.8 </span>Interaction with CSS</h3>

  <!-- XXX this should be normative, so we'll have to move it out of
  this section -->

  <p class=XXX>Must define that in CSS, tag and attribute
  names in HTML documents, and class names in quirks mode documents,
  are case-insensitive, as well as saying which attribute values must
  be compared case-insensitively.</p>

  <!-- XXX

    Extensions to CSS
      for drag and drop
      for datagrid
      ...

  -->



  <h2 id=obsolete-features><span class=secno>11 </span>Obsolete features</h2>

  <p>Authors and documents must not use the features listed in this
  section. They are documented to enable user agents to support legacy
  content in an interoperable fashion.</p>

<!-- XXX Elements that have been dropped: ACRONYM B BASEFONT BLINK BIG
CENTER DIR DIV FONT FRAME FRAMESET I ISINDEX MARQUEE NOEMBED NOFRAMES
S SPACER STRIKE TT U -->


  <h3 id=self-contained-features><span class=secno>11.1 </span>Self-contained features</h3>

  <h4 id=the-applet-element><span class=secno>11.1.1 </span>The <dfn><code>applet</code></dfn> element</h4>

  <p>The <code><a href=#the-applet-element>applet</a></code> element is a Java-specific variant of the
  <code><a href=#the-embed-element>embed</a></code> element. In HTML5 the <code><a href=#the-applet-element>applet</a></code> element
  is obsoleted so that all extension frameworks (Java, .NET, Flash,
  etc) are handled in a consistent manner.</p>

  <p id=sandboxPluginApplet>If the <a href=#sandboxed-plugins-browsing-context-flag>sandboxed plugins browsing
  context flag</a> is set on the <a href=#browsing-context>browsing context</a> for
  which the <code><a href=#the-applet-element>applet</a></code> element's document is the <a href=#active-document>active
  document</a>, then the element must be ignored (it represents
  nothing).</p>

  <p>Otherwise, <span class=XXX>define how the element works,
  if supported</span>.</p>

  <pre class=idl>[XXX] interface <a href=#htmldocument>HTMLDocument</a> {
  readonly attribute <a href=#htmlcollection-0>HTMLCollection</a> <a href=#dom-document-applets title=dom-document-applets>applets</a>;
};</pre>

  <p>The <dfn id=dom-document-applets title=dom-document-applets><code>applets</code></dfn>
  attribute must return an <code><a href=#htmlcollection-0>HTMLCollection</a></code> rooted at the
  <code>Document</code> node, whose filter matches only
  <code><a href=#the-applet-element>applet</a></code> elements.</p>


  <h4 id=the-marquee-element-0><span class=secno>11.1.2 </span>The <dfn><code>marquee</code></dfn> element</h4>

  <p class=XXX>...</p>


  <h3 id=other-elements-and-attributes><span class=secno>11.2 </span>Other elements and attributes</h3>

  <p>The following elements are obsolete and either have no meaning
  whatsoever or have no requirements beyond those described elsewhere
  in this specification:</p>

  <ul><li><dfn id=center><code>center</code></dfn></li>

  </ul><hr><p>The following attributes are obsolete and either have no meaning
  whatsoever or have no requirements beyond those described elsewhere
  in this specification:</p>

  <ul><li><dfn id=attr-a-name title=attr-a-name><code>name</code></dfn> on <code><a href=#the-a-element>a</a></code> elements</li>
   <li><dfn id=attr-body-alink title=attr-body-alink><code>alink</code></dfn> on <code><a href=#the-body-element>body</a></code> elements</li>
   <li><dfn id=attr-body-bgcolor title=attr-body-bgcolor><code>bgcolor</code></dfn> on <code><a href=#the-body-element>body</a></code> elements</li>
   <li><dfn id=attr-body-link title=attr-body-link><code>link</code></dfn> on <code><a href=#the-body-element>body</a></code> elements</li>
   <li><dfn id=attr-body-text title=attr-body-text><code>text</code></dfn> on <code><a href=#the-body-element>body</a></code> elements</li>
   <li><dfn id=attr-body-vlink title=attr-body-vlink><code>vlink</code></dfn> on <code><a href=#the-body-element>body</a></code> elements</li>
  </ul><h3 id=other-dom-apis><span class=secno>11.3 </span>Other DOM APIs</h3>

  <p>These APIs expose obsolete content attributes.</p>

  <p class=XXX>The [XXX] below is for some annotation meaning "this
  is just another part of the named interface, and should be treated
  as if it had been part of the main interface definition".</p>

  <pre class=idl>[XXX] interface <a href=#htmlbodyelement>HTMLBodyElement</a> {
           attribute DOMString <a href=#dom-body-text title=dom-body-text>text</a>;
           attribute DOMString <a href=#dom-body-bgcolor title=dom-body-bgColor>bgColor</a>;
           attribute DOMString <a href=#dom-body-background title=dom-body-background>background</a>;
           attribute DOMString <a href=#dom-body-link title=dom-body-link>link</a>;
           attribute DOMString <a href=#dom-body-vlink title=dom-body-vLink>vLink</a>;
           attribute DOMString <a href=#dom-body-alink title=dom-body-aLink>aLink</a>;
};</pre>

  <p>The <dfn id=dom-body-text title=dom-body-text><code>text</code></dfn> DOM
  attribute of the <code><a href=#the-body-element>body</a></code> element must <a href=#reflect>reflect</a>
  the element's <code title=attr-body-text><a href=#attr-body-text>text</a></code> content
  attribute.</p>

  <p>The <dfn id=dom-body-bgcolor title=dom-body-bgColor><code>bgColor</code></dfn> DOM
  attribute of the <code><a href=#the-body-element>body</a></code> element must <a href=#reflect>reflect</a>
  the element's <code title=attr-body-bgcolor><a href=#attr-body-bgcolor>bgcolor</a></code> content
  attribute.</p>

  <p>The <dfn id=dom-body-background title=dom-body-background><code>background</code></dfn> DOM
  attribute of the <code><a href=#the-body-element>body</a></code> element must <a href=#reflect>reflect</a>
  the element's <code title=attr-body-background>background</code> content
  attribute.</p>

  <p>The <dfn id=dom-body-link title=dom-body-link><code>link</code></dfn> DOM
  attribute of the <code><a href=#the-body-element>body</a></code> element must <a href=#reflect>reflect</a>
  the element's <code title=attr-body-link><a href=#attr-body-link>link</a></code> content
  attribute.</p>

  <p>The <dfn id=dom-body-alink title=dom-body-aLink><code>aLink</code></dfn> DOM
  attribute of the <code><a href=#the-body-element>body</a></code> element must <a href=#reflect>reflect</a>
  the element's <code title=attr-body-alink><a href=#attr-body-alink>alink</a></code> content
  attribute.</p>

  <p>The <dfn id=dom-body-vlink title=dom-body-vLink><code>vLink</code></dfn> DOM
  attribute of the <code><a href=#the-body-element>body</a></code> element must <a href=#reflect>reflect</a>
  the element's <code title=attr-body-vlink><a href=#attr-body-vlink>vlink</a></code> content
  attribute.</p>

  <pre class=idl>[XXX] interface <a href=#htmldocument>HTMLDocument</a> {
           attribute DOMString <a href=#dom-document-fgcolor title=dom-document-fgColor>fgColor</a>;
           attribute DOMString <a href=#dom-document-bgcolor title=dom-document-bgColor>bgColor</a>;
           attribute DOMString <a href=#dom-document-linkcolor title=dom-document-linkColor>linkColor</a>;
           attribute DOMString <a href=#dom-document-vlinkcolor title=dom-document-vlinkColor>vlinkColor</a>;
           attribute DOMString <a href=#dom-document-alinkcolor title=dom-document-alinkColor>alinkColor</a>;
};</pre>

  <p>The <dfn id=dom-document-fgcolor title=dom-document-fgColor><code>fgColor</code></dfn>
  attribute on the <code>Document</code> object must
  <a href=#reflect>reflect</a> the <code title=attr-body-text><a href=#attr-body-text>text</a></code>
  attribute on <a href=#the-body-element-0>the body element</a>.</p>

  <p>The <dfn id=dom-document-bgcolor title=dom-document-bgColor><code>bgColor</code></dfn>
  attribute on the <code>Document</code> object must
  <a href=#reflect>reflect</a> the <code title=attr-body-bgcolor><a href=#attr-body-bgcolor>bgcolor</a></code>
  attribute on <a href=#the-body-element-0>the body element</a>.</p>

  <p>The <dfn id=dom-document-linkcolor title=dom-document-linkColor><code>linkColor</code></dfn>
  attribute on the <code>Document</code> object must
  <a href=#reflect>reflect</a> the <code title=attr-body-link><a href=#attr-body-link>link</a></code>
  attribute on <a href=#the-body-element-0>the body element</a>.</p>

  <p>The <dfn id=dom-document-vlinkcolor title=dom-document-vLinkColor><code>vLinkColor</code></dfn>
  attribute on the <code>Document</code> object must
  <a href=#reflect>reflect</a> the <code title=attr-body-vlink><a href=#attr-body-vlink>vlink</a></code>
  attribute on <a href=#the-body-element-0>the body element</a>.</p>

  <p>The <dfn id=dom-document-alinkcolor title=dom-document-aLinkColor><code>aLinkColor</code></dfn>
  attribute on the <code>Document</code> object must
  <a href=#reflect>reflect</a> the <code title=attr-body-alink><a href=#attr-body-alink>alink</a></code>
  attribute on <a href=#the-body-element-0>the body element</a>.</p>




  <h3 id=conformance-checkers-0><span class=secno>11.4 </span>Conformance checkers</h3>

  <p>To ease the transition from HTML4 Transitional documents to the
  language defined in <em>this</em> specification, conformance
  checkers are encouraged to categorise errors that represent usage of
  old obsolete features that generally have no effect (as defined
  below) into a separate part of their report, to allow authors to
  distinguish between likely mistakes and mere vestigial markup.</p>

  <p>The following errors may be categorised as described above:</p>

  <ul><li>

    <p>The <a href=#doctype-parse-error>DOCTYPE parse error</a>, if the DOCTYPE token's
    <code title="">name</code> is an <a href=#ascii-case-insensitive>ASCII
    case-insensitive</a> match for the string "<code title="">HTML</code>", and either:</p>

    <ul><li>the token's public identifier is the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">-//W3C//DTD&nbsp;HTML&nbsp;4.0//EN</code>" and the
     token's system identifier is either missing or the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">http://www.w3.org/TR/REC-html40/strict.dtd</code>", or</li>

     <li>the token's public identifier is the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">-//W3C//DTD&nbsp;HTML&nbsp;4.01//EN</code>" and the
     token's system identifier is either missing or the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">http://www.w3.org/TR/html4/strict.dtd</code>", or</li>

     <li>the token's public identifier is the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">-//W3C//DTD&nbsp;XHTML&nbsp;1.0&nbsp;Strict//EN</code>"
     and the token's system identifier is either missing or the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</code>",
     or</li>

     <li>the token's public identifier is the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">-//W3C//DTD&nbsp;XHTML&nbsp;1.1//EN</code>"
     and the token's system identifier is either missing or the
     <a href=#case-sensitive>case-sensitive</a> string "<code title="">http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd</code>".</li>

    </ul><!-- only things that trigger no-quirks mode and were valid in
    some other spec are allowed in this list --></li>   

   <li><p>The presence of a <code title=attr-head-profile>profile</code> attribute on the
   <code><a href=#the-head-element>head</a></code> element, if its value is an <a href=#unordered-set-of-unique-space-separated-tokens>unordered set
   of unique space-separated tokens</a> where the words are all
   <a href=#valid-url title="valid URL">valid URLs</a>.</li>

   <li><p>The presence of a <code><a href=#meta>meta</a></code> element with an <code title=attr-meta-http-equiv><a href=#attr-meta-http-equiv>http-equiv</a></code> attribute in the
   <a href=#attr-meta-http-equiv-content-language title=attr-meta-http-equiv-content-language>Content
   Language</a> state.</li>

   <li><p>The presence of a <code title=attr-img-border>border</code> attribute on an
   <code><a href=#the-img-element>img</a></code> element if its value is the string "<code title="">0</code>".</li>

   <li><p>The presence of a <code title=attr-img-longdesc>longdesc</code> attribute on an
   <code><a href=#the-img-element>img</a></code> element, if its value is a <a href=#valid-url>valid
   URL</a>.</li> <!-- 0.29% pages -->

   <li><p>The presence of a <code title=attr-script-language>language</code> attribute on a
   <code><a href=#script>script</a></code> element if its value is an <a href=#ascii-case-insensitive>ASCII
   case-insensitive</a> match for the string "<code title="">JavaScript</code>".</li>

   <li><p>The presence of a <code title=attr-a-name><a href=#attr-a-name>name</a></code>
   attribute on an <code><a href=#the-a-element>a</a></code> element, if its value is not the
   empty string.</li>

   <li><p>The presence of a <code title=attr-table-summary>summary</code> attribute on a
   <code><a href=#the-table-element>table</a></code> element.</li> <!-- 2.65% pages -->

   <li><p>The presence of an <code title=attr-table-abbr>abbr</code>
   attribute on a <code><a href=#the-td-element>td</a></code> or <code><a href=#the-th-element>th</a></code> element.</li>
   <!-- 1.33% pages -->

   <li><p>The presence of a <code>noframes</code> element.</li>

  </ul><h2 id=no><span class=secno>12 </span>Things that you can't do with this specification because
  they are better handled using other technologies that are further
  described herein</h2>

  <p><em>This section is non-normative.</em></p>

  <p>There are certain features that are not handled by this
  specification because a client side markup language is not the right
  level for them, or because the features exist in other languages
  that can be integrated into this one. This section covers some of
  the more common requests.</p>

  <h3 id=localization><span class=secno>12.1 </span>Localization</h3>

  <p>If you wish to create localized versions of an HTML application,
  the best solution is to preprocess the files on the server, and then
  use HTTP content negotiation to serve the appropriate language.</p>

  <!-- <p>XXX example here</p> -->

<!--XXXSVG (remove next section)-->
  <h3 id=declarative-2d-vector-graphics-and-animation><span class=secno>12.2 </span>Declarative 2D vector graphics and animation</h3>
  <p>Embedding vector graphics into XHTML documents is the domain of
  SVG.</p>

  <!-- <p>XXX example here</p> -->

  <h3 id=declarative-3d-scenes><span class=secno>12.3 </span>Declarative 3D scenes</h3>

  <p>Embedding 3D imagery into XHTML documents is the domain of X3D,
  or technologies based on X3D that are namespace-aware.</p>

  <!-- <p>XXX example here</p> -->



  <h3 id=timers><span class=secno>12.4 </span>Timers</h3>

  <p class=XXX>This section is expected to be moved to its own
  specification in due course. It needs a lot of work to actually make
  it into a semi-decent spec.</p>

  <p>Objects that implement the <code><a href=#window>Window</a></code> interface must
  also implement the <code><a href=#windowtimers>WindowTimers</a></code> interface:</p>

<pre class=idl>[NoInterfaceObject, ImplementedOn=<a href=#window>Window</a>] interface <dfn id=windowtimers>WindowTimers</dfn> {
  // timers<!-- XXX use [Variadic], [Optional] from WebIDL -->
  long <a href=#dom-windowtimers-settimeout title=dom-windowtimers-setTimeout>setTimeout</a>(in <a href=#timeouthandler>TimeoutHandler</a> handler, in long timeout);
  long <a href=#dom-windowtimers-settimeout title=dom-windowtimers-setTimeout>setTimeout</a>(in <a href=#timeouthandler>TimeoutHandler</a> handler, in long timeout, <var title="">arguments...</var>);
  long <a href=#dom-windowtimers-settimeout title=dom-windowtimers-setTimeout>setTimeout</a>(in DOMString code, in long timeout);
  long <a href=#dom-windowtimers-settimeout title=dom-windowtimers-setTimeout>setTimeout</a>(in DOMString code, in long timeout, in DOMString language);
  void <a href=#dom-windowtimers-cleartimeout title=dom-windowtimers-clearTimeout>clearTimeout</a>(in long handle);
  long <a href=#dom-windowtimers-setinterval title=dom-windowtimers-setInterval>setInterval</a>(in <a href=#timeouthandler>TimeoutHandler</a> handler, in long timeout);
  long <a href=#dom-windowtimers-setinterval title=dom-windowtimers-setInterval>setInterval</a>(in <a href=#timeouthandler>TimeoutHandler</a> handler, in long timeout, <var title="">arguments...</var>);
  long <a href=#dom-windowtimers-setinterval title=dom-windowtimers-setInterval>setInterval</a>(in DOMString code, in long timeout);
  long <a href=#dom-windowtimers-setinterval title=dom-windowtimers-setInterval>setInterval</a>(in DOMString code, in long timeout, in DOMString language);
  void <a href=#dom-windowtimers-clearinterval title=dom-windowtimers-clearInterval>clearInterval</a>(in long handle);
};

[Callback=FunctionOnly, NoInterfaceObject]
interface <dfn id=timeouthandler>TimeoutHandler</dfn> {
  void <span title=dom-TimeoutHandler-handleEvent>handleEvent</span>([Variadic] in any args);
};</pre>

  <p>The <code title=dom-windowtimers-setTimeout><a href=#dom-windowtimers-settimeout>setTimeout</a></code>
  and <code title=dom-windowtimers-setInterval><a href=#dom-windowtimers-setinterval>setInterval</a></code>
  methods allow authors to schedule timer-based events.</p>

  <p>The <dfn id=dom-windowtimers-settimeout title=dom-windowtimers-setTimeout><code>setTimeout(<var title="">handler</var>, <var title="">timeout</var>[, <var title="">arguments...</var>])</code></dfn> method takes a reference
  to a <code><a href=#timeouthandler>TimeoutHandler</a></code> object and a length of time in
  milliseconds. It must return a handle to the timeout created, and
  then asynchronously wait <var title="">timeout</var> milliseconds
  and then <a href=#queue-a-task>queue a task</a> to invoke
  <code>handleEvent()</code> on the <var title="">handler</var>
  object. If any <var title="">arguments...</var> were provided, they
  must be passed to the <var title="">handler</var> as arguments to
  the <code>handleEvent()</code> function.</p>

  <p>Alternatively, <dfn title=""><code>setTimeout(<var title="">code</var>, <var title="">timeout</var>[, <var title="">language</var>])</code></dfn> may be used. This variant
  takes a string instead of a <code><a href=#timeouthandler>TimeoutHandler</a></code>
  object. <span class=XXX>define the actual requirements for
  this method, as with the previous one.</span> That string must be
  parsed using the specified <var title="">language</var> (defaulting
  to ECMAScript if the third argument is omitted) and executed in the
  scope of the <a href=#browsing-context>browsing context</a> associated with the
  <code><a href=#window>Window</a></code> object on which the <code title=setTimeout>setTimeout()</code> method was invoked.</p>

  <p class=XXX>Need to define <var title="">language</var> values;
  need to define that the <a href=#concept-script title=concept-script>script</a>
  corresponding to the <var title="">code</var> argument is created
  before the timer is set up, so that the rule on pausing the ticker,
  below, makes sense.</p>

  <p>The <dfn id=dom-windowtimers-setinterval title=dom-windowtimers-setInterval><code>setInterval(...)</code></dfn>
  variants must work in the same way as the <code>setTimeout</code>
  variants except that if <var title="">timeout</var> is a value
  greater than zero, the <a href=#concept-task title=concept-task>task</a> that
  invokes the <var title="">handler</var> or <code><a href=#the-code-element>code</a></code> must be
  <a href=#queue-a-task title="queue a task">queued</a> again every <var title="">timeout</var> milliseconds, not just the once.</p> <!-- so
  setInterval(x) and setInterval(x, 0) are equivalent to setTimeout(x)
  and setTimeout(x, 0) respectively -->

  <p>The <dfn id=dom-windowtimers-cleartimeout title=dom-windowtimers-clearTimeout><code>clearTimeout()</code></dfn>
  and <dfn id=dom-windowtimers-clearinterval title=dom-windowtimers-clearInterval><code>clearInterval()</code></dfn>
  methods take one integer (the value returned by <code title=dom-windowtimers-setTimeout><a href=#dom-windowtimers-settimeout>setTimeout()</a></code> and <code title=dom-windowtimers-setInterval><a href=#dom-windowtimers-setinterval>setInterval()</a></code>
  respectively) and must cancel the specified timeout. When called
  with a value that does not correspond to an active timeout or
  interval, the methods must return without doing anything.</p>

  <p>For both <code title=dom-windowtimers-setTimeout><a href=#dom-windowtimers-settimeout>setTimeout()</a></code> and <code title=dom-windowtimers-setInterval><a href=#dom-windowtimers-setinterval>setInterval()</a></code>, the clock
  upon which the timers are based must only tick while the
  <code>Document</code> of the <a href="#script's-global-object" title="script's global
  object">global object</a> of their callbacks is <a href=#fully-active>fully
  active</a>.</p>



  <h3 id=rendering-and-the-dom><span class=secno>12.5 </span>Rendering and the DOM</h3>

  <p class=XXX>This section is expected to be moved to its own
  specification in due course. It needs a lot of work to actually make
  it into a semi-decent spec.</p>

  <p>Any object implement the <code>AbstractView</code> interface must
  also implement the <code><a href=#mediamodeabstractview>MediaModeAbstractView</a></code> interface.</p>

  <pre class=idl>[NoInterfaceObject, ImplementedOn=<span>AbstractView</span>] interface <dfn id=mediamodeabstractview>MediaModeAbstractView</dfn> {
  readonly attribute DOMString <a href=#mediamode>mediaMode</a>;
};</pre>

  <p>The <dfn id=mediamode><code>mediaMode</code></dfn> attribute on objects
  implementing the <code><a href=#mediamodeabstractview>MediaModeAbstractView</a></code> interface must
  return the string that represents the canvas' current rendering mode
  (<code>screen</code>, <code>print</code>, etc). This is a lowercase
  string, as <a href=http://www.w3.org/TR/CSS21/media.html#media-types>defined by
  the CSS specification</a>. <a href=#refsCSS21>[CSS21]</a></p>

  <p>Some user agents may support multiple media, in which case there
  will exist multiple objects implementing the
  <code>AbstractView</code> interface. Only the default view
  implements the <code><a href=#window>Window</a></code> interface. The other views can be
  reached using the <code><a href=#view>view</a></code> attribute of the
  <code>UIEvent</code> interface, during event propagation. There is no
  way currently to enumerate all the views.</p>

  <!-- XXX examples! -->




  <h2 class=no-num id=index>Index</h2>

  <p><em>This section is non-normative.</em></p>

  <p class=XXX>List of elements</p>

  <p class=XXX>List of attributes</p>

  <p class=XXX>List of interfaces</p>

  <p class=XXX>List of events</p>


  <h2 class=no-num id=references>References</h2>

  <p class=XXX>This section will be written in a future draft.</p>

  <!-- XXX check that #refsRFC([0-9]+) is always for [RFC\1] -->


  <h2 class=no-num id=acknowledgements>Acknowledgements</h2> <!-- ACKS -->

  <p>Thanks to Aankhen, Aaron Boodman, Aaron Leventhal, Adam Barth,
  Adam Roben, Addison Phillips, Adele Peterson, Adrian Sutton,
  Agust&iacute;n Fern&aacute;ndez, Ajai Tirumali, Alastair Campbell,
  Alex Nicolaou, Alexey Feldgendler, Anders Carlsson, Andrew Gove,
  Andrew Sidwell, Anne van Kesteren, Anthony Hickson, Anthony Ricaud,
  Antti Koivisto, Arphen Lin, Asbj&oslash;rn Ulsberg, Ashley Sheridan,
  Aurelien Levy, Ben Boyle, Ben Godfrey, Ben Meadowcroft, Ben Millard,
  Benjamin Hawkes-Lewis, Bert Bos, Bijan Parsia, Bill Mason, Billy
  Wong, Bjoern Hoehrmann, Boris Zbarsky, Brad Fults, Brad Neuberg,
  Brady Eidson, Brendan Eich, Brett Wilson, Brian Campbell, Brian
  Smith, Bruce Miller, Cameron McCormack, Cao Yipeng, Carlos
  Perell&oacute; Mar&iacute;n, Chao Cai, &#50980;&#49437;&#52268;
  (Channy Yun), Charl van Niekerk, Charles Iliya Krempeaux, Charles
  McCathieNevile, Christian Biesinger, Christian Johansen, Christian
  Schmidt, Chriswa, Cole Robison, Colin Fine, Collin Jackson, Daniel
  Barclay, Daniel Brumbaugh Keeney, Daniel Glazman, Daniel Peng,
  Daniel Sp&aring;ng, Daniel Steinberg, Danny Sullivan, Darin Adler,
  Darin Fisher, Dave Camp, Dave Singer, Dave Townsend<!-- Mossop on
  moz irc -->, David Baron, David Bloom, David Carlisle, David
  Flanagan, David H&aring;s&auml;ther, David Hyatt, David Smith, David
  Woolley, Dean Edridge, Debi Orton, Derek Featherstone, DeWitt
  Clinton, Dimitri Glazkov, dolphinling, Doron Rosenberg, Doug Kramer,
  Edward O'Connor, Edward Z. Yang, Eira Monstad, Elliotte Harold, Eric
  Carlson, Eric Law, Erik Arvidsson, Evan Martin, Evan Prodromou,
  fantasai, Felix Sasaki, Franck 'Shift' Qu&eacute;lain, Garrett
  Smith, Geoffrey Garen, Geoffrey Sneddon, George Lund, H&aring;kon
  Wium Lie, Hans S. T&oslash;mmerhalt, Henri Sivonen, Henrik Lied,
  Henry Mason, Hugh Winkler, Ignacio Javier, Ivo Emanuel
  Gon&ccedil;alves, J. King, Jacques Distler, James Craig, James
  Graham, James Justin Harrell, James M Snell, James Perrett,
  Jan-Klaas Kollhof, Jason White, Jasper Bryant-Greene, Jed Hartman,
  Jeff Cutsinger, Jeff Schiller, Jeff Walden, Jens Bannmann, Jens
  Fendler, Jeroen van der Meer, Jim Jewett, Jim Meehan, Joe Clark,
  John Fallows, Joseph Kesselman, Jjgod Jiang, Joel Spolsky, Johan
  Herland, John Boyer, John Bussjaeger, John Harding, Johnny Stenback,
  Jon Gibbins, Jon Perlow, Jonathan Worent, Jorgen Horstink, Josh
  Levenberg, Joshua Randall, Jukka K. Korpela, Jules
  Cl&eacute;ment-Ripoche, Julian Reschke, Kai Hendry, Kartikaya Gupta,
  <!-- Keryx Web, = Lars Gunther --> Kornel Lesinski,
  &#40658;&#28580;&#21083;&#24535; (KUROSAWA Takeshi), Kristof
  Zelechovski, Kyle Hofmann, Lachlan Hunt, Larry Page, Lars Gunther,
  Laura L. Carlson, Laura Wisewell, Laurens Holst, Lee Kowalkowski,
  Leif Halvard Silli, Lenny Domnitser, L&eacute;onard Bouchet, Leons
  Petrazickis, Logan<!-- on moz irc -->, Loune, Maciej Stachowiak,
  Magnus Kristiansen<!-- Dashiva -->, Maik Merten, Malcolm Rowe, Mark
  Nottingham, Mark Rowe<!--bdash-->, Mark Schenk, Martijn Wargers,
  Martin Atkins, Martin D&uuml;rst, Martin Honnen, Masataka Yakura,
  Mathieu Henri, Matthew Gregan, Matthew Mastracci, Matthew Raymond,
  Matthew Thomas, Mattias Waldau, Max Romantschuk, Michael 'Ratt'
  Iannarelli, Michael A. Nachbaur, Michael A. Puls
  II<!--Shadow2531-->, Michael Carter, Michael Gratton, Michael
  Nordman, Michael Powers, Michael(tm) Smith, Michel Fortin, Michiel
  van der Blonk, Mihai &#350;ucan<!-- from ROBO Design -->, Mike
  Brown, Mike Dierken<!-- S. Mike Dierken -->, Mike Dixon, Mike
  Schinkel, Mike Shaver, Mikko Rantalainen, Neil Deakin, Neil Soiffer,
  Nicholas Shanks, Ojan Vafai, Olaf Hoffmann, Olav Junker Kj&aelig;r,
  Oliver Hunt, <!-- Ozob = Kyle Hofmann --> Peter Karlsson, Peter
  Kasting, Philip J&auml;genstedt, Philip Taylor, Philip TAYLOR<!-- a
  different one -->, Rachid Finge, Rajas Moonka, Ralf Stoltze, Ralph
  Giles, Raphael Champeimont, Rene Saarsoo, Richard Ishida, Rimantas
  Liubertas, Robert Blaut, Robert O'Callahan, Robert Sayre, Roman
  Ivanov, Ryan King, S. Mike Dierken, Sam Kuper, Sam Ruby, Sam Weinig,
  Scott Hess, Sean Knapp, Shaun Inman, Shiki Okasaka, Silvia Pfeiffer,
  Simon Pieters, Stefan Haustein, Steffen Meschkat, Stephen Ma, Steve
  Faulkner, Steve Runyon, Steven Garrity, Stewart Brodie, Stuart
  Parmenter, Sunava Dutta, Tantek &Ccedil;elik, Terrence Wood, Thomas
  Broyer, Thomas O'Connor, Tim Altman, Tim Johansson, Tommy Thorsen,
  Travis Leithead, Tyler Close, Vladimir Vuki&#263;evi&#263;,
  Wakaba, Wayne Pollock, Wellington Fernando de Macedo, William
  Swanson, Wolfram Kriesing, Yi-An Huang, Zhenbin Xu, and
  &Oslash;istein E. Andersen, for their useful and substantial
  comments.</p>

  <p>Thanks also to everyone who has ever posted about HTML5 to their
  blogs, public mailing lists, or forums, including the <a href=http://lists.w3.org/Archives/Public/public-html/>W3C
  public-html list</a> and the <a href=http://www.whatwg.org/mailing-list>various WHATWG lists</a>.

  <p>Special thanks to Richard Williamson for creating the first
  implementation of <code><a href=#the-canvas-element>canvas</a></code> in Safari, from which the
  canvas feature was designed.</p>

  <p>Special thanks also to the Microsoft employees who first
  implemented the event-based drag-and-drop mechanism, <code title=attr-contenteditable><a href=#attr-contenteditable>contenteditable</a></code>, and other
  features first widely deployed by the Windows Internet Explorer
  browser.</p>

  <p>Special thanks and $10,000 to David Hyatt who came up with a
  broken implementation of the <a href=#adoptionAgency>adoption
  agency algorithm</a> that the editor had to reverse engineer and fix
  before using it in the parsing section.</p>

  <p>Thanks to the many sources that provided inspiration for the
  examples used in the specification.</p>

  <p>Thanks also to the Microsoft blogging community for some ideas,
  to the attendees of the W3C Workshop on Web Applications and
  Compound Documents for inspiration, to the #mrt crew, the #mrt.no
  crew, and the #whatwg crew, and to Pillar and Hedral for their ideas
  and support.</p>

  <!-- Hopefully Kam won't notice he's covered by these
  acknowledgements three times! -->

<!--
TODO (or delay):
 XXX * simple color picker
 XXX * in-window modal dialogs
        - escape/enter handling
        - dragging the window out of the tab
 XXX * in-window non-modal palettes
        - with a solution for the mobile space
 XXX * calendar with list of days that have events (think: blog calendars)
 XXX * find object at (x,y)
       http://msdn.microsoft.com/workshop/author/dhtml/reference/methods/elementfrompoint.asp
 XXX * find mouse position
 XXX * styling scrollbars:
       ::scrollbars { ... }
 XXX * automatic table of contents
 XXX * a way to show icons for file types
       e.g. http://www.gadgetopia.com/2004/05/04/FileIconTag.html
 XXX * custom syntax highlighting in <textarea>, <pre> (ack Ryan Johnson)
 XXX * methods/properties for managing scrolling, especially in TextArea,
       such as .scrollTop and .scrollHeight in Mozilla
 XXX * dom range apis with textarea/input edited value (ack martijnw)
 XXX * datagrid: cells that are links (<a href=""></a>)
 XXX * we should fix The Great Key Problem
 XXX * library of resources:
        var library = new ZipFile("data.zip");
        library.onload = function() {
          var sound1 = library.getAudio("sound1.wav"); // returns an Audio object
          var image1 = library.getImage("image1.png"); // returns an HTMLImageElement
          var doc1 = library.getXMLDocument("doc1.xml"); // returns a Document
          var doc2 = library.getHTMLDocument("doc1.html"); // returns an HTMLDocument
        }
       or:
        var library = new ResourceLoader("data.zip");
        library.add("moredata.zip");
        library.onload = function() { ... }
        library.onloading = function() {
          reportLoadProgress(library.progress); // 0.0 .. 1.0
        }
       or:
        var library = new AudioZip("sounds.zip");
        library.onload = function() {
          var sound1 = library["sound1.wav"];
          sound.play();
        }
 XXX * applying input masks to <input>, e.g. for entering data with
       slashes and dashes (ack Greg Kilwein)
 XXX * HTMLImageElement.click(x, y); or clickPoint, if click() can't be
       done in IE; can this be emulated in IE by posting a synthetic moue
       click event with those X and Y coords? (ack Csaba Gabor)
 XXX * <menu> should get an icon, like <command>
 XXX * <menu> should be hideable, like <command>
 XXX * Need to say that NodeList's items are enumerable, so that
         for (var x in myNodeList) { }
       ...works. (ack Dethe Elza)
 XXX * people want multiline tooltips with explicit line breaks
 XXX * ability for a web app to save a file to the local disk:
         var file = window.openFile(); // throws up UI
         file.read();
         var file = window.saveAsFile(); // throws up UI
         file.write();
       ...or something? (<input type=file>?)
 XXX * http://lxr.mozilla.org/mozilla/source/dom/public/idl/html/nsIDOMNSHTMLDocument.idl
 XXX * define how to handle APNGs that have out-of-order aDATs and other
       errors in image formats, since pav and vlad refuse to define it for APNG:
         <Hixie> vlad: you should define what the UA should do with out-of-order aDATs
         <pav> its an error
         <pav> pretty sure we say that somewhere
         <Hixie> yes i know it's an error
         <Hixie> but that doesn't say what the UA should do
         <pav> error == image is invalid
         <vlad> yep
         <vlad> either broken image icon
         <vlad> or display first frame (fall back to normal PNG)
         <vlad> up to the UA
         <Hixie> right
         <Hixie> you should say which one
         <pav> its up to the UA
         <Hixie> why?
         <vlad> "SHOULD display the first frame, but MAY display broken image icon if that's not convenient", in rfc parlance
         <vlad> because it's not useful to specify that, IMO
         <Hixie> up to the UA means one UA will implement something, it'll become a popular UA, then all the others will have to copy it.
         <vlad> how a UA wants to handle image errors is up to the UA
         <pav> we're designing an image format, not the html image tag
         <pav> the html spec should say what to do with it
 XXX * <title site="" publisher="" author="">Page Title</title> ?
 XXX * <h1> styled according to section depth
 XXX * [onclick] should make element focusable; enter should send onclick ?
 XXX * support access Array element via () instead of [] (IEism)
       https://bugzilla.mozilla.org/show_bug.cgi?id=289876
 XXX * how to interpret an HTML5 document for syndication
       http://hixie.ch/specs/hsf/hsf
 XXX * should have some text talking about the fact that it's ok if your
       page passes through a period of non-conformance while script is
       running, but that in between scripts it should be compliant.
 XXX * mousedown's default action is focus, so canceling mousedown stops
       focus transference. http://www.mozilla.org/editor/midasdemo/
 XXX * xref all the _ERR exceptions to DOM3CORE
 XXX * <select><option><hr> support?
 XXX * need explanation of when to use undo/redo, and when to use
       back/forward
 XXX * "alternate style sheet" should be "alternative style sheet"
 XXX * screen object: top left width height pixelDepth colorDepth
       availWidth availHeight availLeft availTop
 XXX * need to become consistent about whether or not to quote keyword
       ("<code title="">foo</code>" vs <code>foo</code>)
 XXX * need to properly xref events throughout, mark up DOMActivate, etc
 XXX * onclick="" only fires if it is a MouseEvent ?
 XXX * hsivonen makes the following suggestions:
       > To make document conformance a more useful concept for the purpose of catching
       > author errors, I suggest that the following attributes be made required:
       > href and rel on link
       > href on base
       > name and content on meta (other than the encoding decl)
       > src on img
       > code, height and width on applet
       > name and value on param
 XXX * command="" feature
 XXX * DOM0 quirks that Mozilla knows about:
       http://lxr.mozilla.org/seamonkey/source/dom/src/base/nsDOMClassInfo.cpp
 XXX * make the spec consistent about whether the word "algorithm" is part of
       an algorithm's name or not ("</dfn> algorithm", "</span> algorithm")
 XXX * make a consistent decision of which of the following formats to use:
         U+1234 FOO BAR character ("foo")
         U+1234 FOO BAR character ('foo')
         U+1234 FOO BAR character (foo)
         U+1234 FOO BAR ("foo") character
         U+1234 FOO BAR ('foo') character
         U+1234 FOO BAR (foo) character
         U+1234 FOO BAR character ("<code title="">foo</code>")
         U+1234 FOO BAR character ('<code title="">foo</code>')
         U+1234 FOO BAR character (<code title="">foo</code>)
         U+1234 FOO BAR ("<code title="">foo</code>") character
         U+1234 FOO BAR ('<code title="">foo</code>') character
         U+1234 FOO BAR (<code title="">foo</code>) character
       ...and make these match:
         0x12 (ASCII FOO)
         0x12 (ASCII "foo")
         0x12 (ASCII 'foo')
         0x12 ("foo")
         0x12 ('foo')
         0x12 (ASCII "<code title="">foo</code>")
         0x12 (ASCII '<code title="">foo</code>')
         0x12 ("<code title="">foo</code>")
         0x12 ('<code title="">foo</code>')
 XXX * check case of hex characters in the ASCII cases.
 XXX * trim function in JS for strings to remove spaces
 XXX * date checking functions in JS (.isValidDate?)
 XXX * a fairly common situation for web authors is to have two lists, where
       the contents of the second depends on the value of the first. Is there
       any way we could extend the current model to include this functionality?
       (e.g. bugzilla product/component ui)
 XXX * quick-searchable select
 XXX * fallback that will only appear in non-webforms clients (e.g. for
       formats for date fields)
 XXX * include/exclude selectors (two multi-select columns with arrows to
       move selected items) and that sort of thing.
       http://slashdot.org/comments.pl?sid=110240&cid=9357022
 XXX * Oh, and forms need a standardized Help widget/icon. I know I can
       turn my cursor into a question mark, but I'm looking for something
       simple and pervasive. Maybe you can wrap fields in a help tag, just
       as you do for fieldsets. And in that help tag, attributes are
       available that allow for a nice, formatted, clean, full help text
       popup/area/thing.
       http://slashdot.org/comments.pl?sid=110240&cid=9359006
 XXX * Validating only part of a form. - Anja Lehmann
 XXX * Reminder to add a way to expose access keys in buttons, i.e.
       Sub&mit where & signifies the m is the access key to use. Possibly
       automatic? <input accesskey="m" value="Submit"> browser would be
       smart enough to underline the first instance of the access key if
       it exists (case insensitive)? - kerz
       [or deprecate the lot (->web apps)]
 XXX * option.text should do the same as option.textContent
 XXX * need an attribute that says "the children of this element are in
       their own tabbing universe, tabindex should be relative to each
       other, not to the document"
       -> web apps?
 XXX * make optgroups selectable if they have a value.
 XXX * make select widgets have multiple columns
       or ->web apps with list view
 XXX * required as a group (one of the following must be available):
       + i propose something like the following:
           <input type="text" group="contact" name="voicephone"> Voice phone
           <input type="text" group="contact" name="fax"> Fax
           <input type="text" group="contact" name="mobile"> Mobile phone
           <input type="text" group="contact" name="email"> E-mail
         if the user fills out none of the form fields in the "contact"
         group, an error message is shown and the form is not submitted.
         - Peter-Paul Koch
 XXX * use the sample widgets:
          <li><img alt="A text field with editable sections for each
          value, with a button to pop up a dialog showing a calendar or
          clock." src="sample-datetime-ui-2"></li>
          <li><img alt="A calendar grid with a clock in the upper right
          hand corner." src="sample-datetime-ui-3"></li>
 XXX * formatting of number fields, text fields, etc, so that when the
       field is not focused, the value is displayed differently. Seems
       like this would also be useful e.g. for <output> or something so
       you can display localised dates, etc.
 XXX * update text/html RFC
 XXX * password and confirm password: can we have a way to do client-side
       validation of this?
 XXX * <input type="search">
       http://weblogs.mozillazine.org/hyatt/archives/2004_07.html#005890
 XXX * would be nice to say how to handle duplicate IDs once and for all
       instead of spreading it all over the spec.
 XXX * being able to select date range (from day x to day y)
 XXX * ways of visualizing a linefeed in a <textarea> so it looks different
       from wrapping text
 XXX * all login systems have
         1. enter username and password
         2. create new account
         3. lost password
       some way of integrating this into one system, since it's so common
 XXX * way of identifying different sorts of mailadresses
         a) mailing-list
         b) person
         c) department in a company ("support", "marketing" and such)
         d) general mail (like "info", "mail", "contact" and such)
         e) other sorts of groupings
       (or ->web apps; this is talking about in mailto: links, I think)
 XXX * hotswapping login identities like in windows xp
         you are logged in on operamail.com, and you want to check the mail
         of another user. somehow, combined with the wand or whatever,
         the browser will remember the login page, and it can re-submit it
         without having to load the initial page (saving time)
 XXX * provide different measuring systems, like having the html indicate
       fluid in both fluid ounces and liters, and the browser can display
       one or the other based on regional settings in the browser or ui,
       display conversions in a tooltip, or let the user decide which
       format to display.
 XXX * indicate "x days ago" or "y days into the future" rather than date
 XXX * input control for anniversaries
 XXX * only submit fields that have changed, or a way to include in the
       submission a list of which form controls were changed from their
       default value
 XXX * have a way of marking the first option of a <select> as the default
       but have it not satisfy a new required="" attribute on <select> so
       that you can have selects that require a valid value.
 XXX * Dave Raggett inadvertently suggested there should be a way to submit
       canvas elements.
 XXX * type="time" value="now"
 XXX * should "mixed fractional number" be used instead of "fractional"?
 XXX * terse BNF to define the allowed values of the various attributes
       instead of, or in addition to, the prose. [or not, it wouldn't be terse]
 XXX * add something to type="number" to support basic currency and unit
       formatting of input
 XXX * <fieldset enabled-if-checked="myCheckboxOrRadioButton">
       ...to allow sections to only be enabled if a radio button makes it
       relevant, for instance.
 XXX * Yan Morin proposed a multi-column dropdown <select> or <datalist>:
         _________________
        |_New_York______|V|_________________  <- input  with a table link and a down arrow
        |_City__________|_State_|_Country_|_| <- header of the table
        | Montreal      |  QC   | Canada  |A| <- top arrow of the scroll
        |>New York     <|  NY   | US      | | <- selected row
        | Washington    |  DC   | US      |X| <- cursor scroll
        | San Francisco |  CA   | US      | |
        |_Toronto_______|__ON___|_Canada__|V| <- bottom arrow of the scroll

 XXX * add for="" attribute to <input type="password"> so that you can
       link usernames and passwords. (Jonas Sicking)
 XXX * value for unchecked checkbox?
 XXX * maximum height/width or required ratio for image uploads? - Leons Petrazickis
 XXX * A way to specify the default button - Michael Gratton 
 XXX * <fieldset readonly>?
 XXX * keygen?
 XXX * action="" should be defined as not being relative to base URI
       see https://bugzilla.mozilla.org/show_bug.cgi?id=297761
 XXX * rephrase things so that an enumerated attribute puts the _element_ into
       various states, instead of the attribute
 XXX * make the text consistent about whether it is ":<em>" and
       ":<strong>" or "</em>:" and "</strong>:". Same for other
       punctuation.
 XXX * take references to "valid mime type" / RFC2046 and make them
       mean something. (2046 doesn't define anything like that, and
       2045's definition doesn't really help either, since it's part
       of something else, and doesn't mention whitespace, etc.)
 XXX * reference [UTC] in the various places that use it.
 XXX * make codepoint vs code point consistent
 XXX * dolphinling suggests having a way to mark certain parts of a
       form as being dependent on another (mutually exclusive parts of
       a form)
 XXX * make the spec more consistent about its use of "hexadecimal"
       and "base-sixteen", the order that 0-9 A-Z a-z is mentioned,
       and the detail to which the spec explains how to interpret a
       string as a hexadecimal number.
 XXX * expose the form data set, either as an object (on which one can
       invoke the JSON serialiser), or in the form of a method on
       HTMLFormElement that returns the form data set serialised
       according to a particular encoding (defaulting to the form's
       enctype="" one, probably). This would allow forms to be used
       with XHR-like systems without having to manually construct the
       form data set the way that is done today.
 XXX * placeholder="" for <textarea>, e.g. as seen on:
       http://code.google.com/p/support/issues/detail?id=1#makechanges
 XXX * become more consistent about what markup we use to mark up
       productions (nothing? <i>? <code>?)
 XXX * expose the value of a radio button group
        - either on the NodeList returned by HTMLFormControlCollection
        - or on the radio button itself
        - or both, so it works even when the form controls have names
          that vary more than HTMLFormControlCollection allows?
-->

 
